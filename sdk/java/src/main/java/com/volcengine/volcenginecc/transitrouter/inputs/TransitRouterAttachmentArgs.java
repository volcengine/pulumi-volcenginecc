// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.transitrouter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.transitrouter.inputs.TransitRouterAttachmentTagArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterAttachmentArgs Empty = new TransitRouterAttachmentArgs();

    /**
     * 网络实例连接所属的账号ID。
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return 网络实例连接所属的账号ID。
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
     * 
     */
    @Import(name="autoPublishRouteEnabled")
    private @Nullable Output<Boolean> autoPublishRouteEnabled;

    /**
     * @return 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
     * 
     */
    public Optional<Output<Boolean>> autoPublishRouteEnabled() {
        return Optional.ofNullable(this.autoPublishRouteEnabled);
    }

    /**
     * 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    @Import(name="businessStatus")
    private @Nullable Output<String> businessStatus;

    /**
     * @return 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    public Optional<Output<String>> businessStatus() {
        return Optional.ofNullable(this.businessStatus);
    }

    /**
     * 网络实例连接的创建时间。
     * 
     */
    @Import(name="creationTime")
    private @Nullable Output<String> creationTime;

    /**
     * @return 网络实例连接的创建时间。
     * 
     */
    public Optional<Output<String>> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    /**
     * 网络实例连接的删除时间。
     * 
     */
    @Import(name="deletedTime")
    private @Nullable Output<String> deletedTime;

    /**
     * @return 网络实例连接的删除时间。
     * 
     */
    public Optional<Output<String>> deletedTime() {
        return Optional.ofNullable(this.deletedTime);
    }

    /**
     * 网络实例连接的描述信息。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 网络实例连接的描述信息。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 是否开启IPv6功能。true：是。false：否。
     * 
     */
    @Import(name="ipv6Enabled")
    private @Nullable Output<Boolean> ipv6Enabled;

    /**
     * @return 是否开启IPv6功能。true：是。false：否。
     * 
     */
    public Optional<Output<Boolean>> ipv6Enabled() {
        return Optional.ofNullable(this.ipv6Enabled);
    }

    /**
     * 网络实例连接的欠费关停时间。
     * 
     */
    @Import(name="overdueTime")
    private @Nullable Output<String> overdueTime;

    /**
     * @return 网络实例连接的欠费关停时间。
     * 
     */
    public Optional<Output<String>> overdueTime() {
        return Optional.ofNullable(this.overdueTime);
    }

    /**
     * 网络实例的ID。
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return 网络实例的ID。
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<List<TransitRouterAttachmentTagArgs>> tags;

    public Optional<Output<List<TransitRouterAttachmentTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 网络实例连接的ID。
     * 
     */
    @Import(name="transitRouterAttachmentId")
    private @Nullable Output<String> transitRouterAttachmentId;

    /**
     * @return 网络实例连接的ID。
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentId() {
        return Optional.ofNullable(this.transitRouterAttachmentId);
    }

    /**
     * 网络实例连接的名称。
     * 
     */
    @Import(name="transitRouterAttachmentName")
    private @Nullable Output<String> transitRouterAttachmentName;

    /**
     * @return 网络实例连接的名称。
     * 
     */
    public Optional<Output<String>> transitRouterAttachmentName() {
        return Optional.ofNullable(this.transitRouterAttachmentName);
    }

    /**
     * 跨地域连接关联的转发策略的ID。
     * 
     */
    @Import(name="transitRouterForwardPolicyTableId")
    private @Nullable Output<String> transitRouterForwardPolicyTableId;

    /**
     * @return 跨地域连接关联的转发策略的ID。
     * 
     */
    public Optional<Output<String>> transitRouterForwardPolicyTableId() {
        return Optional.ofNullable(this.transitRouterForwardPolicyTableId);
    }

    /**
     * 中转路由器实例的ID。
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return 中转路由器实例的ID。
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    /**
     * 网络实例连接关联转发的路由表ID。
     * 
     */
    @Import(name="transitRouterRouteTableId")
    private @Nullable Output<String> transitRouterRouteTableId;

    /**
     * @return 网络实例连接关联转发的路由表ID。
     * 
     */
    public Optional<Output<String>> transitRouterRouteTableId() {
        return Optional.ofNullable(this.transitRouterRouteTableId);
    }

    /**
     * 跨地域连接关联的流标记策略的ID。
     * 
     */
    @Import(name="transitRouterTrafficQosMarkingPolicyId")
    private @Nullable Output<String> transitRouterTrafficQosMarkingPolicyId;

    /**
     * @return 跨地域连接关联的流标记策略的ID。
     * 
     */
    public Optional<Output<String>> transitRouterTrafficQosMarkingPolicyId() {
        return Optional.ofNullable(this.transitRouterTrafficQosMarkingPolicyId);
    }

    /**
     * 跨地域连接关联的流队列策略的ID。
     * 
     */
    @Import(name="transitRouterTrafficQosQueuePolicyId")
    private @Nullable Output<String> transitRouterTrafficQosQueuePolicyId;

    /**
     * @return 跨地域连接关联的流队列策略的ID。
     * 
     */
    public Optional<Output<String>> transitRouterTrafficQosQueuePolicyId() {
        return Optional.ofNullable(this.transitRouterTrafficQosQueuePolicyId);
    }

    /**
     * 网络实例连接的最近操作时间。
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return 网络实例连接的最近操作时间。
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private TransitRouterAttachmentArgs() {}

    private TransitRouterAttachmentArgs(TransitRouterAttachmentArgs $) {
        this.accountId = $.accountId;
        this.autoPublishRouteEnabled = $.autoPublishRouteEnabled;
        this.businessStatus = $.businessStatus;
        this.creationTime = $.creationTime;
        this.deletedTime = $.deletedTime;
        this.description = $.description;
        this.ipv6Enabled = $.ipv6Enabled;
        this.overdueTime = $.overdueTime;
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
        this.status = $.status;
        this.tags = $.tags;
        this.transitRouterAttachmentId = $.transitRouterAttachmentId;
        this.transitRouterAttachmentName = $.transitRouterAttachmentName;
        this.transitRouterForwardPolicyTableId = $.transitRouterForwardPolicyTableId;
        this.transitRouterId = $.transitRouterId;
        this.transitRouterRouteTableId = $.transitRouterRouteTableId;
        this.transitRouterTrafficQosMarkingPolicyId = $.transitRouterTrafficQosMarkingPolicyId;
        this.transitRouterTrafficQosQueuePolicyId = $.transitRouterTrafficQosQueuePolicyId;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterAttachmentArgs $;

        public Builder() {
            $ = new TransitRouterAttachmentArgs();
        }

        public Builder(TransitRouterAttachmentArgs defaults) {
            $ = new TransitRouterAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId 网络实例连接所属的账号ID。
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId 网络实例连接所属的账号ID。
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param autoPublishRouteEnabled 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(@Nullable Output<Boolean> autoPublishRouteEnabled) {
            $.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }

        /**
         * @param autoPublishRouteEnabled 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
         * 
         * @return builder
         * 
         */
        public Builder autoPublishRouteEnabled(Boolean autoPublishRouteEnabled) {
            return autoPublishRouteEnabled(Output.of(autoPublishRouteEnabled));
        }

        /**
         * @param businessStatus 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
         * 
         * @return builder
         * 
         */
        public Builder businessStatus(@Nullable Output<String> businessStatus) {
            $.businessStatus = businessStatus;
            return this;
        }

        /**
         * @param businessStatus 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
         * 
         * @return builder
         * 
         */
        public Builder businessStatus(String businessStatus) {
            return businessStatus(Output.of(businessStatus));
        }

        /**
         * @param creationTime 网络实例连接的创建时间。
         * 
         * @return builder
         * 
         */
        public Builder creationTime(@Nullable Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param creationTime 网络实例连接的创建时间。
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        /**
         * @param deletedTime 网络实例连接的删除时间。
         * 
         * @return builder
         * 
         */
        public Builder deletedTime(@Nullable Output<String> deletedTime) {
            $.deletedTime = deletedTime;
            return this;
        }

        /**
         * @param deletedTime 网络实例连接的删除时间。
         * 
         * @return builder
         * 
         */
        public Builder deletedTime(String deletedTime) {
            return deletedTime(Output.of(deletedTime));
        }

        /**
         * @param description 网络实例连接的描述信息。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 网络实例连接的描述信息。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipv6Enabled 是否开启IPv6功能。true：是。false：否。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Enabled(@Nullable Output<Boolean> ipv6Enabled) {
            $.ipv6Enabled = ipv6Enabled;
            return this;
        }

        /**
         * @param ipv6Enabled 是否开启IPv6功能。true：是。false：否。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Enabled(Boolean ipv6Enabled) {
            return ipv6Enabled(Output.of(ipv6Enabled));
        }

        /**
         * @param overdueTime 网络实例连接的欠费关停时间。
         * 
         * @return builder
         * 
         */
        public Builder overdueTime(@Nullable Output<String> overdueTime) {
            $.overdueTime = overdueTime;
            return this;
        }

        /**
         * @param overdueTime 网络实例连接的欠费关停时间。
         * 
         * @return builder
         * 
         */
        public Builder overdueTime(String overdueTime) {
            return overdueTime(Output.of(overdueTime));
        }

        /**
         * @param resourceId 网络实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId 网络实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceType 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param status 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<List<TransitRouterAttachmentTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<TransitRouterAttachmentTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(TransitRouterAttachmentTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param transitRouterAttachmentId 网络实例连接的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentId(@Nullable Output<String> transitRouterAttachmentId) {
            $.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }

        /**
         * @param transitRouterAttachmentId 网络实例连接的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentId(String transitRouterAttachmentId) {
            return transitRouterAttachmentId(Output.of(transitRouterAttachmentId));
        }

        /**
         * @param transitRouterAttachmentName 网络实例连接的名称。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(@Nullable Output<String> transitRouterAttachmentName) {
            $.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }

        /**
         * @param transitRouterAttachmentName 网络实例连接的名称。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterAttachmentName(String transitRouterAttachmentName) {
            return transitRouterAttachmentName(Output.of(transitRouterAttachmentName));
        }

        /**
         * @param transitRouterForwardPolicyTableId 跨地域连接关联的转发策略的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterForwardPolicyTableId(@Nullable Output<String> transitRouterForwardPolicyTableId) {
            $.transitRouterForwardPolicyTableId = transitRouterForwardPolicyTableId;
            return this;
        }

        /**
         * @param transitRouterForwardPolicyTableId 跨地域连接关联的转发策略的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterForwardPolicyTableId(String transitRouterForwardPolicyTableId) {
            return transitRouterForwardPolicyTableId(Output.of(transitRouterForwardPolicyTableId));
        }

        /**
         * @param transitRouterId 中转路由器实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId 中转路由器实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        /**
         * @param transitRouterRouteTableId 网络实例连接关联转发的路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableId(@Nullable Output<String> transitRouterRouteTableId) {
            $.transitRouterRouteTableId = transitRouterRouteTableId;
            return this;
        }

        /**
         * @param transitRouterRouteTableId 网络实例连接关联转发的路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableId(String transitRouterRouteTableId) {
            return transitRouterRouteTableId(Output.of(transitRouterRouteTableId));
        }

        /**
         * @param transitRouterTrafficQosMarkingPolicyId 跨地域连接关联的流标记策略的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterTrafficQosMarkingPolicyId(@Nullable Output<String> transitRouterTrafficQosMarkingPolicyId) {
            $.transitRouterTrafficQosMarkingPolicyId = transitRouterTrafficQosMarkingPolicyId;
            return this;
        }

        /**
         * @param transitRouterTrafficQosMarkingPolicyId 跨地域连接关联的流标记策略的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterTrafficQosMarkingPolicyId(String transitRouterTrafficQosMarkingPolicyId) {
            return transitRouterTrafficQosMarkingPolicyId(Output.of(transitRouterTrafficQosMarkingPolicyId));
        }

        /**
         * @param transitRouterTrafficQosQueuePolicyId 跨地域连接关联的流队列策略的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterTrafficQosQueuePolicyId(@Nullable Output<String> transitRouterTrafficQosQueuePolicyId) {
            $.transitRouterTrafficQosQueuePolicyId = transitRouterTrafficQosQueuePolicyId;
            return this;
        }

        /**
         * @param transitRouterTrafficQosQueuePolicyId 跨地域连接关联的流队列策略的ID。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterTrafficQosQueuePolicyId(String transitRouterTrafficQosQueuePolicyId) {
            return transitRouterTrafficQosQueuePolicyId(Output.of(transitRouterTrafficQosQueuePolicyId));
        }

        /**
         * @param updateTime 网络实例连接的最近操作时间。
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime 网络实例连接的最近操作时间。
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public TransitRouterAttachmentArgs build() {
            return $;
        }
    }

}
