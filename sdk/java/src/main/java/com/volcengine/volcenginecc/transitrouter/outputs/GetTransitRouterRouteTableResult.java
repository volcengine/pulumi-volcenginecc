// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.transitrouter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.transitrouter.outputs.GetTransitRouterRouteTableTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTransitRouterRouteTableResult {
    /**
     * @return TR路由表的创建时间
     * 
     */
    private String creationTime;
    /**
     * @return TR路由表的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    private String description;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return TR路由表关联的收方向路由策略的ID
     * 
     */
    private String inRoutePolicyTableId;
    /**
     * @return TR路由表关联的发方向路由策略的ID
     * 
     */
    private String outRoutePolicyTableId;
    /**
     * @return TR路由表的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用
     * 
     */
    private String status;
    /**
     * @return TR路由表的标签信息。
     * 
     */
    private List<GetTransitRouterRouteTableTag> tags;
    /**
     * @return 中转路由器实例的ID
     * 
     */
    private String transitRouterId;
    /**
     * @return TR路由表的ID
     * 
     */
    private String transitRouterRouteTableId;
    /**
     * @return TR路由表的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为TR路由表的ID
     * 
     */
    private String transitRouterRouteTableName;
    /**
     * @return TR路由表的类型。System：系统路由表。Custom：自定义路由表。
     * 
     */
    private String transitRouterRouteTableType;
    /**
     * @return TR路由表的最近操作时间
     * 
     */
    private String updateTime;

    private GetTransitRouterRouteTableResult() {}
    /**
     * @return TR路由表的创建时间
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return TR路由表的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return TR路由表关联的收方向路由策略的ID
     * 
     */
    public String inRoutePolicyTableId() {
        return this.inRoutePolicyTableId;
    }
    /**
     * @return TR路由表关联的发方向路由策略的ID
     * 
     */
    public String outRoutePolicyTableId() {
        return this.outRoutePolicyTableId;
    }
    /**
     * @return TR路由表的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return TR路由表的标签信息。
     * 
     */
    public List<GetTransitRouterRouteTableTag> tags() {
        return this.tags;
    }
    /**
     * @return 中转路由器实例的ID
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }
    /**
     * @return TR路由表的ID
     * 
     */
    public String transitRouterRouteTableId() {
        return this.transitRouterRouteTableId;
    }
    /**
     * @return TR路由表的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为TR路由表的ID
     * 
     */
    public String transitRouterRouteTableName() {
        return this.transitRouterRouteTableName;
    }
    /**
     * @return TR路由表的类型。System：系统路由表。Custom：自定义路由表。
     * 
     */
    public String transitRouterRouteTableType() {
        return this.transitRouterRouteTableType;
    }
    /**
     * @return TR路由表的最近操作时间
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransitRouterRouteTableResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTime;
        private String description;
        private String id;
        private String inRoutePolicyTableId;
        private String outRoutePolicyTableId;
        private String status;
        private List<GetTransitRouterRouteTableTag> tags;
        private String transitRouterId;
        private String transitRouterRouteTableId;
        private String transitRouterRouteTableName;
        private String transitRouterRouteTableType;
        private String updateTime;
        public Builder() {}
        public Builder(GetTransitRouterRouteTableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.inRoutePolicyTableId = defaults.inRoutePolicyTableId;
    	      this.outRoutePolicyTableId = defaults.outRoutePolicyTableId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.transitRouterId = defaults.transitRouterId;
    	      this.transitRouterRouteTableId = defaults.transitRouterRouteTableId;
    	      this.transitRouterRouteTableName = defaults.transitRouterRouteTableName;
    	      this.transitRouterRouteTableType = defaults.transitRouterRouteTableType;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inRoutePolicyTableId(String inRoutePolicyTableId) {
            if (inRoutePolicyTableId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "inRoutePolicyTableId");
            }
            this.inRoutePolicyTableId = inRoutePolicyTableId;
            return this;
        }
        @CustomType.Setter
        public Builder outRoutePolicyTableId(String outRoutePolicyTableId) {
            if (outRoutePolicyTableId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "outRoutePolicyTableId");
            }
            this.outRoutePolicyTableId = outRoutePolicyTableId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetTransitRouterRouteTableTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetTransitRouterRouteTableTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder transitRouterId(String transitRouterId) {
            if (transitRouterId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "transitRouterId");
            }
            this.transitRouterId = transitRouterId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterRouteTableId(String transitRouterRouteTableId) {
            if (transitRouterRouteTableId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "transitRouterRouteTableId");
            }
            this.transitRouterRouteTableId = transitRouterRouteTableId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterRouteTableName(String transitRouterRouteTableName) {
            if (transitRouterRouteTableName == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "transitRouterRouteTableName");
            }
            this.transitRouterRouteTableName = transitRouterRouteTableName;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterRouteTableType(String transitRouterRouteTableType) {
            if (transitRouterRouteTableType == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "transitRouterRouteTableType");
            }
            this.transitRouterRouteTableType = transitRouterRouteTableType;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterRouteTableResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetTransitRouterRouteTableResult build() {
            final var _resultValue = new GetTransitRouterRouteTableResult();
            _resultValue.creationTime = creationTime;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.inRoutePolicyTableId = inRoutePolicyTableId;
            _resultValue.outRoutePolicyTableId = outRoutePolicyTableId;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.transitRouterId = transitRouterId;
            _resultValue.transitRouterRouteTableId = transitRouterRouteTableId;
            _resultValue.transitRouterRouteTableName = transitRouterRouteTableName;
            _resultValue.transitRouterRouteTableType = transitRouterRouteTableType;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
