// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.cr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRepositoryResult {
    /**
     * @return 访问等级，取值如下：Private：私有类型 OCI 制品仓库，只能被有权限的用户访问。Public：公有类型 OCI 制品仓库，可以被所有用户访问。单次可填写一个或多个访问等级。
     * 
     */
    private String accessLevel;
    /**
     * @return 创建 OCI 制品仓库的时间。RFC3339 格式的 UTC+0 时间。
     * 
     */
    private String createTime;
    /**
     * @return 镜像仓库描述，描述长度为 0~300 个 UTF-8 字符。
     * 
     */
    private String description;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return OCI 制品仓库名称。同一个命名空间下，名称必须唯一。支持小写英文、数字、分隔符（分隔符可输入一个.或/、一个或多个-、一个或两个_，且分隔符不能出现在首位或末位，不能连续出现），长度限制为 1～128 个字符。
     * 
     */
    private String name;
    /**
     * @return 目标命名空间名称。在 镜像仓库控制台 目标实例的 命名空间 页面，获取命名空间名称。
     * 
     */
    private String namespace;
    /**
     * @return 指定命名空间所属的镜像仓库实例名称。在 镜像仓库控制台 的 实例列表 页面，获取实例名称。
     * 
     */
    private String registry;
    /**
     * @return 最近一次更新 OCI 制品仓库的时间。RFC3339 格式的 UTC+0 时间。
     * 
     */
    private String updateTime;

    private GetRepositoryResult() {}
    /**
     * @return 访问等级，取值如下：Private：私有类型 OCI 制品仓库，只能被有权限的用户访问。Public：公有类型 OCI 制品仓库，可以被所有用户访问。单次可填写一个或多个访问等级。
     * 
     */
    public String accessLevel() {
        return this.accessLevel;
    }
    /**
     * @return 创建 OCI 制品仓库的时间。RFC3339 格式的 UTC+0 时间。
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return 镜像仓库描述，描述长度为 0~300 个 UTF-8 字符。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return OCI 制品仓库名称。同一个命名空间下，名称必须唯一。支持小写英文、数字、分隔符（分隔符可输入一个.或/、一个或多个-、一个或两个_，且分隔符不能出现在首位或末位，不能连续出现），长度限制为 1～128 个字符。
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return 目标命名空间名称。在 镜像仓库控制台 目标实例的 命名空间 页面，获取命名空间名称。
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return 指定命名空间所属的镜像仓库实例名称。在 镜像仓库控制台 的 实例列表 页面，获取实例名称。
     * 
     */
    public String registry() {
        return this.registry;
    }
    /**
     * @return 最近一次更新 OCI 制品仓库的时间。RFC3339 格式的 UTC+0 时间。
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessLevel;
        private String createTime;
        private String description;
        private String id;
        private String name;
        private String namespace;
        private String registry;
        private String updateTime;
        public Builder() {}
        public Builder(GetRepositoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.registry = defaults.registry;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder accessLevel(String accessLevel) {
            if (accessLevel == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "accessLevel");
            }
            this.accessLevel = accessLevel;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder registry(String registry) {
            if (registry == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "registry");
            }
            this.registry = registry;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetRepositoryResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetRepositoryResult build() {
            final var _resultValue = new GetRepositoryResult();
            _resultValue.accessLevel = accessLevel;
            _resultValue.createTime = createTime;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.registry = registry;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
