// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRouteTableSystemRouteEntry {
    /**
     * @return 路由条目描述。
     * 
     */
    private String description;
    /**
     * @return 路由条目的目标网段。
     * 
     */
    private String destinationCidrBlock;
    /**
     * @return 前缀列表ID。
     * 
     */
    private String destinationPrefixListId;
    /**
     * @return 下一跳资源ID。
     * 
     */
    private String nextHopId;
    /**
     * @return 路由条目下一跳资源的名称。
     * 
     */
    private String nextHopName;
    /**
     * @return 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    private String nextHopType;
    /**
     * @return 前缀列表的CIDR。
     * 
     */
    private List<String> prefixListCidrBlocks;
    /**
     * @return 路由条目ID。
     * 
     */
    private String routeEntryId;
    /**
     * @return 路由条目名称。
     * 
     */
    private String routeEntryName;
    /**
     * @return 路由表ID。
     * 
     */
    private String routeTableId;
    /**
     * @return 路由条目状态。1、Pending：待创建。2、Available：可用。
     * 
     */
    private String status;
    /**
     * @return 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
     * 
     */
    private String type;
    /**
     * @return 路由条目所属私有网络的ID。
     * 
     */
    private String vpcId;

    private GetRouteTableSystemRouteEntry() {}
    /**
     * @return 路由条目描述。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return 路由条目的目标网段。
     * 
     */
    public String destinationCidrBlock() {
        return this.destinationCidrBlock;
    }
    /**
     * @return 前缀列表ID。
     * 
     */
    public String destinationPrefixListId() {
        return this.destinationPrefixListId;
    }
    /**
     * @return 下一跳资源ID。
     * 
     */
    public String nextHopId() {
        return this.nextHopId;
    }
    /**
     * @return 路由条目下一跳资源的名称。
     * 
     */
    public String nextHopName() {
        return this.nextHopName;
    }
    /**
     * @return 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    public String nextHopType() {
        return this.nextHopType;
    }
    /**
     * @return 前缀列表的CIDR。
     * 
     */
    public List<String> prefixListCidrBlocks() {
        return this.prefixListCidrBlocks;
    }
    /**
     * @return 路由条目ID。
     * 
     */
    public String routeEntryId() {
        return this.routeEntryId;
    }
    /**
     * @return 路由条目名称。
     * 
     */
    public String routeEntryName() {
        return this.routeEntryName;
    }
    /**
     * @return 路由表ID。
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return 路由条目状态。1、Pending：待创建。2、Available：可用。
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return 路由条目所属私有网络的ID。
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTableSystemRouteEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String destinationCidrBlock;
        private String destinationPrefixListId;
        private String nextHopId;
        private String nextHopName;
        private String nextHopType;
        private List<String> prefixListCidrBlocks;
        private String routeEntryId;
        private String routeEntryName;
        private String routeTableId;
        private String status;
        private String type;
        private String vpcId;
        public Builder() {}
        public Builder(GetRouteTableSystemRouteEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destinationCidrBlock = defaults.destinationCidrBlock;
    	      this.destinationPrefixListId = defaults.destinationPrefixListId;
    	      this.nextHopId = defaults.nextHopId;
    	      this.nextHopName = defaults.nextHopName;
    	      this.nextHopType = defaults.nextHopType;
    	      this.prefixListCidrBlocks = defaults.prefixListCidrBlocks;
    	      this.routeEntryId = defaults.routeEntryId;
    	      this.routeEntryName = defaults.routeEntryName;
    	      this.routeTableId = defaults.routeTableId;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinationCidrBlock(String destinationCidrBlock) {
            if (destinationCidrBlock == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "destinationCidrBlock");
            }
            this.destinationCidrBlock = destinationCidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPrefixListId(String destinationPrefixListId) {
            if (destinationPrefixListId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "destinationPrefixListId");
            }
            this.destinationPrefixListId = destinationPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopId(String nextHopId) {
            if (nextHopId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "nextHopId");
            }
            this.nextHopId = nextHopId;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopName(String nextHopName) {
            if (nextHopName == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "nextHopName");
            }
            this.nextHopName = nextHopName;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopType(String nextHopType) {
            if (nextHopType == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "nextHopType");
            }
            this.nextHopType = nextHopType;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListCidrBlocks(List<String> prefixListCidrBlocks) {
            if (prefixListCidrBlocks == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "prefixListCidrBlocks");
            }
            this.prefixListCidrBlocks = prefixListCidrBlocks;
            return this;
        }
        public Builder prefixListCidrBlocks(String... prefixListCidrBlocks) {
            return prefixListCidrBlocks(List.of(prefixListCidrBlocks));
        }
        @CustomType.Setter
        public Builder routeEntryId(String routeEntryId) {
            if (routeEntryId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "routeEntryId");
            }
            this.routeEntryId = routeEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder routeEntryName(String routeEntryName) {
            if (routeEntryName == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "routeEntryName");
            }
            this.routeEntryName = routeEntryName;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(String routeTableId) {
            if (routeTableId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "routeTableId");
            }
            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableSystemRouteEntry", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        public GetRouteTableSystemRouteEntry build() {
            final var _resultValue = new GetRouteTableSystemRouteEntry();
            _resultValue.description = description;
            _resultValue.destinationCidrBlock = destinationCidrBlock;
            _resultValue.destinationPrefixListId = destinationPrefixListId;
            _resultValue.nextHopId = nextHopId;
            _resultValue.nextHopName = nextHopName;
            _resultValue.nextHopType = nextHopType;
            _resultValue.prefixListCidrBlocks = prefixListCidrBlocks;
            _resultValue.routeEntryId = routeEntryId;
            _resultValue.routeEntryName = routeEntryName;
            _resultValue.routeTableId = routeTableId;
            _resultValue.status = status;
            _resultValue.type = type;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
