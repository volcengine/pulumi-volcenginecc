// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ark.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EndpointCertificate {
    /**
     * @return X509私有证书过期的时间。使用秒级时间戳表示。
     * 
     */
    private @Nullable Integer notAfter;
    /**
     * @return X509私有证书开始生效的时间。使用秒级时间戳表示。
     * 
     */
    private @Nullable Integer notBefore;
    /**
     * @return 证书方。
     * 
     */
    private @Nullable String pcaHost;
    /**
     * @return PEM 格式的叶子证书。
     * 
     */
    private @Nullable String pcaInstanceCertificate;
    /**
     * @return 证书名称。
     * 
     */
    private @Nullable String pcaName;
    /**
     * @return PEM 格式的根证书。
     * 
     */
    private @Nullable String pcaRootCaCertificate;
    /**
     * @return PEM 格式的中间根证书和根证书。
     * 
     */
    private @Nullable String pcaSubCaCertificate;

    private EndpointCertificate() {}
    /**
     * @return X509私有证书过期的时间。使用秒级时间戳表示。
     * 
     */
    public Optional<Integer> notAfter() {
        return Optional.ofNullable(this.notAfter);
    }
    /**
     * @return X509私有证书开始生效的时间。使用秒级时间戳表示。
     * 
     */
    public Optional<Integer> notBefore() {
        return Optional.ofNullable(this.notBefore);
    }
    /**
     * @return 证书方。
     * 
     */
    public Optional<String> pcaHost() {
        return Optional.ofNullable(this.pcaHost);
    }
    /**
     * @return PEM 格式的叶子证书。
     * 
     */
    public Optional<String> pcaInstanceCertificate() {
        return Optional.ofNullable(this.pcaInstanceCertificate);
    }
    /**
     * @return 证书名称。
     * 
     */
    public Optional<String> pcaName() {
        return Optional.ofNullable(this.pcaName);
    }
    /**
     * @return PEM 格式的根证书。
     * 
     */
    public Optional<String> pcaRootCaCertificate() {
        return Optional.ofNullable(this.pcaRootCaCertificate);
    }
    /**
     * @return PEM 格式的中间根证书和根证书。
     * 
     */
    public Optional<String> pcaSubCaCertificate() {
        return Optional.ofNullable(this.pcaSubCaCertificate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer notAfter;
        private @Nullable Integer notBefore;
        private @Nullable String pcaHost;
        private @Nullable String pcaInstanceCertificate;
        private @Nullable String pcaName;
        private @Nullable String pcaRootCaCertificate;
        private @Nullable String pcaSubCaCertificate;
        public Builder() {}
        public Builder(EndpointCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notAfter = defaults.notAfter;
    	      this.notBefore = defaults.notBefore;
    	      this.pcaHost = defaults.pcaHost;
    	      this.pcaInstanceCertificate = defaults.pcaInstanceCertificate;
    	      this.pcaName = defaults.pcaName;
    	      this.pcaRootCaCertificate = defaults.pcaRootCaCertificate;
    	      this.pcaSubCaCertificate = defaults.pcaSubCaCertificate;
        }

        @CustomType.Setter
        public Builder notAfter(@Nullable Integer notAfter) {

            this.notAfter = notAfter;
            return this;
        }
        @CustomType.Setter
        public Builder notBefore(@Nullable Integer notBefore) {

            this.notBefore = notBefore;
            return this;
        }
        @CustomType.Setter
        public Builder pcaHost(@Nullable String pcaHost) {

            this.pcaHost = pcaHost;
            return this;
        }
        @CustomType.Setter
        public Builder pcaInstanceCertificate(@Nullable String pcaInstanceCertificate) {

            this.pcaInstanceCertificate = pcaInstanceCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder pcaName(@Nullable String pcaName) {

            this.pcaName = pcaName;
            return this;
        }
        @CustomType.Setter
        public Builder pcaRootCaCertificate(@Nullable String pcaRootCaCertificate) {

            this.pcaRootCaCertificate = pcaRootCaCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder pcaSubCaCertificate(@Nullable String pcaSubCaCertificate) {

            this.pcaSubCaCertificate = pcaSubCaCertificate;
            return this;
        }
        public EndpointCertificate build() {
            final var _resultValue = new EndpointCertificate();
            _resultValue.notAfter = notAfter;
            _resultValue.notBefore = notBefore;
            _resultValue.pcaHost = pcaHost;
            _resultValue.pcaInstanceCertificate = pcaInstanceCertificate;
            _resultValue.pcaName = pcaName;
            _resultValue.pcaRootCaCertificate = pcaRootCaCertificate;
            _resultValue.pcaSubCaCertificate = pcaSubCaCertificate;
            return _resultValue;
        }
    }
}
