// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vmp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.vmp.inputs.WorkspaceTagArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceArgs Empty = new WorkspaceArgs();

    /**
     * 是否开启工作区删除保护,true：开启，false：关闭。
     * 
     */
    @Import(name="deleteProtectionEnabled")
    private @Nullable Output<Boolean> deleteProtectionEnabled;

    /**
     * @return 是否开启工作区删除保护,true：开启，false：关闭。
     * 
     */
    public Optional<Output<Boolean>> deleteProtectionEnabled() {
        return Optional.ofNullable(this.deleteProtectionEnabled);
    }

    /**
     * 工作区描述信息，字符串形式，长度限制为 0～200。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 工作区描述信息，字符串形式，长度限制为 0～200。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
     * 
     */
    @Import(name="instanceTypeId", required=true)
    private Output<String> instanceTypeId;

    /**
     * @return 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
     * 
     */
    public Output<String> instanceTypeId() {
        return this.instanceTypeId;
    }

    /**
     * 工作区名称，字符串形式，长度限制为 1～100。
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return 工作区名称，字符串形式，长度限制为 1～100。
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * 工作区 BasicAuth 密码。
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return 工作区 BasicAuth 密码。
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * 项目名称。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 项目名称。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    @Import(name="tags")
    private @Nullable Output<List<WorkspaceTagArgs>> tags;

    public Optional<Output<List<WorkspaceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 工作区 BasicAuth 用户名。
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return 工作区 BasicAuth 用户名。
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private WorkspaceArgs() {}

    private WorkspaceArgs(WorkspaceArgs $) {
        this.deleteProtectionEnabled = $.deleteProtectionEnabled;
        this.description = $.description;
        this.instanceTypeId = $.instanceTypeId;
        this.name = $.name;
        this.password = $.password;
        this.projectName = $.projectName;
        this.tags = $.tags;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceArgs $;

        public Builder() {
            $ = new WorkspaceArgs();
        }

        public Builder(WorkspaceArgs defaults) {
            $ = new WorkspaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteProtectionEnabled 是否开启工作区删除保护,true：开启，false：关闭。
         * 
         * @return builder
         * 
         */
        public Builder deleteProtectionEnabled(@Nullable Output<Boolean> deleteProtectionEnabled) {
            $.deleteProtectionEnabled = deleteProtectionEnabled;
            return this;
        }

        /**
         * @param deleteProtectionEnabled 是否开启工作区删除保护,true：开启，false：关闭。
         * 
         * @return builder
         * 
         */
        public Builder deleteProtectionEnabled(Boolean deleteProtectionEnabled) {
            return deleteProtectionEnabled(Output.of(deleteProtectionEnabled));
        }

        /**
         * @param description 工作区描述信息，字符串形式，长度限制为 0～200。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 工作区描述信息，字符串形式，长度限制为 0～200。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instanceTypeId 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypeId(Output<String> instanceTypeId) {
            $.instanceTypeId = instanceTypeId;
            return this;
        }

        /**
         * @param instanceTypeId 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypeId(String instanceTypeId) {
            return instanceTypeId(Output.of(instanceTypeId));
        }

        /**
         * @param name 工作区名称，字符串形式，长度限制为 1～100。
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name 工作区名称，字符串形式，长度限制为 1～100。
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password 工作区 BasicAuth 密码。
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password 工作区 BasicAuth 密码。
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param projectName 项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public Builder tags(@Nullable Output<List<WorkspaceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<WorkspaceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(WorkspaceTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param username 工作区 BasicAuth 用户名。
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username 工作区 BasicAuth 用户名。
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public WorkspaceArgs build() {
            if ($.instanceTypeId == null) {
                throw new MissingRequiredPropertyException("WorkspaceArgs", "instanceTypeId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WorkspaceArgs", "name");
            }
            return $;
        }
    }

}
