// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.vpc.BandwidthPackageArgs;
import com.volcengine.volcenginecc.vpc.inputs.BandwidthPackageState;
import com.volcengine.volcenginecc.vpc.outputs.BandwidthPackageEipAddress;
import com.volcengine.volcenginecc.vpc.outputs.BandwidthPackageTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 共享带宽包是一种支持复用和共享带宽的云资源。将单个地域内多个公网IP或IPv6公网带宽添加到一个共享带宽包实例中，共享一条带宽。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:vpc/bandwidthPackage:BandwidthPackage example &#34;bandwidth_package_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:vpc/bandwidthPackage:BandwidthPackage")
public class BandwidthPackage extends com.pulumi.resources.CustomResource {
    /**
     * 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> bandwidth;

    /**
     * @return 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }
    /**
     * 带宽包ID
     * 
     */
    @Export(name="bandwidthPackageId", refs={String.class}, tree="[0]")
    private Output<String> bandwidthPackageId;

    /**
     * @return 带宽包ID
     * 
     */
    public Output<String> bandwidthPackageId() {
        return this.bandwidthPackageId;
    }
    /**
     * 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
     * 
     */
    @Export(name="bandwidthPackageName", refs={String.class}, tree="[0]")
    private Output<String> bandwidthPackageName;

    /**
     * @return 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
     * 
     */
    public Output<String> bandwidthPackageName() {
        return this.bandwidthPackageName;
    }
    /**
     * 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
     * 
     */
    @Export(name="billingType", refs={Integer.class}, tree="[0]")
    private Output<Integer> billingType;

    /**
     * @return 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
     * 
     */
    public Output<Integer> billingType() {
        return this.billingType;
    }
    /**
     * 计费状态
     * 
     */
    @Export(name="businessStatus", refs={String.class}, tree="[0]")
    private Output<String> businessStatus;

    /**
     * @return 计费状态
     * 
     */
    public Output<String> businessStatus() {
        return this.businessStatus;
    }
    /**
     * 创建时间
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 创建时间
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 删除时间
     * 
     */
    @Export(name="deletedTime", refs={String.class}, tree="[0]")
    private Output<String> deletedTime;

    /**
     * @return 删除时间
     * 
     */
    public Output<String> deletedTime() {
        return this.deletedTime;
    }
    /**
     * 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    @Export(name="eipAddresses", refs={List.class,BandwidthPackageEipAddress.class}, tree="[0,1]")
    private Output<List<BandwidthPackageEipAddress>> eipAddresses;

    public Output<List<BandwidthPackageEipAddress>> eipAddresses() {
        return this.eipAddresses;
    }
    /**
     * 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
     * 
     */
    @Export(name="enableDualStack", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableDualStack;

    /**
     * @return 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
     * 
     */
    public Output<Boolean> enableDualStack() {
        return this.enableDualStack;
    }
    /**
     * 过期时间
     * 
     */
    @Export(name="expiredTime", refs={String.class}, tree="[0]")
    private Output<String> expiredTime;

    /**
     * @return 过期时间
     * 
     */
    public Output<String> expiredTime() {
        return this.expiredTime;
    }
    /**
     * 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
     * 
     */
    @Export(name="isp", refs={String.class}, tree="[0]")
    private Output<String> isp;

    /**
     * @return 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
     * 
     */
    public Output<String> isp() {
        return this.isp;
    }
    /**
     * 欠费时间
     * 
     */
    @Export(name="overdueTime", refs={String.class}, tree="[0]")
    private Output<String> overdueTime;

    /**
     * @return 欠费时间
     * 
     */
    public Output<String> overdueTime() {
        return this.overdueTime;
    }
    /**
     * 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output<Integer> period;

    /**
     * @return 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
     * 
     */
    public Output<Integer> period() {
        return this.period;
    }
    /**
     * 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
     * 
     */
    @Export(name="periodUnit", refs={Integer.class}, tree="[0]")
    private Output<Integer> periodUnit;

    /**
     * @return 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
     * 
     */
    public Output<Integer> periodUnit() {
        return this.periodUnit;
    }
    /**
     * 项目名称，不填默认加入default项目。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 项目名称，不填默认加入default项目。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
     * 
     */
    @Export(name="ratio", refs={Integer.class}, tree="[0]")
    private Output<Integer> ratio;

    /**
     * @return 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
     * 
     */
    public Output<Integer> ratio() {
        return this.ratio;
    }
    /**
     * 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
     * 
     */
    @Export(name="securityProtectionTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityProtectionTypes;

    /**
     * @return 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
     * 
     */
    public Output<List<String>> securityProtectionTypes() {
        return this.securityProtectionTypes;
    }
    /**
     * 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={List.class,BandwidthPackageTag.class}, tree="[0,1]")
    private Output<List<BandwidthPackageTag>> tags;

    public Output<List<BandwidthPackageTag>> tags() {
        return this.tags;
    }
    /**
     * 更新时间
     * 
     */
    @Export(name="updatedTime", refs={String.class}, tree="[0]")
    private Output<String> updatedTime;

    /**
     * @return 更新时间
     * 
     */
    public Output<String> updatedTime() {
        return this.updatedTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BandwidthPackage(java.lang.String name) {
        this(name, BandwidthPackageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BandwidthPackage(java.lang.String name, BandwidthPackageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BandwidthPackage(java.lang.String name, BandwidthPackageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/bandwidthPackage:BandwidthPackage", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BandwidthPackage(java.lang.String name, Output<java.lang.String> id, @Nullable BandwidthPackageState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/bandwidthPackage:BandwidthPackage", name, state, makeResourceOptions(options, id), false);
    }

    private static BandwidthPackageArgs makeArgs(BandwidthPackageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BandwidthPackageArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BandwidthPackage get(java.lang.String name, Output<java.lang.String> id, @Nullable BandwidthPackageState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BandwidthPackage(name, id, state, options);
    }
}
