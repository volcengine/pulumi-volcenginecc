// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.storageebs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeExtraPerformanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeExtraPerformanceArgs Empty = new VolumeExtraPerformanceArgs();

    /**
     * 额外性能的类型，取值如下：Balance：均衡型额外性能；IOPS：IOPS型额外性能；Throughput：吞吐量型额外性能。
     * 
     */
    @Import(name="extraPerformanceTypeId")
    private @Nullable Output<String> extraPerformanceTypeId;

    /**
     * @return 额外性能的类型，取值如下：Balance：均衡型额外性能；IOPS：IOPS型额外性能；Throughput：吞吐量型额外性能。
     * 
     */
    public Optional<Output<String>> extraPerformanceTypeId() {
        return Optional.ofNullable(this.extraPerformanceTypeId);
    }

    /**
     * 云盘的额外IOPS。
     * 
     */
    @Import(name="iops")
    private @Nullable Output<Double> iops;

    /**
     * @return 云盘的额外IOPS。
     * 
     */
    public Optional<Output<Double>> iops() {
        return Optional.ofNullable(this.iops);
    }

    /**
     * 云盘的额外吞吐量。
     * 
     */
    @Import(name="throughput")
    private @Nullable Output<Double> throughput;

    /**
     * @return 云盘的额外吞吐量。
     * 
     */
    public Optional<Output<Double>> throughput() {
        return Optional.ofNullable(this.throughput);
    }

    private VolumeExtraPerformanceArgs() {}

    private VolumeExtraPerformanceArgs(VolumeExtraPerformanceArgs $) {
        this.extraPerformanceTypeId = $.extraPerformanceTypeId;
        this.iops = $.iops;
        this.throughput = $.throughput;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeExtraPerformanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeExtraPerformanceArgs $;

        public Builder() {
            $ = new VolumeExtraPerformanceArgs();
        }

        public Builder(VolumeExtraPerformanceArgs defaults) {
            $ = new VolumeExtraPerformanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param extraPerformanceTypeId 额外性能的类型，取值如下：Balance：均衡型额外性能；IOPS：IOPS型额外性能；Throughput：吞吐量型额外性能。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceTypeId(@Nullable Output<String> extraPerformanceTypeId) {
            $.extraPerformanceTypeId = extraPerformanceTypeId;
            return this;
        }

        /**
         * @param extraPerformanceTypeId 额外性能的类型，取值如下：Balance：均衡型额外性能；IOPS：IOPS型额外性能；Throughput：吞吐量型额外性能。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceTypeId(String extraPerformanceTypeId) {
            return extraPerformanceTypeId(Output.of(extraPerformanceTypeId));
        }

        /**
         * @param iops 云盘的额外IOPS。
         * 
         * @return builder
         * 
         */
        public Builder iops(@Nullable Output<Double> iops) {
            $.iops = iops;
            return this;
        }

        /**
         * @param iops 云盘的额外IOPS。
         * 
         * @return builder
         * 
         */
        public Builder iops(Double iops) {
            return iops(Output.of(iops));
        }

        /**
         * @param throughput 云盘的额外吞吐量。
         * 
         * @return builder
         * 
         */
        public Builder throughput(@Nullable Output<Double> throughput) {
            $.throughput = throughput;
            return this;
        }

        /**
         * @param throughput 云盘的额外吞吐量。
         * 
         * @return builder
         * 
         */
        public Builder throughput(Double throughput) {
            return throughput(Output.of(throughput));
        }

        public VolumeExtraPerformanceArgs build() {
            return $;
        }
    }

}
