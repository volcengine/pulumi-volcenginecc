// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.iam.outputs.GetGroupAttachedPolicy;
import com.volcengine.volcenginecc.iam.outputs.GetGroupUser;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupResult {
    /**
     * @return 用户组所属主账号的ID。
     * 
     */
    private Integer accountId;
    /**
     * @return 用户组绑定的策略信息。
     * 
     */
    private List<GetGroupAttachedPolicy> attachedPolicys;
    /**
     * @return 用户组的创建时间。
     * 
     */
    private String createdTime;
    /**
     * @return 用户组描述信息。长度不超过128。
     * 
     */
    private String description;
    /**
     * @return 用户组显示名称。长度不超过64。
     * 
     */
    private String displayName;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 用户组的更新时间。
     * 
     */
    private String updatedTime;
    /**
     * @return 用户组ID。
     * 
     */
    private Integer userGroupId;
    /**
     * @return 用户组名称。长度1~64，支持英文、数字和.-_符号。
     * 
     */
    private String userGroupName;
    /**
     * @return 用户组内绑定的用户信息。
     * 
     */
    private List<GetGroupUser> users;

    private GetGroupResult() {}
    /**
     * @return 用户组所属主账号的ID。
     * 
     */
    public Integer accountId() {
        return this.accountId;
    }
    /**
     * @return 用户组绑定的策略信息。
     * 
     */
    public List<GetGroupAttachedPolicy> attachedPolicys() {
        return this.attachedPolicys;
    }
    /**
     * @return 用户组的创建时间。
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return 用户组描述信息。长度不超过128。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return 用户组显示名称。长度不超过64。
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 用户组的更新时间。
     * 
     */
    public String updatedTime() {
        return this.updatedTime;
    }
    /**
     * @return 用户组ID。
     * 
     */
    public Integer userGroupId() {
        return this.userGroupId;
    }
    /**
     * @return 用户组名称。长度1~64，支持英文、数字和.-_符号。
     * 
     */
    public String userGroupName() {
        return this.userGroupName;
    }
    /**
     * @return 用户组内绑定的用户信息。
     * 
     */
    public List<GetGroupUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer accountId;
        private List<GetGroupAttachedPolicy> attachedPolicys;
        private String createdTime;
        private String description;
        private String displayName;
        private String id;
        private String updatedTime;
        private Integer userGroupId;
        private String userGroupName;
        private List<GetGroupUser> users;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.attachedPolicys = defaults.attachedPolicys;
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.updatedTime = defaults.updatedTime;
    	      this.userGroupId = defaults.userGroupId;
    	      this.userGroupName = defaults.userGroupName;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder accountId(Integer accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder attachedPolicys(List<GetGroupAttachedPolicy> attachedPolicys) {
            if (attachedPolicys == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "attachedPolicys");
            }
            this.attachedPolicys = attachedPolicys;
            return this;
        }
        public Builder attachedPolicys(GetGroupAttachedPolicy... attachedPolicys) {
            return attachedPolicys(List.of(attachedPolicys));
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder updatedTime(String updatedTime) {
            if (updatedTime == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "updatedTime");
            }
            this.updatedTime = updatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder userGroupId(Integer userGroupId) {
            if (userGroupId == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "userGroupId");
            }
            this.userGroupId = userGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder userGroupName(String userGroupName) {
            if (userGroupName == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "userGroupName");
            }
            this.userGroupName = userGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder users(List<GetGroupUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetGroupUser... users) {
            return users(List.of(users));
        }
        public GetGroupResult build() {
            final var _resultValue = new GetGroupResult();
            _resultValue.accountId = accountId;
            _resultValue.attachedPolicys = attachedPolicys;
            _resultValue.createdTime = createdTime;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.updatedTime = updatedTime;
            _resultValue.userGroupId = userGroupId;
            _resultValue.userGroupName = userGroupName;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
