// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.ecs.inputs.InstanceCpuMemoryArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceEipAddressArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceImageArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceKeyPairArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceOperationSystemArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstancePlacementArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstancePrimaryNetworkInterfaceArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceSecondaryNetworkInterfaceArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceSystemVolumeArgs;
import com.volcengine.volcenginecc.ecs.inputs.InstanceTagArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceState extends com.pulumi.resources.ResourceArgs {

    public static final InstanceState Empty = new InstanceState();

    /**
     * 亲和组规格，取值：2。 :::tip - 当前仅高性能计算NPU型hpcpci3实例（邀测）支持亲和组。 -
     * 该功能正在邀测中，如需试用，请联系客户经理申请。 :::
     * 
     */
    @Import(name="affinityGroupSize")
    private @Nullable Output<Integer> affinityGroupSize;

    /**
     * @return 亲和组规格，取值：2。 :::tip - 当前仅高性能计算NPU型hpcpci3实例（邀测）支持亲和组。 -
     * 该功能正在邀测中，如需试用，请联系客户经理申请。 :::
     * 
     */
    public Optional<Output<Integer>> affinityGroupSize() {
        return Optional.ofNullable(this.affinityGroupSize);
    }

    /**
     * 实例到期后是否自动续费，取值： - true：自动续费。 - false（默认）：不自动续费。 :::tip
     * 仅当参数`InstanceChargeType`取值为`PrePaid`时生效。 :::
     * 
     */
    @Import(name="autoRenew")
    private @Nullable Output<Boolean> autoRenew;

    /**
     * @return 实例到期后是否自动续费，取值： - true：自动续费。 - false（默认）：不自动续费。 :::tip
     * 仅当参数`InstanceChargeType`取值为`PrePaid`时生效。 :::
     * 
     */
    public Optional<Output<Boolean>> autoRenew() {
        return Optional.ofNullable(this.autoRenew);
    }

    /**
     * 每次自动续费的时长。 - 仅当参数`AutoRenew`取值为`True`时，该参数生效，默认值为1。 -
     * `PeriodUnit`取值为`Month`时，该参数取值为1、2、3、6、12。
     * 
     */
    @Import(name="autoRenewPeriod")
    private @Nullable Output<Integer> autoRenewPeriod;

    /**
     * @return 每次自动续费的时长。 - 仅当参数`AutoRenew`取值为`True`时，该参数生效，默认值为1。 -
     * `PeriodUnit`取值为`Month`时，该参数取值为1、2、3、6、12。
     * 
     */
    public Optional<Output<Integer>> autoRenewPeriod() {
        return Optional.ofNullable(this.autoRenewPeriod);
    }

    /**
     * 指定CPU最大频率，单位：GHz，取值范围：CPU的主频到睿频之间。 :::tip -
     * 当前仅g3al、c3al、r3al、g4i、c4i、r4i、g4ie、c4ie、r4ie实例支持设置该参数。规格的主频/睿频及更多信息，请参见[实例规格介绍](https://www.volcengine.com/docs/6396/70840)。
     * - 该功能正在邀测中，如需使用，请联系客户经理申请。 :::
     * 
     */
    @Import(name="cpuMaxFrequency")
    private @Nullable Output<Double> cpuMaxFrequency;

    /**
     * @return 指定CPU最大频率，单位：GHz，取值范围：CPU的主频到睿频之间。 :::tip -
     * 当前仅g3al、c3al、r3al、g4i、c4i、r4i、g4ie、c4ie、r4ie实例支持设置该参数。规格的主频/睿频及更多信息，请参见[实例规格介绍](https://www.volcengine.com/docs/6396/70840)。
     * - 该功能正在邀测中，如需使用，请联系客户经理申请。 :::
     * 
     */
    public Optional<Output<Double>> cpuMaxFrequency() {
        return Optional.ofNullable(this.cpuMaxFrequency);
    }

    /**
     * 实例的CPU选项。
     * 
     */
    @Import(name="cpuMemory")
    private @Nullable Output<InstanceCpuMemoryArgs> cpuMemory;

    /**
     * @return 实例的CPU选项。
     * 
     */
    public Optional<Output<InstanceCpuMemoryArgs>> cpuMemory() {
        return Optional.ofNullable(this.cpuMemory);
    }

    /**
     * 实例的创建时间。
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return 实例的创建时间。
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * 突发性能实例的运行模式，取值： - Standard：标准模式。 -
     * Unlimited：无性能约束模式（暂不支持）。 :::tip -
     * 仅当`InstanceTypeId`取值为ecs.t2系列，即突发性能实例时该参数生效。 -
     * 不传或传入空值时，突发性能实例默认为`Standard`标准模式。 :::
     * 
     */
    @Import(name="creditSpecification")
    private @Nullable Output<String> creditSpecification;

    /**
     * @return 突发性能实例的运行模式，取值： - Standard：标准模式。 -
     * Unlimited：无性能约束模式（暂不支持）。 :::tip -
     * 仅当`InstanceTypeId`取值为ecs.t2系列，即突发性能实例时该参数生效。 -
     * 不传或传入空值时，突发性能实例默认为`Standard`标准模式。 :::
     * 
     */
    public Optional<Output<String>> creditSpecification() {
        return Optional.ofNullable(this.creditSpecification);
    }

    /**
     * 实例删除保护属性，指定是否支持通过控制台或API删除实例。取值： -
     * true：开启实例删除保护。 - false（默认）：关闭实例删除保护。
     * 开启实例删除保护后，在控制台或调用API删除实例时，会收到删除失败的错误码。如需删除，请先关闭实例删除保护。
     * 
     */
    @Import(name="deletionProtection")
    private @Nullable Output<Boolean> deletionProtection;

    /**
     * @return 实例删除保护属性，指定是否支持通过控制台或API删除实例。取值： -
     * true：开启实例删除保护。 - false（默认）：关闭实例删除保护。
     * 开启实例删除保护后，在控制台或调用API删除实例时，会收到删除失败的错误码。如需删除，请先关闭实例删除保护。
     * 
     */
    public Optional<Output<Boolean>> deletionProtection() {
        return Optional.ofNullable(this.deletionProtection);
    }

    /**
     * 当ECS实例要加入或调整的部署集策略为部署集组高可用策略（AvailabilityGroup）时，可以通过该参数指定实例在部署集中的分组号，取值范围：1～7。
     * 
     */
    @Import(name="deploymentSetGroupNumber")
    private @Nullable Output<Integer> deploymentSetGroupNumber;

    /**
     * @return 当ECS实例要加入或调整的部署集策略为部署集组高可用策略（AvailabilityGroup）时，可以通过该参数指定实例在部署集中的分组号，取值范围：1～7。
     * 
     */
    public Optional<Output<Integer>> deploymentSetGroupNumber() {
        return Optional.ofNullable(this.deploymentSetGroupNumber);
    }

    /**
     * 实例需要加入的部署集ID。 -
     * 您可以调用[DescribeDeploymentSets](https://www.volcengine.com/docs/6396/70873)接口，查询已创建的部署集。
     * - 关于部署集的更多信息，请参见[部署集](https://www.volcengine.com/docs/6396/70871)。
     * 
     */
    @Import(name="deploymentSetId")
    private @Nullable Output<String> deploymentSetId;

    /**
     * @return 实例需要加入的部署集ID。 -
     * 您可以调用[DescribeDeploymentSets](https://www.volcengine.com/docs/6396/70873)接口，查询已创建的部署集。
     * - 关于部署集的更多信息，请参见[部署集](https://www.volcengine.com/docs/6396/70871)。
     * 
     */
    public Optional<Output<String>> deploymentSetId() {
        return Optional.ofNullable(this.deploymentSetId);
    }

    /**
     * 实例的描述，默认为空字符串。 - 必须以字母或中文开头。 -
     * 只能包含中文、字母、数字、点号“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”
     * - 长度限制在255个字符以内。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 实例的描述，默认为空字符串。 - 必须以字母或中文开头。 -
     * 只能包含中文、字母、数字、点号“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”
     * - 长度限制在255个字符以内。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 实例的EIP地址。
     * 
     */
    @Import(name="eipAddress")
    private @Nullable Output<InstanceEipAddressArgs> eipAddress;

    /**
     * @return 实例的EIP地址。
     * 
     */
    public Optional<Output<InstanceEipAddressArgs>> eipAddress() {
        return Optional.ofNullable(this.eipAddress);
    }

    /**
     * 实例的过期时间。
     * 
     */
    @Import(name="expiredAt")
    private @Nullable Output<String> expiredAt;

    /**
     * @return 实例的过期时间。
     * 
     */
    public Optional<Output<String>> expiredAt() {
        return Optional.ofNullable(this.expiredAt);
    }

    /**
     * 实例主机名，即实例操作系统内部的计算机名。 - Linux实例： -
     * 允许使用字母、数字、点号“.”或中划线“-”。 -
     * 不能以中划线、点号开头或结尾，且不能连续使用中划线和点号。 -
     * Linux系统长度限制在2～63个字符之间。 - Windows实例： -
     * 允许使用字母、数字或中划线“-”，不能完全是数字。 -
     * 不能以中划线开头或结尾，且不能连续使用中划线。 -
     * Windows系统长度限制在2～15个字符之间。
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return 实例主机名，即实例操作系统内部的计算机名。 - Linux实例： -
     * 允许使用字母、数字、点号“.”或中划线“-”。 -
     * 不能以中划线、点号开头或结尾，且不能连续使用中划线和点号。 -
     * Linux系统长度限制在2～63个字符之间。 - Windows实例： -
     * 允许使用字母、数字或中划线“-”，不能完全是数字。 -
     * 不能以中划线开头或结尾，且不能连续使用中划线。 -
     * Windows系统长度限制在2～15个字符之间。
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * 实例所属的高性能计算集群ID。 :::tip
     * 仅当创建高性能计算GPU型实例时，该参数生效且为必填项。 :::
     * 
     */
    @Import(name="hpcClusterId")
    private @Nullable Output<String> hpcClusterId;

    /**
     * @return 实例所属的高性能计算集群ID。 :::tip
     * 仅当创建高性能计算GPU型实例时，该参数生效且为必填项。 :::
     * 
     */
    public Optional<Output<String>> hpcClusterId() {
        return Optional.ofNullable(this.hpcClusterId);
    }

    /**
     * 实例的镜像。
     * 
     */
    @Import(name="image")
    private @Nullable Output<InstanceImageArgs> image;

    /**
     * @return 实例的镜像。
     * 
     */
    public Optional<Output<InstanceImageArgs>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * 实例和云盘的计费类型，取值： - PostPaid：按量计费。 -
     * PrePaid：包年包月。请确认您的账号支持余额支付或者信控支付，否则将返回InvalidInstanceChargeType的错误提示。
     * 
     */
    @Import(name="instanceChargeType")
    private @Nullable Output<String> instanceChargeType;

    /**
     * @return 实例和云盘的计费类型，取值： - PostPaid：按量计费。 -
     * PrePaid：包年包月。请确认您的账号支持余额支付或者信控支付，否则将返回InvalidInstanceChargeType的错误提示。
     * 
     */
    public Optional<Output<String>> instanceChargeType() {
        return Optional.ofNullable(this.instanceChargeType);
    }

    /**
     * ECS实例的ID。
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return ECS实例的ID。
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * 实例的名称。 - 以字母或中文开头。 -
     * 只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。 -
     * 长度限制为1～128个字符。
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return 实例的名称。 - 以字母或中文开头。 -
     * 只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。 -
     * 长度限制为1～128个字符。
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * 实例规格。 -
     * 产品选型：您可以参考[实例规格介绍](https://www.volcengine.com/docs/6396/70840)或者调用[DescribeInstanceTypes](https://www.volcengine.com/docs/6396/92769)查看实例规格的性能数据，也可以参考[实例选型最佳实践](https://www.volcengine.com/docs/6396/74174)了解如何选择实例规格。
     * ---
     * 查询库存：您可以调用[DescribeAvailableResource](https://www.volcengine.com/docs/6396/76279)查询可用区中计算资源的库存信息。
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return 实例规格。 -
     * 产品选型：您可以参考[实例规格介绍](https://www.volcengine.com/docs/6396/70840)或者调用[DescribeInstanceTypes](https://www.volcengine.com/docs/6396/92769)查看实例规格的性能数据，也可以参考[实例选型最佳实践](https://www.volcengine.com/docs/6396/74174)了解如何选择实例规格。
     * ---
     * 查询库存：您可以调用[DescribeAvailableResource](https://www.volcengine.com/docs/6396/76279)查询可用区中计算资源的库存信息。
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * 实例的密钥对名称。
     * 
     */
    @Import(name="keyPair")
    private @Nullable Output<InstanceKeyPairArgs> keyPair;

    /**
     * @return 实例的密钥对名称。
     * 
     */
    public Optional<Output<InstanceKeyPairArgs>> keyPair() {
        return Optional.ofNullable(this.keyPair);
    }

    /**
     * 实例的操作系统类型。
     * 
     */
    @Import(name="operationSystem")
    private @Nullable Output<InstanceOperationSystemArgs> operationSystem;

    /**
     * @return 实例的操作系统类型。
     * 
     */
    public Optional<Output<InstanceOperationSystemArgs>> operationSystem() {
        return Optional.ofNullable(this.operationSystem);
    }

    /**
     * 实例的密码。
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return 实例的密码。
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * 购买资源的时长（N）。 -
     * `PeriodUnit`为`Month`（默认）时，取值：1、2、3、4、5、6、7、8、9、12、24、36、48、60。 -
     * `PeriodUnit`为`Year`时，取值：1、2、3、4、5。 :::tip
     * 仅当`InstanceChargeType`取值为`PrePaid`时生效，且为必填。
     * 
     */
    @Import(name="period")
    private @Nullable Output<Integer> period;

    /**
     * @return 购买资源的时长（N）。 -
     * `PeriodUnit`为`Month`（默认）时，取值：1、2、3、4、5、6、7、8、9、12、24、36、48、60。 -
     * `PeriodUnit`为`Year`时，取值：1、2、3、4、5。 :::tip
     * 仅当`InstanceChargeType`取值为`PrePaid`时生效，且为必填。
     * 
     */
    public Optional<Output<Integer>> period() {
        return Optional.ofNullable(this.period);
    }

    /**
     * 购买资源的时长单位。取值： - Month（默认）：月。 - Year：年。 :::tip
     * 仅当`InstanceChargeType`取值为`PrePaid`时生效。
     * 
     */
    @Import(name="periodUnit")
    private @Nullable Output<String> periodUnit;

    /**
     * @return 购买资源的时长单位。取值： - Month（默认）：月。 - Year：年。 :::tip
     * 仅当`InstanceChargeType`取值为`PrePaid`时生效。
     * 
     */
    public Optional<Output<String>> periodUnit() {
        return Optional.ofNullable(this.periodUnit);
    }

    /**
     * 实例的部署信息。
     * 
     */
    @Import(name="placement")
    private @Nullable Output<InstancePlacementArgs> placement;

    /**
     * @return 实例的部署信息。
     * 
     */
    public Optional<Output<InstancePlacementArgs>> placement() {
        return Optional.ofNullable(this.placement);
    }

    /**
     * 实例的主网卡。
     * 
     */
    @Import(name="primaryNetworkInterface")
    private @Nullable Output<InstancePrimaryNetworkInterfaceArgs> primaryNetworkInterface;

    /**
     * @return 实例的主网卡。
     * 
     */
    public Optional<Output<InstancePrimaryNetworkInterfaceArgs>> primaryNetworkInterface() {
        return Optional.ofNullable(this.primaryNetworkInterface);
    }

    /**
     * 实例所属的项目名称。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 实例所属的项目名称。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    @Import(name="secondaryNetworkInterfaces")
    private @Nullable Output<List<InstanceSecondaryNetworkInterfaceArgs>> secondaryNetworkInterfaces;

    public Optional<Output<List<InstanceSecondaryNetworkInterfaceArgs>>> secondaryNetworkInterfaces() {
        return Optional.ofNullable(this.secondaryNetworkInterfaces);
    }

    /**
     * 竞价实例的每小时最高价格。 - 支持小数点后3位的精度。 -
     * 仅当`SpotStrategy`取值为`SpotWithPriceLimit`时生效。 -
     * 当`SpotStrategy`取值为`SpotWithPriceLimit`时，您可以自定义设置竞价实例的价格上限，当市场价格高于您的出价时，实例会被释放；当`SpotStrategy`取值为`SpotAsPriceGo`时，则代表您接受系统自动出价，跟随当前市场实际价格，此时无需填写该参数。
     * 
     */
    @Import(name="spotPriceLimit")
    private @Nullable Output<Double> spotPriceLimit;

    /**
     * @return 竞价实例的每小时最高价格。 - 支持小数点后3位的精度。 -
     * 仅当`SpotStrategy`取值为`SpotWithPriceLimit`时生效。 -
     * 当`SpotStrategy`取值为`SpotWithPriceLimit`时，您可以自定义设置竞价实例的价格上限，当市场价格高于您的出价时，实例会被释放；当`SpotStrategy`取值为`SpotAsPriceGo`时，则代表您接受系统自动出价，跟随当前市场实际价格，此时无需填写该参数。
     * 
     */
    public Optional<Output<Double>> spotPriceLimit() {
        return Optional.ofNullable(this.spotPriceLimit);
    }

    /**
     * 竞价策略。取值： - NoSpot（默认）：非竞价实例。 -
     * SpotWithPriceLimit：设置价格上限的竞ga价实例。 -
     * SpotAsPriceGo：系统自动出价，跟随当前市场实际价格的竞价实例。
     * 
     */
    @Import(name="spotStrategy")
    private @Nullable Output<String> spotStrategy;

    /**
     * @return 竞价策略。取值： - NoSpot（默认）：非竞价实例。 -
     * SpotWithPriceLimit：设置价格上限的竞ga价实例。 -
     * SpotAsPriceGo：系统自动出价，跟随当前市场实际价格的竞价实例。
     * 
     */
    public Optional<Output<String>> spotStrategy() {
        return Optional.ofNullable(this.spotStrategy);
    }

    /**
     * 实例的状态。实例的状态，取值： CREATING：创建中 RUNNING：运行中 STOPPING：停止中
     * STOPPED：已停止 REBOOTING: 重启中 STARTING：启动中 REBUILDING：重装中 RESIZING：更配中 ERROR：错误
     * DELETING：删除中。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 实例的状态。实例的状态，取值： CREATING：创建中 RUNNING：运行中 STOPPING：停止中
     * STOPPED：已停止 REBOOTING: 重启中 STARTING：启动中 REBUILDING：重装中 RESIZING：更配中 ERROR：错误
     * DELETING：删除中。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * 实例的系统卷。
     * 
     */
    @Import(name="systemVolume")
    private @Nullable Output<InstanceSystemVolumeArgs> systemVolume;

    /**
     * @return 实例的系统卷。
     * 
     */
    public Optional<Output<InstanceSystemVolumeArgs>> systemVolume() {
        return Optional.ofNullable(this.systemVolume);
    }

    @Import(name="tags")
    private @Nullable Output<List<InstanceTagArgs>> tags;

    public Optional<Output<List<InstanceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 实例的更新时间。
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return 实例的更新时间。
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * 实例的自定义数据，默认为空。最终传入的UserData会被Base64转码。 -
     * Linux实例：脚本内容不能超过16KB，且必须经过Base64编码。 -
     * Windows实例：脚本内容不能超过8KB，且无需Base64编码。
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return 实例的自定义数据，默认为空。最终传入的UserData会被Base64转码。 -
     * Linux实例：脚本内容不能超过16KB，且必须经过Base64编码。 -
     * Windows实例：脚本内容不能超过8KB，且无需Base64编码。
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    /**
     * 实例所属的私有网络ID。您可以调用[DescribeVpcs](https://www.volcengine.com/docs/6563/66127)接口获取目标地域下的VPC信息。
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return 实例所属的私有网络ID。您可以调用[DescribeVpcs](https://www.volcengine.com/docs/6563/66127)接口获取目标地域下的VPC信息。
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    /**
     * 实例所在的可用区ID。
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return 实例所在的可用区ID。
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private InstanceState() {}

    private InstanceState(InstanceState $) {
        this.affinityGroupSize = $.affinityGroupSize;
        this.autoRenew = $.autoRenew;
        this.autoRenewPeriod = $.autoRenewPeriod;
        this.cpuMaxFrequency = $.cpuMaxFrequency;
        this.cpuMemory = $.cpuMemory;
        this.createdAt = $.createdAt;
        this.creditSpecification = $.creditSpecification;
        this.deletionProtection = $.deletionProtection;
        this.deploymentSetGroupNumber = $.deploymentSetGroupNumber;
        this.deploymentSetId = $.deploymentSetId;
        this.description = $.description;
        this.eipAddress = $.eipAddress;
        this.expiredAt = $.expiredAt;
        this.hostname = $.hostname;
        this.hpcClusterId = $.hpcClusterId;
        this.image = $.image;
        this.instanceChargeType = $.instanceChargeType;
        this.instanceId = $.instanceId;
        this.instanceName = $.instanceName;
        this.instanceType = $.instanceType;
        this.keyPair = $.keyPair;
        this.operationSystem = $.operationSystem;
        this.password = $.password;
        this.period = $.period;
        this.periodUnit = $.periodUnit;
        this.placement = $.placement;
        this.primaryNetworkInterface = $.primaryNetworkInterface;
        this.projectName = $.projectName;
        this.secondaryNetworkInterfaces = $.secondaryNetworkInterfaces;
        this.spotPriceLimit = $.spotPriceLimit;
        this.spotStrategy = $.spotStrategy;
        this.status = $.status;
        this.systemVolume = $.systemVolume;
        this.tags = $.tags;
        this.updatedAt = $.updatedAt;
        this.userData = $.userData;
        this.vpcId = $.vpcId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceState $;

        public Builder() {
            $ = new InstanceState();
        }

        public Builder(InstanceState defaults) {
            $ = new InstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param affinityGroupSize 亲和组规格，取值：2。 :::tip - 当前仅高性能计算NPU型hpcpci3实例（邀测）支持亲和组。 -
         * 该功能正在邀测中，如需试用，请联系客户经理申请。 :::
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupSize(@Nullable Output<Integer> affinityGroupSize) {
            $.affinityGroupSize = affinityGroupSize;
            return this;
        }

        /**
         * @param affinityGroupSize 亲和组规格，取值：2。 :::tip - 当前仅高性能计算NPU型hpcpci3实例（邀测）支持亲和组。 -
         * 该功能正在邀测中，如需试用，请联系客户经理申请。 :::
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupSize(Integer affinityGroupSize) {
            return affinityGroupSize(Output.of(affinityGroupSize));
        }

        /**
         * @param autoRenew 实例到期后是否自动续费，取值： - true：自动续费。 - false（默认）：不自动续费。 :::tip
         * 仅当参数`InstanceChargeType`取值为`PrePaid`时生效。 :::
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(@Nullable Output<Boolean> autoRenew) {
            $.autoRenew = autoRenew;
            return this;
        }

        /**
         * @param autoRenew 实例到期后是否自动续费，取值： - true：自动续费。 - false（默认）：不自动续费。 :::tip
         * 仅当参数`InstanceChargeType`取值为`PrePaid`时生效。 :::
         * 
         * @return builder
         * 
         */
        public Builder autoRenew(Boolean autoRenew) {
            return autoRenew(Output.of(autoRenew));
        }

        /**
         * @param autoRenewPeriod 每次自动续费的时长。 - 仅当参数`AutoRenew`取值为`True`时，该参数生效，默认值为1。 -
         * `PeriodUnit`取值为`Month`时，该参数取值为1、2、3、6、12。
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(@Nullable Output<Integer> autoRenewPeriod) {
            $.autoRenewPeriod = autoRenewPeriod;
            return this;
        }

        /**
         * @param autoRenewPeriod 每次自动续费的时长。 - 仅当参数`AutoRenew`取值为`True`时，该参数生效，默认值为1。 -
         * `PeriodUnit`取值为`Month`时，该参数取值为1、2、3、6、12。
         * 
         * @return builder
         * 
         */
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            return autoRenewPeriod(Output.of(autoRenewPeriod));
        }

        /**
         * @param cpuMaxFrequency 指定CPU最大频率，单位：GHz，取值范围：CPU的主频到睿频之间。 :::tip -
         * 当前仅g3al、c3al、r3al、g4i、c4i、r4i、g4ie、c4ie、r4ie实例支持设置该参数。规格的主频/睿频及更多信息，请参见[实例规格介绍](https://www.volcengine.com/docs/6396/70840)。
         * - 该功能正在邀测中，如需使用，请联系客户经理申请。 :::
         * 
         * @return builder
         * 
         */
        public Builder cpuMaxFrequency(@Nullable Output<Double> cpuMaxFrequency) {
            $.cpuMaxFrequency = cpuMaxFrequency;
            return this;
        }

        /**
         * @param cpuMaxFrequency 指定CPU最大频率，单位：GHz，取值范围：CPU的主频到睿频之间。 :::tip -
         * 当前仅g3al、c3al、r3al、g4i、c4i、r4i、g4ie、c4ie、r4ie实例支持设置该参数。规格的主频/睿频及更多信息，请参见[实例规格介绍](https://www.volcengine.com/docs/6396/70840)。
         * - 该功能正在邀测中，如需使用，请联系客户经理申请。 :::
         * 
         * @return builder
         * 
         */
        public Builder cpuMaxFrequency(Double cpuMaxFrequency) {
            return cpuMaxFrequency(Output.of(cpuMaxFrequency));
        }

        /**
         * @param cpuMemory 实例的CPU选项。
         * 
         * @return builder
         * 
         */
        public Builder cpuMemory(@Nullable Output<InstanceCpuMemoryArgs> cpuMemory) {
            $.cpuMemory = cpuMemory;
            return this;
        }

        /**
         * @param cpuMemory 实例的CPU选项。
         * 
         * @return builder
         * 
         */
        public Builder cpuMemory(InstanceCpuMemoryArgs cpuMemory) {
            return cpuMemory(Output.of(cpuMemory));
        }

        /**
         * @param createdAt 实例的创建时间。
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt 实例的创建时间。
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param creditSpecification 突发性能实例的运行模式，取值： - Standard：标准模式。 -
         * Unlimited：无性能约束模式（暂不支持）。 :::tip -
         * 仅当`InstanceTypeId`取值为ecs.t2系列，即突发性能实例时该参数生效。 -
         * 不传或传入空值时，突发性能实例默认为`Standard`标准模式。 :::
         * 
         * @return builder
         * 
         */
        public Builder creditSpecification(@Nullable Output<String> creditSpecification) {
            $.creditSpecification = creditSpecification;
            return this;
        }

        /**
         * @param creditSpecification 突发性能实例的运行模式，取值： - Standard：标准模式。 -
         * Unlimited：无性能约束模式（暂不支持）。 :::tip -
         * 仅当`InstanceTypeId`取值为ecs.t2系列，即突发性能实例时该参数生效。 -
         * 不传或传入空值时，突发性能实例默认为`Standard`标准模式。 :::
         * 
         * @return builder
         * 
         */
        public Builder creditSpecification(String creditSpecification) {
            return creditSpecification(Output.of(creditSpecification));
        }

        /**
         * @param deletionProtection 实例删除保护属性，指定是否支持通过控制台或API删除实例。取值： -
         * true：开启实例删除保护。 - false（默认）：关闭实例删除保护。
         * 开启实例删除保护后，在控制台或调用API删除实例时，会收到删除失败的错误码。如需删除，请先关闭实例删除保护。
         * 
         * @return builder
         * 
         */
        public Builder deletionProtection(@Nullable Output<Boolean> deletionProtection) {
            $.deletionProtection = deletionProtection;
            return this;
        }

        /**
         * @param deletionProtection 实例删除保护属性，指定是否支持通过控制台或API删除实例。取值： -
         * true：开启实例删除保护。 - false（默认）：关闭实例删除保护。
         * 开启实例删除保护后，在控制台或调用API删除实例时，会收到删除失败的错误码。如需删除，请先关闭实例删除保护。
         * 
         * @return builder
         * 
         */
        public Builder deletionProtection(Boolean deletionProtection) {
            return deletionProtection(Output.of(deletionProtection));
        }

        /**
         * @param deploymentSetGroupNumber 当ECS实例要加入或调整的部署集策略为部署集组高可用策略（AvailabilityGroup）时，可以通过该参数指定实例在部署集中的分组号，取值范围：1～7。
         * 
         * @return builder
         * 
         */
        public Builder deploymentSetGroupNumber(@Nullable Output<Integer> deploymentSetGroupNumber) {
            $.deploymentSetGroupNumber = deploymentSetGroupNumber;
            return this;
        }

        /**
         * @param deploymentSetGroupNumber 当ECS实例要加入或调整的部署集策略为部署集组高可用策略（AvailabilityGroup）时，可以通过该参数指定实例在部署集中的分组号，取值范围：1～7。
         * 
         * @return builder
         * 
         */
        public Builder deploymentSetGroupNumber(Integer deploymentSetGroupNumber) {
            return deploymentSetGroupNumber(Output.of(deploymentSetGroupNumber));
        }

        /**
         * @param deploymentSetId 实例需要加入的部署集ID。 -
         * 您可以调用[DescribeDeploymentSets](https://www.volcengine.com/docs/6396/70873)接口，查询已创建的部署集。
         * - 关于部署集的更多信息，请参见[部署集](https://www.volcengine.com/docs/6396/70871)。
         * 
         * @return builder
         * 
         */
        public Builder deploymentSetId(@Nullable Output<String> deploymentSetId) {
            $.deploymentSetId = deploymentSetId;
            return this;
        }

        /**
         * @param deploymentSetId 实例需要加入的部署集ID。 -
         * 您可以调用[DescribeDeploymentSets](https://www.volcengine.com/docs/6396/70873)接口，查询已创建的部署集。
         * - 关于部署集的更多信息，请参见[部署集](https://www.volcengine.com/docs/6396/70871)。
         * 
         * @return builder
         * 
         */
        public Builder deploymentSetId(String deploymentSetId) {
            return deploymentSetId(Output.of(deploymentSetId));
        }

        /**
         * @param description 实例的描述，默认为空字符串。 - 必须以字母或中文开头。 -
         * 只能包含中文、字母、数字、点号“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”
         * - 长度限制在255个字符以内。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 实例的描述，默认为空字符串。 - 必须以字母或中文开头。 -
         * 只能包含中文、字母、数字、点号“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”
         * - 长度限制在255个字符以内。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eipAddress 实例的EIP地址。
         * 
         * @return builder
         * 
         */
        public Builder eipAddress(@Nullable Output<InstanceEipAddressArgs> eipAddress) {
            $.eipAddress = eipAddress;
            return this;
        }

        /**
         * @param eipAddress 实例的EIP地址。
         * 
         * @return builder
         * 
         */
        public Builder eipAddress(InstanceEipAddressArgs eipAddress) {
            return eipAddress(Output.of(eipAddress));
        }

        /**
         * @param expiredAt 实例的过期时间。
         * 
         * @return builder
         * 
         */
        public Builder expiredAt(@Nullable Output<String> expiredAt) {
            $.expiredAt = expiredAt;
            return this;
        }

        /**
         * @param expiredAt 实例的过期时间。
         * 
         * @return builder
         * 
         */
        public Builder expiredAt(String expiredAt) {
            return expiredAt(Output.of(expiredAt));
        }

        /**
         * @param hostname 实例主机名，即实例操作系统内部的计算机名。 - Linux实例： -
         * 允许使用字母、数字、点号“.”或中划线“-”。 -
         * 不能以中划线、点号开头或结尾，且不能连续使用中划线和点号。 -
         * Linux系统长度限制在2～63个字符之间。 - Windows实例： -
         * 允许使用字母、数字或中划线“-”，不能完全是数字。 -
         * 不能以中划线开头或结尾，且不能连续使用中划线。 -
         * Windows系统长度限制在2～15个字符之间。
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname 实例主机名，即实例操作系统内部的计算机名。 - Linux实例： -
         * 允许使用字母、数字、点号“.”或中划线“-”。 -
         * 不能以中划线、点号开头或结尾，且不能连续使用中划线和点号。 -
         * Linux系统长度限制在2～63个字符之间。 - Windows实例： -
         * 允许使用字母、数字或中划线“-”，不能完全是数字。 -
         * 不能以中划线开头或结尾，且不能连续使用中划线。 -
         * Windows系统长度限制在2～15个字符之间。
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param hpcClusterId 实例所属的高性能计算集群ID。 :::tip
         * 仅当创建高性能计算GPU型实例时，该参数生效且为必填项。 :::
         * 
         * @return builder
         * 
         */
        public Builder hpcClusterId(@Nullable Output<String> hpcClusterId) {
            $.hpcClusterId = hpcClusterId;
            return this;
        }

        /**
         * @param hpcClusterId 实例所属的高性能计算集群ID。 :::tip
         * 仅当创建高性能计算GPU型实例时，该参数生效且为必填项。 :::
         * 
         * @return builder
         * 
         */
        public Builder hpcClusterId(String hpcClusterId) {
            return hpcClusterId(Output.of(hpcClusterId));
        }

        /**
         * @param image 实例的镜像。
         * 
         * @return builder
         * 
         */
        public Builder image(@Nullable Output<InstanceImageArgs> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image 实例的镜像。
         * 
         * @return builder
         * 
         */
        public Builder image(InstanceImageArgs image) {
            return image(Output.of(image));
        }

        /**
         * @param instanceChargeType 实例和云盘的计费类型，取值： - PostPaid：按量计费。 -
         * PrePaid：包年包月。请确认您的账号支持余额支付或者信控支付，否则将返回InvalidInstanceChargeType的错误提示。
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(@Nullable Output<String> instanceChargeType) {
            $.instanceChargeType = instanceChargeType;
            return this;
        }

        /**
         * @param instanceChargeType 实例和云盘的计费类型，取值： - PostPaid：按量计费。 -
         * PrePaid：包年包月。请确认您的账号支持余额支付或者信控支付，否则将返回InvalidInstanceChargeType的错误提示。
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(String instanceChargeType) {
            return instanceChargeType(Output.of(instanceChargeType));
        }

        /**
         * @param instanceId ECS实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId ECS实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param instanceName 实例的名称。 - 以字母或中文开头。 -
         * 只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。 -
         * 长度限制为1～128个字符。
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName 实例的名称。 - 以字母或中文开头。 -
         * 只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。 -
         * 长度限制为1～128个字符。
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param instanceType 实例规格。 -
         * 产品选型：您可以参考[实例规格介绍](https://www.volcengine.com/docs/6396/70840)或者调用[DescribeInstanceTypes](https://www.volcengine.com/docs/6396/92769)查看实例规格的性能数据，也可以参考[实例选型最佳实践](https://www.volcengine.com/docs/6396/74174)了解如何选择实例规格。
         * ---
         * 查询库存：您可以调用[DescribeAvailableResource](https://www.volcengine.com/docs/6396/76279)查询可用区中计算资源的库存信息。
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType 实例规格。 -
         * 产品选型：您可以参考[实例规格介绍](https://www.volcengine.com/docs/6396/70840)或者调用[DescribeInstanceTypes](https://www.volcengine.com/docs/6396/92769)查看实例规格的性能数据，也可以参考[实例选型最佳实践](https://www.volcengine.com/docs/6396/74174)了解如何选择实例规格。
         * ---
         * 查询库存：您可以调用[DescribeAvailableResource](https://www.volcengine.com/docs/6396/76279)查询可用区中计算资源的库存信息。
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param keyPair 实例的密钥对名称。
         * 
         * @return builder
         * 
         */
        public Builder keyPair(@Nullable Output<InstanceKeyPairArgs> keyPair) {
            $.keyPair = keyPair;
            return this;
        }

        /**
         * @param keyPair 实例的密钥对名称。
         * 
         * @return builder
         * 
         */
        public Builder keyPair(InstanceKeyPairArgs keyPair) {
            return keyPair(Output.of(keyPair));
        }

        /**
         * @param operationSystem 实例的操作系统类型。
         * 
         * @return builder
         * 
         */
        public Builder operationSystem(@Nullable Output<InstanceOperationSystemArgs> operationSystem) {
            $.operationSystem = operationSystem;
            return this;
        }

        /**
         * @param operationSystem 实例的操作系统类型。
         * 
         * @return builder
         * 
         */
        public Builder operationSystem(InstanceOperationSystemArgs operationSystem) {
            return operationSystem(Output.of(operationSystem));
        }

        /**
         * @param password 实例的密码。
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password 实例的密码。
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param period 购买资源的时长（N）。 -
         * `PeriodUnit`为`Month`（默认）时，取值：1、2、3、4、5、6、7、8、9、12、24、36、48、60。 -
         * `PeriodUnit`为`Year`时，取值：1、2、3、4、5。 :::tip
         * 仅当`InstanceChargeType`取值为`PrePaid`时生效，且为必填。
         * 
         * @return builder
         * 
         */
        public Builder period(@Nullable Output<Integer> period) {
            $.period = period;
            return this;
        }

        /**
         * @param period 购买资源的时长（N）。 -
         * `PeriodUnit`为`Month`（默认）时，取值：1、2、3、4、5、6、7、8、9、12、24、36、48、60。 -
         * `PeriodUnit`为`Year`时，取值：1、2、3、4、5。 :::tip
         * 仅当`InstanceChargeType`取值为`PrePaid`时生效，且为必填。
         * 
         * @return builder
         * 
         */
        public Builder period(Integer period) {
            return period(Output.of(period));
        }

        /**
         * @param periodUnit 购买资源的时长单位。取值： - Month（默认）：月。 - Year：年。 :::tip
         * 仅当`InstanceChargeType`取值为`PrePaid`时生效。
         * 
         * @return builder
         * 
         */
        public Builder periodUnit(@Nullable Output<String> periodUnit) {
            $.periodUnit = periodUnit;
            return this;
        }

        /**
         * @param periodUnit 购买资源的时长单位。取值： - Month（默认）：月。 - Year：年。 :::tip
         * 仅当`InstanceChargeType`取值为`PrePaid`时生效。
         * 
         * @return builder
         * 
         */
        public Builder periodUnit(String periodUnit) {
            return periodUnit(Output.of(periodUnit));
        }

        /**
         * @param placement 实例的部署信息。
         * 
         * @return builder
         * 
         */
        public Builder placement(@Nullable Output<InstancePlacementArgs> placement) {
            $.placement = placement;
            return this;
        }

        /**
         * @param placement 实例的部署信息。
         * 
         * @return builder
         * 
         */
        public Builder placement(InstancePlacementArgs placement) {
            return placement(Output.of(placement));
        }

        /**
         * @param primaryNetworkInterface 实例的主网卡。
         * 
         * @return builder
         * 
         */
        public Builder primaryNetworkInterface(@Nullable Output<InstancePrimaryNetworkInterfaceArgs> primaryNetworkInterface) {
            $.primaryNetworkInterface = primaryNetworkInterface;
            return this;
        }

        /**
         * @param primaryNetworkInterface 实例的主网卡。
         * 
         * @return builder
         * 
         */
        public Builder primaryNetworkInterface(InstancePrimaryNetworkInterfaceArgs primaryNetworkInterface) {
            return primaryNetworkInterface(Output.of(primaryNetworkInterface));
        }

        /**
         * @param projectName 实例所属的项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 实例所属的项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public Builder secondaryNetworkInterfaces(@Nullable Output<List<InstanceSecondaryNetworkInterfaceArgs>> secondaryNetworkInterfaces) {
            $.secondaryNetworkInterfaces = secondaryNetworkInterfaces;
            return this;
        }

        public Builder secondaryNetworkInterfaces(List<InstanceSecondaryNetworkInterfaceArgs> secondaryNetworkInterfaces) {
            return secondaryNetworkInterfaces(Output.of(secondaryNetworkInterfaces));
        }

        public Builder secondaryNetworkInterfaces(InstanceSecondaryNetworkInterfaceArgs... secondaryNetworkInterfaces) {
            return secondaryNetworkInterfaces(List.of(secondaryNetworkInterfaces));
        }

        /**
         * @param spotPriceLimit 竞价实例的每小时最高价格。 - 支持小数点后3位的精度。 -
         * 仅当`SpotStrategy`取值为`SpotWithPriceLimit`时生效。 -
         * 当`SpotStrategy`取值为`SpotWithPriceLimit`时，您可以自定义设置竞价实例的价格上限，当市场价格高于您的出价时，实例会被释放；当`SpotStrategy`取值为`SpotAsPriceGo`时，则代表您接受系统自动出价，跟随当前市场实际价格，此时无需填写该参数。
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(@Nullable Output<Double> spotPriceLimit) {
            $.spotPriceLimit = spotPriceLimit;
            return this;
        }

        /**
         * @param spotPriceLimit 竞价实例的每小时最高价格。 - 支持小数点后3位的精度。 -
         * 仅当`SpotStrategy`取值为`SpotWithPriceLimit`时生效。 -
         * 当`SpotStrategy`取值为`SpotWithPriceLimit`时，您可以自定义设置竞价实例的价格上限，当市场价格高于您的出价时，实例会被释放；当`SpotStrategy`取值为`SpotAsPriceGo`时，则代表您接受系统自动出价，跟随当前市场实际价格，此时无需填写该参数。
         * 
         * @return builder
         * 
         */
        public Builder spotPriceLimit(Double spotPriceLimit) {
            return spotPriceLimit(Output.of(spotPriceLimit));
        }

        /**
         * @param spotStrategy 竞价策略。取值： - NoSpot（默认）：非竞价实例。 -
         * SpotWithPriceLimit：设置价格上限的竞ga价实例。 -
         * SpotAsPriceGo：系统自动出价，跟随当前市场实际价格的竞价实例。
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(@Nullable Output<String> spotStrategy) {
            $.spotStrategy = spotStrategy;
            return this;
        }

        /**
         * @param spotStrategy 竞价策略。取值： - NoSpot（默认）：非竞价实例。 -
         * SpotWithPriceLimit：设置价格上限的竞ga价实例。 -
         * SpotAsPriceGo：系统自动出价，跟随当前市场实际价格的竞价实例。
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(String spotStrategy) {
            return spotStrategy(Output.of(spotStrategy));
        }

        /**
         * @param status 实例的状态。实例的状态，取值： CREATING：创建中 RUNNING：运行中 STOPPING：停止中
         * STOPPED：已停止 REBOOTING: 重启中 STARTING：启动中 REBUILDING：重装中 RESIZING：更配中 ERROR：错误
         * DELETING：删除中。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 实例的状态。实例的状态，取值： CREATING：创建中 RUNNING：运行中 STOPPING：停止中
         * STOPPED：已停止 REBOOTING: 重启中 STARTING：启动中 REBUILDING：重装中 RESIZING：更配中 ERROR：错误
         * DELETING：删除中。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param systemVolume 实例的系统卷。
         * 
         * @return builder
         * 
         */
        public Builder systemVolume(@Nullable Output<InstanceSystemVolumeArgs> systemVolume) {
            $.systemVolume = systemVolume;
            return this;
        }

        /**
         * @param systemVolume 实例的系统卷。
         * 
         * @return builder
         * 
         */
        public Builder systemVolume(InstanceSystemVolumeArgs systemVolume) {
            return systemVolume(Output.of(systemVolume));
        }

        public Builder tags(@Nullable Output<List<InstanceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<InstanceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(InstanceTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updatedAt 实例的更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt 实例的更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param userData 实例的自定义数据，默认为空。最终传入的UserData会被Base64转码。 -
         * Linux实例：脚本内容不能超过16KB，且必须经过Base64编码。 -
         * Windows实例：脚本内容不能超过8KB，且无需Base64编码。
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData 实例的自定义数据，默认为空。最终传入的UserData会被Base64转码。 -
         * Linux实例：脚本内容不能超过16KB，且必须经过Base64编码。 -
         * Windows实例：脚本内容不能超过8KB，且无需Base64编码。
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        /**
         * @param vpcId 实例所属的私有网络ID。您可以调用[DescribeVpcs](https://www.volcengine.com/docs/6563/66127)接口获取目标地域下的VPC信息。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId 实例所属的私有网络ID。您可以调用[DescribeVpcs](https://www.volcengine.com/docs/6563/66127)接口获取目标地域下的VPC信息。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param zoneId 实例所在的可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId 实例所在的可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public InstanceState build() {
            return $;
        }
    }

}
