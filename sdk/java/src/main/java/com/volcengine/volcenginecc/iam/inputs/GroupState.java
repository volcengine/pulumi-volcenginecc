// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.iam.inputs.GroupAttachedPolicyArgs;
import com.volcengine.volcenginecc.iam.inputs.GroupUserArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupState extends com.pulumi.resources.ResourceArgs {

    public static final GroupState Empty = new GroupState();

    /**
     * 用户组所属主账号的ID。
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<Integer> accountId;

    /**
     * @return 用户组所属主账号的ID。
     * 
     */
    public Optional<Output<Integer>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="attachedPolicys")
    private @Nullable Output<List<GroupAttachedPolicyArgs>> attachedPolicys;

    public Optional<Output<List<GroupAttachedPolicyArgs>>> attachedPolicys() {
        return Optional.ofNullable(this.attachedPolicys);
    }

    /**
     * 用户组的创建时间。
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return 用户组的创建时间。
     * 
     */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * 用户组描述信息。长度不超过128。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 用户组描述信息。长度不超过128。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 用户组显示名称。长度不超过64。
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return 用户组显示名称。长度不超过64。
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * 用户组的更新时间。
     * 
     */
    @Import(name="updatedTime")
    private @Nullable Output<String> updatedTime;

    /**
     * @return 用户组的更新时间。
     * 
     */
    public Optional<Output<String>> updatedTime() {
        return Optional.ofNullable(this.updatedTime);
    }

    /**
     * 用户组ID。
     * 
     */
    @Import(name="userGroupId")
    private @Nullable Output<Integer> userGroupId;

    /**
     * @return 用户组ID。
     * 
     */
    public Optional<Output<Integer>> userGroupId() {
        return Optional.ofNullable(this.userGroupId);
    }

    /**
     * 用户组名称。长度1~64，支持英文、数字和.-_符号。
     * 
     */
    @Import(name="userGroupName")
    private @Nullable Output<String> userGroupName;

    /**
     * @return 用户组名称。长度1~64，支持英文、数字和.-_符号。
     * 
     */
    public Optional<Output<String>> userGroupName() {
        return Optional.ofNullable(this.userGroupName);
    }

    @Import(name="users")
    private @Nullable Output<List<GroupUserArgs>> users;

    public Optional<Output<List<GroupUserArgs>>> users() {
        return Optional.ofNullable(this.users);
    }

    private GroupState() {}

    private GroupState(GroupState $) {
        this.accountId = $.accountId;
        this.attachedPolicys = $.attachedPolicys;
        this.createdTime = $.createdTime;
        this.description = $.description;
        this.displayName = $.displayName;
        this.updatedTime = $.updatedTime;
        this.userGroupId = $.userGroupId;
        this.userGroupName = $.userGroupName;
        this.users = $.users;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupState $;

        public Builder() {
            $ = new GroupState();
        }

        public Builder(GroupState defaults) {
            $ = new GroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId 用户组所属主账号的ID。
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<Integer> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId 用户组所属主账号的ID。
         * 
         * @return builder
         * 
         */
        public Builder accountId(Integer accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder attachedPolicys(@Nullable Output<List<GroupAttachedPolicyArgs>> attachedPolicys) {
            $.attachedPolicys = attachedPolicys;
            return this;
        }

        public Builder attachedPolicys(List<GroupAttachedPolicyArgs> attachedPolicys) {
            return attachedPolicys(Output.of(attachedPolicys));
        }

        public Builder attachedPolicys(GroupAttachedPolicyArgs... attachedPolicys) {
            return attachedPolicys(List.of(attachedPolicys));
        }

        /**
         * @param createdTime 用户组的创建时间。
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime 用户组的创建时间。
         * 
         * @return builder
         * 
         */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        /**
         * @param description 用户组描述信息。长度不超过128。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 用户组描述信息。长度不超过128。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName 用户组显示名称。长度不超过64。
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName 用户组显示名称。长度不超过64。
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param updatedTime 用户组的更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedTime(@Nullable Output<String> updatedTime) {
            $.updatedTime = updatedTime;
            return this;
        }

        /**
         * @param updatedTime 用户组的更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedTime(String updatedTime) {
            return updatedTime(Output.of(updatedTime));
        }

        /**
         * @param userGroupId 用户组ID。
         * 
         * @return builder
         * 
         */
        public Builder userGroupId(@Nullable Output<Integer> userGroupId) {
            $.userGroupId = userGroupId;
            return this;
        }

        /**
         * @param userGroupId 用户组ID。
         * 
         * @return builder
         * 
         */
        public Builder userGroupId(Integer userGroupId) {
            return userGroupId(Output.of(userGroupId));
        }

        /**
         * @param userGroupName 用户组名称。长度1~64，支持英文、数字和.-_符号。
         * 
         * @return builder
         * 
         */
        public Builder userGroupName(@Nullable Output<String> userGroupName) {
            $.userGroupName = userGroupName;
            return this;
        }

        /**
         * @param userGroupName 用户组名称。长度1~64，支持英文、数字和.-_符号。
         * 
         * @return builder
         * 
         */
        public Builder userGroupName(String userGroupName) {
            return userGroupName(Output.of(userGroupName));
        }

        public Builder users(@Nullable Output<List<GroupUserArgs>> users) {
            $.users = users;
            return this;
        }

        public Builder users(List<GroupUserArgs> users) {
            return users(Output.of(users));
        }

        public Builder users(GroupUserArgs... users) {
            return users(List.of(users));
        }

        public GroupState build() {
            return $;
        }
    }

}
