// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserSecurityConfig {
    /**
     * @return 是否开启操作保护。0代表开启，1代表关闭。
     * 
     */
    private Double safeAuthClose;
    /**
     * @return 操作保护的豁免时间，完成验证后在豁免时间内将不再进行验证。支持设置5至30，默认值为10。单位为分钟。
     * 
     */
    private Double safeAuthExemptDuration;
    /**
     * @return 操作保护类型。phone代表手机验证，email代表邮箱验证，vmfa代表验证MFA设备验证。支持设置多种操作保护类型，以英文逗号分隔。
     * 
     */
    private String safeAuthType;

    private GetUserSecurityConfig() {}
    /**
     * @return 是否开启操作保护。0代表开启，1代表关闭。
     * 
     */
    public Double safeAuthClose() {
        return this.safeAuthClose;
    }
    /**
     * @return 操作保护的豁免时间，完成验证后在豁免时间内将不再进行验证。支持设置5至30，默认值为10。单位为分钟。
     * 
     */
    public Double safeAuthExemptDuration() {
        return this.safeAuthExemptDuration;
    }
    /**
     * @return 操作保护类型。phone代表手机验证，email代表邮箱验证，vmfa代表验证MFA设备验证。支持设置多种操作保护类型，以英文逗号分隔。
     * 
     */
    public String safeAuthType() {
        return this.safeAuthType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserSecurityConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double safeAuthClose;
        private Double safeAuthExemptDuration;
        private String safeAuthType;
        public Builder() {}
        public Builder(GetUserSecurityConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.safeAuthClose = defaults.safeAuthClose;
    	      this.safeAuthExemptDuration = defaults.safeAuthExemptDuration;
    	      this.safeAuthType = defaults.safeAuthType;
        }

        @CustomType.Setter
        public Builder safeAuthClose(Double safeAuthClose) {
            if (safeAuthClose == null) {
              throw new MissingRequiredPropertyException("GetUserSecurityConfig", "safeAuthClose");
            }
            this.safeAuthClose = safeAuthClose;
            return this;
        }
        @CustomType.Setter
        public Builder safeAuthExemptDuration(Double safeAuthExemptDuration) {
            if (safeAuthExemptDuration == null) {
              throw new MissingRequiredPropertyException("GetUserSecurityConfig", "safeAuthExemptDuration");
            }
            this.safeAuthExemptDuration = safeAuthExemptDuration;
            return this;
        }
        @CustomType.Setter
        public Builder safeAuthType(String safeAuthType) {
            if (safeAuthType == null) {
              throw new MissingRequiredPropertyException("GetUserSecurityConfig", "safeAuthType");
            }
            this.safeAuthType = safeAuthType;
            return this;
        }
        public GetUserSecurityConfig build() {
            final var _resultValue = new GetUserSecurityConfig();
            _resultValue.safeAuthClose = safeAuthClose;
            _resultValue.safeAuthExemptDuration = safeAuthExemptDuration;
            _resultValue.safeAuthType = safeAuthType;
            return _resultValue;
        }
    }
}
