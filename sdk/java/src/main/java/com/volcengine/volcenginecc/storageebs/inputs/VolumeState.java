// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.storageebs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.storageebs.inputs.VolumeBaselinePerformanceArgs;
import com.volcengine.volcenginecc.storageebs.inputs.VolumeExtraPerformanceArgs;
import com.volcengine.volcenginecc.storageebs.inputs.VolumeTagArgs;
import com.volcengine.volcenginecc.storageebs.inputs.VolumeTotalPerformanceArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeState extends com.pulumi.resources.ResourceArgs {

    public static final VolumeState Empty = new VolumeState();

    /**
     * 自动快照策略ID。
     * 
     */
    @Import(name="autoSnapshotPolicyId")
    private @Nullable Output<String> autoSnapshotPolicyId;

    /**
     * @return 自动快照策略ID。
     * 
     */
    public Optional<Output<String>> autoSnapshotPolicyId() {
        return Optional.ofNullable(this.autoSnapshotPolicyId);
    }

    /**
     * 自动快照策略名称。
     * 
     */
    @Import(name="autoSnapshotPolicyName")
    private @Nullable Output<String> autoSnapshotPolicyName;

    /**
     * @return 自动快照策略名称。
     * 
     */
    public Optional<Output<String>> autoSnapshotPolicyName() {
        return Optional.ofNullable(this.autoSnapshotPolicyName);
    }

    /**
     * 基本性能。
     * 
     */
    @Import(name="baselinePerformance")
    private @Nullable Output<VolumeBaselinePerformanceArgs> baselinePerformance;

    /**
     * @return 基本性能。
     * 
     */
    public Optional<Output<VolumeBaselinePerformanceArgs>> baselinePerformance() {
        return Optional.ofNullable(this.baselinePerformance);
    }

    /**
     * 云盘创建时间。
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return 云盘创建时间。
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
     * 
     */
    @Import(name="deleteWithInstance")
    private @Nullable Output<Boolean> deleteWithInstance;

    /**
     * @return 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
     * 
     */
    public Optional<Output<Boolean>> deleteWithInstance() {
        return Optional.ofNullable(this.deleteWithInstance);
    }

    /**
     * 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 设备名称
     * 
     */
    @Import(name="deviceName")
    private @Nullable Output<String> deviceName;

    /**
     * @return 设备名称
     * 
     */
    public Optional<Output<String>> deviceName() {
        return Optional.ofNullable(this.deviceName);
    }

    /**
     * 具体错误
     * 
     */
    @Import(name="errorDetail")
    private @Nullable Output<String> errorDetail;

    /**
     * @return 具体错误
     * 
     */
    public Optional<Output<String>> errorDetail() {
        return Optional.ofNullable(this.errorDetail);
    }

    /**
     * 包年包月到期时间。
     * 
     */
    @Import(name="expiredTime")
    private @Nullable Output<String> expiredTime;

    /**
     * @return 包年包月到期时间。
     * 
     */
    public Optional<Output<String>> expiredTime() {
        return Optional.ofNullable(this.expiredTime);
    }

    /**
     * 额外性能。
     * 
     */
    @Import(name="extraPerformance")
    private @Nullable Output<VolumeExtraPerformanceArgs> extraPerformance;

    /**
     * @return 额外性能。
     * 
     */
    public Optional<Output<VolumeExtraPerformanceArgs>> extraPerformance() {
        return Optional.ofNullable(this.extraPerformance);
    }

    /**
     * 云盘中的镜像ID。
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return 云盘中的镜像ID。
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * 创建云盘的同时挂载的ECS实例ID。
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return 创建云盘的同时挂载的ECS实例ID。
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * 云盘欠费回收时间。
     * 
     */
    @Import(name="overdueReclaimTime")
    private @Nullable Output<String> overdueReclaimTime;

    /**
     * @return 云盘欠费回收时间。
     * 
     */
    public Optional<Output<String>> overdueReclaimTime() {
        return Optional.ofNullable(this.overdueReclaimTime);
    }

    /**
     * 云盘欠费关停时间。
     * 
     */
    @Import(name="overdueTime")
    private @Nullable Output<String> overdueTime;

    /**
     * @return 云盘欠费关停时间。
     * 
     */
    public Optional<Output<String>> overdueTime() {
        return Optional.ofNullable(this.overdueTime);
    }

    /**
     * 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
     * 
     */
    @Import(name="payType")
    private @Nullable Output<String> payType;

    /**
     * @return 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
     * 
     */
    public Optional<Output<String>> payType() {
        return Optional.ofNullable(this.payType);
    }

    /**
     * 云盘所要加入的Project（项目）名称。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 云盘所要加入的Project（项目）名称。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
     * 
     */
    @Import(name="renewType")
    private @Nullable Output<Double> renewType;

    /**
     * @return 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
     * 
     */
    public Optional<Output<Double>> renewType() {
        return Optional.ofNullable(this.renewType);
    }

    /**
     * Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
     * 
     */
    @Import(name="size")
    private @Nullable Output<Double> size;

    /**
     * @return Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
     * 
     */
    public Optional<Output<Double>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * 快照计数
     * 
     */
    @Import(name="snapshotCount")
    private @Nullable Output<Double> snapshotCount;

    /**
     * @return 快照计数
     * 
     */
    public Optional<Output<Double>> snapshotCount() {
        return Optional.ofNullable(this.snapshotCount);
    }

    /**
     * 源快照。
     * 
     */
    @Import(name="sourceSnapshotId")
    private @Nullable Output<String> sourceSnapshotId;

    /**
     * @return 源快照。
     * 
     */
    public Optional<Output<String>> sourceSnapshotId() {
        return Optional.ofNullable(this.sourceSnapshotId);
    }

    /**
     * 云盘状态
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 云盘状态
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<List<VolumeTagArgs>> tags;

    public Optional<Output<List<VolumeTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 总性能。
     * 
     */
    @Import(name="totalPerformance")
    private @Nullable Output<VolumeTotalPerformanceArgs> totalPerformance;

    /**
     * @return 总性能。
     * 
     */
    public Optional<Output<VolumeTotalPerformanceArgs>> totalPerformance() {
        return Optional.ofNullable(this.totalPerformance);
    }

    /**
     * 交易状态 0：创建中 1：运行中 2：创建失败
     * 
     */
    @Import(name="tradeStatus")
    private @Nullable Output<Double> tradeStatus;

    /**
     * @return 交易状态 0：创建中 1：运行中 2：创建失败
     * 
     */
    public Optional<Output<Double>> tradeStatus() {
        return Optional.ofNullable(this.tradeStatus);
    }

    /**
     * 云盘更新时间。
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return 云盘更新时间。
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * 云盘id。
     * 
     */
    @Import(name="volumeId")
    private @Nullable Output<String> volumeId;

    /**
     * @return 云盘id。
     * 
     */
    public Optional<Output<String>> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    /**
     * 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
     * 
     */
    @Import(name="volumeName")
    private @Nullable Output<String> volumeName;

    /**
     * @return 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
     * 
     */
    public Optional<Output<String>> volumeName() {
        return Optional.ofNullable(this.volumeName);
    }

    /**
     * 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
     * 
     */
    @Import(name="volumeType")
    private @Nullable Output<String> volumeType;

    /**
     * @return 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
     * 
     */
    public Optional<Output<String>> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    /**
     * 可用区ID。
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return 可用区ID。
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private VolumeState() {}

    private VolumeState(VolumeState $) {
        this.autoSnapshotPolicyId = $.autoSnapshotPolicyId;
        this.autoSnapshotPolicyName = $.autoSnapshotPolicyName;
        this.baselinePerformance = $.baselinePerformance;
        this.createdAt = $.createdAt;
        this.deleteWithInstance = $.deleteWithInstance;
        this.description = $.description;
        this.deviceName = $.deviceName;
        this.errorDetail = $.errorDetail;
        this.expiredTime = $.expiredTime;
        this.extraPerformance = $.extraPerformance;
        this.imageId = $.imageId;
        this.instanceId = $.instanceId;
        this.kind = $.kind;
        this.overdueReclaimTime = $.overdueReclaimTime;
        this.overdueTime = $.overdueTime;
        this.payType = $.payType;
        this.projectName = $.projectName;
        this.renewType = $.renewType;
        this.size = $.size;
        this.snapshotCount = $.snapshotCount;
        this.sourceSnapshotId = $.sourceSnapshotId;
        this.status = $.status;
        this.tags = $.tags;
        this.totalPerformance = $.totalPerformance;
        this.tradeStatus = $.tradeStatus;
        this.updatedAt = $.updatedAt;
        this.volumeId = $.volumeId;
        this.volumeName = $.volumeName;
        this.volumeType = $.volumeType;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeState $;

        public Builder() {
            $ = new VolumeState();
        }

        public Builder(VolumeState defaults) {
            $ = new VolumeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoSnapshotPolicyId 自动快照策略ID。
         * 
         * @return builder
         * 
         */
        public Builder autoSnapshotPolicyId(@Nullable Output<String> autoSnapshotPolicyId) {
            $.autoSnapshotPolicyId = autoSnapshotPolicyId;
            return this;
        }

        /**
         * @param autoSnapshotPolicyId 自动快照策略ID。
         * 
         * @return builder
         * 
         */
        public Builder autoSnapshotPolicyId(String autoSnapshotPolicyId) {
            return autoSnapshotPolicyId(Output.of(autoSnapshotPolicyId));
        }

        /**
         * @param autoSnapshotPolicyName 自动快照策略名称。
         * 
         * @return builder
         * 
         */
        public Builder autoSnapshotPolicyName(@Nullable Output<String> autoSnapshotPolicyName) {
            $.autoSnapshotPolicyName = autoSnapshotPolicyName;
            return this;
        }

        /**
         * @param autoSnapshotPolicyName 自动快照策略名称。
         * 
         * @return builder
         * 
         */
        public Builder autoSnapshotPolicyName(String autoSnapshotPolicyName) {
            return autoSnapshotPolicyName(Output.of(autoSnapshotPolicyName));
        }

        /**
         * @param baselinePerformance 基本性能。
         * 
         * @return builder
         * 
         */
        public Builder baselinePerformance(@Nullable Output<VolumeBaselinePerformanceArgs> baselinePerformance) {
            $.baselinePerformance = baselinePerformance;
            return this;
        }

        /**
         * @param baselinePerformance 基本性能。
         * 
         * @return builder
         * 
         */
        public Builder baselinePerformance(VolumeBaselinePerformanceArgs baselinePerformance) {
            return baselinePerformance(Output.of(baselinePerformance));
        }

        /**
         * @param createdAt 云盘创建时间。
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt 云盘创建时间。
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param deleteWithInstance 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
         * 
         * @return builder
         * 
         */
        public Builder deleteWithInstance(@Nullable Output<Boolean> deleteWithInstance) {
            $.deleteWithInstance = deleteWithInstance;
            return this;
        }

        /**
         * @param deleteWithInstance 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
         * 
         * @return builder
         * 
         */
        public Builder deleteWithInstance(Boolean deleteWithInstance) {
            return deleteWithInstance(Output.of(deleteWithInstance));
        }

        /**
         * @param description 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param deviceName 设备名称
         * 
         * @return builder
         * 
         */
        public Builder deviceName(@Nullable Output<String> deviceName) {
            $.deviceName = deviceName;
            return this;
        }

        /**
         * @param deviceName 设备名称
         * 
         * @return builder
         * 
         */
        public Builder deviceName(String deviceName) {
            return deviceName(Output.of(deviceName));
        }

        /**
         * @param errorDetail 具体错误
         * 
         * @return builder
         * 
         */
        public Builder errorDetail(@Nullable Output<String> errorDetail) {
            $.errorDetail = errorDetail;
            return this;
        }

        /**
         * @param errorDetail 具体错误
         * 
         * @return builder
         * 
         */
        public Builder errorDetail(String errorDetail) {
            return errorDetail(Output.of(errorDetail));
        }

        /**
         * @param expiredTime 包年包月到期时间。
         * 
         * @return builder
         * 
         */
        public Builder expiredTime(@Nullable Output<String> expiredTime) {
            $.expiredTime = expiredTime;
            return this;
        }

        /**
         * @param expiredTime 包年包月到期时间。
         * 
         * @return builder
         * 
         */
        public Builder expiredTime(String expiredTime) {
            return expiredTime(Output.of(expiredTime));
        }

        /**
         * @param extraPerformance 额外性能。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformance(@Nullable Output<VolumeExtraPerformanceArgs> extraPerformance) {
            $.extraPerformance = extraPerformance;
            return this;
        }

        /**
         * @param extraPerformance 额外性能。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformance(VolumeExtraPerformanceArgs extraPerformance) {
            return extraPerformance(Output.of(extraPerformance));
        }

        /**
         * @param imageId 云盘中的镜像ID。
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId 云盘中的镜像ID。
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param instanceId 创建云盘的同时挂载的ECS实例ID。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId 创建云盘的同时挂载的ECS实例ID。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param kind 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param overdueReclaimTime 云盘欠费回收时间。
         * 
         * @return builder
         * 
         */
        public Builder overdueReclaimTime(@Nullable Output<String> overdueReclaimTime) {
            $.overdueReclaimTime = overdueReclaimTime;
            return this;
        }

        /**
         * @param overdueReclaimTime 云盘欠费回收时间。
         * 
         * @return builder
         * 
         */
        public Builder overdueReclaimTime(String overdueReclaimTime) {
            return overdueReclaimTime(Output.of(overdueReclaimTime));
        }

        /**
         * @param overdueTime 云盘欠费关停时间。
         * 
         * @return builder
         * 
         */
        public Builder overdueTime(@Nullable Output<String> overdueTime) {
            $.overdueTime = overdueTime;
            return this;
        }

        /**
         * @param overdueTime 云盘欠费关停时间。
         * 
         * @return builder
         * 
         */
        public Builder overdueTime(String overdueTime) {
            return overdueTime(Output.of(overdueTime));
        }

        /**
         * @param payType 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
         * 
         * @return builder
         * 
         */
        public Builder payType(@Nullable Output<String> payType) {
            $.payType = payType;
            return this;
        }

        /**
         * @param payType 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
         * 
         * @return builder
         * 
         */
        public Builder payType(String payType) {
            return payType(Output.of(payType));
        }

        /**
         * @param projectName 云盘所要加入的Project（项目）名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 云盘所要加入的Project（项目）名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param renewType 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
         * 
         * @return builder
         * 
         */
        public Builder renewType(@Nullable Output<Double> renewType) {
            $.renewType = renewType;
            return this;
        }

        /**
         * @param renewType 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
         * 
         * @return builder
         * 
         */
        public Builder renewType(Double renewType) {
            return renewType(Output.of(renewType));
        }

        /**
         * @param size Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Double> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
         * 
         * @return builder
         * 
         */
        public Builder size(Double size) {
            return size(Output.of(size));
        }

        /**
         * @param snapshotCount 快照计数
         * 
         * @return builder
         * 
         */
        public Builder snapshotCount(@Nullable Output<Double> snapshotCount) {
            $.snapshotCount = snapshotCount;
            return this;
        }

        /**
         * @param snapshotCount 快照计数
         * 
         * @return builder
         * 
         */
        public Builder snapshotCount(Double snapshotCount) {
            return snapshotCount(Output.of(snapshotCount));
        }

        /**
         * @param sourceSnapshotId 源快照。
         * 
         * @return builder
         * 
         */
        public Builder sourceSnapshotId(@Nullable Output<String> sourceSnapshotId) {
            $.sourceSnapshotId = sourceSnapshotId;
            return this;
        }

        /**
         * @param sourceSnapshotId 源快照。
         * 
         * @return builder
         * 
         */
        public Builder sourceSnapshotId(String sourceSnapshotId) {
            return sourceSnapshotId(Output.of(sourceSnapshotId));
        }

        /**
         * @param status 云盘状态
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 云盘状态
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<List<VolumeTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<VolumeTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(VolumeTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param totalPerformance 总性能。
         * 
         * @return builder
         * 
         */
        public Builder totalPerformance(@Nullable Output<VolumeTotalPerformanceArgs> totalPerformance) {
            $.totalPerformance = totalPerformance;
            return this;
        }

        /**
         * @param totalPerformance 总性能。
         * 
         * @return builder
         * 
         */
        public Builder totalPerformance(VolumeTotalPerformanceArgs totalPerformance) {
            return totalPerformance(Output.of(totalPerformance));
        }

        /**
         * @param tradeStatus 交易状态 0：创建中 1：运行中 2：创建失败
         * 
         * @return builder
         * 
         */
        public Builder tradeStatus(@Nullable Output<Double> tradeStatus) {
            $.tradeStatus = tradeStatus;
            return this;
        }

        /**
         * @param tradeStatus 交易状态 0：创建中 1：运行中 2：创建失败
         * 
         * @return builder
         * 
         */
        public Builder tradeStatus(Double tradeStatus) {
            return tradeStatus(Output.of(tradeStatus));
        }

        /**
         * @param updatedAt 云盘更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt 云盘更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param volumeId 云盘id。
         * 
         * @return builder
         * 
         */
        public Builder volumeId(@Nullable Output<String> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        /**
         * @param volumeId 云盘id。
         * 
         * @return builder
         * 
         */
        public Builder volumeId(String volumeId) {
            return volumeId(Output.of(volumeId));
        }

        /**
         * @param volumeName 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
         * 
         * @return builder
         * 
         */
        public Builder volumeName(@Nullable Output<String> volumeName) {
            $.volumeName = volumeName;
            return this;
        }

        /**
         * @param volumeName 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
         * 
         * @return builder
         * 
         */
        public Builder volumeName(String volumeName) {
            return volumeName(Output.of(volumeName));
        }

        /**
         * @param volumeType 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
         * 
         * @return builder
         * 
         */
        public Builder volumeType(@Nullable Output<String> volumeType) {
            $.volumeType = volumeType;
            return this;
        }

        /**
         * @param volumeType 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
         * 
         * @return builder
         * 
         */
        public Builder volumeType(String volumeType) {
            return volumeType(Output.of(volumeType));
        }

        /**
         * @param zoneId 可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId 可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public VolumeState build() {
            return $;
        }
    }

}
