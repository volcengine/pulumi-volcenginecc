// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserSecurityConfig {
    /**
     * @return 是否开启操作保护。0代表开启，1代表关闭。
     * 
     */
    private @Nullable Double safeAuthClose;
    /**
     * @return 操作保护的豁免时间，完成验证后在豁免时间内将不再进行验证。支持设置5至30，默认值为10。单位为分钟。
     * 
     */
    private @Nullable Double safeAuthExemptDuration;
    /**
     * @return 操作保护类型。phone代表手机验证，email代表邮箱验证，vmfa代表验证MFA设备验证。支持设置多种操作保护类型，以英文逗号分隔。
     * 
     */
    private @Nullable String safeAuthType;

    private UserSecurityConfig() {}
    /**
     * @return 是否开启操作保护。0代表开启，1代表关闭。
     * 
     */
    public Optional<Double> safeAuthClose() {
        return Optional.ofNullable(this.safeAuthClose);
    }
    /**
     * @return 操作保护的豁免时间，完成验证后在豁免时间内将不再进行验证。支持设置5至30，默认值为10。单位为分钟。
     * 
     */
    public Optional<Double> safeAuthExemptDuration() {
        return Optional.ofNullable(this.safeAuthExemptDuration);
    }
    /**
     * @return 操作保护类型。phone代表手机验证，email代表邮箱验证，vmfa代表验证MFA设备验证。支持设置多种操作保护类型，以英文逗号分隔。
     * 
     */
    public Optional<String> safeAuthType() {
        return Optional.ofNullable(this.safeAuthType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserSecurityConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double safeAuthClose;
        private @Nullable Double safeAuthExemptDuration;
        private @Nullable String safeAuthType;
        public Builder() {}
        public Builder(UserSecurityConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.safeAuthClose = defaults.safeAuthClose;
    	      this.safeAuthExemptDuration = defaults.safeAuthExemptDuration;
    	      this.safeAuthType = defaults.safeAuthType;
        }

        @CustomType.Setter
        public Builder safeAuthClose(@Nullable Double safeAuthClose) {

            this.safeAuthClose = safeAuthClose;
            return this;
        }
        @CustomType.Setter
        public Builder safeAuthExemptDuration(@Nullable Double safeAuthExemptDuration) {

            this.safeAuthExemptDuration = safeAuthExemptDuration;
            return this;
        }
        @CustomType.Setter
        public Builder safeAuthType(@Nullable String safeAuthType) {

            this.safeAuthType = safeAuthType;
            return this;
        }
        public UserSecurityConfig build() {
            final var _resultValue = new UserSecurityConfig();
            _resultValue.safeAuthClose = safeAuthClose;
            _resultValue.safeAuthExemptDuration = safeAuthExemptDuration;
            _resultValue.safeAuthType = safeAuthType;
            return _resultValue;
        }
    }
}
