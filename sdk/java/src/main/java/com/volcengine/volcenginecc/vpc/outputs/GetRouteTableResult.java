// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.vpc.outputs.GetRouteTableCustomRouteEntry;
import com.volcengine.volcenginecc.vpc.outputs.GetRouteTableSystemRouteEntry;
import com.volcengine.volcenginecc.vpc.outputs.GetRouteTableTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRouteTableResult {
    /**
     * @return 路由表所属账号的ID。
     * 
     */
    private String accountId;
    /**
     * @return 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
     * 
     */
    private String associateType;
    /**
     * @return 路由表创建时间。
     * 
     */
    private String createdTime;
    /**
     * @return 路由表关联的自定义路由条目列表。
     * 
     */
    private List<GetRouteTableCustomRouteEntry> customRouteEntries;
    /**
     * @return 路由表描述信息。
     * 
     */
    private String description;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 关联路由表的IPv4网关ID。
     * 
     */
    private String ipv4GatewayId;
    /**
     * @return 关联路由表的IPv6网关ID。
     * 
     */
    private String ipv6GatewayId;
    /**
     * @return 路由表所属项目的名称。
     * 
     */
    private String projectName;
    /**
     * @return 路由表ID。
     * 
     */
    private String routeTableId;
    /**
     * @return 路由表名称。
     * 
     */
    private String routeTableName;
    /**
     * @return 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
     * 
     */
    private String routeTableType;
    /**
     * @return 关联的子网的ID列表。
     * 
     */
    private List<String> subnetIds;
    /**
     * @return 路由表关联的系统默认路由条目列表。
     * 
     */
    private List<GetRouteTableSystemRouteEntry> systemRouteEntries;
    /**
     * @return 标签列表。
     * 
     */
    private List<GetRouteTableTag> tags;
    /**
     * @return 路由表更新时间。
     * 
     */
    private String updatedTime;
    /**
     * @return 路由表所属VPC的ID。
     * 
     */
    private String vpcId;
    /**
     * @return VPC的名称。
     * 
     */
    private String vpcName;

    private GetRouteTableResult() {}
    /**
     * @return 路由表所属账号的ID。
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
     * 
     */
    public String associateType() {
        return this.associateType;
    }
    /**
     * @return 路由表创建时间。
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return 路由表关联的自定义路由条目列表。
     * 
     */
    public List<GetRouteTableCustomRouteEntry> customRouteEntries() {
        return this.customRouteEntries;
    }
    /**
     * @return 路由表描述信息。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 关联路由表的IPv4网关ID。
     * 
     */
    public String ipv4GatewayId() {
        return this.ipv4GatewayId;
    }
    /**
     * @return 关联路由表的IPv6网关ID。
     * 
     */
    public String ipv6GatewayId() {
        return this.ipv6GatewayId;
    }
    /**
     * @return 路由表所属项目的名称。
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return 路由表ID。
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return 路由表名称。
     * 
     */
    public String routeTableName() {
        return this.routeTableName;
    }
    /**
     * @return 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
     * 
     */
    public String routeTableType() {
        return this.routeTableType;
    }
    /**
     * @return 关联的子网的ID列表。
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return 路由表关联的系统默认路由条目列表。
     * 
     */
    public List<GetRouteTableSystemRouteEntry> systemRouteEntries() {
        return this.systemRouteEntries;
    }
    /**
     * @return 标签列表。
     * 
     */
    public List<GetRouteTableTag> tags() {
        return this.tags;
    }
    /**
     * @return 路由表更新时间。
     * 
     */
    public String updatedTime() {
        return this.updatedTime;
    }
    /**
     * @return 路由表所属VPC的ID。
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return VPC的名称。
     * 
     */
    public String vpcName() {
        return this.vpcName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteTableResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String associateType;
        private String createdTime;
        private List<GetRouteTableCustomRouteEntry> customRouteEntries;
        private String description;
        private String id;
        private String ipv4GatewayId;
        private String ipv6GatewayId;
        private String projectName;
        private String routeTableId;
        private String routeTableName;
        private String routeTableType;
        private List<String> subnetIds;
        private List<GetRouteTableSystemRouteEntry> systemRouteEntries;
        private List<GetRouteTableTag> tags;
        private String updatedTime;
        private String vpcId;
        private String vpcName;
        public Builder() {}
        public Builder(GetRouteTableResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.associateType = defaults.associateType;
    	      this.createdTime = defaults.createdTime;
    	      this.customRouteEntries = defaults.customRouteEntries;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.ipv4GatewayId = defaults.ipv4GatewayId;
    	      this.ipv6GatewayId = defaults.ipv6GatewayId;
    	      this.projectName = defaults.projectName;
    	      this.routeTableId = defaults.routeTableId;
    	      this.routeTableName = defaults.routeTableName;
    	      this.routeTableType = defaults.routeTableType;
    	      this.subnetIds = defaults.subnetIds;
    	      this.systemRouteEntries = defaults.systemRouteEntries;
    	      this.tags = defaults.tags;
    	      this.updatedTime = defaults.updatedTime;
    	      this.vpcId = defaults.vpcId;
    	      this.vpcName = defaults.vpcName;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder associateType(String associateType) {
            if (associateType == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "associateType");
            }
            this.associateType = associateType;
            return this;
        }
        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder customRouteEntries(List<GetRouteTableCustomRouteEntry> customRouteEntries) {
            if (customRouteEntries == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "customRouteEntries");
            }
            this.customRouteEntries = customRouteEntries;
            return this;
        }
        public Builder customRouteEntries(GetRouteTableCustomRouteEntry... customRouteEntries) {
            return customRouteEntries(List.of(customRouteEntries));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4GatewayId(String ipv4GatewayId) {
            if (ipv4GatewayId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "ipv4GatewayId");
            }
            this.ipv4GatewayId = ipv4GatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6GatewayId(String ipv6GatewayId) {
            if (ipv6GatewayId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "ipv6GatewayId");
            }
            this.ipv6GatewayId = ipv6GatewayId;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(String routeTableId) {
            if (routeTableId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "routeTableId");
            }
            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableName(String routeTableName) {
            if (routeTableName == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "routeTableName");
            }
            this.routeTableName = routeTableName;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableType(String routeTableType) {
            if (routeTableType == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "routeTableType");
            }
            this.routeTableType = routeTableType;
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            if (subnetIds == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "subnetIds");
            }
            this.subnetIds = subnetIds;
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder systemRouteEntries(List<GetRouteTableSystemRouteEntry> systemRouteEntries) {
            if (systemRouteEntries == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "systemRouteEntries");
            }
            this.systemRouteEntries = systemRouteEntries;
            return this;
        }
        public Builder systemRouteEntries(GetRouteTableSystemRouteEntry... systemRouteEntries) {
            return systemRouteEntries(List.of(systemRouteEntries));
        }
        @CustomType.Setter
        public Builder tags(List<GetRouteTableTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetRouteTableTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedTime(String updatedTime) {
            if (updatedTime == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "updatedTime");
            }
            this.updatedTime = updatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder vpcName(String vpcName) {
            if (vpcName == null) {
              throw new MissingRequiredPropertyException("GetRouteTableResult", "vpcName");
            }
            this.vpcName = vpcName;
            return this;
        }
        public GetRouteTableResult build() {
            final var _resultValue = new GetRouteTableResult();
            _resultValue.accountId = accountId;
            _resultValue.associateType = associateType;
            _resultValue.createdTime = createdTime;
            _resultValue.customRouteEntries = customRouteEntries;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.ipv4GatewayId = ipv4GatewayId;
            _resultValue.ipv6GatewayId = ipv6GatewayId;
            _resultValue.projectName = projectName;
            _resultValue.routeTableId = routeTableId;
            _resultValue.routeTableName = routeTableName;
            _resultValue.routeTableType = routeTableType;
            _resultValue.subnetIds = subnetIds;
            _resultValue.systemRouteEntries = systemRouteEntries;
            _resultValue.tags = tags;
            _resultValue.updatedTime = updatedTime;
            _resultValue.vpcId = vpcId;
            _resultValue.vpcName = vpcName;
            return _resultValue;
        }
    }
}
