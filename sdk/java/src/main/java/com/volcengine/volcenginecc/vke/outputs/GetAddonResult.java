// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vke.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.vke.outputs.GetAddonStatus;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAddonResult {
    /**
     * @return 组件所在集群 ID。
     * 
     */
    private String clusterId;
    /**
     * @return 组件配置。
     * 
     */
    private String config;
    /**
     * @return 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     * 
     */
    private String createTime;
    /**
     * @return 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
     * 
     */
    private String deployMode;
    /**
     * @return 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
     * 
     */
    private String deployNodeType;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 组件名称。
     * 
     */
    private String name;
    /**
     * @return 组件状态。
     * 
     */
    private GetAddonStatus status;
    /**
     * @return 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     * 
     */
    private String updateTime;
    /**
     * @return 组件版本。
     * 
     */
    private String version;

    private GetAddonResult() {}
    /**
     * @return 组件所在集群 ID。
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return 组件配置。
     * 
     */
    public String config() {
        return this.config;
    }
    /**
     * @return 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
     * 
     */
    public String deployMode() {
        return this.deployMode;
    }
    /**
     * @return 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
     * 
     */
    public String deployNodeType() {
        return this.deployNodeType;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 组件名称。
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return 组件状态。
     * 
     */
    public GetAddonStatus status() {
        return this.status;
    }
    /**
     * @return 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return 组件版本。
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String config;
        private String createTime;
        private String deployMode;
        private String deployNodeType;
        private String id;
        private String name;
        private GetAddonStatus status;
        private String updateTime;
        private String version;
        public Builder() {}
        public Builder(GetAddonResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.config = defaults.config;
    	      this.createTime = defaults.createTime;
    	      this.deployMode = defaults.deployMode;
    	      this.deployNodeType = defaults.deployNodeType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.updateTime = defaults.updateTime;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder config(String config) {
            if (config == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "config");
            }
            this.config = config;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder deployMode(String deployMode) {
            if (deployMode == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "deployMode");
            }
            this.deployMode = deployMode;
            return this;
        }
        @CustomType.Setter
        public Builder deployNodeType(String deployNodeType) {
            if (deployNodeType == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "deployNodeType");
            }
            this.deployNodeType = deployNodeType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder status(GetAddonStatus status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetAddonResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetAddonResult build() {
            final var _resultValue = new GetAddonResult();
            _resultValue.clusterId = clusterId;
            _resultValue.config = config;
            _resultValue.createTime = createTime;
            _resultValue.deployMode = deployMode;
            _resultValue.deployNodeType = deployNodeType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.status = status;
            _resultValue.updateTime = updateTime;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
