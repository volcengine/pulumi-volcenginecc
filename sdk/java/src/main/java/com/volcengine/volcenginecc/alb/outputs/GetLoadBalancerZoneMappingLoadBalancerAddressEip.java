// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerZoneMappingLoadBalancerAddressEipPopLocation;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerZoneMappingLoadBalancerAddressEip {
    /**
     * @return EIP的绑定模式，例如Default或Normal。
     * 
     */
    private String associationMode;
    /**
     * @return EIP的带宽峰值，单位为Mbps。
     * 
     */
    private Integer bandwidth;
    /**
     * @return 弹性公网IP（EIP）的地址。
     * 
     */
    private String eipAddress;
    /**
     * @return EIP的计费方式，2为按带宽计费，3为按流量计费。
     * 
     */
    private Integer eipBillingType;
    /**
     * @return EIP的类型，例如静态BGP。
     * 
     */
    private String eipType;
    /**
     * @return 公网IP的线路类型，BGP表示多线。
     * 
     */
    private String isp;
    /**
     * @return EIP的接入点位置信息列表。
     * 
     */
    private List<GetLoadBalancerZoneMappingLoadBalancerAddressEipPopLocation> popLocations;

    private GetLoadBalancerZoneMappingLoadBalancerAddressEip() {}
    /**
     * @return EIP的绑定模式，例如Default或Normal。
     * 
     */
    public String associationMode() {
        return this.associationMode;
    }
    /**
     * @return EIP的带宽峰值，单位为Mbps。
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return 弹性公网IP（EIP）的地址。
     * 
     */
    public String eipAddress() {
        return this.eipAddress;
    }
    /**
     * @return EIP的计费方式，2为按带宽计费，3为按流量计费。
     * 
     */
    public Integer eipBillingType() {
        return this.eipBillingType;
    }
    /**
     * @return EIP的类型，例如静态BGP。
     * 
     */
    public String eipType() {
        return this.eipType;
    }
    /**
     * @return 公网IP的线路类型，BGP表示多线。
     * 
     */
    public String isp() {
        return this.isp;
    }
    /**
     * @return EIP的接入点位置信息列表。
     * 
     */
    public List<GetLoadBalancerZoneMappingLoadBalancerAddressEipPopLocation> popLocations() {
        return this.popLocations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerZoneMappingLoadBalancerAddressEip defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String associationMode;
        private Integer bandwidth;
        private String eipAddress;
        private Integer eipBillingType;
        private String eipType;
        private String isp;
        private List<GetLoadBalancerZoneMappingLoadBalancerAddressEipPopLocation> popLocations;
        public Builder() {}
        public Builder(GetLoadBalancerZoneMappingLoadBalancerAddressEip defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associationMode = defaults.associationMode;
    	      this.bandwidth = defaults.bandwidth;
    	      this.eipAddress = defaults.eipAddress;
    	      this.eipBillingType = defaults.eipBillingType;
    	      this.eipType = defaults.eipType;
    	      this.isp = defaults.isp;
    	      this.popLocations = defaults.popLocations;
        }

        @CustomType.Setter
        public Builder associationMode(String associationMode) {
            if (associationMode == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "associationMode");
            }
            this.associationMode = associationMode;
            return this;
        }
        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            if (bandwidth == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "bandwidth");
            }
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder eipAddress(String eipAddress) {
            if (eipAddress == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "eipAddress");
            }
            this.eipAddress = eipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder eipBillingType(Integer eipBillingType) {
            if (eipBillingType == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "eipBillingType");
            }
            this.eipBillingType = eipBillingType;
            return this;
        }
        @CustomType.Setter
        public Builder eipType(String eipType) {
            if (eipType == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "eipType");
            }
            this.eipType = eipType;
            return this;
        }
        @CustomType.Setter
        public Builder isp(String isp) {
            if (isp == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "isp");
            }
            this.isp = isp;
            return this;
        }
        @CustomType.Setter
        public Builder popLocations(List<GetLoadBalancerZoneMappingLoadBalancerAddressEipPopLocation> popLocations) {
            if (popLocations == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMappingLoadBalancerAddressEip", "popLocations");
            }
            this.popLocations = popLocations;
            return this;
        }
        public Builder popLocations(GetLoadBalancerZoneMappingLoadBalancerAddressEipPopLocation... popLocations) {
            return popLocations(List.of(popLocations));
        }
        public GetLoadBalancerZoneMappingLoadBalancerAddressEip build() {
            final var _resultValue = new GetLoadBalancerZoneMappingLoadBalancerAddressEip();
            _resultValue.associationMode = associationMode;
            _resultValue.bandwidth = bandwidth;
            _resultValue.eipAddress = eipAddress;
            _resultValue.eipBillingType = eipBillingType;
            _resultValue.eipType = eipType;
            _resultValue.isp = isp;
            _resultValue.popLocations = popLocations;
            return _resultValue;
        }
    }
}
