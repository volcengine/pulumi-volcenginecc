// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.clb.NlbListenerArgs;
import com.volcengine.volcenginecc.clb.inputs.NlbListenerState;
import com.volcengine.volcenginecc.clb.outputs.NlbListenerHealth;
import com.volcengine.volcenginecc.clb.outputs.NlbListenerTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 监听器负责根据指定的协议和端口，监听NLB实例接收到的用户访问请求。NLB将按照该监听器关联的服务器组配置的调度算法，将访问请求转发至该服务器组内健康的后端服务器。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.clb.NlbListener;
 * import com.volcengine.volcenginecc.clb.NlbListenerArgs;
 * import com.pulumi.volcenginecc.clb.inputs.NlbListenerTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var cLBNLBListenerDemo = new NlbListener("cLBNLBListenerDemo", NlbListenerArgs.builder()
 *             .loadBalancerId("nlb-11zz9w3jqptz449iegfwvxxxx")
 *             .protocol("TCP")
 *             .port(0)
 *             .serverGroupId("rsp-11zz9wdewa3uo49ieggq8xxxx")
 *             .connectionTimeout(60)
 *             .description("CLBNLBListenerDemo description")
 *             .enabled(true)
 *             .listenerName("CLBNLBListenerDemo")
 *             .tags(NlbListenerTagArgs.builder()
 *                 .key("env")
 *                 .value("Test")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:clb/nlbListener:NlbListener example &#34;listener_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:clb/nlbListener:NlbListener")
public class NlbListener extends com.pulumi.resources.CustomResource {
    /**
     * TLS监听器服务器证书的ID，仅支持传入火山引擎证书中心 SSL 证书。。
     * 
     */
    @Export(name="certificateId", refs={String.class}, tree="[0]")
    private Output<String> certificateId;

    /**
     * @return TLS监听器服务器证书的ID，仅支持传入火山引擎证书中心 SSL 证书。。
     * 
     */
    public Output<String> certificateId() {
        return this.certificateId;
    }
    /**
     * 监听器的连接超时时间（秒）。
     * 
     */
    @Export(name="connectionTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> connectionTimeout;

    /**
     * @return 监听器的连接超时时间（秒）。
     * 
     */
    public Output<Integer> connectionTimeout() {
        return this.connectionTimeout;
    }
    /**
     * 监听器的创建时间。
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 监听器的创建时间。
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 监听器描述信息。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 监听器描述信息。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 是否启用监听器。true：开启；false：关闭。
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enabled;

    /**
     * @return 是否启用监听器。true：开启；false：关闭。
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }
    /**
     * 全端口监听的结束端口，仅当Port为0时有效。
     * 
     */
    @Export(name="endPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> endPort;

    /**
     * @return 全端口监听的结束端口，仅当Port为0时有效。
     * 
     */
    public Output<Integer> endPort() {
        return this.endPort;
    }
    @Export(name="healths", refs={List.class,NlbListenerHealth.class}, tree="[0,1]")
    private Output<List<NlbListenerHealth>> healths;

    public Output<List<NlbListenerHealth>> healths() {
        return this.healths;
    }
    /**
     * 监听器唯一标识。
     * 
     */
    @Export(name="listenerId", refs={String.class}, tree="[0]")
    private Output<String> listenerId;

    /**
     * @return 监听器唯一标识。
     * 
     */
    public Output<String> listenerId() {
        return this.listenerId;
    }
    /**
     * 监听器名称。
     * 
     */
    @Export(name="listenerName", refs={String.class}, tree="[0]")
    private Output<String> listenerName;

    /**
     * @return 监听器名称。
     * 
     */
    public Output<String> listenerName() {
        return this.listenerName;
    }
    /**
     * 负载均衡实例ID。
     * 
     */
    @Export(name="loadBalancerId", refs={String.class}, tree="[0]")
    private Output<String> loadBalancerId;

    /**
     * @return 负载均衡实例ID。
     * 
     */
    public Output<String> loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * 监听器接收请求的端口，0表示启用全端口监听。
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return 监听器接收请求的端口，0表示启用全端口监听。
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * 监听协议类型。
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return 监听协议类型。
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * TLS 安全策略ID，支持系统安全策略和自定义安全策略。系统安全策略取值：.tls*cipher*policy*1*0.tls*cipher*policy*1*1.tls*cipher*policy*1*2.tls*cipher*policy*1*2*strict.tls*cipher*policy*1*2*strict*with*1_3.自定义安全策略：输入自定义安全策略 ID。当Protocol为TLS 时，该参数为必填。。
     * 
     */
    @Export(name="securityPolicyId", refs={String.class}, tree="[0]")
    private Output<String> securityPolicyId;

    /**
     * @return TLS 安全策略ID，支持系统安全策略和自定义安全策略。系统安全策略取值：.tls*cipher*policy*1*0.tls*cipher*policy*1*1.tls*cipher*policy*1*2.tls*cipher*policy*1*2*strict.tls*cipher*policy*1*2*strict*with*1_3.自定义安全策略：输入自定义安全策略 ID。当Protocol为TLS 时，该参数为必填。。
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * 监听器关联的服务器组ID。
     * 
     */
    @Export(name="serverGroupId", refs={String.class}, tree="[0]")
    private Output<String> serverGroupId;

    /**
     * @return 监听器关联的服务器组ID。
     * 
     */
    public Output<String> serverGroupId() {
        return this.serverGroupId;
    }
    /**
     * 全端口监听的起始端口，仅当Port为0时有效。
     * 
     */
    @Export(name="startPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> startPort;

    /**
     * @return 全端口监听的起始端口，仅当Port为0时有效。
     * 
     */
    public Output<Integer> startPort() {
        return this.startPort;
    }
    /**
     * 监听器的状态。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 监听器的状态。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={List.class,NlbListenerTag.class}, tree="[0,1]")
    private Output<List<NlbListenerTag>> tags;

    public Output<List<NlbListenerTag>> tags() {
        return this.tags;
    }
    /**
     * 监听器最近操作时间。
     * 
     */
    @Export(name="updatedTime", refs={String.class}, tree="[0]")
    private Output<String> updatedTime;

    /**
     * @return 监听器最近操作时间。
     * 
     */
    public Output<String> updatedTime() {
        return this.updatedTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NlbListener(java.lang.String name) {
        this(name, NlbListenerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NlbListener(java.lang.String name, NlbListenerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NlbListener(java.lang.String name, NlbListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:clb/nlbListener:NlbListener", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NlbListener(java.lang.String name, Output<java.lang.String> id, @Nullable NlbListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:clb/nlbListener:NlbListener", name, state, makeResourceOptions(options, id), false);
    }

    private static NlbListenerArgs makeArgs(NlbListenerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NlbListenerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NlbListener get(java.lang.String name, Output<java.lang.String> id, @Nullable NlbListenerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NlbListener(name, id, state, options);
    }
}
