// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkAclIngressAclEntry {
    /**
     * @return 入向规则时为源地址的网段。出向规则时为目标地址的网段。支持CIDR格式和IPv4格式的IP地址范围。默认值：无。
     * 
     */
    private @Nullable String cidrIp;
    /**
     * @return 规则的描述信息。
     * 
     */
    private @Nullable String description;
    /**
     * @return 规则的名称。
     * 
     */
    private @Nullable String networkAclEntryName;
    /**
     * @return 授权策略。accept：允许访问。drop：拒绝访问，不返回拒绝访问的信息，仅表现出发起端请求超时或类似无法建立连接的信息。
     * 
     */
    private @Nullable String policy;
    /**
     * @return 规则的目的端口范围。当方向规则的Protocol为all、icmp或gre时，端口范围为-1/-1，表示不限制端口。当方向规则的Protocol为tcp或udp时，端口范围为1~65535，格式为1/200、80/80，表示端口1到端口200、端口80。
     * 
     */
    private @Nullable String port;
    /**
     * @return 协议类型。tcp：TCP协议。udp：UDP协议。icmp：ICMP协议。icmpv6：ICMPV6协议。gre：GRE协议。all：支持所有协议。
     * 
     */
    private @Nullable String protocol;

    private NetworkAclIngressAclEntry() {}
    /**
     * @return 入向规则时为源地址的网段。出向规则时为目标地址的网段。支持CIDR格式和IPv4格式的IP地址范围。默认值：无。
     * 
     */
    public Optional<String> cidrIp() {
        return Optional.ofNullable(this.cidrIp);
    }
    /**
     * @return 规则的描述信息。
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return 规则的名称。
     * 
     */
    public Optional<String> networkAclEntryName() {
        return Optional.ofNullable(this.networkAclEntryName);
    }
    /**
     * @return 授权策略。accept：允许访问。drop：拒绝访问，不返回拒绝访问的信息，仅表现出发起端请求超时或类似无法建立连接的信息。
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return 规则的目的端口范围。当方向规则的Protocol为all、icmp或gre时，端口范围为-1/-1，表示不限制端口。当方向规则的Protocol为tcp或udp时，端口范围为1~65535，格式为1/200、80/80，表示端口1到端口200、端口80。
     * 
     */
    public Optional<String> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return 协议类型。tcp：TCP协议。udp：UDP协议。icmp：ICMP协议。icmpv6：ICMPV6协议。gre：GRE协议。all：支持所有协议。
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkAclIngressAclEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cidrIp;
        private @Nullable String description;
        private @Nullable String networkAclEntryName;
        private @Nullable String policy;
        private @Nullable String port;
        private @Nullable String protocol;
        public Builder() {}
        public Builder(NetworkAclIngressAclEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrIp = defaults.cidrIp;
    	      this.description = defaults.description;
    	      this.networkAclEntryName = defaults.networkAclEntryName;
    	      this.policy = defaults.policy;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder cidrIp(@Nullable String cidrIp) {

            this.cidrIp = cidrIp;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder networkAclEntryName(@Nullable String networkAclEntryName) {

            this.networkAclEntryName = networkAclEntryName;
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {

            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable String port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        public NetworkAclIngressAclEntry build() {
            final var _resultValue = new NetworkAclIngressAclEntry();
            _resultValue.cidrIp = cidrIp;
            _resultValue.description = description;
            _resultValue.networkAclEntryName = networkAclEntryName;
            _resultValue.policy = policy;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
