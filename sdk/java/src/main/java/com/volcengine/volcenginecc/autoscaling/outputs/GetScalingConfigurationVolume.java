// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetScalingConfigurationVolume {
    /**
     * @return 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
     * 
     */
    private Boolean deleteWithInstance;
    /**
     * @return 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&amp;分隔。
     * 
     */
    private Integer size;
    /**
     * @return 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&amp;分隔。
     * 
     */
    private String volumeType;

    private GetScalingConfigurationVolume() {}
    /**
     * @return 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
     * 
     */
    public Boolean deleteWithInstance() {
        return this.deleteWithInstance;
    }
    /**
     * @return 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&amp;分隔。
     * 
     */
    public Integer size() {
        return this.size;
    }
    /**
     * @return 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&amp;分隔。
     * 
     */
    public String volumeType() {
        return this.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScalingConfigurationVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean deleteWithInstance;
        private Integer size;
        private String volumeType;
        public Builder() {}
        public Builder(GetScalingConfigurationVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteWithInstance = defaults.deleteWithInstance;
    	      this.size = defaults.size;
    	      this.volumeType = defaults.volumeType;
        }

        @CustomType.Setter
        public Builder deleteWithInstance(Boolean deleteWithInstance) {
            if (deleteWithInstance == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationVolume", "deleteWithInstance");
            }
            this.deleteWithInstance = deleteWithInstance;
            return this;
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationVolume", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder volumeType(String volumeType) {
            if (volumeType == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationVolume", "volumeType");
            }
            this.volumeType = volumeType;
            return this;
        }
        public GetScalingConfigurationVolume build() {
            final var _resultValue = new GetScalingConfigurationVolume();
            _resultValue.deleteWithInstance = deleteWithInstance;
            _resultValue.size = size;
            _resultValue.volumeType = volumeType;
            return _resultValue;
        }
    }
}
