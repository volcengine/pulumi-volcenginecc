// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vmp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.vmp.outputs.GetWorkspaceInstanceType;
import com.volcengine.volcenginecc.vmp.outputs.GetWorkspaceQuota;
import com.volcengine.volcenginecc.vmp.outputs.GetWorkspaceTag;
import com.volcengine.volcenginecc.vmp.outputs.GetWorkspaceUsage;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWorkspaceResult {
    /**
     * @return 工作区创建时间，RFC3339 格式。
     * 
     */
    private String createTime;
    /**
     * @return 是否开启工作区删除保护,true：开启，false：关闭。
     * 
     */
    private Boolean deleteProtectionEnabled;
    /**
     * @return 工作区描述信息，字符串形式，长度限制为 0～200。
     * 
     */
    private String description;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 工作区规格详情。
     * 
     */
    private GetWorkspaceInstanceType instanceType;
    /**
     * @return 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
     * 
     */
    private String instanceTypeId;
    /**
     * @return 工作区名称，字符串形式，长度限制为 1～100。
     * 
     */
    private String name;
    /**
     * @return 工作区预期欠费回收时间，RFC3339 格式。
     * 
     */
    private String overdueReclaimTime;
    /**
     * @return 工作区 BasicAuth 密码。
     * 
     */
    private String password;
    /**
     * @return 项目名称。
     * 
     */
    private String projectName;
    /**
     * @return 工作区 Push Gateway URL 地址。
     * 
     */
    private String prometheusPushIntranetEndpoint;
    /**
     * @return 工作区 Query URL 地址。
     * 
     */
    private String prometheusQueryIntranetEndpoint;
    /**
     * @return 工作区 RemoteWrite URL 地址。
     * 
     */
    private String prometheusWriteIntranetEndpoint;
    /**
     * @return 工作区配额详情。
     * 
     */
    private GetWorkspaceQuota quota;
    /**
     * @return 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
     * 
     */
    private String status;
    /**
     * @return 工作区标签。
     * 
     */
    private List<GetWorkspaceTag> tags;
    /**
     * @return 工作区用量。
     * 
     */
    private GetWorkspaceUsage usage;
    /**
     * @return 工作区 BasicAuth 用户名。
     * 
     */
    private String username;
    /**
     * @return 工作区Id。
     * 
     */
    private String workspaceId;

    private GetWorkspaceResult() {}
    /**
     * @return 工作区创建时间，RFC3339 格式。
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return 是否开启工作区删除保护,true：开启，false：关闭。
     * 
     */
    public Boolean deleteProtectionEnabled() {
        return this.deleteProtectionEnabled;
    }
    /**
     * @return 工作区描述信息，字符串形式，长度限制为 0～200。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 工作区规格详情。
     * 
     */
    public GetWorkspaceInstanceType instanceType() {
        return this.instanceType;
    }
    /**
     * @return 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
     * 
     */
    public String instanceTypeId() {
        return this.instanceTypeId;
    }
    /**
     * @return 工作区名称，字符串形式，长度限制为 1～100。
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return 工作区预期欠费回收时间，RFC3339 格式。
     * 
     */
    public String overdueReclaimTime() {
        return this.overdueReclaimTime;
    }
    /**
     * @return 工作区 BasicAuth 密码。
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return 项目名称。
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return 工作区 Push Gateway URL 地址。
     * 
     */
    public String prometheusPushIntranetEndpoint() {
        return this.prometheusPushIntranetEndpoint;
    }
    /**
     * @return 工作区 Query URL 地址。
     * 
     */
    public String prometheusQueryIntranetEndpoint() {
        return this.prometheusQueryIntranetEndpoint;
    }
    /**
     * @return 工作区 RemoteWrite URL 地址。
     * 
     */
    public String prometheusWriteIntranetEndpoint() {
        return this.prometheusWriteIntranetEndpoint;
    }
    /**
     * @return 工作区配额详情。
     * 
     */
    public GetWorkspaceQuota quota() {
        return this.quota;
    }
    /**
     * @return 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 工作区标签。
     * 
     */
    public List<GetWorkspaceTag> tags() {
        return this.tags;
    }
    /**
     * @return 工作区用量。
     * 
     */
    public GetWorkspaceUsage usage() {
        return this.usage;
    }
    /**
     * @return 工作区 BasicAuth 用户名。
     * 
     */
    public String username() {
        return this.username;
    }
    /**
     * @return 工作区Id。
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createTime;
        private Boolean deleteProtectionEnabled;
        private String description;
        private String id;
        private GetWorkspaceInstanceType instanceType;
        private String instanceTypeId;
        private String name;
        private String overdueReclaimTime;
        private String password;
        private String projectName;
        private String prometheusPushIntranetEndpoint;
        private String prometheusQueryIntranetEndpoint;
        private String prometheusWriteIntranetEndpoint;
        private GetWorkspaceQuota quota;
        private String status;
        private List<GetWorkspaceTag> tags;
        private GetWorkspaceUsage usage;
        private String username;
        private String workspaceId;
        public Builder() {}
        public Builder(GetWorkspaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.deleteProtectionEnabled = defaults.deleteProtectionEnabled;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.instanceType = defaults.instanceType;
    	      this.instanceTypeId = defaults.instanceTypeId;
    	      this.name = defaults.name;
    	      this.overdueReclaimTime = defaults.overdueReclaimTime;
    	      this.password = defaults.password;
    	      this.projectName = defaults.projectName;
    	      this.prometheusPushIntranetEndpoint = defaults.prometheusPushIntranetEndpoint;
    	      this.prometheusQueryIntranetEndpoint = defaults.prometheusQueryIntranetEndpoint;
    	      this.prometheusWriteIntranetEndpoint = defaults.prometheusWriteIntranetEndpoint;
    	      this.quota = defaults.quota;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.usage = defaults.usage;
    	      this.username = defaults.username;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder deleteProtectionEnabled(Boolean deleteProtectionEnabled) {
            if (deleteProtectionEnabled == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "deleteProtectionEnabled");
            }
            this.deleteProtectionEnabled = deleteProtectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(GetWorkspaceInstanceType instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTypeId(String instanceTypeId) {
            if (instanceTypeId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "instanceTypeId");
            }
            this.instanceTypeId = instanceTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder overdueReclaimTime(String overdueReclaimTime) {
            if (overdueReclaimTime == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "overdueReclaimTime");
            }
            this.overdueReclaimTime = overdueReclaimTime;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder prometheusPushIntranetEndpoint(String prometheusPushIntranetEndpoint) {
            if (prometheusPushIntranetEndpoint == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "prometheusPushIntranetEndpoint");
            }
            this.prometheusPushIntranetEndpoint = prometheusPushIntranetEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder prometheusQueryIntranetEndpoint(String prometheusQueryIntranetEndpoint) {
            if (prometheusQueryIntranetEndpoint == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "prometheusQueryIntranetEndpoint");
            }
            this.prometheusQueryIntranetEndpoint = prometheusQueryIntranetEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder prometheusWriteIntranetEndpoint(String prometheusWriteIntranetEndpoint) {
            if (prometheusWriteIntranetEndpoint == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "prometheusWriteIntranetEndpoint");
            }
            this.prometheusWriteIntranetEndpoint = prometheusWriteIntranetEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder quota(GetWorkspaceQuota quota) {
            if (quota == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "quota");
            }
            this.quota = quota;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetWorkspaceTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetWorkspaceTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder usage(GetWorkspaceUsage usage) {
            if (usage == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "usage");
            }
            this.usage = usage;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "username");
            }
            this.username = username;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceResult", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public GetWorkspaceResult build() {
            final var _resultValue = new GetWorkspaceResult();
            _resultValue.createTime = createTime;
            _resultValue.deleteProtectionEnabled = deleteProtectionEnabled;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.instanceType = instanceType;
            _resultValue.instanceTypeId = instanceTypeId;
            _resultValue.name = name;
            _resultValue.overdueReclaimTime = overdueReclaimTime;
            _resultValue.password = password;
            _resultValue.projectName = projectName;
            _resultValue.prometheusPushIntranetEndpoint = prometheusPushIntranetEndpoint;
            _resultValue.prometheusQueryIntranetEndpoint = prometheusQueryIntranetEndpoint;
            _resultValue.prometheusWriteIntranetEndpoint = prometheusWriteIntranetEndpoint;
            _resultValue.quota = quota;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.usage = usage;
            _resultValue.username = username;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
