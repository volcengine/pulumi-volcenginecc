// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerZoneMappingLoadBalancerAddress;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerZoneMapping {
    /**
     * @return 该可用区下负载均衡提供的IP地址列表。
     * 
     */
    private List<GetLoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses;
    /**
     * @return 可用区内提供服务的子网ID。
     * 
     */
    private String subnetId;
    /**
     * @return 可用区的唯一标识符。
     * 
     */
    private String zoneId;

    private GetLoadBalancerZoneMapping() {}
    /**
     * @return 该可用区下负载均衡提供的IP地址列表。
     * 
     */
    public List<GetLoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses() {
        return this.loadBalancerAddresses;
    }
    /**
     * @return 可用区内提供服务的子网ID。
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return 可用区的唯一标识符。
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerZoneMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetLoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses;
        private String subnetId;
        private String zoneId;
        public Builder() {}
        public Builder(GetLoadBalancerZoneMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.loadBalancerAddresses = defaults.loadBalancerAddresses;
    	      this.subnetId = defaults.subnetId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder loadBalancerAddresses(List<GetLoadBalancerZoneMappingLoadBalancerAddress> loadBalancerAddresses) {
            if (loadBalancerAddresses == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMapping", "loadBalancerAddresses");
            }
            this.loadBalancerAddresses = loadBalancerAddresses;
            return this;
        }
        public Builder loadBalancerAddresses(GetLoadBalancerZoneMappingLoadBalancerAddress... loadBalancerAddresses) {
            return loadBalancerAddresses(List.of(loadBalancerAddresses));
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMapping", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerZoneMapping", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetLoadBalancerZoneMapping build() {
            final var _resultValue = new GetLoadBalancerZoneMapping();
            _resultValue.loadBalancerAddresses = loadBalancerAddresses;
            _resultValue.subnetId = subnetId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
