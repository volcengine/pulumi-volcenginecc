// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.tos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLifecycleConfigAbortInCompleteMultipartUploadArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleConfigAbortInCompleteMultipartUploadArgs Empty = new BucketLifecycleConfigAbortInCompleteMultipartUploadArgs();

    /**
     * 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
     * 
     */
    @Import(name="daysAfterInitiation")
    private @Nullable Output<Integer> daysAfterInitiation;

    /**
     * @return 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
     * 
     */
    public Optional<Output<Integer>> daysAfterInitiation() {
        return Optional.ofNullable(this.daysAfterInitiation);
    }

    private BucketLifecycleConfigAbortInCompleteMultipartUploadArgs() {}

    private BucketLifecycleConfigAbortInCompleteMultipartUploadArgs(BucketLifecycleConfigAbortInCompleteMultipartUploadArgs $) {
        this.daysAfterInitiation = $.daysAfterInitiation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleConfigAbortInCompleteMultipartUploadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleConfigAbortInCompleteMultipartUploadArgs $;

        public Builder() {
            $ = new BucketLifecycleConfigAbortInCompleteMultipartUploadArgs();
        }

        public Builder(BucketLifecycleConfigAbortInCompleteMultipartUploadArgs defaults) {
            $ = new BucketLifecycleConfigAbortInCompleteMultipartUploadArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param daysAfterInitiation 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
         * 
         * @return builder
         * 
         */
        public Builder daysAfterInitiation(@Nullable Output<Integer> daysAfterInitiation) {
            $.daysAfterInitiation = daysAfterInitiation;
            return this;
        }

        /**
         * @param daysAfterInitiation 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
         * 
         * @return builder
         * 
         */
        public Builder daysAfterInitiation(Integer daysAfterInitiation) {
            return daysAfterInitiation(Output.of(daysAfterInitiation));
        }

        public BucketLifecycleConfigAbortInCompleteMultipartUploadArgs build() {
            return $;
        }
    }

}
