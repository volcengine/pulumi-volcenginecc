// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerGlobalAcceleratorArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerGlobalAcceleratorArgs Empty = new LoadBalancerGlobalAcceleratorArgs();

    /**
     * 绑定的全球加速实例的ID。
     * 
     */
    @Import(name="acceleratorId")
    private @Nullable Output<String> acceleratorId;

    /**
     * @return 绑定的全球加速实例的ID。
     * 
     */
    public Optional<Output<String>> acceleratorId() {
        return Optional.ofNullable(this.acceleratorId);
    }

    /**
     * 绑定的全球加速监听器的ID。
     * 
     */
    @Import(name="acceleratorListenerId")
    private @Nullable Output<String> acceleratorListenerId;

    /**
     * @return 绑定的全球加速监听器的ID。
     * 
     */
    public Optional<Output<String>> acceleratorListenerId() {
        return Optional.ofNullable(this.acceleratorListenerId);
    }

    /**
     * 绑定的终端节点组的ID。
     * 
     */
    @Import(name="endpointGroupId")
    private @Nullable Output<String> endpointGroupId;

    /**
     * @return 绑定的终端节点组的ID。
     * 
     */
    public Optional<Output<String>> endpointGroupId() {
        return Optional.ofNullable(this.endpointGroupId);
    }

    /**
     * 后端服务器的权重，决定流量分发比例。
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return 后端服务器的权重，决定流量分发比例。
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private LoadBalancerGlobalAcceleratorArgs() {}

    private LoadBalancerGlobalAcceleratorArgs(LoadBalancerGlobalAcceleratorArgs $) {
        this.acceleratorId = $.acceleratorId;
        this.acceleratorListenerId = $.acceleratorListenerId;
        this.endpointGroupId = $.endpointGroupId;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerGlobalAcceleratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerGlobalAcceleratorArgs $;

        public Builder() {
            $ = new LoadBalancerGlobalAcceleratorArgs();
        }

        public Builder(LoadBalancerGlobalAcceleratorArgs defaults) {
            $ = new LoadBalancerGlobalAcceleratorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratorId 绑定的全球加速实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(@Nullable Output<String> acceleratorId) {
            $.acceleratorId = acceleratorId;
            return this;
        }

        /**
         * @param acceleratorId 绑定的全球加速实例的ID。
         * 
         * @return builder
         * 
         */
        public Builder acceleratorId(String acceleratorId) {
            return acceleratorId(Output.of(acceleratorId));
        }

        /**
         * @param acceleratorListenerId 绑定的全球加速监听器的ID。
         * 
         * @return builder
         * 
         */
        public Builder acceleratorListenerId(@Nullable Output<String> acceleratorListenerId) {
            $.acceleratorListenerId = acceleratorListenerId;
            return this;
        }

        /**
         * @param acceleratorListenerId 绑定的全球加速监听器的ID。
         * 
         * @return builder
         * 
         */
        public Builder acceleratorListenerId(String acceleratorListenerId) {
            return acceleratorListenerId(Output.of(acceleratorListenerId));
        }

        /**
         * @param endpointGroupId 绑定的终端节点组的ID。
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupId(@Nullable Output<String> endpointGroupId) {
            $.endpointGroupId = endpointGroupId;
            return this;
        }

        /**
         * @param endpointGroupId 绑定的终端节点组的ID。
         * 
         * @return builder
         * 
         */
        public Builder endpointGroupId(String endpointGroupId) {
            return endpointGroupId(Output.of(endpointGroupId));
        }

        /**
         * @param weight 后端服务器的权重，决定流量分发比例。
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight 后端服务器的权重，决定流量分发比例。
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public LoadBalancerGlobalAcceleratorArgs build() {
            return $;
        }
    }

}
