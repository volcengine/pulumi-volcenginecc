// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccesskeyState extends com.pulumi.resources.ResourceArgs {

    public static final AccesskeyState Empty = new AccesskeyState();

    /**
     * 密钥ID（Access Key Id）。
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return 密钥ID（Access Key Id）。
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * 密钥创建时间
     * 
     */
    @Import(name="createDate")
    private @Nullable Output<String> createDate;

    /**
     * @return 密钥创建时间
     * 
     */
    public Optional<Output<String>> createDate() {
        return Optional.ofNullable(this.createDate);
    }

    /**
     * API密钥最后访问的地域。
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return API密钥最后访问的地域。
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * API密钥的最后使用的时间。
     * 
     */
    @Import(name="requestTime")
    private @Nullable Output<String> requestTime;

    /**
     * @return API密钥的最后使用的时间。
     * 
     */
    public Optional<Output<String>> requestTime() {
        return Optional.ofNullable(this.requestTime);
    }

    /**
     * 私有密钥（Secret Access Key）。
     * 
     */
    @Import(name="secretAccessKey")
    private @Nullable Output<String> secretAccessKey;

    /**
     * @return 私有密钥（Secret Access Key）。
     * 
     */
    public Optional<Output<String>> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }

    /**
     * API密钥最后访问的服务的英文简称。
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return API密钥最后访问的服务的英文简称。
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    /**
     * 密钥状态 (active/inactive)
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 密钥状态 (active/inactive)
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * 密钥更新时间
     * 
     */
    @Import(name="updateDate")
    private @Nullable Output<String> updateDate;

    /**
     * @return 密钥更新时间
     * 
     */
    public Optional<Output<String>> updateDate() {
        return Optional.ofNullable(this.updateDate);
    }

    /**
     * 用户名
     * 
     */
    @Import(name="userName")
    private @Nullable Output<String> userName;

    /**
     * @return 用户名
     * 
     */
    public Optional<Output<String>> userName() {
        return Optional.ofNullable(this.userName);
    }

    private AccesskeyState() {}

    private AccesskeyState(AccesskeyState $) {
        this.accessKeyId = $.accessKeyId;
        this.createDate = $.createDate;
        this.region = $.region;
        this.requestTime = $.requestTime;
        this.secretAccessKey = $.secretAccessKey;
        this.service = $.service;
        this.status = $.status;
        this.updateDate = $.updateDate;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccesskeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccesskeyState $;

        public Builder() {
            $ = new AccesskeyState();
        }

        public Builder(AccesskeyState defaults) {
            $ = new AccesskeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId 密钥ID（Access Key Id）。
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId 密钥ID（Access Key Id）。
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param createDate 密钥创建时间
         * 
         * @return builder
         * 
         */
        public Builder createDate(@Nullable Output<String> createDate) {
            $.createDate = createDate;
            return this;
        }

        /**
         * @param createDate 密钥创建时间
         * 
         * @return builder
         * 
         */
        public Builder createDate(String createDate) {
            return createDate(Output.of(createDate));
        }

        /**
         * @param region API密钥最后访问的地域。
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region API密钥最后访问的地域。
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param requestTime API密钥的最后使用的时间。
         * 
         * @return builder
         * 
         */
        public Builder requestTime(@Nullable Output<String> requestTime) {
            $.requestTime = requestTime;
            return this;
        }

        /**
         * @param requestTime API密钥的最后使用的时间。
         * 
         * @return builder
         * 
         */
        public Builder requestTime(String requestTime) {
            return requestTime(Output.of(requestTime));
        }

        /**
         * @param secretAccessKey 私有密钥（Secret Access Key）。
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKey(@Nullable Output<String> secretAccessKey) {
            $.secretAccessKey = secretAccessKey;
            return this;
        }

        /**
         * @param secretAccessKey 私有密钥（Secret Access Key）。
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKey(String secretAccessKey) {
            return secretAccessKey(Output.of(secretAccessKey));
        }

        /**
         * @param service API密钥最后访问的服务的英文简称。
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service API密钥最后访问的服务的英文简称。
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        /**
         * @param status 密钥状态 (active/inactive)
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 密钥状态 (active/inactive)
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param updateDate 密钥更新时间
         * 
         * @return builder
         * 
         */
        public Builder updateDate(@Nullable Output<String> updateDate) {
            $.updateDate = updateDate;
            return this;
        }

        /**
         * @param updateDate 密钥更新时间
         * 
         * @return builder
         * 
         */
        public Builder updateDate(String updateDate) {
            return updateDate(Output.of(updateDate));
        }

        /**
         * @param userName 用户名
         * 
         * @return builder
         * 
         */
        public Builder userName(@Nullable Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName 用户名
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public AccesskeyState build() {
            return $;
        }
    }

}
