// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcAssociateCenArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcAssociateCenArgs Empty = new VpcAssociateCenArgs();

    /**
     * CEN的ID。
     * 
     */
    @Import(name="cenId")
    private @Nullable Output<String> cenId;

    /**
     * @return CEN的ID。
     * 
     */
    public Optional<Output<String>> cenId() {
        return Optional.ofNullable(this.cenId);
    }

    /**
     * CEN的用户ID。
     * 
     */
    @Import(name="cenOwnerId")
    private @Nullable Output<String> cenOwnerId;

    /**
     * @return CEN的用户ID。
     * 
     */
    public Optional<Output<String>> cenOwnerId() {
        return Optional.ofNullable(this.cenOwnerId);
    }

    /**
     * VPC在CEN中的状态。Attaching：加载中，Attached：已加载
     * 
     */
    @Import(name="cenStatus")
    private @Nullable Output<String> cenStatus;

    /**
     * @return VPC在CEN中的状态。Attaching：加载中，Attached：已加载
     * 
     */
    public Optional<Output<String>> cenStatus() {
        return Optional.ofNullable(this.cenStatus);
    }

    private VpcAssociateCenArgs() {}

    private VpcAssociateCenArgs(VpcAssociateCenArgs $) {
        this.cenId = $.cenId;
        this.cenOwnerId = $.cenOwnerId;
        this.cenStatus = $.cenStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcAssociateCenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcAssociateCenArgs $;

        public Builder() {
            $ = new VpcAssociateCenArgs();
        }

        public Builder(VpcAssociateCenArgs defaults) {
            $ = new VpcAssociateCenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cenId CEN的ID。
         * 
         * @return builder
         * 
         */
        public Builder cenId(@Nullable Output<String> cenId) {
            $.cenId = cenId;
            return this;
        }

        /**
         * @param cenId CEN的ID。
         * 
         * @return builder
         * 
         */
        public Builder cenId(String cenId) {
            return cenId(Output.of(cenId));
        }

        /**
         * @param cenOwnerId CEN的用户ID。
         * 
         * @return builder
         * 
         */
        public Builder cenOwnerId(@Nullable Output<String> cenOwnerId) {
            $.cenOwnerId = cenOwnerId;
            return this;
        }

        /**
         * @param cenOwnerId CEN的用户ID。
         * 
         * @return builder
         * 
         */
        public Builder cenOwnerId(String cenOwnerId) {
            return cenOwnerId(Output.of(cenOwnerId));
        }

        /**
         * @param cenStatus VPC在CEN中的状态。Attaching：加载中，Attached：已加载
         * 
         * @return builder
         * 
         */
        public Builder cenStatus(@Nullable Output<String> cenStatus) {
            $.cenStatus = cenStatus;
            return this;
        }

        /**
         * @param cenStatus VPC在CEN中的状态。Attaching：加载中，Attached：已加载
         * 
         * @return builder
         * 
         */
        public Builder cenStatus(String cenStatus) {
            return cenStatus(Output.of(cenStatus));
        }

        public VpcAssociateCenArgs build() {
            return $;
        }
    }

}
