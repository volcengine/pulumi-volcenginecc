// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceSystemVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceSystemVolumeArgs Empty = new InstanceSystemVolumeArgs();

    /**
     * 实例是否随实例删除。
     * 
     */
    @Import(name="deleteWithInstance")
    private @Nullable Output<Boolean> deleteWithInstance;

    /**
     * @return 实例是否随实例删除。
     * 
     */
    public Optional<Output<Boolean>> deleteWithInstance() {
        return Optional.ofNullable(this.deleteWithInstance);
    }

    /**
     * 实例的额外性能IOPS。
     * 
     */
    @Import(name="extraPerformanceIops")
    private @Nullable Output<Integer> extraPerformanceIops;

    /**
     * @return 实例的额外性能IOPS。
     * 
     */
    public Optional<Output<Integer>> extraPerformanceIops() {
        return Optional.ofNullable(this.extraPerformanceIops);
    }

    /**
     * 实例的额外性能吞吐量，单位MB。
     * 
     */
    @Import(name="extraPerformanceThroughputMb")
    private @Nullable Output<Integer> extraPerformanceThroughputMb;

    /**
     * @return 实例的额外性能吞吐量，单位MB。
     * 
     */
    public Optional<Output<Integer>> extraPerformanceThroughputMb() {
        return Optional.ofNullable(this.extraPerformanceThroughputMb);
    }

    /**
     * 额外性能的类型，取值如下：Balance：均衡型额外性能。IOPS：IOPS型额外性能。Throughput：吞吐量型额外性能。
     * 
     */
    @Import(name="extraPerformanceTypeId")
    private @Nullable Output<String> extraPerformanceTypeId;

    /**
     * @return 额外性能的类型，取值如下：Balance：均衡型额外性能。IOPS：IOPS型额外性能。Throughput：吞吐量型额外性能。
     * 
     */
    public Optional<Output<String>> extraPerformanceTypeId() {
        return Optional.ofNullable(this.extraPerformanceTypeId);
    }

    /**
     * 实例的大小，单位GiB。
     * 
     */
    @Import(name="size")
    private @Nullable Output<Integer> size;

    /**
     * @return 实例的大小，单位GiB。
     * 
     */
    public Optional<Output<Integer>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * 实例的快照ID。
     * 
     */
    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    /**
     * @return 实例的快照ID。
     * 
     */
    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    /**
     * 实例的卷ID。
     * 
     */
    @Import(name="volumeId")
    private @Nullable Output<String> volumeId;

    /**
     * @return 实例的卷ID。
     * 
     */
    public Optional<Output<String>> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    /**
     * 云盘类型，取值说明如下：PTSSD：性能型SSD。ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0：吞吐型SSD云盘。
     * 
     */
    @Import(name="volumeType")
    private @Nullable Output<String> volumeType;

    /**
     * @return 云盘类型，取值说明如下：PTSSD：性能型SSD。ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0：吞吐型SSD云盘。
     * 
     */
    public Optional<Output<String>> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    private InstanceSystemVolumeArgs() {}

    private InstanceSystemVolumeArgs(InstanceSystemVolumeArgs $) {
        this.deleteWithInstance = $.deleteWithInstance;
        this.extraPerformanceIops = $.extraPerformanceIops;
        this.extraPerformanceThroughputMb = $.extraPerformanceThroughputMb;
        this.extraPerformanceTypeId = $.extraPerformanceTypeId;
        this.size = $.size;
        this.snapshotId = $.snapshotId;
        this.volumeId = $.volumeId;
        this.volumeType = $.volumeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceSystemVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceSystemVolumeArgs $;

        public Builder() {
            $ = new InstanceSystemVolumeArgs();
        }

        public Builder(InstanceSystemVolumeArgs defaults) {
            $ = new InstanceSystemVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteWithInstance 实例是否随实例删除。
         * 
         * @return builder
         * 
         */
        public Builder deleteWithInstance(@Nullable Output<Boolean> deleteWithInstance) {
            $.deleteWithInstance = deleteWithInstance;
            return this;
        }

        /**
         * @param deleteWithInstance 实例是否随实例删除。
         * 
         * @return builder
         * 
         */
        public Builder deleteWithInstance(Boolean deleteWithInstance) {
            return deleteWithInstance(Output.of(deleteWithInstance));
        }

        /**
         * @param extraPerformanceIops 实例的额外性能IOPS。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceIops(@Nullable Output<Integer> extraPerformanceIops) {
            $.extraPerformanceIops = extraPerformanceIops;
            return this;
        }

        /**
         * @param extraPerformanceIops 实例的额外性能IOPS。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceIops(Integer extraPerformanceIops) {
            return extraPerformanceIops(Output.of(extraPerformanceIops));
        }

        /**
         * @param extraPerformanceThroughputMb 实例的额外性能吞吐量，单位MB。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceThroughputMb(@Nullable Output<Integer> extraPerformanceThroughputMb) {
            $.extraPerformanceThroughputMb = extraPerformanceThroughputMb;
            return this;
        }

        /**
         * @param extraPerformanceThroughputMb 实例的额外性能吞吐量，单位MB。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceThroughputMb(Integer extraPerformanceThroughputMb) {
            return extraPerformanceThroughputMb(Output.of(extraPerformanceThroughputMb));
        }

        /**
         * @param extraPerformanceTypeId 额外性能的类型，取值如下：Balance：均衡型额外性能。IOPS：IOPS型额外性能。Throughput：吞吐量型额外性能。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceTypeId(@Nullable Output<String> extraPerformanceTypeId) {
            $.extraPerformanceTypeId = extraPerformanceTypeId;
            return this;
        }

        /**
         * @param extraPerformanceTypeId 额外性能的类型，取值如下：Balance：均衡型额外性能。IOPS：IOPS型额外性能。Throughput：吞吐量型额外性能。
         * 
         * @return builder
         * 
         */
        public Builder extraPerformanceTypeId(String extraPerformanceTypeId) {
            return extraPerformanceTypeId(Output.of(extraPerformanceTypeId));
        }

        /**
         * @param size 实例的大小，单位GiB。
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size 实例的大小，单位GiB。
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        /**
         * @param snapshotId 实例的快照ID。
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId 实例的快照ID。
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        /**
         * @param volumeId 实例的卷ID。
         * 
         * @return builder
         * 
         */
        public Builder volumeId(@Nullable Output<String> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        /**
         * @param volumeId 实例的卷ID。
         * 
         * @return builder
         * 
         */
        public Builder volumeId(String volumeId) {
            return volumeId(Output.of(volumeId));
        }

        /**
         * @param volumeType 云盘类型，取值说明如下：PTSSD：性能型SSD。ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0：吞吐型SSD云盘。
         * 
         * @return builder
         * 
         */
        public Builder volumeType(@Nullable Output<String> volumeType) {
            $.volumeType = volumeType;
            return this;
        }

        /**
         * @param volumeType 云盘类型，取值说明如下：PTSSD：性能型SSD。ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0：吞吐型SSD云盘。
         * 
         * @return builder
         * 
         */
        public Builder volumeType(String volumeType) {
            return volumeType(Output.of(volumeType));
        }

        public InstanceSystemVolumeArgs build() {
            return $;
        }
    }

}
