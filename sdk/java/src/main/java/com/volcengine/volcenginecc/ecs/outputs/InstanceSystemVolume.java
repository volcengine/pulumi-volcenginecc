// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceSystemVolume {
    /**
     * @return 实例是否随实例删除。
     * 
     */
    private @Nullable Boolean deleteWithInstance;
    /**
     * @return 实例的额外性能IOPS。
     * 
     */
    private @Nullable Integer extraPerformanceIops;
    /**
     * @return 实例的额外性能吞吐量，单位MB。
     * 
     */
    private @Nullable Integer extraPerformanceThroughputMb;
    /**
     * @return 额外性能的类型，取值如下：Balance：均衡型额外性能。IOPS：IOPS型额外性能。Throughput：吞吐量型额外性能。
     * 
     */
    private @Nullable String extraPerformanceTypeId;
    /**
     * @return 实例的大小，单位GiB。
     * 
     */
    private @Nullable Integer size;
    /**
     * @return 实例的快照ID。
     * 
     */
    private @Nullable String snapshotId;
    /**
     * @return 实例的卷ID。
     * 
     */
    private @Nullable String volumeId;
    /**
     * @return 云盘类型，取值说明如下：PTSSD：性能型SSD。ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0：吞吐型SSD云盘。
     * 
     */
    private @Nullable String volumeType;

    private InstanceSystemVolume() {}
    /**
     * @return 实例是否随实例删除。
     * 
     */
    public Optional<Boolean> deleteWithInstance() {
        return Optional.ofNullable(this.deleteWithInstance);
    }
    /**
     * @return 实例的额外性能IOPS。
     * 
     */
    public Optional<Integer> extraPerformanceIops() {
        return Optional.ofNullable(this.extraPerformanceIops);
    }
    /**
     * @return 实例的额外性能吞吐量，单位MB。
     * 
     */
    public Optional<Integer> extraPerformanceThroughputMb() {
        return Optional.ofNullable(this.extraPerformanceThroughputMb);
    }
    /**
     * @return 额外性能的类型，取值如下：Balance：均衡型额外性能。IOPS：IOPS型额外性能。Throughput：吞吐量型额外性能。
     * 
     */
    public Optional<String> extraPerformanceTypeId() {
        return Optional.ofNullable(this.extraPerformanceTypeId);
    }
    /**
     * @return 实例的大小，单位GiB。
     * 
     */
    public Optional<Integer> size() {
        return Optional.ofNullable(this.size);
    }
    /**
     * @return 实例的快照ID。
     * 
     */
    public Optional<String> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }
    /**
     * @return 实例的卷ID。
     * 
     */
    public Optional<String> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }
    /**
     * @return 云盘类型，取值说明如下：PTSSD：性能型SSD。ESSD_PL0：极速型SSD云盘，PL0规格。ESSD_FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0：吞吐型SSD云盘。
     * 
     */
    public Optional<String> volumeType() {
        return Optional.ofNullable(this.volumeType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceSystemVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deleteWithInstance;
        private @Nullable Integer extraPerformanceIops;
        private @Nullable Integer extraPerformanceThroughputMb;
        private @Nullable String extraPerformanceTypeId;
        private @Nullable Integer size;
        private @Nullable String snapshotId;
        private @Nullable String volumeId;
        private @Nullable String volumeType;
        public Builder() {}
        public Builder(InstanceSystemVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteWithInstance = defaults.deleteWithInstance;
    	      this.extraPerformanceIops = defaults.extraPerformanceIops;
    	      this.extraPerformanceThroughputMb = defaults.extraPerformanceThroughputMb;
    	      this.extraPerformanceTypeId = defaults.extraPerformanceTypeId;
    	      this.size = defaults.size;
    	      this.snapshotId = defaults.snapshotId;
    	      this.volumeId = defaults.volumeId;
    	      this.volumeType = defaults.volumeType;
        }

        @CustomType.Setter
        public Builder deleteWithInstance(@Nullable Boolean deleteWithInstance) {

            this.deleteWithInstance = deleteWithInstance;
            return this;
        }
        @CustomType.Setter
        public Builder extraPerformanceIops(@Nullable Integer extraPerformanceIops) {

            this.extraPerformanceIops = extraPerformanceIops;
            return this;
        }
        @CustomType.Setter
        public Builder extraPerformanceThroughputMb(@Nullable Integer extraPerformanceThroughputMb) {

            this.extraPerformanceThroughputMb = extraPerformanceThroughputMb;
            return this;
        }
        @CustomType.Setter
        public Builder extraPerformanceTypeId(@Nullable String extraPerformanceTypeId) {

            this.extraPerformanceTypeId = extraPerformanceTypeId;
            return this;
        }
        @CustomType.Setter
        public Builder size(@Nullable Integer size) {

            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotId(@Nullable String snapshotId) {

            this.snapshotId = snapshotId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeId(@Nullable String volumeId) {

            this.volumeId = volumeId;
            return this;
        }
        @CustomType.Setter
        public Builder volumeType(@Nullable String volumeType) {

            this.volumeType = volumeType;
            return this;
        }
        public InstanceSystemVolume build() {
            final var _resultValue = new InstanceSystemVolume();
            _resultValue.deleteWithInstance = deleteWithInstance;
            _resultValue.extraPerformanceIops = extraPerformanceIops;
            _resultValue.extraPerformanceThroughputMb = extraPerformanceThroughputMb;
            _resultValue.extraPerformanceTypeId = extraPerformanceTypeId;
            _resultValue.size = size;
            _resultValue.snapshotId = snapshotId;
            _resultValue.volumeId = volumeId;
            _resultValue.volumeType = volumeType;
            return _resultValue;
        }
    }
}
