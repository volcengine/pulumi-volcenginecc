// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.tos.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketLifecycleConfigFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final BucketLifecycleConfigFilterArgs Empty = new BucketLifecycleConfigFilterArgs();

    /**
     * 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    @Import(name="greaterThanIncludeEqual")
    private @Nullable Output<String> greaterThanIncludeEqual;

    /**
     * @return 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    public Optional<Output<String>> greaterThanIncludeEqual() {
        return Optional.ofNullable(this.greaterThanIncludeEqual);
    }

    /**
     * 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    @Import(name="lessThanIncludeEqual")
    private @Nullable Output<String> lessThanIncludeEqual;

    /**
     * @return 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    public Optional<Output<String>> lessThanIncludeEqual() {
        return Optional.ofNullable(this.lessThanIncludeEqual);
    }

    /**
     * 设置规则生效于大于指定大小的对象。
     * 
     */
    @Import(name="objectSizeGreaterThan")
    private @Nullable Output<Integer> objectSizeGreaterThan;

    /**
     * @return 设置规则生效于大于指定大小的对象。
     * 
     */
    public Optional<Output<Integer>> objectSizeGreaterThan() {
        return Optional.ofNullable(this.objectSizeGreaterThan);
    }

    /**
     * 设置规则生效于小于指定大小的对象。
     * 
     */
    @Import(name="objectSizeLessThan")
    private @Nullable Output<Integer> objectSizeLessThan;

    /**
     * @return 设置规则生效于小于指定大小的对象。
     * 
     */
    public Optional<Output<Integer>> objectSizeLessThan() {
        return Optional.ofNullable(this.objectSizeLessThan);
    }

    private BucketLifecycleConfigFilterArgs() {}

    private BucketLifecycleConfigFilterArgs(BucketLifecycleConfigFilterArgs $) {
        this.greaterThanIncludeEqual = $.greaterThanIncludeEqual;
        this.lessThanIncludeEqual = $.lessThanIncludeEqual;
        this.objectSizeGreaterThan = $.objectSizeGreaterThan;
        this.objectSizeLessThan = $.objectSizeLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketLifecycleConfigFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleConfigFilterArgs $;

        public Builder() {
            $ = new BucketLifecycleConfigFilterArgs();
        }

        public Builder(BucketLifecycleConfigFilterArgs defaults) {
            $ = new BucketLifecycleConfigFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param greaterThanIncludeEqual 是否启用相等条件。包括Enabled、Disabled。
         * 
         * @return builder
         * 
         */
        public Builder greaterThanIncludeEqual(@Nullable Output<String> greaterThanIncludeEqual) {
            $.greaterThanIncludeEqual = greaterThanIncludeEqual;
            return this;
        }

        /**
         * @param greaterThanIncludeEqual 是否启用相等条件。包括Enabled、Disabled。
         * 
         * @return builder
         * 
         */
        public Builder greaterThanIncludeEqual(String greaterThanIncludeEqual) {
            return greaterThanIncludeEqual(Output.of(greaterThanIncludeEqual));
        }

        /**
         * @param lessThanIncludeEqual 是否启用相等条件。包括Enabled、Disabled。
         * 
         * @return builder
         * 
         */
        public Builder lessThanIncludeEqual(@Nullable Output<String> lessThanIncludeEqual) {
            $.lessThanIncludeEqual = lessThanIncludeEqual;
            return this;
        }

        /**
         * @param lessThanIncludeEqual 是否启用相等条件。包括Enabled、Disabled。
         * 
         * @return builder
         * 
         */
        public Builder lessThanIncludeEqual(String lessThanIncludeEqual) {
            return lessThanIncludeEqual(Output.of(lessThanIncludeEqual));
        }

        /**
         * @param objectSizeGreaterThan 设置规则生效于大于指定大小的对象。
         * 
         * @return builder
         * 
         */
        public Builder objectSizeGreaterThan(@Nullable Output<Integer> objectSizeGreaterThan) {
            $.objectSizeGreaterThan = objectSizeGreaterThan;
            return this;
        }

        /**
         * @param objectSizeGreaterThan 设置规则生效于大于指定大小的对象。
         * 
         * @return builder
         * 
         */
        public Builder objectSizeGreaterThan(Integer objectSizeGreaterThan) {
            return objectSizeGreaterThan(Output.of(objectSizeGreaterThan));
        }

        /**
         * @param objectSizeLessThan 设置规则生效于小于指定大小的对象。
         * 
         * @return builder
         * 
         */
        public Builder objectSizeLessThan(@Nullable Output<Integer> objectSizeLessThan) {
            $.objectSizeLessThan = objectSizeLessThan;
            return this;
        }

        /**
         * @param objectSizeLessThan 设置规则生效于小于指定大小的对象。
         * 
         * @return builder
         * 
         */
        public Builder objectSizeLessThan(Integer objectSizeLessThan) {
            return objectSizeLessThan(Output.of(objectSizeLessThan));
        }

        public BucketLifecycleConfigFilterArgs build() {
            return $;
        }
    }

}
