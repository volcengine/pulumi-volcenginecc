// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.clb.outputs.GetClbAccessLog;
import com.volcengine.volcenginecc.clb.outputs.GetClbEip;
import com.volcengine.volcenginecc.clb.outputs.GetClbEni;
import com.volcengine.volcenginecc.clb.outputs.GetClbEnis;
import com.volcengine.volcenginecc.clb.outputs.GetClbListener;
import com.volcengine.volcenginecc.clb.outputs.GetClbServerGroup;
import com.volcengine.volcenginecc.clb.outputs.GetClbTag;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClbResult {
    /**
     * @return 负载均衡实例中访问日志的信息
     * 
     */
    private GetClbAccessLog accessLog;
    /**
     * @return 负载均衡实例所属的账号ID
     * 
     */
    private String accountId;
    /**
     * @return 负载均衡实例的IP地址类型
     * 
     */
    private String addressIpVersion;
    /**
     * @return 允许的多个端口范围
     * 
     */
    private List<String> allowedPorts;
    /**
     * @return 负载均衡实例是否被锁定
     * 
     */
    private String businessStatus;
    /**
     * @return 是否开启bypass安全组功能
     * 
     */
    private String bypassSecurityGroupEnabled;
    /**
     * @return 负载均衡实例的创建时间
     * 
     */
    private String createTime;
    /**
     * @return 负载均衡实例的预期回收时间
     * 
     */
    private String deletedTime;
    /**
     * @return 负载均衡实例的描述
     * 
     */
    private String description;
    /**
     * @return 负载均衡实例的公网IP的信息
     * 
     */
    private GetClbEip eip;
    /**
     * @return 公网IP地址
     * 
     */
    private String eipAddress;
    /**
     * @return 公网IP ID
     * 
     */
    private String eipId;
    /**
     * @return 负载均衡实例的启用状态
     * 
     */
    private Boolean enabled;
    /**
     * @return 负载均衡实例的私网IPv4地址信息
     * 
     */
    private GetClbEni eni;
    /**
     * @return 负载均衡实例的私网IPv4地址数量。该参数和参数EniAddress不能同时传入，如果传入该参数，则无需传入EniAddress
     * 
     */
    private Double eniAddressNum;
    /**
     * @return 负载均衡实例的私网IPv6地址
     * 
     */
    private String eniIpv6Address;
    /**
     * @return 负载均衡实例的私网IPv4地址信息列表，创建时通过EniAddressNum指定数量
     * 
     */
    private GetClbEnis enis;
    /**
     * @return 独占集群Id
     * 
     */
    private String exclusiveClusterId;
    /**
     * @return 负载均衡实例到期时间
     * 
     */
    private String expiredTime;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 负载均衡实例中监听器的信息
     * 
     */
    private List<GetClbListener> listeners;
    /**
     * @return 负载均衡实例计费方式
     * 
     */
    private Double loadBalancerBillingType;
    /**
     * @return 负载均衡实例ID
     * 
     */
    private String loadBalancerId;
    /**
     * @return 负载均衡实例的名称
     * 
     */
    private String loadBalancerName;
    /**
     * @return 负载均衡实例的规格
     * 
     */
    private String loadBalancerSpec;
    /**
     * @return 负载均衡实例被冻结的原因
     * 
     */
    private String lockReason;
    /**
     * @return 负载均衡实例的主可用区ID
     * 
     */
    private String masterZoneId;
    /**
     * @return 设置修改保护状态的原因
     * 
     */
    private String modificationProtectionReason;
    /**
     * @return 负载均衡实例在控制台上修改保护的状态
     * 
     */
    private String modificationProtectionStatus;
    /**
     * @return 是否为新架构
     * 
     */
    private Boolean newArch;
    /**
     * @return 订单ID。仅在创建动作的参数LoadBalancerBillingType配置为1时，改参数有值
     * 
     */
    private String orderId;
    /**
     * @return 负载均衡实例的冻结时间
     * 
     */
    private String overdueTime;
    /**
     * @return 包年包月计费类型的时长数量
     * 
     */
    private Double period;
    /**
     * @return 包年包月计费类型的时长单位
     * 
     */
    private String periodUnit;
    /**
     * @return CLB实例所属项目的名称
     * 
     */
    private String projectName;
    /**
     * @return 请求的Region
     * 
     */
    private String regionId;
    /**
     * @return 负载均衡实例中后端服务器组的信息
     * 
     */
    private List<GetClbServerGroup> serverGroups;
    /**
     * @return CLB实例是否为托管资源
     * 
     */
    private Boolean serviceManaged;
    /**
     * @return 负载均衡实例的备可用区ID
     * 
     */
    private String slaveZoneId;
    /**
     * @return 负载均衡实例状态
     * 
     */
    private String status;
    /**
     * @return 负载均衡实例所属VPC内的子网ID
     * 
     */
    private String subnetId;
    /**
     * @return CLB实例标签
     * 
     */
    private List<GetClbTag> tags;
    /**
     * @return 是否开启 TCP Timestamp 清除功能
     * 
     */
    private String timestampRemoveEnabled;
    /**
     * @return 负载均衡实例的类型
     * 
     */
    private String type;
    /**
     * @return 负载均衡实例的最近操作时间
     * 
     */
    private String updateTime;
    /**
     * @return 负载均衡实例所属的VPC ID
     * 
     */
    private String vpcId;
    /**
     * @return 负载均衡实例的可用区类型
     * 
     */
    private String zoneType;

    private GetClbResult() {}
    /**
     * @return 负载均衡实例中访问日志的信息
     * 
     */
    public GetClbAccessLog accessLog() {
        return this.accessLog;
    }
    /**
     * @return 负载均衡实例所属的账号ID
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return 负载均衡实例的IP地址类型
     * 
     */
    public String addressIpVersion() {
        return this.addressIpVersion;
    }
    /**
     * @return 允许的多个端口范围
     * 
     */
    public List<String> allowedPorts() {
        return this.allowedPorts;
    }
    /**
     * @return 负载均衡实例是否被锁定
     * 
     */
    public String businessStatus() {
        return this.businessStatus;
    }
    /**
     * @return 是否开启bypass安全组功能
     * 
     */
    public String bypassSecurityGroupEnabled() {
        return this.bypassSecurityGroupEnabled;
    }
    /**
     * @return 负载均衡实例的创建时间
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return 负载均衡实例的预期回收时间
     * 
     */
    public String deletedTime() {
        return this.deletedTime;
    }
    /**
     * @return 负载均衡实例的描述
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return 负载均衡实例的公网IP的信息
     * 
     */
    public GetClbEip eip() {
        return this.eip;
    }
    /**
     * @return 公网IP地址
     * 
     */
    public String eipAddress() {
        return this.eipAddress;
    }
    /**
     * @return 公网IP ID
     * 
     */
    public String eipId() {
        return this.eipId;
    }
    /**
     * @return 负载均衡实例的启用状态
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return 负载均衡实例的私网IPv4地址信息
     * 
     */
    public GetClbEni eni() {
        return this.eni;
    }
    /**
     * @return 负载均衡实例的私网IPv4地址数量。该参数和参数EniAddress不能同时传入，如果传入该参数，则无需传入EniAddress
     * 
     */
    public Double eniAddressNum() {
        return this.eniAddressNum;
    }
    /**
     * @return 负载均衡实例的私网IPv6地址
     * 
     */
    public String eniIpv6Address() {
        return this.eniIpv6Address;
    }
    /**
     * @return 负载均衡实例的私网IPv4地址信息列表，创建时通过EniAddressNum指定数量
     * 
     */
    public GetClbEnis enis() {
        return this.enis;
    }
    /**
     * @return 独占集群Id
     * 
     */
    public String exclusiveClusterId() {
        return this.exclusiveClusterId;
    }
    /**
     * @return 负载均衡实例到期时间
     * 
     */
    public String expiredTime() {
        return this.expiredTime;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 负载均衡实例中监听器的信息
     * 
     */
    public List<GetClbListener> listeners() {
        return this.listeners;
    }
    /**
     * @return 负载均衡实例计费方式
     * 
     */
    public Double loadBalancerBillingType() {
        return this.loadBalancerBillingType;
    }
    /**
     * @return 负载均衡实例ID
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return 负载均衡实例的名称
     * 
     */
    public String loadBalancerName() {
        return this.loadBalancerName;
    }
    /**
     * @return 负载均衡实例的规格
     * 
     */
    public String loadBalancerSpec() {
        return this.loadBalancerSpec;
    }
    /**
     * @return 负载均衡实例被冻结的原因
     * 
     */
    public String lockReason() {
        return this.lockReason;
    }
    /**
     * @return 负载均衡实例的主可用区ID
     * 
     */
    public String masterZoneId() {
        return this.masterZoneId;
    }
    /**
     * @return 设置修改保护状态的原因
     * 
     */
    public String modificationProtectionReason() {
        return this.modificationProtectionReason;
    }
    /**
     * @return 负载均衡实例在控制台上修改保护的状态
     * 
     */
    public String modificationProtectionStatus() {
        return this.modificationProtectionStatus;
    }
    /**
     * @return 是否为新架构
     * 
     */
    public Boolean newArch() {
        return this.newArch;
    }
    /**
     * @return 订单ID。仅在创建动作的参数LoadBalancerBillingType配置为1时，改参数有值
     * 
     */
    public String orderId() {
        return this.orderId;
    }
    /**
     * @return 负载均衡实例的冻结时间
     * 
     */
    public String overdueTime() {
        return this.overdueTime;
    }
    /**
     * @return 包年包月计费类型的时长数量
     * 
     */
    public Double period() {
        return this.period;
    }
    /**
     * @return 包年包月计费类型的时长单位
     * 
     */
    public String periodUnit() {
        return this.periodUnit;
    }
    /**
     * @return CLB实例所属项目的名称
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return 请求的Region
     * 
     */
    public String regionId() {
        return this.regionId;
    }
    /**
     * @return 负载均衡实例中后端服务器组的信息
     * 
     */
    public List<GetClbServerGroup> serverGroups() {
        return this.serverGroups;
    }
    /**
     * @return CLB实例是否为托管资源
     * 
     */
    public Boolean serviceManaged() {
        return this.serviceManaged;
    }
    /**
     * @return 负载均衡实例的备可用区ID
     * 
     */
    public String slaveZoneId() {
        return this.slaveZoneId;
    }
    /**
     * @return 负载均衡实例状态
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 负载均衡实例所属VPC内的子网ID
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return CLB实例标签
     * 
     */
    public List<GetClbTag> tags() {
        return this.tags;
    }
    /**
     * @return 是否开启 TCP Timestamp 清除功能
     * 
     */
    public String timestampRemoveEnabled() {
        return this.timestampRemoveEnabled;
    }
    /**
     * @return 负载均衡实例的类型
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return 负载均衡实例的最近操作时间
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return 负载均衡实例所属的VPC ID
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return 负载均衡实例的可用区类型
     * 
     */
    public String zoneType() {
        return this.zoneType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClbResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetClbAccessLog accessLog;
        private String accountId;
        private String addressIpVersion;
        private List<String> allowedPorts;
        private String businessStatus;
        private String bypassSecurityGroupEnabled;
        private String createTime;
        private String deletedTime;
        private String description;
        private GetClbEip eip;
        private String eipAddress;
        private String eipId;
        private Boolean enabled;
        private GetClbEni eni;
        private Double eniAddressNum;
        private String eniIpv6Address;
        private GetClbEnis enis;
        private String exclusiveClusterId;
        private String expiredTime;
        private String id;
        private List<GetClbListener> listeners;
        private Double loadBalancerBillingType;
        private String loadBalancerId;
        private String loadBalancerName;
        private String loadBalancerSpec;
        private String lockReason;
        private String masterZoneId;
        private String modificationProtectionReason;
        private String modificationProtectionStatus;
        private Boolean newArch;
        private String orderId;
        private String overdueTime;
        private Double period;
        private String periodUnit;
        private String projectName;
        private String regionId;
        private List<GetClbServerGroup> serverGroups;
        private Boolean serviceManaged;
        private String slaveZoneId;
        private String status;
        private String subnetId;
        private List<GetClbTag> tags;
        private String timestampRemoveEnabled;
        private String type;
        private String updateTime;
        private String vpcId;
        private String zoneType;
        public Builder() {}
        public Builder(GetClbResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLog = defaults.accessLog;
    	      this.accountId = defaults.accountId;
    	      this.addressIpVersion = defaults.addressIpVersion;
    	      this.allowedPorts = defaults.allowedPorts;
    	      this.businessStatus = defaults.businessStatus;
    	      this.bypassSecurityGroupEnabled = defaults.bypassSecurityGroupEnabled;
    	      this.createTime = defaults.createTime;
    	      this.deletedTime = defaults.deletedTime;
    	      this.description = defaults.description;
    	      this.eip = defaults.eip;
    	      this.eipAddress = defaults.eipAddress;
    	      this.eipId = defaults.eipId;
    	      this.enabled = defaults.enabled;
    	      this.eni = defaults.eni;
    	      this.eniAddressNum = defaults.eniAddressNum;
    	      this.eniIpv6Address = defaults.eniIpv6Address;
    	      this.enis = defaults.enis;
    	      this.exclusiveClusterId = defaults.exclusiveClusterId;
    	      this.expiredTime = defaults.expiredTime;
    	      this.id = defaults.id;
    	      this.listeners = defaults.listeners;
    	      this.loadBalancerBillingType = defaults.loadBalancerBillingType;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.loadBalancerName = defaults.loadBalancerName;
    	      this.loadBalancerSpec = defaults.loadBalancerSpec;
    	      this.lockReason = defaults.lockReason;
    	      this.masterZoneId = defaults.masterZoneId;
    	      this.modificationProtectionReason = defaults.modificationProtectionReason;
    	      this.modificationProtectionStatus = defaults.modificationProtectionStatus;
    	      this.newArch = defaults.newArch;
    	      this.orderId = defaults.orderId;
    	      this.overdueTime = defaults.overdueTime;
    	      this.period = defaults.period;
    	      this.periodUnit = defaults.periodUnit;
    	      this.projectName = defaults.projectName;
    	      this.regionId = defaults.regionId;
    	      this.serverGroups = defaults.serverGroups;
    	      this.serviceManaged = defaults.serviceManaged;
    	      this.slaveZoneId = defaults.slaveZoneId;
    	      this.status = defaults.status;
    	      this.subnetId = defaults.subnetId;
    	      this.tags = defaults.tags;
    	      this.timestampRemoveEnabled = defaults.timestampRemoveEnabled;
    	      this.type = defaults.type;
    	      this.updateTime = defaults.updateTime;
    	      this.vpcId = defaults.vpcId;
    	      this.zoneType = defaults.zoneType;
        }

        @CustomType.Setter
        public Builder accessLog(GetClbAccessLog accessLog) {
            if (accessLog == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "accessLog");
            }
            this.accessLog = accessLog;
            return this;
        }
        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder addressIpVersion(String addressIpVersion) {
            if (addressIpVersion == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "addressIpVersion");
            }
            this.addressIpVersion = addressIpVersion;
            return this;
        }
        @CustomType.Setter
        public Builder allowedPorts(List<String> allowedPorts) {
            if (allowedPorts == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "allowedPorts");
            }
            this.allowedPorts = allowedPorts;
            return this;
        }
        public Builder allowedPorts(String... allowedPorts) {
            return allowedPorts(List.of(allowedPorts));
        }
        @CustomType.Setter
        public Builder businessStatus(String businessStatus) {
            if (businessStatus == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "businessStatus");
            }
            this.businessStatus = businessStatus;
            return this;
        }
        @CustomType.Setter
        public Builder bypassSecurityGroupEnabled(String bypassSecurityGroupEnabled) {
            if (bypassSecurityGroupEnabled == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "bypassSecurityGroupEnabled");
            }
            this.bypassSecurityGroupEnabled = bypassSecurityGroupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder deletedTime(String deletedTime) {
            if (deletedTime == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "deletedTime");
            }
            this.deletedTime = deletedTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder eip(GetClbEip eip) {
            if (eip == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "eip");
            }
            this.eip = eip;
            return this;
        }
        @CustomType.Setter
        public Builder eipAddress(String eipAddress) {
            if (eipAddress == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "eipAddress");
            }
            this.eipAddress = eipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder eipId(String eipId) {
            if (eipId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "eipId");
            }
            this.eipId = eipId;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder eni(GetClbEni eni) {
            if (eni == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "eni");
            }
            this.eni = eni;
            return this;
        }
        @CustomType.Setter
        public Builder eniAddressNum(Double eniAddressNum) {
            if (eniAddressNum == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "eniAddressNum");
            }
            this.eniAddressNum = eniAddressNum;
            return this;
        }
        @CustomType.Setter
        public Builder eniIpv6Address(String eniIpv6Address) {
            if (eniIpv6Address == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "eniIpv6Address");
            }
            this.eniIpv6Address = eniIpv6Address;
            return this;
        }
        @CustomType.Setter
        public Builder enis(GetClbEnis enis) {
            if (enis == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "enis");
            }
            this.enis = enis;
            return this;
        }
        @CustomType.Setter
        public Builder exclusiveClusterId(String exclusiveClusterId) {
            if (exclusiveClusterId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "exclusiveClusterId");
            }
            this.exclusiveClusterId = exclusiveClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder expiredTime(String expiredTime) {
            if (expiredTime == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "expiredTime");
            }
            this.expiredTime = expiredTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder listeners(List<GetClbListener> listeners) {
            if (listeners == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "listeners");
            }
            this.listeners = listeners;
            return this;
        }
        public Builder listeners(GetClbListener... listeners) {
            return listeners(List.of(listeners));
        }
        @CustomType.Setter
        public Builder loadBalancerBillingType(Double loadBalancerBillingType) {
            if (loadBalancerBillingType == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "loadBalancerBillingType");
            }
            this.loadBalancerBillingType = loadBalancerBillingType;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerName(String loadBalancerName) {
            if (loadBalancerName == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "loadBalancerName");
            }
            this.loadBalancerName = loadBalancerName;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerSpec(String loadBalancerSpec) {
            if (loadBalancerSpec == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "loadBalancerSpec");
            }
            this.loadBalancerSpec = loadBalancerSpec;
            return this;
        }
        @CustomType.Setter
        public Builder lockReason(String lockReason) {
            if (lockReason == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "lockReason");
            }
            this.lockReason = lockReason;
            return this;
        }
        @CustomType.Setter
        public Builder masterZoneId(String masterZoneId) {
            if (masterZoneId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "masterZoneId");
            }
            this.masterZoneId = masterZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder modificationProtectionReason(String modificationProtectionReason) {
            if (modificationProtectionReason == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "modificationProtectionReason");
            }
            this.modificationProtectionReason = modificationProtectionReason;
            return this;
        }
        @CustomType.Setter
        public Builder modificationProtectionStatus(String modificationProtectionStatus) {
            if (modificationProtectionStatus == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "modificationProtectionStatus");
            }
            this.modificationProtectionStatus = modificationProtectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder newArch(Boolean newArch) {
            if (newArch == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "newArch");
            }
            this.newArch = newArch;
            return this;
        }
        @CustomType.Setter
        public Builder orderId(String orderId) {
            if (orderId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "orderId");
            }
            this.orderId = orderId;
            return this;
        }
        @CustomType.Setter
        public Builder overdueTime(String overdueTime) {
            if (overdueTime == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "overdueTime");
            }
            this.overdueTime = overdueTime;
            return this;
        }
        @CustomType.Setter
        public Builder period(Double period) {
            if (period == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "period");
            }
            this.period = period;
            return this;
        }
        @CustomType.Setter
        public Builder periodUnit(String periodUnit) {
            if (periodUnit == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "periodUnit");
            }
            this.periodUnit = periodUnit;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder regionId(String regionId) {
            if (regionId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "regionId");
            }
            this.regionId = regionId;
            return this;
        }
        @CustomType.Setter
        public Builder serverGroups(List<GetClbServerGroup> serverGroups) {
            if (serverGroups == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "serverGroups");
            }
            this.serverGroups = serverGroups;
            return this;
        }
        public Builder serverGroups(GetClbServerGroup... serverGroups) {
            return serverGroups(List.of(serverGroups));
        }
        @CustomType.Setter
        public Builder serviceManaged(Boolean serviceManaged) {
            if (serviceManaged == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "serviceManaged");
            }
            this.serviceManaged = serviceManaged;
            return this;
        }
        @CustomType.Setter
        public Builder slaveZoneId(String slaveZoneId) {
            if (slaveZoneId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "slaveZoneId");
            }
            this.slaveZoneId = slaveZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetClbTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetClbTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder timestampRemoveEnabled(String timestampRemoveEnabled) {
            if (timestampRemoveEnabled == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "timestampRemoveEnabled");
            }
            this.timestampRemoveEnabled = timestampRemoveEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneType(String zoneType) {
            if (zoneType == null) {
              throw new MissingRequiredPropertyException("GetClbResult", "zoneType");
            }
            this.zoneType = zoneType;
            return this;
        }
        public GetClbResult build() {
            final var _resultValue = new GetClbResult();
            _resultValue.accessLog = accessLog;
            _resultValue.accountId = accountId;
            _resultValue.addressIpVersion = addressIpVersion;
            _resultValue.allowedPorts = allowedPorts;
            _resultValue.businessStatus = businessStatus;
            _resultValue.bypassSecurityGroupEnabled = bypassSecurityGroupEnabled;
            _resultValue.createTime = createTime;
            _resultValue.deletedTime = deletedTime;
            _resultValue.description = description;
            _resultValue.eip = eip;
            _resultValue.eipAddress = eipAddress;
            _resultValue.eipId = eipId;
            _resultValue.enabled = enabled;
            _resultValue.eni = eni;
            _resultValue.eniAddressNum = eniAddressNum;
            _resultValue.eniIpv6Address = eniIpv6Address;
            _resultValue.enis = enis;
            _resultValue.exclusiveClusterId = exclusiveClusterId;
            _resultValue.expiredTime = expiredTime;
            _resultValue.id = id;
            _resultValue.listeners = listeners;
            _resultValue.loadBalancerBillingType = loadBalancerBillingType;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.loadBalancerName = loadBalancerName;
            _resultValue.loadBalancerSpec = loadBalancerSpec;
            _resultValue.lockReason = lockReason;
            _resultValue.masterZoneId = masterZoneId;
            _resultValue.modificationProtectionReason = modificationProtectionReason;
            _resultValue.modificationProtectionStatus = modificationProtectionStatus;
            _resultValue.newArch = newArch;
            _resultValue.orderId = orderId;
            _resultValue.overdueTime = overdueTime;
            _resultValue.period = period;
            _resultValue.periodUnit = periodUnit;
            _resultValue.projectName = projectName;
            _resultValue.regionId = regionId;
            _resultValue.serverGroups = serverGroups;
            _resultValue.serviceManaged = serviceManaged;
            _resultValue.slaveZoneId = slaveZoneId;
            _resultValue.status = status;
            _resultValue.subnetId = subnetId;
            _resultValue.tags = tags;
            _resultValue.timestampRemoveEnabled = timestampRemoveEnabled;
            _resultValue.type = type;
            _resultValue.updateTime = updateTime;
            _resultValue.vpcId = vpcId;
            _resultValue.zoneType = zoneType;
            return _resultValue;
        }
    }
}
