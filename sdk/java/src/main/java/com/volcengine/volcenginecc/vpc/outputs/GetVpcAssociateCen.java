// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVpcAssociateCen {
    /**
     * @return CEN的ID。
     * 
     */
    private String cenId;
    /**
     * @return CEN的用户ID。
     * 
     */
    private String cenOwnerId;
    /**
     * @return VPC在CEN中的状态。Attaching：加载中，Attached：已加载
     * 
     */
    private String cenStatus;

    private GetVpcAssociateCen() {}
    /**
     * @return CEN的ID。
     * 
     */
    public String cenId() {
        return this.cenId;
    }
    /**
     * @return CEN的用户ID。
     * 
     */
    public String cenOwnerId() {
        return this.cenOwnerId;
    }
    /**
     * @return VPC在CEN中的状态。Attaching：加载中，Attached：已加载
     * 
     */
    public String cenStatus() {
        return this.cenStatus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVpcAssociateCen defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cenId;
        private String cenOwnerId;
        private String cenStatus;
        public Builder() {}
        public Builder(GetVpcAssociateCen defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cenId = defaults.cenId;
    	      this.cenOwnerId = defaults.cenOwnerId;
    	      this.cenStatus = defaults.cenStatus;
        }

        @CustomType.Setter
        public Builder cenId(String cenId) {
            if (cenId == null) {
              throw new MissingRequiredPropertyException("GetVpcAssociateCen", "cenId");
            }
            this.cenId = cenId;
            return this;
        }
        @CustomType.Setter
        public Builder cenOwnerId(String cenOwnerId) {
            if (cenOwnerId == null) {
              throw new MissingRequiredPropertyException("GetVpcAssociateCen", "cenOwnerId");
            }
            this.cenOwnerId = cenOwnerId;
            return this;
        }
        @CustomType.Setter
        public Builder cenStatus(String cenStatus) {
            if (cenStatus == null) {
              throw new MissingRequiredPropertyException("GetVpcAssociateCen", "cenStatus");
            }
            this.cenStatus = cenStatus;
            return this;
        }
        public GetVpcAssociateCen build() {
            final var _resultValue = new GetVpcAssociateCen();
            _resultValue.cenId = cenId;
            _resultValue.cenOwnerId = cenOwnerId;
            _resultValue.cenStatus = cenStatus;
            return _resultValue;
        }
    }
}
