// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.tos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBucketAclGrant {
    /**
     * @return 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
     * 
     */
    private String acl;
    /**
     * @return 授予指定用户所有权限。
     * 
     */
    private String grantFullControl;
    /**
     * @return 授予指定用户读权限。
     * 
     */
    private String grantRead;
    /**
     * @return 授予指定用户查看桶 ACL 的权限。
     * 
     */
    private String grantReadAcp;
    /**
     * @return 授予指定用户写权限。
     * 
     */
    private String grantWrite;
    /**
     * @return 授予指定用户修改和删除桶 ACL 的权限。
     * 
     */
    private String grantWriteAcp;

    private GetBucketAclGrant() {}
    /**
     * @return 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
     * 
     */
    public String acl() {
        return this.acl;
    }
    /**
     * @return 授予指定用户所有权限。
     * 
     */
    public String grantFullControl() {
        return this.grantFullControl;
    }
    /**
     * @return 授予指定用户读权限。
     * 
     */
    public String grantRead() {
        return this.grantRead;
    }
    /**
     * @return 授予指定用户查看桶 ACL 的权限。
     * 
     */
    public String grantReadAcp() {
        return this.grantReadAcp;
    }
    /**
     * @return 授予指定用户写权限。
     * 
     */
    public String grantWrite() {
        return this.grantWrite;
    }
    /**
     * @return 授予指定用户修改和删除桶 ACL 的权限。
     * 
     */
    public String grantWriteAcp() {
        return this.grantWriteAcp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketAclGrant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acl;
        private String grantFullControl;
        private String grantRead;
        private String grantReadAcp;
        private String grantWrite;
        private String grantWriteAcp;
        public Builder() {}
        public Builder(GetBucketAclGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acl = defaults.acl;
    	      this.grantFullControl = defaults.grantFullControl;
    	      this.grantRead = defaults.grantRead;
    	      this.grantReadAcp = defaults.grantReadAcp;
    	      this.grantWrite = defaults.grantWrite;
    	      this.grantWriteAcp = defaults.grantWriteAcp;
        }

        @CustomType.Setter
        public Builder acl(String acl) {
            if (acl == null) {
              throw new MissingRequiredPropertyException("GetBucketAclGrant", "acl");
            }
            this.acl = acl;
            return this;
        }
        @CustomType.Setter
        public Builder grantFullControl(String grantFullControl) {
            if (grantFullControl == null) {
              throw new MissingRequiredPropertyException("GetBucketAclGrant", "grantFullControl");
            }
            this.grantFullControl = grantFullControl;
            return this;
        }
        @CustomType.Setter
        public Builder grantRead(String grantRead) {
            if (grantRead == null) {
              throw new MissingRequiredPropertyException("GetBucketAclGrant", "grantRead");
            }
            this.grantRead = grantRead;
            return this;
        }
        @CustomType.Setter
        public Builder grantReadAcp(String grantReadAcp) {
            if (grantReadAcp == null) {
              throw new MissingRequiredPropertyException("GetBucketAclGrant", "grantReadAcp");
            }
            this.grantReadAcp = grantReadAcp;
            return this;
        }
        @CustomType.Setter
        public Builder grantWrite(String grantWrite) {
            if (grantWrite == null) {
              throw new MissingRequiredPropertyException("GetBucketAclGrant", "grantWrite");
            }
            this.grantWrite = grantWrite;
            return this;
        }
        @CustomType.Setter
        public Builder grantWriteAcp(String grantWriteAcp) {
            if (grantWriteAcp == null) {
              throw new MissingRequiredPropertyException("GetBucketAclGrant", "grantWriteAcp");
            }
            this.grantWriteAcp = grantWriteAcp;
            return this;
        }
        public GetBucketAclGrant build() {
            final var _resultValue = new GetBucketAclGrant();
            _resultValue.acl = acl;
            _resultValue.grantFullControl = grantFullControl;
            _resultValue.grantRead = grantRead;
            _resultValue.grantReadAcp = grantReadAcp;
            _resultValue.grantWrite = grantWrite;
            _resultValue.grantWriteAcp = grantWriteAcp;
            return _resultValue;
        }
    }
}
