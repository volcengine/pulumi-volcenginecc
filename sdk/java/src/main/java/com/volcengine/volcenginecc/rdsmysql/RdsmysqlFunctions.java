// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.rdsmysql;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.resources.InvokeArgs;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.rdsmysql.inputs.GetDatabaseArgs;
import com.volcengine.volcenginecc.rdsmysql.inputs.GetDatabasePlainArgs;
import com.volcengine.volcenginecc.rdsmysql.outputs.GetDatabaseResult;
import com.volcengine.volcenginecc.rdsmysql.outputs.GetDatabasesResult;
import java.util.concurrent.CompletableFuture;

public final class RdsmysqlFunctions {
    /**
     * Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args) {
        return getDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static CompletableFuture<GetDatabaseResult> getDatabasePlain(GetDatabasePlainArgs args) {
        return getDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("volcenginecc:rdsmysql/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("volcenginecc:rdsmysql/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static CompletableFuture<GetDatabaseResult> getDatabasePlain(GetDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("volcenginecc:rdsmysql/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabasesResult> getDatabases() {
        return getDatabases(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain() {
        return getDatabasesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(InvokeArgs args) {
        return getDatabases(args, InvokeOptions.Empty);
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain(InvokeArgs args) {
        return getDatabasesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("volcenginecc:rdsmysql/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static Output<GetDatabasesResult> getDatabases(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("volcenginecc:rdsmysql/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Plural Data Source schema for Volcengine::RDSMySQL::Database
     * 
     */
    public static CompletableFuture<GetDatabasesResult> getDatabasesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("volcenginecc:rdsmysql/getDatabases:getDatabases", TypeShape.of(GetDatabasesResult.class), args, Utilities.withVersion(options));
    }
}
