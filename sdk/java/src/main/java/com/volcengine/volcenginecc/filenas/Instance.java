// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.filenas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.filenas.InstanceArgs;
import com.volcengine.volcenginecc.filenas.inputs.InstanceState;
import com.volcengine.volcenginecc.filenas.outputs.InstanceCachePerformance;
import com.volcengine.volcenginecc.filenas.outputs.InstanceCapacity;
import com.volcengine.volcenginecc.filenas.outputs.InstanceTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 文件系统通过标准的 NFS 协议为您提供文件存储服务，用于网络文件远程访问，通过管理控制台创建挂载地址后，即可按需在客户端中通过标准的 POSIX 接口对文件系统进行访问。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.filenas.Instance;
 * import com.volcengine.volcenginecc.filenas.InstanceArgs;
 * import com.pulumi.volcenginecc.filenas.inputs.InstanceCapacityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var fileNASInstanceDemo = new Instance("fileNASInstanceDemo", InstanceArgs.builder()
 *             .fileSystemName("FileNASInstanceDemo")
 *             .capacity(InstanceCapacityArgs.builder()
 *                 .total(105.0)
 *                 .build())
 *             .chargeType("PayAsYouGo")
 *             .fileSystemType("Extreme")
 *             .protocolType("NFS")
 *             .zoneId("cn-beijing-x")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:filenas/instance:Instance example &#34;file_system_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:filenas/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * 缓存型性能信息。
     * 
     */
    @Export(name="cachePerformance", refs={InstanceCachePerformance.class}, tree="[0]")
    private Output<InstanceCachePerformance> cachePerformance;

    /**
     * @return 缓存型性能信息。
     * 
     */
    public Output<InstanceCachePerformance> cachePerformance() {
        return this.cachePerformance;
    }
    /**
     * 文件系统容量。
     * 
     */
    @Export(name="capacity", refs={InstanceCapacity.class}, tree="[0]")
    private Output<InstanceCapacity> capacity;

    /**
     * @return 文件系统容量。
     * 
     */
    public Output<InstanceCapacity> capacity() {
        return this.capacity;
    }
    /**
     * 计费类型，取值 PayAsYouGo，表示按量计费。
     * 
     */
    @Export(name="chargeType", refs={String.class}, tree="[0]")
    private Output<String> chargeType;

    /**
     * @return 计费类型，取值 PayAsYouGo，表示按量计费。
     * 
     */
    public Output<String> chargeType() {
        return this.chargeType;
    }
    /**
     * 创建时间
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return 创建时间
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * 描述信息。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 描述信息。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 文件系统 ID。
     * 
     */
    @Export(name="fileSystemId", refs={String.class}, tree="[0]")
    private Output<String> fileSystemId;

    /**
     * @return 文件系统 ID。
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * 文件系统名称。
     * 
     */
    @Export(name="fileSystemName", refs={String.class}, tree="[0]")
    private Output<String> fileSystemName;

    /**
     * @return 文件系统名称。
     * 
     */
    public Output<String> fileSystemName() {
        return this.fileSystemName;
    }
    /**
     * 文件系统类型。取值说明：Extreme：NAS 极速型；Capacity：NAS 容量型；Cache：NAS 缓存型。
     * 
     */
    @Export(name="fileSystemType", refs={String.class}, tree="[0]")
    private Output<String> fileSystemType;

    /**
     * @return 文件系统类型。取值说明：Extreme：NAS 极速型；Capacity：NAS 容量型；Cache：NAS 缓存型。
     * 
     */
    public Output<String> fileSystemType() {
        return this.fileSystemType;
    }
    /**
     * 所属项目，默认值为 default 项目。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 所属项目，默认值为 default 项目。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 文件系统协议类型。取值 NFS，表示 NFS 协议，常用于 Linux 客户端。
     * 
     */
    @Export(name="protocolType", refs={String.class}, tree="[0]")
    private Output<String> protocolType;

    /**
     * @return 文件系统协议类型。取值 NFS，表示 NFS 协议，常用于 Linux 客户端。
     * 
     */
    public Output<String> protocolType() {
        return this.protocolType;
    }
    /**
     * 快照数量
     * 
     */
    @Export(name="snapshotCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> snapshotCount;

    /**
     * @return 快照数量
     * 
     */
    public Output<Integer> snapshotCount() {
        return this.snapshotCount;
    }
    /**
     * 创建时使用的快照 ID。传入该参数后，将使用该快照新建文件系统。
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output<String> snapshotId;

    /**
     * @return 创建时使用的快照 ID。传入该参数后，将使用该快照新建文件系统。
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * 文件系统状态
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 文件系统状态
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * 存储类型，取值Standard，表示标准型。
     * 
     */
    @Export(name="storageType", refs={String.class}, tree="[0]")
    private Output<String> storageType;

    /**
     * @return 存储类型，取值Standard，表示标准型。
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }
    @Export(name="tags", refs={List.class,InstanceTag.class}, tree="[0,1]")
    private Output<List<InstanceTag>> tags;

    public Output<List<InstanceTag>> tags() {
        return this.tags;
    }
    /**
     * 更新时间
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return 更新时间
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * 可用区 ID。
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return 可用区 ID。
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }
    /**
     * 可用区名称。
     * 
     */
    @Export(name="zoneName", refs={String.class}, tree="[0]")
    private Output<String> zoneName;

    /**
     * @return 可用区名称。
     * 
     */
    public Output<String> zoneName() {
        return this.zoneName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(java.lang.String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(java.lang.String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(java.lang.String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:filenas/instance:Instance", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Instance(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:filenas/instance:Instance", name, state, makeResourceOptions(options, id), false);
    }

    private static InstanceArgs makeArgs(InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InstanceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(java.lang.String name, Output<java.lang.String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
