// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.vpc.EniArgs;
import com.volcengine.volcenginecc.vpc.inputs.EniState;
import com.volcengine.volcenginecc.vpc.outputs.EniPrimaryIpAddress;
import com.volcengine.volcenginecc.vpc.outputs.EniPrivateIpSet;
import com.volcengine.volcenginecc.vpc.outputs.EniTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 网卡即虚拟网卡。在私有网络里，网卡是挂载在云服务器、负载均衡等云资源上的一种网络接口。每张网卡均有一个主私网IP地址。若有需要，可手动为其分配多个辅助私网IP地址。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:vpc/eni:Eni example &#34;network_interface_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:vpc/eni:Eni")
public class Eni extends com.pulumi.resources.CustomResource {
    /**
     * 网卡所有者ID。
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return 网卡所有者ID。
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * 网卡创建时间。
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 网卡创建时间。
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 是否开启随云服务器实例删除，true为开启，false为不开启。
     * 
     */
    @Export(name="deleteOnTermination", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deleteOnTermination;

    /**
     * @return 是否开启随云服务器实例删除，true为开启，false为不开启。
     * 
     */
    public Output<Boolean> deleteOnTermination() {
        return this.deleteOnTermination;
    }
    /**
     * 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
     * 
     */
    @Export(name="ipv6AddressCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> ipv6AddressCount;

    /**
     * @return 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
     * 
     */
    public Output<Integer> ipv6AddressCount() {
        return this.ipv6AddressCount;
    }
    /**
     * 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
     * 
     */
    @Export(name="ipv6Sets", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> ipv6Sets;

    /**
     * @return 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
     * 
     */
    public Output<List<String>> ipv6Sets() {
        return this.ipv6Sets;
    }
    /**
     * 网卡的MAC地址。
     * 
     */
    @Export(name="macAddress", refs={String.class}, tree="[0]")
    private Output<String> macAddress;

    /**
     * @return 网卡的MAC地址。
     * 
     */
    public Output<String> macAddress() {
        return this.macAddress;
    }
    /**
     * 网卡ID。
     * 
     */
    @Export(name="networkInterfaceId", refs={String.class}, tree="[0]")
    private Output<String> networkInterfaceId;

    /**
     * @return 网卡ID。
     * 
     */
    public Output<String> networkInterfaceId() {
        return this.networkInterfaceId;
    }
    /**
     * 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
     * 
     */
    @Export(name="networkInterfaceName", refs={String.class}, tree="[0]")
    private Output<String> networkInterfaceName;

    /**
     * @return 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
     * 
     */
    public Output<String> networkInterfaceName() {
        return this.networkInterfaceName;
    }
    /**
     * 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
     * 
     */
    @Export(name="portSecurityEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> portSecurityEnabled;

    /**
     * @return 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
     * 
     */
    public Output<Boolean> portSecurityEnabled() {
        return this.portSecurityEnabled;
    }
    /**
     * 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
     * 
     */
    @Export(name="primaryIpAddress", refs={EniPrimaryIpAddress.class}, tree="[0]")
    private Output<EniPrimaryIpAddress> primaryIpAddress;

    /**
     * @return 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
     * 
     */
    public Output<EniPrimaryIpAddress> primaryIpAddress() {
        return this.primaryIpAddress;
    }
    @Export(name="privateIpSets", refs={List.class,EniPrivateIpSet.class}, tree="[0,1]")
    private Output<List<EniPrivateIpSet>> privateIpSets;

    public Output<List<EniPrivateIpSet>> privateIpSets() {
        return this.privateIpSets;
    }
    /**
     * 网卡所属项目的名称。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 网卡所属项目的名称。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
     * 
     */
    @Export(name="secondaryPrivateIpAddressCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> secondaryPrivateIpAddressCount;

    /**
     * @return 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
     * 
     */
    public Output<Integer> secondaryPrivateIpAddressCount() {
        return this.secondaryPrivateIpAddressCount;
    }
    /**
     * 辅助网卡加入一个或多个安全组的ID。
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityGroupIds;

    /**
     * @return 辅助网卡加入一个或多个安全组的ID。
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * 是否为火山引擎官方服务网卡，true为是，false为否。
     * 
     */
    @Export(name="serviceManaged", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> serviceManaged;

    /**
     * @return 是否为火山引擎官方服务网卡，true为是，false为否。
     * 
     */
    public Output<Boolean> serviceManaged() {
        return this.serviceManaged;
    }
    /**
     * 网卡的绑定状态。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 网卡的绑定状态。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * 辅助网卡所在子网的ID。
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return 辅助网卡所在子网的ID。
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    @Export(name="tags", refs={List.class,EniTag.class}, tree="[0,1]")
    private Output<List<EniTag>> tags;

    public Output<List<EniTag>> tags() {
        return this.tags;
    }
    /**
     * 网卡类型。primary：主网卡，secondary：辅助网卡
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return 网卡类型。primary：主网卡，secondary：辅助网卡
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * 更新网卡的时间。
     * 
     */
    @Export(name="updatedTime", refs={String.class}, tree="[0]")
    private Output<String> updatedTime;

    /**
     * @return 更新网卡的时间。
     * 
     */
    public Output<String> updatedTime() {
        return this.updatedTime;
    }
    /**
     * 网卡所属的VPC的ID。
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return 网卡所属的VPC的ID。
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * 网卡所属VPC的名称。
     * 
     */
    @Export(name="vpcName", refs={String.class}, tree="[0]")
    private Output<String> vpcName;

    /**
     * @return 网卡所属VPC的名称。
     * 
     */
    public Output<String> vpcName() {
        return this.vpcName;
    }
    /**
     * 网卡所属可用区的ID。
     * 
     */
    @Export(name="zoneId", refs={String.class}, tree="[0]")
    private Output<String> zoneId;

    /**
     * @return 网卡所属可用区的ID。
     * 
     */
    public Output<String> zoneId() {
        return this.zoneId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Eni(java.lang.String name) {
        this(name, EniArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Eni(java.lang.String name, @Nullable EniArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Eni(java.lang.String name, @Nullable EniArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/eni:Eni", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Eni(java.lang.String name, Output<java.lang.String> id, @Nullable EniState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/eni:Eni", name, state, makeResourceOptions(options, id), false);
    }

    private static EniArgs makeArgs(@Nullable EniArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EniArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Eni get(java.lang.String name, Output<java.lang.String> id, @Nullable EniState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Eni(name, id, state, options);
    }
}
