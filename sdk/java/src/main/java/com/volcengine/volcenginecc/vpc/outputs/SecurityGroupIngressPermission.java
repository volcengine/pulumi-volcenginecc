// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SecurityGroupIngressPermission {
    /**
     * @return 源地址的IPv4 CIDR或IPv6 CIDR
     * 
     */
    private @Nullable String cidrIp;
    /**
     * @return 安全组规则的描述信息。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为1~ 255个字符。不填保持原有配置。
     * 
     */
    private @Nullable String description;
    /**
     * @return 安全组规则方向。ingress：入方向。egress：出方向
     * 
     */
    private @Nullable String direction;
    /**
     * @return 访问策略。即CidrIp 、SourceGroupId 或 PrefixListId 对应的资源访问安全组内的网卡。取值如下：accept：允许；drop：拒绝。
     * 
     */
    private @Nullable String policy;
    /**
     * @return 端口范围结束值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口
     * 
     */
    private @Nullable Integer portEnd;
    /**
     * @return 端口范围起始值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口
     * 
     */
    private @Nullable Integer portStart;
    /**
     * @return 前缀列表的ID
     * 
     */
    private @Nullable String prefixListId;
    /**
     * @return 安全组规则优先级，数字越小，代表优先级越高。取值范围：1～100。不填默认值：1
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return 协议类型。tcp、udp、icmp、icmpv6、all
     * 
     */
    private @Nullable String protocol;
    /**
     * @return 源地址安全组ID。即该安全组中的所有网卡的地址作为源地址。
     * 
     */
    private @Nullable String sourceGroupId;

    private SecurityGroupIngressPermission() {}
    /**
     * @return 源地址的IPv4 CIDR或IPv6 CIDR
     * 
     */
    public Optional<String> cidrIp() {
        return Optional.ofNullable(this.cidrIp);
    }
    /**
     * @return 安全组规则的描述信息。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为1~ 255个字符。不填保持原有配置。
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return 安全组规则方向。ingress：入方向。egress：出方向
     * 
     */
    public Optional<String> direction() {
        return Optional.ofNullable(this.direction);
    }
    /**
     * @return 访问策略。即CidrIp 、SourceGroupId 或 PrefixListId 对应的资源访问安全组内的网卡。取值如下：accept：允许；drop：拒绝。
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }
    /**
     * @return 端口范围结束值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口
     * 
     */
    public Optional<Integer> portEnd() {
        return Optional.ofNullable(this.portEnd);
    }
    /**
     * @return 端口范围起始值。1、当Protocol 传入tcp或udp时，取值范围为1~65535。2、当Protocol 传入icmp、icmpv6或all时，仅支持传入-1，表示不限制端口
     * 
     */
    public Optional<Integer> portStart() {
        return Optional.ofNullable(this.portStart);
    }
    /**
     * @return 前缀列表的ID
     * 
     */
    public Optional<String> prefixListId() {
        return Optional.ofNullable(this.prefixListId);
    }
    /**
     * @return 安全组规则优先级，数字越小，代表优先级越高。取值范围：1～100。不填默认值：1
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return 协议类型。tcp、udp、icmp、icmpv6、all
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return 源地址安全组ID。即该安全组中的所有网卡的地址作为源地址。
     * 
     */
    public Optional<String> sourceGroupId() {
        return Optional.ofNullable(this.sourceGroupId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SecurityGroupIngressPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cidrIp;
        private @Nullable String description;
        private @Nullable String direction;
        private @Nullable String policy;
        private @Nullable Integer portEnd;
        private @Nullable Integer portStart;
        private @Nullable String prefixListId;
        private @Nullable Integer priority;
        private @Nullable String protocol;
        private @Nullable String sourceGroupId;
        public Builder() {}
        public Builder(SecurityGroupIngressPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cidrIp = defaults.cidrIp;
    	      this.description = defaults.description;
    	      this.direction = defaults.direction;
    	      this.policy = defaults.policy;
    	      this.portEnd = defaults.portEnd;
    	      this.portStart = defaults.portStart;
    	      this.prefixListId = defaults.prefixListId;
    	      this.priority = defaults.priority;
    	      this.protocol = defaults.protocol;
    	      this.sourceGroupId = defaults.sourceGroupId;
        }

        @CustomType.Setter
        public Builder cidrIp(@Nullable String cidrIp) {

            this.cidrIp = cidrIp;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder direction(@Nullable String direction) {

            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {

            this.policy = policy;
            return this;
        }
        @CustomType.Setter
        public Builder portEnd(@Nullable Integer portEnd) {

            this.portEnd = portEnd;
            return this;
        }
        @CustomType.Setter
        public Builder portStart(@Nullable Integer portStart) {

            this.portStart = portStart;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListId(@Nullable String prefixListId) {

            this.prefixListId = prefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder sourceGroupId(@Nullable String sourceGroupId) {

            this.sourceGroupId = sourceGroupId;
            return this;
        }
        public SecurityGroupIngressPermission build() {
            final var _resultValue = new SecurityGroupIngressPermission();
            _resultValue.cidrIp = cidrIp;
            _resultValue.description = description;
            _resultValue.direction = direction;
            _resultValue.policy = policy;
            _resultValue.portEnd = portEnd;
            _resultValue.portStart = portStart;
            _resultValue.prefixListId = prefixListId;
            _resultValue.priority = priority;
            _resultValue.protocol = protocol;
            _resultValue.sourceGroupId = sourceGroupId;
            return _resultValue;
        }
    }
}
