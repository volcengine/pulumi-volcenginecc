// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.transitrouter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.transitrouter.TransitRouterArgs;
import com.volcengine.volcenginecc.transitrouter.inputs.TransitRouterState;
import com.volcengine.volcenginecc.transitrouter.outputs.TransitRouterAttachment;
import com.volcengine.volcenginecc.transitrouter.outputs.TransitRouterTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 中转路由器服务的运行载体。接受来自网络实例的流量，并根据关联转发路由表进行转发。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.transitrouter.TransitRouter;
 * import com.volcengine.volcenginecc.transitrouter.TransitRouterArgs;
 * import com.pulumi.volcenginecc.transitrouter.inputs.TransitRouterTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var transitRouterDemo = new TransitRouter("transitRouterDemo", TransitRouterArgs.builder()
 *             .transitRouterName("TransitRouterDemo")
 *             .asn(4200001111)
 *             .description("TransitRouterDemo")
 *             .projectName("default")
 *             .tags(TransitRouterTagArgs.builder()
 *                 .key("env")
 *                 .value("test")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:transitrouter/transitRouter:TransitRouter example &#34;transit_router_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:transitrouter/transitRouter:TransitRouter")
public class TransitRouter extends com.pulumi.resources.CustomResource {
    /**
     * 网络实例连接所属的账号ID。
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return 网络实例连接所属的账号ID。
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
     * 
     */
    @Export(name="asn", refs={Integer.class}, tree="[0]")
    private Output<Integer> asn;

    /**
     * @return 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
     * 
     */
    public Output<Integer> asn() {
        return this.asn;
    }
    @Export(name="attachments", refs={List.class,TransitRouterAttachment.class}, tree="[0,1]")
    private Output<List<TransitRouterAttachment>> attachments;

    public Output<List<TransitRouterAttachment>> attachments() {
        return this.attachments;
    }
    /**
     * 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    @Export(name="businessStatus", refs={String.class}, tree="[0]")
    private Output<String> businessStatus;

    /**
     * @return 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    public Output<String> businessStatus() {
        return this.businessStatus;
    }
    /**
     * 网络实例连接的创建时间。
     * 
     */
    @Export(name="creationTime", refs={String.class}, tree="[0]")
    private Output<String> creationTime;

    /**
     * @return 网络实例连接的创建时间。
     * 
     */
    public Output<String> creationTime() {
        return this.creationTime;
    }
    /**
     * 网络实例连接的删除时间。
     * 
     */
    @Export(name="deletedTime", refs={String.class}, tree="[0]")
    private Output<String> deletedTime;

    /**
     * @return 网络实例连接的删除时间。
     * 
     */
    public Output<String> deletedTime() {
        return this.deletedTime;
    }
    /**
     * 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 实例共享的状态。Accepted：已接受。Initial：待接受。
     * 
     */
    @Export(name="grantStatus", refs={String.class}, tree="[0]")
    private Output<String> grantStatus;

    /**
     * @return 实例共享的状态。Accepted：已接受。Initial：待接受。
     * 
     */
    public Output<String> grantStatus() {
        return this.grantStatus;
    }
    /**
     * 中转路由器实例的欠费关停时间。
     * 
     */
    @Export(name="overdueTime", refs={String.class}, tree="[0]")
    private Output<String> overdueTime;

    /**
     * @return 中转路由器实例的欠费关停时间。
     * 
     */
    public Output<String> overdueTime() {
        return this.overdueTime;
    }
    /**
     * 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={List.class,TransitRouterTag.class}, tree="[0,1]")
    private Output<List<TransitRouterTag>> tags;

    public Output<List<TransitRouterTag>> tags() {
        return this.tags;
    }
    /**
     * 中转路由器实例的ID。
     * 
     */
    @Export(name="transitRouterId", refs={String.class}, tree="[0]")
    private Output<String> transitRouterId;

    /**
     * @return 中转路由器实例的ID。
     * 
     */
    public Output<String> transitRouterId() {
        return this.transitRouterId;
    }
    /**
     * 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
     * 
     */
    @Export(name="transitRouterName", refs={String.class}, tree="[0]")
    private Output<String> transitRouterName;

    /**
     * @return 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
     * 
     */
    public Output<String> transitRouterName() {
        return this.transitRouterName;
    }
    /**
     * 中转路由器实例的最近操作时间。
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return 中转路由器实例的最近操作时间。
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TransitRouter(java.lang.String name) {
        this(name, TransitRouterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TransitRouter(java.lang.String name, @Nullable TransitRouterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TransitRouter(java.lang.String name, @Nullable TransitRouterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:transitrouter/transitRouter:TransitRouter", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TransitRouter(java.lang.String name, Output<java.lang.String> id, @Nullable TransitRouterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:transitrouter/transitRouter:TransitRouter", name, state, makeResourceOptions(options, id), false);
    }

    private static TransitRouterArgs makeArgs(@Nullable TransitRouterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TransitRouterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TransitRouter get(java.lang.String name, Output<java.lang.String> id, @Nullable TransitRouterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TransitRouter(name, id, state, options);
    }
}
