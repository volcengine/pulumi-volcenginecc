// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.tos.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBucketLifecycleConfigFilter {
    /**
     * @return 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    private String greaterThanIncludeEqual;
    /**
     * @return 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    private String lessThanIncludeEqual;
    /**
     * @return 设置规则生效于大于指定大小的对象。
     * 
     */
    private Integer objectSizeGreaterThan;
    /**
     * @return 设置规则生效于小于指定大小的对象。
     * 
     */
    private Integer objectSizeLessThan;

    private GetBucketLifecycleConfigFilter() {}
    /**
     * @return 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    public String greaterThanIncludeEqual() {
        return this.greaterThanIncludeEqual;
    }
    /**
     * @return 是否启用相等条件。包括Enabled、Disabled。
     * 
     */
    public String lessThanIncludeEqual() {
        return this.lessThanIncludeEqual;
    }
    /**
     * @return 设置规则生效于大于指定大小的对象。
     * 
     */
    public Integer objectSizeGreaterThan() {
        return this.objectSizeGreaterThan;
    }
    /**
     * @return 设置规则生效于小于指定大小的对象。
     * 
     */
    public Integer objectSizeLessThan() {
        return this.objectSizeLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketLifecycleConfigFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String greaterThanIncludeEqual;
        private String lessThanIncludeEqual;
        private Integer objectSizeGreaterThan;
        private Integer objectSizeLessThan;
        public Builder() {}
        public Builder(GetBucketLifecycleConfigFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.greaterThanIncludeEqual = defaults.greaterThanIncludeEqual;
    	      this.lessThanIncludeEqual = defaults.lessThanIncludeEqual;
    	      this.objectSizeGreaterThan = defaults.objectSizeGreaterThan;
    	      this.objectSizeLessThan = defaults.objectSizeLessThan;
        }

        @CustomType.Setter
        public Builder greaterThanIncludeEqual(String greaterThanIncludeEqual) {
            if (greaterThanIncludeEqual == null) {
              throw new MissingRequiredPropertyException("GetBucketLifecycleConfigFilter", "greaterThanIncludeEqual");
            }
            this.greaterThanIncludeEqual = greaterThanIncludeEqual;
            return this;
        }
        @CustomType.Setter
        public Builder lessThanIncludeEqual(String lessThanIncludeEqual) {
            if (lessThanIncludeEqual == null) {
              throw new MissingRequiredPropertyException("GetBucketLifecycleConfigFilter", "lessThanIncludeEqual");
            }
            this.lessThanIncludeEqual = lessThanIncludeEqual;
            return this;
        }
        @CustomType.Setter
        public Builder objectSizeGreaterThan(Integer objectSizeGreaterThan) {
            if (objectSizeGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetBucketLifecycleConfigFilter", "objectSizeGreaterThan");
            }
            this.objectSizeGreaterThan = objectSizeGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder objectSizeLessThan(Integer objectSizeLessThan) {
            if (objectSizeLessThan == null) {
              throw new MissingRequiredPropertyException("GetBucketLifecycleConfigFilter", "objectSizeLessThan");
            }
            this.objectSizeLessThan = objectSizeLessThan;
            return this;
        }
        public GetBucketLifecycleConfigFilter build() {
            final var _resultValue = new GetBucketLifecycleConfigFilter();
            _resultValue.greaterThanIncludeEqual = greaterThanIncludeEqual;
            _resultValue.lessThanIncludeEqual = lessThanIncludeEqual;
            _resultValue.objectSizeGreaterThan = objectSizeGreaterThan;
            _resultValue.objectSizeLessThan = objectSizeLessThan;
            return _resultValue;
        }
    }
}
