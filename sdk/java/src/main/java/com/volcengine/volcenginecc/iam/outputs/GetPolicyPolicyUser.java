// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.iam.outputs.GetPolicyPolicyUserPolicyScope;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPolicyPolicyUser {
    /**
     * @return 策略绑定时间。
     * 
     */
    private String createdTime;
    /**
     * @return 策略描述。
     * 
     */
    private String description;
    /**
     * @return 显示名称。
     * 
     */
    private String displayName;
    /**
     * @return 唯一标识。
     * 
     */
    private Integer entitiesId;
    /**
     * @return 对应用户、角色、用户组的名称。
     * 
     */
    private String name;
    /**
     * @return 策略绑定的项目列表。
     * 
     */
    private List<GetPolicyPolicyUserPolicyScope> policyScopes;

    private GetPolicyPolicyUser() {}
    /**
     * @return 策略绑定时间。
     * 
     */
    public String createdTime() {
        return this.createdTime;
    }
    /**
     * @return 策略描述。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return 显示名称。
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return 唯一标识。
     * 
     */
    public Integer entitiesId() {
        return this.entitiesId;
    }
    /**
     * @return 对应用户、角色、用户组的名称。
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return 策略绑定的项目列表。
     * 
     */
    public List<GetPolicyPolicyUserPolicyScope> policyScopes() {
        return this.policyScopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyPolicyUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdTime;
        private String description;
        private String displayName;
        private Integer entitiesId;
        private String name;
        private List<GetPolicyPolicyUserPolicyScope> policyScopes;
        public Builder() {}
        public Builder(GetPolicyPolicyUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdTime = defaults.createdTime;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.entitiesId = defaults.entitiesId;
    	      this.name = defaults.name;
    	      this.policyScopes = defaults.policyScopes;
        }

        @CustomType.Setter
        public Builder createdTime(String createdTime) {
            if (createdTime == null) {
              throw new MissingRequiredPropertyException("GetPolicyPolicyUser", "createdTime");
            }
            this.createdTime = createdTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPolicyPolicyUser", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetPolicyPolicyUser", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder entitiesId(Integer entitiesId) {
            if (entitiesId == null) {
              throw new MissingRequiredPropertyException("GetPolicyPolicyUser", "entitiesId");
            }
            this.entitiesId = entitiesId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPolicyPolicyUser", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder policyScopes(List<GetPolicyPolicyUserPolicyScope> policyScopes) {
            if (policyScopes == null) {
              throw new MissingRequiredPropertyException("GetPolicyPolicyUser", "policyScopes");
            }
            this.policyScopes = policyScopes;
            return this;
        }
        public Builder policyScopes(GetPolicyPolicyUserPolicyScope... policyScopes) {
            return policyScopes(List.of(policyScopes));
        }
        public GetPolicyPolicyUser build() {
            final var _resultValue = new GetPolicyPolicyUser();
            _resultValue.createdTime = createdTime;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.entitiesId = entitiesId;
            _resultValue.name = name;
            _resultValue.policyScopes = policyScopes;
            return _resultValue;
        }
    }
}
