// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.waf.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainTcpListenerConfig {
    private String accessProtocol;
    private Integer defenceMode;
    private String instanceId;
    private String instanceName;
    private String listenerId;
    private Integer lostAssociationFromAlb;
    private String port;
    private String protocol;

    private GetDomainTcpListenerConfig() {}
    public String accessProtocol() {
        return this.accessProtocol;
    }
    public Integer defenceMode() {
        return this.defenceMode;
    }
    public String instanceId() {
        return this.instanceId;
    }
    public String instanceName() {
        return this.instanceName;
    }
    public String listenerId() {
        return this.listenerId;
    }
    public Integer lostAssociationFromAlb() {
        return this.lostAssociationFromAlb;
    }
    public String port() {
        return this.port;
    }
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainTcpListenerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessProtocol;
        private Integer defenceMode;
        private String instanceId;
        private String instanceName;
        private String listenerId;
        private Integer lostAssociationFromAlb;
        private String port;
        private String protocol;
        public Builder() {}
        public Builder(GetDomainTcpListenerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessProtocol = defaults.accessProtocol;
    	      this.defenceMode = defaults.defenceMode;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.listenerId = defaults.listenerId;
    	      this.lostAssociationFromAlb = defaults.lostAssociationFromAlb;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder accessProtocol(String accessProtocol) {
            if (accessProtocol == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "accessProtocol");
            }
            this.accessProtocol = accessProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder defenceMode(Integer defenceMode) {
            if (defenceMode == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "defenceMode");
            }
            this.defenceMode = defenceMode;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder listenerId(String listenerId) {
            if (listenerId == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "listenerId");
            }
            this.listenerId = listenerId;
            return this;
        }
        @CustomType.Setter
        public Builder lostAssociationFromAlb(Integer lostAssociationFromAlb) {
            if (lostAssociationFromAlb == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "lostAssociationFromAlb");
            }
            this.lostAssociationFromAlb = lostAssociationFromAlb;
            return this;
        }
        @CustomType.Setter
        public Builder port(String port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetDomainTcpListenerConfig", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public GetDomainTcpListenerConfig build() {
            final var _resultValue = new GetDomainTcpListenerConfig();
            _resultValue.accessProtocol = accessProtocol;
            _resultValue.defenceMode = defenceMode;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.listenerId = listenerId;
            _resultValue.lostAssociationFromAlb = lostAssociationFromAlb;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
