// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.vpc.PrefixListArgs;
import com.volcengine.volcenginecc.vpc.inputs.PrefixListState;
import com.volcengine.volcenginecc.vpc.outputs.PrefixListAssociationsRouteTable;
import com.volcengine.volcenginecc.vpc.outputs.PrefixListAssociationsSecurityGroup;
import com.volcengine.volcenginecc.vpc.outputs.PrefixListPrefixListEntry;
import com.volcengine.volcenginecc.vpc.outputs.PrefixListTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 前缀列表是一组CIDR地址块的集合，用于简化安全组规则、路由表条目的配置。当前缀列表修改时，所有关联它的资源均会同步修改。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.vpc.PrefixList;
 * import com.volcengine.volcenginecc.vpc.PrefixListArgs;
 * import com.pulumi.volcenginecc.vpc.inputs.PrefixListPrefixListEntryArgs;
 * import com.pulumi.volcenginecc.vpc.inputs.PrefixListTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var prefixlistDemo = new PrefixList("prefixlistDemo", PrefixListArgs.builder()
 *             .description("PrefixlistDemo Example")
 *             .ipVersion("IPv4")
 *             .maxEntries(20)
 *             .prefixListName("my-prefix-list")
 *             .projectName("default")
 *             .prefixListEntries(PrefixListPrefixListEntryArgs.builder()
 *                 .cidr("192.168.0.0/*")
 *                 .description("privite description")
 *                 .build())
 *             .tags(PrefixListTagArgs.builder()
 *                 .key("env")
 *                 .value("test")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:vpc/prefixList:PrefixList example &#34;prefix_list_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:vpc/prefixList:PrefixList")
public class PrefixList extends com.pulumi.resources.CustomResource {
    /**
     * 前缀列表关联的资源数量。
     * 
     */
    @Export(name="associationCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> associationCount;

    /**
     * @return 前缀列表关联的资源数量。
     * 
     */
    public Output<Integer> associationCount() {
        return this.associationCount;
    }
    @Export(name="associationsRouteTables", refs={List.class,PrefixListAssociationsRouteTable.class}, tree="[0,1]")
    private Output<List<PrefixListAssociationsRouteTable>> associationsRouteTables;

    public Output<List<PrefixListAssociationsRouteTable>> associationsRouteTables() {
        return this.associationsRouteTables;
    }
    @Export(name="associationsSecurityGroups", refs={List.class,PrefixListAssociationsSecurityGroup.class}, tree="[0,1]")
    private Output<List<PrefixListAssociationsSecurityGroup>> associationsSecurityGroups;

    public Output<List<PrefixListAssociationsSecurityGroup>> associationsSecurityGroups() {
        return this.associationsSecurityGroups;
    }
    /**
     * 前缀列表的创建时间。
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 前缀列表的创建时间。
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
     * 
     */
    @Export(name="ipVersion", refs={String.class}, tree="[0]")
    private Output<String> ipVersion;

    /**
     * @return IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
     * 
     */
    public Output<String> ipVersion() {
        return this.ipVersion;
    }
    /**
     * 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
     * 
     */
    @Export(name="maxEntries", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxEntries;

    /**
     * @return 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
     * 
     */
    public Output<Integer> maxEntries() {
        return this.maxEntries;
    }
    @Export(name="prefixListEntries", refs={List.class,PrefixListPrefixListEntry.class}, tree="[0,1]")
    private Output<List<PrefixListPrefixListEntry>> prefixListEntries;

    public Output<List<PrefixListPrefixListEntry>> prefixListEntries() {
        return this.prefixListEntries;
    }
    /**
     * 前缀列表的ID。
     * 
     */
    @Export(name="prefixListId", refs={String.class}, tree="[0]")
    private Output<String> prefixListId;

    /**
     * @return 前缀列表的ID。
     * 
     */
    public Output<String> prefixListId() {
        return this.prefixListId;
    }
    /**
     * 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
     * 
     */
    @Export(name="prefixListName", refs={String.class}, tree="[0]")
    private Output<String> prefixListName;

    /**
     * @return 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
     * 
     */
    public Output<String> prefixListName() {
        return this.prefixListName;
    }
    /**
     * 前缀列表所属项目的名称，不填默认加入default项目。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 前缀列表所属项目的名称，不填默认加入default项目。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={List.class,PrefixListTag.class}, tree="[0,1]")
    private Output<List<PrefixListTag>> tags;

    public Output<List<PrefixListTag>> tags() {
        return this.tags;
    }
    /**
     * 前缀列表的最近一次修改时间。
     * 
     */
    @Export(name="updatedTime", refs={String.class}, tree="[0]")
    private Output<String> updatedTime;

    /**
     * @return 前缀列表的最近一次修改时间。
     * 
     */
    public Output<String> updatedTime() {
        return this.updatedTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PrefixList(java.lang.String name) {
        this(name, PrefixListArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PrefixList(java.lang.String name, PrefixListArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PrefixList(java.lang.String name, PrefixListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/prefixList:PrefixList", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PrefixList(java.lang.String name, Output<java.lang.String> id, @Nullable PrefixListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/prefixList:PrefixList", name, state, makeResourceOptions(options, id), false);
    }

    private static PrefixListArgs makeArgs(PrefixListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PrefixListArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PrefixList get(java.lang.String name, Output<java.lang.String> id, @Nullable PrefixListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PrefixList(name, id, state, options);
    }
}
