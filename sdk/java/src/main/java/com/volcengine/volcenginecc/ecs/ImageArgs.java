// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.ecs.inputs.ImageDetectionResultsArgs;
import com.volcengine.volcenginecc.ecs.inputs.ImageTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageArgs Empty = new ImageArgs();

    /**
     * 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 镜像的检测结果。
     * 
     */
    @Import(name="detectionResults")
    private @Nullable Output<ImageDetectionResultsArgs> detectionResults;

    /**
     * @return 镜像的检测结果。
     * 
     */
    public Optional<Output<ImageDetectionResultsArgs>> detectionResults() {
        return Optional.ofNullable(this.detectionResults);
    }

    /**
     * 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
     * 
     */
    @Import(name="imageName", required=true)
    private Output<String> imageName;

    /**
     * @return 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
     * 
     */
    public Output<String> imageName() {
        return this.imageName;
    }

    /**
     * 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * 镜像的内核版本。
     * 
     */
    @Import(name="kernel")
    private @Nullable Output<String> kernel;

    /**
     * @return 镜像的内核版本。
     * 
     */
    public Optional<Output<String>> kernel() {
        return Optional.ofNullable(this.kernel);
    }

    /**
     * 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * 镜像操作系统的名称。
     * 
     */
    @Import(name="osName")
    private @Nullable Output<String> osName;

    /**
     * @return 镜像操作系统的名称。
     * 
     */
    public Optional<Output<String>> osName() {
        return Optional.ofNullable(this.osName);
    }

    /**
     * 操作系统类型。
     * 
     */
    @Import(name="osType")
    private @Nullable Output<String> osType;

    /**
     * @return 操作系统类型。
     * 
     */
    public Optional<Output<String>> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * 镜像的发行版本。
     * 
     */
    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    /**
     * @return 镜像的发行版本。
     * 
     */
    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    /**
     * 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 镜像共享的账户
     * 
     */
    @Import(name="sharePermissions")
    private @Nullable Output<List<String>> sharePermissions;

    /**
     * @return 镜像共享的账户
     * 
     */
    public Optional<Output<List<String>>> sharePermissions() {
        return Optional.ofNullable(this.sharePermissions);
    }

    /**
     * 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
     * 
     */
    @Import(name="snapshotGroupId")
    private @Nullable Output<String> snapshotGroupId;

    /**
     * @return 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
     * 
     */
    public Optional<Output<String>> snapshotGroupId() {
        return Optional.ofNullable(this.snapshotGroupId);
    }

    /**
     * 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
     * 
     */
    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    /**
     * @return 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
     * 
     */
    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    @Import(name="tags")
    private @Nullable Output<List<ImageTagArgs>> tags;

    public Optional<Output<List<ImageTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ImageArgs() {}

    private ImageArgs(ImageArgs $) {
        this.description = $.description;
        this.detectionResults = $.detectionResults;
        this.imageName = $.imageName;
        this.instanceId = $.instanceId;
        this.kernel = $.kernel;
        this.licenseType = $.licenseType;
        this.osName = $.osName;
        this.osType = $.osType;
        this.platform = $.platform;
        this.platformVersion = $.platformVersion;
        this.projectName = $.projectName;
        this.sharePermissions = $.sharePermissions;
        this.snapshotGroupId = $.snapshotGroupId;
        this.snapshotId = $.snapshotId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageArgs $;

        public Builder() {
            $ = new ImageArgs();
        }

        public Builder(ImageArgs defaults) {
            $ = new ImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param detectionResults 镜像的检测结果。
         * 
         * @return builder
         * 
         */
        public Builder detectionResults(@Nullable Output<ImageDetectionResultsArgs> detectionResults) {
            $.detectionResults = detectionResults;
            return this;
        }

        /**
         * @param detectionResults 镜像的检测结果。
         * 
         * @return builder
         * 
         */
        public Builder detectionResults(ImageDetectionResultsArgs detectionResults) {
            return detectionResults(Output.of(detectionResults));
        }

        /**
         * @param imageName 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
         * 
         * @return builder
         * 
         */
        public Builder imageName(Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        /**
         * @param imageName 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
         * 
         * @return builder
         * 
         */
        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        /**
         * @param instanceId 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param kernel 镜像的内核版本。
         * 
         * @return builder
         * 
         */
        public Builder kernel(@Nullable Output<String> kernel) {
            $.kernel = kernel;
            return this;
        }

        /**
         * @param kernel 镜像的内核版本。
         * 
         * @return builder
         * 
         */
        public Builder kernel(String kernel) {
            return kernel(Output.of(kernel));
        }

        /**
         * @param licenseType 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param osName 镜像操作系统的名称。
         * 
         * @return builder
         * 
         */
        public Builder osName(@Nullable Output<String> osName) {
            $.osName = osName;
            return this;
        }

        /**
         * @param osName 镜像操作系统的名称。
         * 
         * @return builder
         * 
         */
        public Builder osName(String osName) {
            return osName(Output.of(osName));
        }

        /**
         * @param osType 操作系统类型。
         * 
         * @return builder
         * 
         */
        public Builder osType(@Nullable Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType 操作系统类型。
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        /**
         * @param platform 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param platformVersion 镜像的发行版本。
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        /**
         * @param platformVersion 镜像的发行版本。
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        /**
         * @param projectName 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param sharePermissions 镜像共享的账户
         * 
         * @return builder
         * 
         */
        public Builder sharePermissions(@Nullable Output<List<String>> sharePermissions) {
            $.sharePermissions = sharePermissions;
            return this;
        }

        /**
         * @param sharePermissions 镜像共享的账户
         * 
         * @return builder
         * 
         */
        public Builder sharePermissions(List<String> sharePermissions) {
            return sharePermissions(Output.of(sharePermissions));
        }

        /**
         * @param sharePermissions 镜像共享的账户
         * 
         * @return builder
         * 
         */
        public Builder sharePermissions(String... sharePermissions) {
            return sharePermissions(List.of(sharePermissions));
        }

        /**
         * @param snapshotGroupId 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
         * 
         * @return builder
         * 
         */
        public Builder snapshotGroupId(@Nullable Output<String> snapshotGroupId) {
            $.snapshotGroupId = snapshotGroupId;
            return this;
        }

        /**
         * @param snapshotGroupId 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
         * 
         * @return builder
         * 
         */
        public Builder snapshotGroupId(String snapshotGroupId) {
            return snapshotGroupId(Output.of(snapshotGroupId));
        }

        /**
         * @param snapshotId 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        public Builder tags(@Nullable Output<List<ImageTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<ImageTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(ImageTagArgs... tags) {
            return tags(List.of(tags));
        }

        public ImageArgs build() {
            if ($.imageName == null) {
                throw new MissingRequiredPropertyException("ImageArgs", "imageName");
            }
            return $;
        }
    }

}
