// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.clb.outputs.GetRuleRedirectConfig;
import com.volcengine.volcenginecc.clb.outputs.GetRuleTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRuleResult {
    /**
     * @return 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
     * 
     */
    private String actionType;
    /**
     * @return 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
     * 
     */
    private String description;
    /**
     * @return 转发规则的域名。
     * 
     */
    private String domain;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 监听器ID。
     * 
     */
    private String listenerId;
    /**
     * @return 重定向相关配置信息。
     * 
     */
    private GetRuleRedirectConfig redirectConfig;
    /**
     * @return 转发规则ID。
     * 
     */
    private String ruleId;
    /**
     * @return 转发规则关联的后端服务器组的ID。
     * 
     */
    private String serverGroupId;
    /**
     * @return 标签列表。
     * 
     */
    private List<GetRuleTag> tags;
    /**
     * @return 转发规则的URL。
     * 
     */
    private String url;

    private GetRuleResult() {}
    /**
     * @return 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
     * 
     */
    public String actionType() {
        return this.actionType;
    }
    /**
     * @return 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return 转发规则的域名。
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 监听器ID。
     * 
     */
    public String listenerId() {
        return this.listenerId;
    }
    /**
     * @return 重定向相关配置信息。
     * 
     */
    public GetRuleRedirectConfig redirectConfig() {
        return this.redirectConfig;
    }
    /**
     * @return 转发规则ID。
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }
    /**
     * @return 转发规则关联的后端服务器组的ID。
     * 
     */
    public String serverGroupId() {
        return this.serverGroupId;
    }
    /**
     * @return 标签列表。
     * 
     */
    public List<GetRuleTag> tags() {
        return this.tags;
    }
    /**
     * @return 转发规则的URL。
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actionType;
        private String description;
        private String domain;
        private String id;
        private String listenerId;
        private GetRuleRedirectConfig redirectConfig;
        private String ruleId;
        private String serverGroupId;
        private List<GetRuleTag> tags;
        private String url;
        public Builder() {}
        public Builder(GetRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.description = defaults.description;
    	      this.domain = defaults.domain;
    	      this.id = defaults.id;
    	      this.listenerId = defaults.listenerId;
    	      this.redirectConfig = defaults.redirectConfig;
    	      this.ruleId = defaults.ruleId;
    	      this.serverGroupId = defaults.serverGroupId;
    	      this.tags = defaults.tags;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder actionType(String actionType) {
            if (actionType == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "actionType");
            }
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder listenerId(String listenerId) {
            if (listenerId == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "listenerId");
            }
            this.listenerId = listenerId;
            return this;
        }
        @CustomType.Setter
        public Builder redirectConfig(GetRuleRedirectConfig redirectConfig) {
            if (redirectConfig == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "redirectConfig");
            }
            this.redirectConfig = redirectConfig;
            return this;
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            if (ruleId == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "ruleId");
            }
            this.ruleId = ruleId;
            return this;
        }
        @CustomType.Setter
        public Builder serverGroupId(String serverGroupId) {
            if (serverGroupId == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "serverGroupId");
            }
            this.serverGroupId = serverGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetRuleTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetRuleTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("GetRuleResult", "url");
            }
            this.url = url;
            return this;
        }
        public GetRuleResult build() {
            final var _resultValue = new GetRuleResult();
            _resultValue.actionType = actionType;
            _resultValue.description = description;
            _resultValue.domain = domain;
            _resultValue.id = id;
            _resultValue.listenerId = listenerId;
            _resultValue.redirectConfig = redirectConfig;
            _resultValue.ruleId = ruleId;
            _resultValue.serverGroupId = serverGroupId;
            _resultValue.tags = tags;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
