// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.transitrouter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.volcengine.volcenginecc.transitrouter.outputs.TransitRouterAttachmentTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransitRouterAttachment {
    /**
     * @return 网络实例连接所属的账号ID。
     * 
     */
    private @Nullable String accountId;
    /**
     * @return 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
     * 
     */
    private @Nullable Boolean autoPublishRouteEnabled;
    /**
     * @return 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    private @Nullable String businessStatus;
    /**
     * @return 网络实例连接的创建时间。
     * 
     */
    private @Nullable String creationTime;
    /**
     * @return 网络实例连接的删除时间。
     * 
     */
    private @Nullable String deletedTime;
    /**
     * @return 网络实例连接的描述信息。
     * 
     */
    private @Nullable String description;
    /**
     * @return 是否开启IPv6功能。true：是。false：否。
     * 
     */
    private @Nullable Boolean ipv6Enabled;
    /**
     * @return 网络实例连接的欠费关停时间。
     * 
     */
    private @Nullable String overdueTime;
    /**
     * @return 网络实例的ID。
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    private @Nullable String status;
    private @Nullable List<TransitRouterAttachmentTag> tags;
    /**
     * @return 网络实例连接的ID。
     * 
     */
    private @Nullable String transitRouterAttachmentId;
    /**
     * @return 网络实例连接的名称。
     * 
     */
    private @Nullable String transitRouterAttachmentName;
    /**
     * @return 跨地域连接关联的转发策略的ID。
     * 
     */
    private @Nullable String transitRouterForwardPolicyTableId;
    /**
     * @return 中转路由器实例的ID。
     * 
     */
    private @Nullable String transitRouterId;
    /**
     * @return 网络实例连接关联转发的路由表ID。
     * 
     */
    private @Nullable String transitRouterRouteTableId;
    /**
     * @return 跨地域连接关联的流标记策略的ID。
     * 
     */
    private @Nullable String transitRouterTrafficQosMarkingPolicyId;
    /**
     * @return 跨地域连接关联的流队列策略的ID。
     * 
     */
    private @Nullable String transitRouterTrafficQosQueuePolicyId;
    /**
     * @return 网络实例连接的最近操作时间。
     * 
     */
    private @Nullable String updateTime;

    private TransitRouterAttachment() {}
    /**
     * @return 网络实例连接所属的账号ID。
     * 
     */
    public Optional<String> accountId() {
        return Optional.ofNullable(this.accountId);
    }
    /**
     * @return 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
     * 
     */
    public Optional<Boolean> autoPublishRouteEnabled() {
        return Optional.ofNullable(this.autoPublishRouteEnabled);
    }
    /**
     * @return 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    public Optional<String> businessStatus() {
        return Optional.ofNullable(this.businessStatus);
    }
    /**
     * @return 网络实例连接的创建时间。
     * 
     */
    public Optional<String> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }
    /**
     * @return 网络实例连接的删除时间。
     * 
     */
    public Optional<String> deletedTime() {
        return Optional.ofNullable(this.deletedTime);
    }
    /**
     * @return 网络实例连接的描述信息。
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return 是否开启IPv6功能。true：是。false：否。
     * 
     */
    public Optional<Boolean> ipv6Enabled() {
        return Optional.ofNullable(this.ipv6Enabled);
    }
    /**
     * @return 网络实例连接的欠费关停时间。
     * 
     */
    public Optional<String> overdueTime() {
        return Optional.ofNullable(this.overdueTime);
    }
    /**
     * @return 网络实例的ID。
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public List<TransitRouterAttachmentTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return 网络实例连接的ID。
     * 
     */
    public Optional<String> transitRouterAttachmentId() {
        return Optional.ofNullable(this.transitRouterAttachmentId);
    }
    /**
     * @return 网络实例连接的名称。
     * 
     */
    public Optional<String> transitRouterAttachmentName() {
        return Optional.ofNullable(this.transitRouterAttachmentName);
    }
    /**
     * @return 跨地域连接关联的转发策略的ID。
     * 
     */
    public Optional<String> transitRouterForwardPolicyTableId() {
        return Optional.ofNullable(this.transitRouterForwardPolicyTableId);
    }
    /**
     * @return 中转路由器实例的ID。
     * 
     */
    public Optional<String> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }
    /**
     * @return 网络实例连接关联转发的路由表ID。
     * 
     */
    public Optional<String> transitRouterRouteTableId() {
        return Optional.ofNullable(this.transitRouterRouteTableId);
    }
    /**
     * @return 跨地域连接关联的流标记策略的ID。
     * 
     */
    public Optional<String> transitRouterTrafficQosMarkingPolicyId() {
        return Optional.ofNullable(this.transitRouterTrafficQosMarkingPolicyId);
    }
    /**
     * @return 跨地域连接关联的流队列策略的ID。
     * 
     */
    public Optional<String> transitRouterTrafficQosQueuePolicyId() {
        return Optional.ofNullable(this.transitRouterTrafficQosQueuePolicyId);
    }
    /**
     * @return 网络实例连接的最近操作时间。
     * 
     */
    public Optional<String> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransitRouterAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountId;
        private @Nullable Boolean autoPublishRouteEnabled;
        private @Nullable String businessStatus;
        private @Nullable String creationTime;
        private @Nullable String deletedTime;
        private @Nullable String description;
        private @Nullable Boolean ipv6Enabled;
        private @Nullable String overdueTime;
        private @Nullable String resourceId;
        private @Nullable String resourceType;
        private @Nullable String status;
        private @Nullable List<TransitRouterAttachmentTag> tags;
        private @Nullable String transitRouterAttachmentId;
        private @Nullable String transitRouterAttachmentName;
        private @Nullable String transitRouterForwardPolicyTableId;
        private @Nullable String transitRouterId;
        private @Nullable String transitRouterRouteTableId;
        private @Nullable String transitRouterTrafficQosMarkingPolicyId;
        private @Nullable String transitRouterTrafficQosQueuePolicyId;
        private @Nullable String updateTime;
        public Builder() {}
        public Builder(TransitRouterAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.autoPublishRouteEnabled = defaults.autoPublishRouteEnabled;
    	      this.businessStatus = defaults.businessStatus;
    	      this.creationTime = defaults.creationTime;
    	      this.deletedTime = defaults.deletedTime;
    	      this.description = defaults.description;
    	      this.ipv6Enabled = defaults.ipv6Enabled;
    	      this.overdueTime = defaults.overdueTime;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceType = defaults.resourceType;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.transitRouterAttachmentId = defaults.transitRouterAttachmentId;
    	      this.transitRouterAttachmentName = defaults.transitRouterAttachmentName;
    	      this.transitRouterForwardPolicyTableId = defaults.transitRouterForwardPolicyTableId;
    	      this.transitRouterId = defaults.transitRouterId;
    	      this.transitRouterRouteTableId = defaults.transitRouterRouteTableId;
    	      this.transitRouterTrafficQosMarkingPolicyId = defaults.transitRouterTrafficQosMarkingPolicyId;
    	      this.transitRouterTrafficQosQueuePolicyId = defaults.transitRouterTrafficQosQueuePolicyId;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder accountId(@Nullable String accountId) {

            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder autoPublishRouteEnabled(@Nullable Boolean autoPublishRouteEnabled) {

            this.autoPublishRouteEnabled = autoPublishRouteEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder businessStatus(@Nullable String businessStatus) {

            this.businessStatus = businessStatus;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(@Nullable String creationTime) {

            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder deletedTime(@Nullable String deletedTime) {

            this.deletedTime = deletedTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Enabled(@Nullable Boolean ipv6Enabled) {

            this.ipv6Enabled = ipv6Enabled;
            return this;
        }
        @CustomType.Setter
        public Builder overdueTime(@Nullable String overdueTime) {

            this.overdueTime = overdueTime;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<TransitRouterAttachmentTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(TransitRouterAttachmentTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentId(@Nullable String transitRouterAttachmentId) {

            this.transitRouterAttachmentId = transitRouterAttachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterAttachmentName(@Nullable String transitRouterAttachmentName) {

            this.transitRouterAttachmentName = transitRouterAttachmentName;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterForwardPolicyTableId(@Nullable String transitRouterForwardPolicyTableId) {

            this.transitRouterForwardPolicyTableId = transitRouterForwardPolicyTableId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterId(@Nullable String transitRouterId) {

            this.transitRouterId = transitRouterId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterRouteTableId(@Nullable String transitRouterRouteTableId) {

            this.transitRouterRouteTableId = transitRouterRouteTableId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterTrafficQosMarkingPolicyId(@Nullable String transitRouterTrafficQosMarkingPolicyId) {

            this.transitRouterTrafficQosMarkingPolicyId = transitRouterTrafficQosMarkingPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterTrafficQosQueuePolicyId(@Nullable String transitRouterTrafficQosQueuePolicyId) {

            this.transitRouterTrafficQosQueuePolicyId = transitRouterTrafficQosQueuePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(@Nullable String updateTime) {

            this.updateTime = updateTime;
            return this;
        }
        public TransitRouterAttachment build() {
            final var _resultValue = new TransitRouterAttachment();
            _resultValue.accountId = accountId;
            _resultValue.autoPublishRouteEnabled = autoPublishRouteEnabled;
            _resultValue.businessStatus = businessStatus;
            _resultValue.creationTime = creationTime;
            _resultValue.deletedTime = deletedTime;
            _resultValue.description = description;
            _resultValue.ipv6Enabled = ipv6Enabled;
            _resultValue.overdueTime = overdueTime;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceType = resourceType;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.transitRouterAttachmentId = transitRouterAttachmentId;
            _resultValue.transitRouterAttachmentName = transitRouterAttachmentName;
            _resultValue.transitRouterForwardPolicyTableId = transitRouterForwardPolicyTableId;
            _resultValue.transitRouterId = transitRouterId;
            _resultValue.transitRouterRouteTableId = transitRouterRouteTableId;
            _resultValue.transitRouterTrafficQosMarkingPolicyId = transitRouterTrafficQosMarkingPolicyId;
            _resultValue.transitRouterTrafficQosQueuePolicyId = transitRouterTrafficQosQueuePolicyId;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
