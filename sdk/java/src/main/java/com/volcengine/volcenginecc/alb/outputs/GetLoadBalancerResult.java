// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerEipBillingConfig;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerGlobalAccelerator;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerIpv6EipBillingConfig;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerTag;
import com.volcengine.volcenginecc.alb.outputs.GetLoadBalancerZoneMapping;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerResult {
    /**
     * @return ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&amp;IPv6 双栈类型。
     * 
     */
    private String addressIpVersion;
    /**
     * @return 绑定的共享带宽包ID，可实现带宽共享。
     * 
     */
    private String bandwidthPackageId;
    /**
     * @return ALB 实例的服务状态。Normal：正常；FinancialLocked：因欠费被锁定。
     * 
     */
    private String businessStatus;
    /**
     * @return ALB 实例的创建时间。
     * 
     */
    private String createTime;
    /**
     * @return 删除保护开关。on：开启；off：关闭。
     * 
     */
    private String deleteProtection;
    /**
     * @return ALB 实例的预期回收时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
     * 
     */
    private String deletedTime;
    /**
     * @return ALB 实例的描述。
     * 
     */
    private String description;
    /**
     * @return DNS域名。
     * 
     */
    private String dnsName;
    /**
     * @return 公网IP的计费配置，仅适用于公网实例。
     * 
     */
    private GetLoadBalancerEipBillingConfig eipBillingConfig;
    /**
     * @return 全球加速器配置，用于提升跨地域访问速度。
     * 
     */
    private GetLoadBalancerGlobalAccelerator globalAccelerator;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return IPv6公网IP的计費配置，仅适用于公网实例。
     * 
     */
    private GetLoadBalancerIpv6EipBillingConfig ipv6EipBillingConfig;
    /**
     * @return ALB实例计费类型，当前仅支持按量计费（取值为1）。
     * 
     */
    private Integer loadBalancerBillingType;
    /**
     * @return 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
     * 
     */
    private String loadBalancerEdition;
    /**
     * @return ALB 实例 ID。
     * 
     */
    private String loadBalancerId;
    /**
     * @return ALB 实例的名称。
     * 
     */
    private String loadBalancerName;
    /**
     * @return ALB 实例被冻结的原因，例如 Financial（欠费）或 Security（安全原因）。仅在实例被锁定时返回。
     * 
     */
    private String lockReason;
    /**
     * @return 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
     * 
     */
    private String modificationProtectionReason;
    /**
     * @return 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
     * 
     */
    private String modificationProtectionStatus;
    /**
     * @return ALB 实例的冻结时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
     * 
     */
    private String overdueTime;
    /**
     * @return 实例所属项目名称。
     * 
     */
    private String projectName;
    /**
     * @return ALB 实例状态：Active（运行中）、Provisioning（创建中）、Configuring（配置中）、Deleting（删除中）、CreateFailed（创建失败）、Inactive（已停止）。
     * 
     */
    private String status;
    /**
     * @return 为实例绑定的标签列表，用于分类和计费。
     * 
     */
    private List<GetLoadBalancerTag> tags;
    /**
     * @return ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
     * 
     */
    private String type;
    /**
     * @return ALB 实例的最后更新时间。
     * 
     */
    private String updateTime;
    /**
     * @return 负载均衡实例所属的私有网络（VPC）的ID。
     * 
     */
    private String vpcId;
    /**
     * @return ALB 实例绑定的 WAF 安全防护实例 ID。
     * 
     */
    private String wafInstanceId;
    /**
     * @return WAF防护的域名，用于精确匹配防护规则。
     * 
     */
    private String wafProtectedDomain;
    /**
     * @return WAF 安全防护开关。on：开启；off：关闭。
     * 
     */
    private String wafProtectionEnabled;
    /**
     * @return 可用区映射列表，定义了实例在哪些可用区提供服务。
     * 
     */
    private List<GetLoadBalancerZoneMapping> zoneMappings;

    private GetLoadBalancerResult() {}
    /**
     * @return ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&amp;IPv6 双栈类型。
     * 
     */
    public String addressIpVersion() {
        return this.addressIpVersion;
    }
    /**
     * @return 绑定的共享带宽包ID，可实现带宽共享。
     * 
     */
    public String bandwidthPackageId() {
        return this.bandwidthPackageId;
    }
    /**
     * @return ALB 实例的服务状态。Normal：正常；FinancialLocked：因欠费被锁定。
     * 
     */
    public String businessStatus() {
        return this.businessStatus;
    }
    /**
     * @return ALB 实例的创建时间。
     * 
     */
    public String createTime() {
        return this.createTime;
    }
    /**
     * @return 删除保护开关。on：开启；off：关闭。
     * 
     */
    public String deleteProtection() {
        return this.deleteProtection;
    }
    /**
     * @return ALB 实例的预期回收时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
     * 
     */
    public String deletedTime() {
        return this.deletedTime;
    }
    /**
     * @return ALB 实例的描述。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return DNS域名。
     * 
     */
    public String dnsName() {
        return this.dnsName;
    }
    /**
     * @return 公网IP的计费配置，仅适用于公网实例。
     * 
     */
    public GetLoadBalancerEipBillingConfig eipBillingConfig() {
        return this.eipBillingConfig;
    }
    /**
     * @return 全球加速器配置，用于提升跨地域访问速度。
     * 
     */
    public GetLoadBalancerGlobalAccelerator globalAccelerator() {
        return this.globalAccelerator;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return IPv6公网IP的计費配置，仅适用于公网实例。
     * 
     */
    public GetLoadBalancerIpv6EipBillingConfig ipv6EipBillingConfig() {
        return this.ipv6EipBillingConfig;
    }
    /**
     * @return ALB实例计费类型，当前仅支持按量计费（取值为1）。
     * 
     */
    public Integer loadBalancerBillingType() {
        return this.loadBalancerBillingType;
    }
    /**
     * @return 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
     * 
     */
    public String loadBalancerEdition() {
        return this.loadBalancerEdition;
    }
    /**
     * @return ALB 实例 ID。
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return ALB 实例的名称。
     * 
     */
    public String loadBalancerName() {
        return this.loadBalancerName;
    }
    /**
     * @return ALB 实例被冻结的原因，例如 Financial（欠费）或 Security（安全原因）。仅在实例被锁定时返回。
     * 
     */
    public String lockReason() {
        return this.lockReason;
    }
    /**
     * @return 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
     * 
     */
    public String modificationProtectionReason() {
        return this.modificationProtectionReason;
    }
    /**
     * @return 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
     * 
     */
    public String modificationProtectionStatus() {
        return this.modificationProtectionStatus;
    }
    /**
     * @return ALB 实例的冻结时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
     * 
     */
    public String overdueTime() {
        return this.overdueTime;
    }
    /**
     * @return 实例所属项目名称。
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return ALB 实例状态：Active（运行中）、Provisioning（创建中）、Configuring（配置中）、Deleting（删除中）、CreateFailed（创建失败）、Inactive（已停止）。
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 为实例绑定的标签列表，用于分类和计费。
     * 
     */
    public List<GetLoadBalancerTag> tags() {
        return this.tags;
    }
    /**
     * @return ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return ALB 实例的最后更新时间。
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }
    /**
     * @return 负载均衡实例所属的私有网络（VPC）的ID。
     * 
     */
    public String vpcId() {
        return this.vpcId;
    }
    /**
     * @return ALB 实例绑定的 WAF 安全防护实例 ID。
     * 
     */
    public String wafInstanceId() {
        return this.wafInstanceId;
    }
    /**
     * @return WAF防护的域名，用于精确匹配防护规则。
     * 
     */
    public String wafProtectedDomain() {
        return this.wafProtectedDomain;
    }
    /**
     * @return WAF 安全防护开关。on：开启；off：关闭。
     * 
     */
    public String wafProtectionEnabled() {
        return this.wafProtectionEnabled;
    }
    /**
     * @return 可用区映射列表，定义了实例在哪些可用区提供服务。
     * 
     */
    public List<GetLoadBalancerZoneMapping> zoneMappings() {
        return this.zoneMappings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressIpVersion;
        private String bandwidthPackageId;
        private String businessStatus;
        private String createTime;
        private String deleteProtection;
        private String deletedTime;
        private String description;
        private String dnsName;
        private GetLoadBalancerEipBillingConfig eipBillingConfig;
        private GetLoadBalancerGlobalAccelerator globalAccelerator;
        private String id;
        private GetLoadBalancerIpv6EipBillingConfig ipv6EipBillingConfig;
        private Integer loadBalancerBillingType;
        private String loadBalancerEdition;
        private String loadBalancerId;
        private String loadBalancerName;
        private String lockReason;
        private String modificationProtectionReason;
        private String modificationProtectionStatus;
        private String overdueTime;
        private String projectName;
        private String status;
        private List<GetLoadBalancerTag> tags;
        private String type;
        private String updateTime;
        private String vpcId;
        private String wafInstanceId;
        private String wafProtectedDomain;
        private String wafProtectionEnabled;
        private List<GetLoadBalancerZoneMapping> zoneMappings;
        public Builder() {}
        public Builder(GetLoadBalancerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressIpVersion = defaults.addressIpVersion;
    	      this.bandwidthPackageId = defaults.bandwidthPackageId;
    	      this.businessStatus = defaults.businessStatus;
    	      this.createTime = defaults.createTime;
    	      this.deleteProtection = defaults.deleteProtection;
    	      this.deletedTime = defaults.deletedTime;
    	      this.description = defaults.description;
    	      this.dnsName = defaults.dnsName;
    	      this.eipBillingConfig = defaults.eipBillingConfig;
    	      this.globalAccelerator = defaults.globalAccelerator;
    	      this.id = defaults.id;
    	      this.ipv6EipBillingConfig = defaults.ipv6EipBillingConfig;
    	      this.loadBalancerBillingType = defaults.loadBalancerBillingType;
    	      this.loadBalancerEdition = defaults.loadBalancerEdition;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.loadBalancerName = defaults.loadBalancerName;
    	      this.lockReason = defaults.lockReason;
    	      this.modificationProtectionReason = defaults.modificationProtectionReason;
    	      this.modificationProtectionStatus = defaults.modificationProtectionStatus;
    	      this.overdueTime = defaults.overdueTime;
    	      this.projectName = defaults.projectName;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.updateTime = defaults.updateTime;
    	      this.vpcId = defaults.vpcId;
    	      this.wafInstanceId = defaults.wafInstanceId;
    	      this.wafProtectedDomain = defaults.wafProtectedDomain;
    	      this.wafProtectionEnabled = defaults.wafProtectionEnabled;
    	      this.zoneMappings = defaults.zoneMappings;
        }

        @CustomType.Setter
        public Builder addressIpVersion(String addressIpVersion) {
            if (addressIpVersion == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "addressIpVersion");
            }
            this.addressIpVersion = addressIpVersion;
            return this;
        }
        @CustomType.Setter
        public Builder bandwidthPackageId(String bandwidthPackageId) {
            if (bandwidthPackageId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "bandwidthPackageId");
            }
            this.bandwidthPackageId = bandwidthPackageId;
            return this;
        }
        @CustomType.Setter
        public Builder businessStatus(String businessStatus) {
            if (businessStatus == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "businessStatus");
            }
            this.businessStatus = businessStatus;
            return this;
        }
        @CustomType.Setter
        public Builder createTime(String createTime) {
            if (createTime == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "createTime");
            }
            this.createTime = createTime;
            return this;
        }
        @CustomType.Setter
        public Builder deleteProtection(String deleteProtection) {
            if (deleteProtection == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "deleteProtection");
            }
            this.deleteProtection = deleteProtection;
            return this;
        }
        @CustomType.Setter
        public Builder deletedTime(String deletedTime) {
            if (deletedTime == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "deletedTime");
            }
            this.deletedTime = deletedTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder dnsName(String dnsName) {
            if (dnsName == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "dnsName");
            }
            this.dnsName = dnsName;
            return this;
        }
        @CustomType.Setter
        public Builder eipBillingConfig(GetLoadBalancerEipBillingConfig eipBillingConfig) {
            if (eipBillingConfig == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "eipBillingConfig");
            }
            this.eipBillingConfig = eipBillingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder globalAccelerator(GetLoadBalancerGlobalAccelerator globalAccelerator) {
            if (globalAccelerator == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "globalAccelerator");
            }
            this.globalAccelerator = globalAccelerator;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6EipBillingConfig(GetLoadBalancerIpv6EipBillingConfig ipv6EipBillingConfig) {
            if (ipv6EipBillingConfig == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "ipv6EipBillingConfig");
            }
            this.ipv6EipBillingConfig = ipv6EipBillingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerBillingType(Integer loadBalancerBillingType) {
            if (loadBalancerBillingType == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "loadBalancerBillingType");
            }
            this.loadBalancerBillingType = loadBalancerBillingType;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerEdition(String loadBalancerEdition) {
            if (loadBalancerEdition == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "loadBalancerEdition");
            }
            this.loadBalancerEdition = loadBalancerEdition;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerName(String loadBalancerName) {
            if (loadBalancerName == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "loadBalancerName");
            }
            this.loadBalancerName = loadBalancerName;
            return this;
        }
        @CustomType.Setter
        public Builder lockReason(String lockReason) {
            if (lockReason == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "lockReason");
            }
            this.lockReason = lockReason;
            return this;
        }
        @CustomType.Setter
        public Builder modificationProtectionReason(String modificationProtectionReason) {
            if (modificationProtectionReason == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "modificationProtectionReason");
            }
            this.modificationProtectionReason = modificationProtectionReason;
            return this;
        }
        @CustomType.Setter
        public Builder modificationProtectionStatus(String modificationProtectionStatus) {
            if (modificationProtectionStatus == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "modificationProtectionStatus");
            }
            this.modificationProtectionStatus = modificationProtectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder overdueTime(String overdueTime) {
            if (overdueTime == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "overdueTime");
            }
            this.overdueTime = overdueTime;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetLoadBalancerTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetLoadBalancerTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder wafInstanceId(String wafInstanceId) {
            if (wafInstanceId == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "wafInstanceId");
            }
            this.wafInstanceId = wafInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder wafProtectedDomain(String wafProtectedDomain) {
            if (wafProtectedDomain == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "wafProtectedDomain");
            }
            this.wafProtectedDomain = wafProtectedDomain;
            return this;
        }
        @CustomType.Setter
        public Builder wafProtectionEnabled(String wafProtectionEnabled) {
            if (wafProtectionEnabled == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "wafProtectionEnabled");
            }
            this.wafProtectionEnabled = wafProtectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder zoneMappings(List<GetLoadBalancerZoneMapping> zoneMappings) {
            if (zoneMappings == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerResult", "zoneMappings");
            }
            this.zoneMappings = zoneMappings;
            return this;
        }
        public Builder zoneMappings(GetLoadBalancerZoneMapping... zoneMappings) {
            return zoneMappings(List.of(zoneMappings));
        }
        public GetLoadBalancerResult build() {
            final var _resultValue = new GetLoadBalancerResult();
            _resultValue.addressIpVersion = addressIpVersion;
            _resultValue.bandwidthPackageId = bandwidthPackageId;
            _resultValue.businessStatus = businessStatus;
            _resultValue.createTime = createTime;
            _resultValue.deleteProtection = deleteProtection;
            _resultValue.deletedTime = deletedTime;
            _resultValue.description = description;
            _resultValue.dnsName = dnsName;
            _resultValue.eipBillingConfig = eipBillingConfig;
            _resultValue.globalAccelerator = globalAccelerator;
            _resultValue.id = id;
            _resultValue.ipv6EipBillingConfig = ipv6EipBillingConfig;
            _resultValue.loadBalancerBillingType = loadBalancerBillingType;
            _resultValue.loadBalancerEdition = loadBalancerEdition;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.loadBalancerName = loadBalancerName;
            _resultValue.lockReason = lockReason;
            _resultValue.modificationProtectionReason = modificationProtectionReason;
            _resultValue.modificationProtectionStatus = modificationProtectionStatus;
            _resultValue.overdueTime = overdueTime;
            _resultValue.projectName = projectName;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.updateTime = updateTime;
            _resultValue.vpcId = vpcId;
            _resultValue.wafInstanceId = wafInstanceId;
            _resultValue.wafProtectedDomain = wafProtectedDomain;
            _resultValue.wafProtectionEnabled = wafProtectionEnabled;
            _resultValue.zoneMappings = zoneMappings;
            return _resultValue;
        }
    }
}
