// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteTableCustomRouteEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteTableCustomRouteEntryArgs Empty = new RouteTableCustomRouteEntryArgs();

    /**
     * 路由条目描述。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 路由条目描述。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 路由条目的目标网段。
     * 
     */
    @Import(name="destinationCidrBlock")
    private @Nullable Output<String> destinationCidrBlock;

    /**
     * @return 路由条目的目标网段。
     * 
     */
    public Optional<Output<String>> destinationCidrBlock() {
        return Optional.ofNullable(this.destinationCidrBlock);
    }

    /**
     * 前缀列表ID。
     * 
     */
    @Import(name="destinationPrefixListId")
    private @Nullable Output<String> destinationPrefixListId;

    /**
     * @return 前缀列表ID。
     * 
     */
    public Optional<Output<String>> destinationPrefixListId() {
        return Optional.ofNullable(this.destinationPrefixListId);
    }

    /**
     * 下一跳资源ID。
     * 
     */
    @Import(name="nextHopId")
    private @Nullable Output<String> nextHopId;

    /**
     * @return 下一跳资源ID。
     * 
     */
    public Optional<Output<String>> nextHopId() {
        return Optional.ofNullable(this.nextHopId);
    }

    /**
     * 路由条目下一跳资源的名称。
     * 
     */
    @Import(name="nextHopName")
    private @Nullable Output<String> nextHopName;

    /**
     * @return 路由条目下一跳资源的名称。
     * 
     */
    public Optional<Output<String>> nextHopName() {
        return Optional.ofNullable(this.nextHopName);
    }

    /**
     * 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    @Import(name="nextHopType")
    private @Nullable Output<String> nextHopType;

    /**
     * @return 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    public Optional<Output<String>> nextHopType() {
        return Optional.ofNullable(this.nextHopType);
    }

    /**
     * 路由条目名称。
     * 
     */
    @Import(name="routeEntryName")
    private @Nullable Output<String> routeEntryName;

    /**
     * @return 路由条目名称。
     * 
     */
    public Optional<Output<String>> routeEntryName() {
        return Optional.ofNullable(this.routeEntryName);
    }

    private RouteTableCustomRouteEntryArgs() {}

    private RouteTableCustomRouteEntryArgs(RouteTableCustomRouteEntryArgs $) {
        this.description = $.description;
        this.destinationCidrBlock = $.destinationCidrBlock;
        this.destinationPrefixListId = $.destinationPrefixListId;
        this.nextHopId = $.nextHopId;
        this.nextHopName = $.nextHopName;
        this.nextHopType = $.nextHopType;
        this.routeEntryName = $.routeEntryName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteTableCustomRouteEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteTableCustomRouteEntryArgs $;

        public Builder() {
            $ = new RouteTableCustomRouteEntryArgs();
        }

        public Builder(RouteTableCustomRouteEntryArgs defaults) {
            $ = new RouteTableCustomRouteEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description 路由条目描述。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 路由条目描述。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationCidrBlock 路由条目的目标网段。
         * 
         * @return builder
         * 
         */
        public Builder destinationCidrBlock(@Nullable Output<String> destinationCidrBlock) {
            $.destinationCidrBlock = destinationCidrBlock;
            return this;
        }

        /**
         * @param destinationCidrBlock 路由条目的目标网段。
         * 
         * @return builder
         * 
         */
        public Builder destinationCidrBlock(String destinationCidrBlock) {
            return destinationCidrBlock(Output.of(destinationCidrBlock));
        }

        /**
         * @param destinationPrefixListId 前缀列表ID。
         * 
         * @return builder
         * 
         */
        public Builder destinationPrefixListId(@Nullable Output<String> destinationPrefixListId) {
            $.destinationPrefixListId = destinationPrefixListId;
            return this;
        }

        /**
         * @param destinationPrefixListId 前缀列表ID。
         * 
         * @return builder
         * 
         */
        public Builder destinationPrefixListId(String destinationPrefixListId) {
            return destinationPrefixListId(Output.of(destinationPrefixListId));
        }

        /**
         * @param nextHopId 下一跳资源ID。
         * 
         * @return builder
         * 
         */
        public Builder nextHopId(@Nullable Output<String> nextHopId) {
            $.nextHopId = nextHopId;
            return this;
        }

        /**
         * @param nextHopId 下一跳资源ID。
         * 
         * @return builder
         * 
         */
        public Builder nextHopId(String nextHopId) {
            return nextHopId(Output.of(nextHopId));
        }

        /**
         * @param nextHopName 路由条目下一跳资源的名称。
         * 
         * @return builder
         * 
         */
        public Builder nextHopName(@Nullable Output<String> nextHopName) {
            $.nextHopName = nextHopName;
            return this;
        }

        /**
         * @param nextHopName 路由条目下一跳资源的名称。
         * 
         * @return builder
         * 
         */
        public Builder nextHopName(String nextHopName) {
            return nextHopName(Output.of(nextHopName));
        }

        /**
         * @param nextHopType 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
         * 
         * @return builder
         * 
         */
        public Builder nextHopType(@Nullable Output<String> nextHopType) {
            $.nextHopType = nextHopType;
            return this;
        }

        /**
         * @param nextHopType 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
         * 
         * @return builder
         * 
         */
        public Builder nextHopType(String nextHopType) {
            return nextHopType(Output.of(nextHopType));
        }

        /**
         * @param routeEntryName 路由条目名称。
         * 
         * @return builder
         * 
         */
        public Builder routeEntryName(@Nullable Output<String> routeEntryName) {
            $.routeEntryName = routeEntryName;
            return this;
        }

        /**
         * @param routeEntryName 路由条目名称。
         * 
         * @return builder
         * 
         */
        public Builder routeEntryName(String routeEntryName) {
            return routeEntryName(Output.of(routeEntryName));
        }

        public RouteTableCustomRouteEntryArgs build() {
            return $;
        }
    }

}
