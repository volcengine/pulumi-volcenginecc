// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.iam.inputs.PolicyPolicyRoleArgs;
import com.volcengine.volcenginecc.iam.inputs.PolicyPolicyUserArgs;
import com.volcengine.volcenginecc.iam.inputs.PolicyPolicyUserGroupArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyArgs Empty = new PolicyArgs();

    /**
     * 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
     * 
     */
    @Import(name="category")
    private @Nullable Output<String> category;

    /**
     * @return 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
     * 
     */
    public Optional<Output<String>> category() {
        return Optional.ofNullable(this.category);
    }

    /**
     * 策略描述，长度不超过128。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 策略描述，长度不超过128。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 策略语法内容，例如：{&#34;Statement&#34;:[{&#34;Effect&#34;:&#34;Allow&#34;,&#34;Action&#34;:[&#34;iam:&#34;,&#34;tag:&#34;],&#34;Resource&#34;:[&#34;*&#34;]}]}
     * 
     */
    @Import(name="policyDocument", required=true)
    private Output<String> policyDocument;

    /**
     * @return 策略语法内容，例如：{&#34;Statement&#34;:[{&#34;Effect&#34;:&#34;Allow&#34;,&#34;Action&#34;:[&#34;iam:&#34;,&#34;tag:&#34;],&#34;Resource&#34;:[&#34;*&#34;]}]}
     * 
     */
    public Output<String> policyDocument() {
        return this.policyDocument;
    }

    /**
     * 策略名，长度1~64，支持英文、数字和+=,.{@literal @}-_符号。
     * 
     */
    @Import(name="policyName", required=true)
    private Output<String> policyName;

    /**
     * @return 策略名，长度1~64，支持英文、数字和+=,.{@literal @}-_符号。
     * 
     */
    public Output<String> policyName() {
        return this.policyName;
    }

    @Import(name="policyRoles")
    private @Nullable Output<List<PolicyPolicyRoleArgs>> policyRoles;

    public Optional<Output<List<PolicyPolicyRoleArgs>>> policyRoles() {
        return Optional.ofNullable(this.policyRoles);
    }

    /**
     * 策略类型。System代表系统预设策略，Custom代表自定义策略。
     * 
     */
    @Import(name="policyType", required=true)
    private Output<String> policyType;

    /**
     * @return 策略类型。System代表系统预设策略，Custom代表自定义策略。
     * 
     */
    public Output<String> policyType() {
        return this.policyType;
    }

    @Import(name="policyUserGroups")
    private @Nullable Output<List<PolicyPolicyUserGroupArgs>> policyUserGroups;

    public Optional<Output<List<PolicyPolicyUserGroupArgs>>> policyUserGroups() {
        return Optional.ofNullable(this.policyUserGroups);
    }

    @Import(name="policyUsers")
    private @Nullable Output<List<PolicyPolicyUserArgs>> policyUsers;

    public Optional<Output<List<PolicyPolicyUserArgs>>> policyUsers() {
        return Optional.ofNullable(this.policyUsers);
    }

    private PolicyArgs() {}

    private PolicyArgs(PolicyArgs $) {
        this.category = $.category;
        this.description = $.description;
        this.policyDocument = $.policyDocument;
        this.policyName = $.policyName;
        this.policyRoles = $.policyRoles;
        this.policyType = $.policyType;
        this.policyUserGroups = $.policyUserGroups;
        this.policyUsers = $.policyUsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyArgs $;

        public Builder() {
            $ = new PolicyArgs();
        }

        public Builder(PolicyArgs defaults) {
            $ = new PolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
         * 
         * @return builder
         * 
         */
        public Builder category(@Nullable Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        /**
         * @param description 策略描述，长度不超过128。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 策略描述，长度不超过128。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param policyDocument 策略语法内容，例如：{&#34;Statement&#34;:[{&#34;Effect&#34;:&#34;Allow&#34;,&#34;Action&#34;:[&#34;iam:&#34;,&#34;tag:&#34;],&#34;Resource&#34;:[&#34;*&#34;]}]}
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(Output<String> policyDocument) {
            $.policyDocument = policyDocument;
            return this;
        }

        /**
         * @param policyDocument 策略语法内容，例如：{&#34;Statement&#34;:[{&#34;Effect&#34;:&#34;Allow&#34;,&#34;Action&#34;:[&#34;iam:&#34;,&#34;tag:&#34;],&#34;Resource&#34;:[&#34;*&#34;]}]}
         * 
         * @return builder
         * 
         */
        public Builder policyDocument(String policyDocument) {
            return policyDocument(Output.of(policyDocument));
        }

        /**
         * @param policyName 策略名，长度1~64，支持英文、数字和+=,.{@literal @}-_符号。
         * 
         * @return builder
         * 
         */
        public Builder policyName(Output<String> policyName) {
            $.policyName = policyName;
            return this;
        }

        /**
         * @param policyName 策略名，长度1~64，支持英文、数字和+=,.{@literal @}-_符号。
         * 
         * @return builder
         * 
         */
        public Builder policyName(String policyName) {
            return policyName(Output.of(policyName));
        }

        public Builder policyRoles(@Nullable Output<List<PolicyPolicyRoleArgs>> policyRoles) {
            $.policyRoles = policyRoles;
            return this;
        }

        public Builder policyRoles(List<PolicyPolicyRoleArgs> policyRoles) {
            return policyRoles(Output.of(policyRoles));
        }

        public Builder policyRoles(PolicyPolicyRoleArgs... policyRoles) {
            return policyRoles(List.of(policyRoles));
        }

        /**
         * @param policyType 策略类型。System代表系统预设策略，Custom代表自定义策略。
         * 
         * @return builder
         * 
         */
        public Builder policyType(Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType 策略类型。System代表系统预设策略，Custom代表自定义策略。
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        public Builder policyUserGroups(@Nullable Output<List<PolicyPolicyUserGroupArgs>> policyUserGroups) {
            $.policyUserGroups = policyUserGroups;
            return this;
        }

        public Builder policyUserGroups(List<PolicyPolicyUserGroupArgs> policyUserGroups) {
            return policyUserGroups(Output.of(policyUserGroups));
        }

        public Builder policyUserGroups(PolicyPolicyUserGroupArgs... policyUserGroups) {
            return policyUserGroups(List.of(policyUserGroups));
        }

        public Builder policyUsers(@Nullable Output<List<PolicyPolicyUserArgs>> policyUsers) {
            $.policyUsers = policyUsers;
            return this;
        }

        public Builder policyUsers(List<PolicyPolicyUserArgs> policyUsers) {
            return policyUsers(Output.of(policyUsers));
        }

        public Builder policyUsers(PolicyPolicyUserArgs... policyUsers) {
            return policyUsers(List.of(policyUsers));
        }

        public PolicyArgs build() {
            if ($.policyDocument == null) {
                throw new MissingRequiredPropertyException("PolicyArgs", "policyDocument");
            }
            if ($.policyName == null) {
                throw new MissingRequiredPropertyException("PolicyArgs", "policyName");
            }
            if ($.policyType == null) {
                throw new MissingRequiredPropertyException("PolicyArgs", "policyType");
            }
            return $;
        }
    }

}
