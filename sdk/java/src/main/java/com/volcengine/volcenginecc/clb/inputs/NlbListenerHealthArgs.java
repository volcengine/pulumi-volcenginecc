// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NlbListenerHealthArgs extends com.pulumi.resources.ResourceArgs {

    public static final NlbListenerHealthArgs Empty = new NlbListenerHealthArgs();

    /**
     * 后端服务器的实例 ID或IP地址。
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return 后端服务器的实例 ID或IP地址。
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * 后端服务器的IP地址。
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return 后端服务器的IP地址。
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * 后端服务器提供服务的端口。
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return 后端服务器提供服务的端口。
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * 后端服务器ID。
     * 
     */
    @Import(name="serverId")
    private @Nullable Output<String> serverId;

    /**
     * @return 后端服务器ID。
     * 
     */
    public Optional<Output<String>> serverId() {
        return Optional.ofNullable(this.serverId);
    }

    /**
     * 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
     * 
     */
    @Import(name="serverType")
    private @Nullable Output<String> serverType;

    /**
     * @return 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
     * 
     */
    public Optional<Output<String>> serverType() {
        return Optional.ofNullable(this.serverType);
    }

    /**
     * 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * 健康状态最后更新时间。
     * 
     */
    @Import(name="updatedTime")
    private @Nullable Output<String> updatedTime;

    /**
     * @return 健康状态最后更新时间。
     * 
     */
    public Optional<Output<String>> updatedTime() {
        return Optional.ofNullable(this.updatedTime);
    }

    /**
     * 后端服务器接收访问流量的可用区ID。
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return 后端服务器接收访问流量的可用区ID。
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private NlbListenerHealthArgs() {}

    private NlbListenerHealthArgs(NlbListenerHealthArgs $) {
        this.instanceId = $.instanceId;
        this.ip = $.ip;
        this.port = $.port;
        this.serverId = $.serverId;
        this.serverType = $.serverType;
        this.status = $.status;
        this.updatedTime = $.updatedTime;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NlbListenerHealthArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NlbListenerHealthArgs $;

        public Builder() {
            $ = new NlbListenerHealthArgs();
        }

        public Builder(NlbListenerHealthArgs defaults) {
            $ = new NlbListenerHealthArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId 后端服务器的实例 ID或IP地址。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId 后端服务器的实例 ID或IP地址。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param ip 后端服务器的IP地址。
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip 后端服务器的IP地址。
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param port 后端服务器提供服务的端口。
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port 后端服务器提供服务的端口。
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param serverId 后端服务器ID。
         * 
         * @return builder
         * 
         */
        public Builder serverId(@Nullable Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId 后端服务器ID。
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        /**
         * @param serverType 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
         * 
         * @return builder
         * 
         */
        public Builder serverType(@Nullable Output<String> serverType) {
            $.serverType = serverType;
            return this;
        }

        /**
         * @param serverType 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
         * 
         * @return builder
         * 
         */
        public Builder serverType(String serverType) {
            return serverType(Output.of(serverType));
        }

        /**
         * @param status 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param updatedTime 健康状态最后更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedTime(@Nullable Output<String> updatedTime) {
            $.updatedTime = updatedTime;
            return this;
        }

        /**
         * @param updatedTime 健康状态最后更新时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedTime(String updatedTime) {
            return updatedTime(Output.of(updatedTime));
        }

        /**
         * @param zoneId 后端服务器接收访问流量的可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId 后端服务器接收访问流量的可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public NlbListenerHealthArgs build() {
            return $;
        }
    }

}
