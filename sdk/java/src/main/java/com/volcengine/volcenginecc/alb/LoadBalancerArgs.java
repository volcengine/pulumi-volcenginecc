// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.alb.inputs.LoadBalancerEipBillingConfigArgs;
import com.volcengine.volcenginecc.alb.inputs.LoadBalancerGlobalAcceleratorArgs;
import com.volcengine.volcenginecc.alb.inputs.LoadBalancerIpv6EipBillingConfigArgs;
import com.volcengine.volcenginecc.alb.inputs.LoadBalancerTagArgs;
import com.volcengine.volcenginecc.alb.inputs.LoadBalancerZoneMappingArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerArgs Empty = new LoadBalancerArgs();

    /**
     * ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&amp;IPv6 双栈类型。
     * 
     */
    @Import(name="addressIpVersion")
    private @Nullable Output<String> addressIpVersion;

    /**
     * @return ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&amp;IPv6 双栈类型。
     * 
     */
    public Optional<Output<String>> addressIpVersion() {
        return Optional.ofNullable(this.addressIpVersion);
    }

    /**
     * 绑定的共享带宽包ID，可实现带宽共享。
     * 
     */
    @Import(name="bandwidthPackageId")
    private @Nullable Output<String> bandwidthPackageId;

    /**
     * @return 绑定的共享带宽包ID，可实现带宽共享。
     * 
     */
    public Optional<Output<String>> bandwidthPackageId() {
        return Optional.ofNullable(this.bandwidthPackageId);
    }

    /**
     * 删除保护开关。on：开启；off：关闭。
     * 
     */
    @Import(name="deleteProtection")
    private @Nullable Output<String> deleteProtection;

    /**
     * @return 删除保护开关。on：开启；off：关闭。
     * 
     */
    public Optional<Output<String>> deleteProtection() {
        return Optional.ofNullable(this.deleteProtection);
    }

    /**
     * ALB 实例的描述。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return ALB 实例的描述。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 公网IP的计费配置，仅适用于公网实例。
     * 
     */
    @Import(name="eipBillingConfig")
    private @Nullable Output<LoadBalancerEipBillingConfigArgs> eipBillingConfig;

    /**
     * @return 公网IP的计费配置，仅适用于公网实例。
     * 
     */
    public Optional<Output<LoadBalancerEipBillingConfigArgs>> eipBillingConfig() {
        return Optional.ofNullable(this.eipBillingConfig);
    }

    /**
     * 全球加速器配置，用于提升跨地域访问速度。
     * 
     */
    @Import(name="globalAccelerator")
    private @Nullable Output<LoadBalancerGlobalAcceleratorArgs> globalAccelerator;

    /**
     * @return 全球加速器配置，用于提升跨地域访问速度。
     * 
     */
    public Optional<Output<LoadBalancerGlobalAcceleratorArgs>> globalAccelerator() {
        return Optional.ofNullable(this.globalAccelerator);
    }

    /**
     * IPv6公网IP的计費配置，仅适用于公网实例。
     * 
     */
    @Import(name="ipv6EipBillingConfig")
    private @Nullable Output<LoadBalancerIpv6EipBillingConfigArgs> ipv6EipBillingConfig;

    /**
     * @return IPv6公网IP的计費配置，仅适用于公网实例。
     * 
     */
    public Optional<Output<LoadBalancerIpv6EipBillingConfigArgs>> ipv6EipBillingConfig() {
        return Optional.ofNullable(this.ipv6EipBillingConfig);
    }

    /**
     * ALB实例计费类型，当前仅支持按量计费（取值为1）。
     * 
     */
    @Import(name="loadBalancerBillingType")
    private @Nullable Output<Integer> loadBalancerBillingType;

    /**
     * @return ALB实例计费类型，当前仅支持按量计费（取值为1）。
     * 
     */
    public Optional<Output<Integer>> loadBalancerBillingType() {
        return Optional.ofNullable(this.loadBalancerBillingType);
    }

    /**
     * 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
     * 
     */
    @Import(name="loadBalancerEdition")
    private @Nullable Output<String> loadBalancerEdition;

    /**
     * @return 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
     * 
     */
    public Optional<Output<String>> loadBalancerEdition() {
        return Optional.ofNullable(this.loadBalancerEdition);
    }

    /**
     * ALB 实例的名称。
     * 
     */
    @Import(name="loadBalancerName")
    private @Nullable Output<String> loadBalancerName;

    /**
     * @return ALB 实例的名称。
     * 
     */
    public Optional<Output<String>> loadBalancerName() {
        return Optional.ofNullable(this.loadBalancerName);
    }

    /**
     * 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
     * 
     */
    @Import(name="modificationProtectionReason")
    private @Nullable Output<String> modificationProtectionReason;

    /**
     * @return 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
     * 
     */
    public Optional<Output<String>> modificationProtectionReason() {
        return Optional.ofNullable(this.modificationProtectionReason);
    }

    /**
     * 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
     * 
     */
    @Import(name="modificationProtectionStatus")
    private @Nullable Output<String> modificationProtectionStatus;

    /**
     * @return 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
     * 
     */
    public Optional<Output<String>> modificationProtectionStatus() {
        return Optional.ofNullable(this.modificationProtectionStatus);
    }

    /**
     * 实例所属项目名称。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 实例所属项目名称。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    @Import(name="tags")
    private @Nullable Output<List<LoadBalancerTagArgs>> tags;

    public Optional<Output<List<LoadBalancerTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * 负载均衡实例所属的私有网络（VPC）的ID。
     * 
     */
    @Import(name="vpcId", required=true)
    private Output<String> vpcId;

    /**
     * @return 负载均衡实例所属的私有网络（VPC）的ID。
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     * ALB 实例绑定的 WAF 安全防护实例 ID。
     * 
     */
    @Import(name="wafInstanceId")
    private @Nullable Output<String> wafInstanceId;

    /**
     * @return ALB 实例绑定的 WAF 安全防护实例 ID。
     * 
     */
    public Optional<Output<String>> wafInstanceId() {
        return Optional.ofNullable(this.wafInstanceId);
    }

    /**
     * WAF防护的域名，用于精确匹配防护规则。
     * 
     */
    @Import(name="wafProtectedDomain")
    private @Nullable Output<String> wafProtectedDomain;

    /**
     * @return WAF防护的域名，用于精确匹配防护规则。
     * 
     */
    public Optional<Output<String>> wafProtectedDomain() {
        return Optional.ofNullable(this.wafProtectedDomain);
    }

    /**
     * WAF 安全防护开关。on：开启；off：关闭。
     * 
     */
    @Import(name="wafProtectionEnabled")
    private @Nullable Output<String> wafProtectionEnabled;

    /**
     * @return WAF 安全防护开关。on：开启；off：关闭。
     * 
     */
    public Optional<Output<String>> wafProtectionEnabled() {
        return Optional.ofNullable(this.wafProtectionEnabled);
    }

    @Import(name="zoneMappings")
    private @Nullable Output<List<LoadBalancerZoneMappingArgs>> zoneMappings;

    public Optional<Output<List<LoadBalancerZoneMappingArgs>>> zoneMappings() {
        return Optional.ofNullable(this.zoneMappings);
    }

    private LoadBalancerArgs() {}

    private LoadBalancerArgs(LoadBalancerArgs $) {
        this.addressIpVersion = $.addressIpVersion;
        this.bandwidthPackageId = $.bandwidthPackageId;
        this.deleteProtection = $.deleteProtection;
        this.description = $.description;
        this.eipBillingConfig = $.eipBillingConfig;
        this.globalAccelerator = $.globalAccelerator;
        this.ipv6EipBillingConfig = $.ipv6EipBillingConfig;
        this.loadBalancerBillingType = $.loadBalancerBillingType;
        this.loadBalancerEdition = $.loadBalancerEdition;
        this.loadBalancerName = $.loadBalancerName;
        this.modificationProtectionReason = $.modificationProtectionReason;
        this.modificationProtectionStatus = $.modificationProtectionStatus;
        this.projectName = $.projectName;
        this.tags = $.tags;
        this.type = $.type;
        this.vpcId = $.vpcId;
        this.wafInstanceId = $.wafInstanceId;
        this.wafProtectedDomain = $.wafProtectedDomain;
        this.wafProtectionEnabled = $.wafProtectionEnabled;
        this.zoneMappings = $.zoneMappings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerArgs $;

        public Builder() {
            $ = new LoadBalancerArgs();
        }

        public Builder(LoadBalancerArgs defaults) {
            $ = new LoadBalancerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressIpVersion ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&amp;IPv6 双栈类型。
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(@Nullable Output<String> addressIpVersion) {
            $.addressIpVersion = addressIpVersion;
            return this;
        }

        /**
         * @param addressIpVersion ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&amp;IPv6 双栈类型。
         * 
         * @return builder
         * 
         */
        public Builder addressIpVersion(String addressIpVersion) {
            return addressIpVersion(Output.of(addressIpVersion));
        }

        /**
         * @param bandwidthPackageId 绑定的共享带宽包ID，可实现带宽共享。
         * 
         * @return builder
         * 
         */
        public Builder bandwidthPackageId(@Nullable Output<String> bandwidthPackageId) {
            $.bandwidthPackageId = bandwidthPackageId;
            return this;
        }

        /**
         * @param bandwidthPackageId 绑定的共享带宽包ID，可实现带宽共享。
         * 
         * @return builder
         * 
         */
        public Builder bandwidthPackageId(String bandwidthPackageId) {
            return bandwidthPackageId(Output.of(bandwidthPackageId));
        }

        /**
         * @param deleteProtection 删除保护开关。on：开启；off：关闭。
         * 
         * @return builder
         * 
         */
        public Builder deleteProtection(@Nullable Output<String> deleteProtection) {
            $.deleteProtection = deleteProtection;
            return this;
        }

        /**
         * @param deleteProtection 删除保护开关。on：开启；off：关闭。
         * 
         * @return builder
         * 
         */
        public Builder deleteProtection(String deleteProtection) {
            return deleteProtection(Output.of(deleteProtection));
        }

        /**
         * @param description ALB 实例的描述。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description ALB 实例的描述。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eipBillingConfig 公网IP的计费配置，仅适用于公网实例。
         * 
         * @return builder
         * 
         */
        public Builder eipBillingConfig(@Nullable Output<LoadBalancerEipBillingConfigArgs> eipBillingConfig) {
            $.eipBillingConfig = eipBillingConfig;
            return this;
        }

        /**
         * @param eipBillingConfig 公网IP的计费配置，仅适用于公网实例。
         * 
         * @return builder
         * 
         */
        public Builder eipBillingConfig(LoadBalancerEipBillingConfigArgs eipBillingConfig) {
            return eipBillingConfig(Output.of(eipBillingConfig));
        }

        /**
         * @param globalAccelerator 全球加速器配置，用于提升跨地域访问速度。
         * 
         * @return builder
         * 
         */
        public Builder globalAccelerator(@Nullable Output<LoadBalancerGlobalAcceleratorArgs> globalAccelerator) {
            $.globalAccelerator = globalAccelerator;
            return this;
        }

        /**
         * @param globalAccelerator 全球加速器配置，用于提升跨地域访问速度。
         * 
         * @return builder
         * 
         */
        public Builder globalAccelerator(LoadBalancerGlobalAcceleratorArgs globalAccelerator) {
            return globalAccelerator(Output.of(globalAccelerator));
        }

        /**
         * @param ipv6EipBillingConfig IPv6公网IP的计費配置，仅适用于公网实例。
         * 
         * @return builder
         * 
         */
        public Builder ipv6EipBillingConfig(@Nullable Output<LoadBalancerIpv6EipBillingConfigArgs> ipv6EipBillingConfig) {
            $.ipv6EipBillingConfig = ipv6EipBillingConfig;
            return this;
        }

        /**
         * @param ipv6EipBillingConfig IPv6公网IP的计費配置，仅适用于公网实例。
         * 
         * @return builder
         * 
         */
        public Builder ipv6EipBillingConfig(LoadBalancerIpv6EipBillingConfigArgs ipv6EipBillingConfig) {
            return ipv6EipBillingConfig(Output.of(ipv6EipBillingConfig));
        }

        /**
         * @param loadBalancerBillingType ALB实例计费类型，当前仅支持按量计费（取值为1）。
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBillingType(@Nullable Output<Integer> loadBalancerBillingType) {
            $.loadBalancerBillingType = loadBalancerBillingType;
            return this;
        }

        /**
         * @param loadBalancerBillingType ALB实例计费类型，当前仅支持按量计费（取值为1）。
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerBillingType(Integer loadBalancerBillingType) {
            return loadBalancerBillingType(Output.of(loadBalancerBillingType));
        }

        /**
         * @param loadBalancerEdition 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerEdition(@Nullable Output<String> loadBalancerEdition) {
            $.loadBalancerEdition = loadBalancerEdition;
            return this;
        }

        /**
         * @param loadBalancerEdition 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerEdition(String loadBalancerEdition) {
            return loadBalancerEdition(Output.of(loadBalancerEdition));
        }

        /**
         * @param loadBalancerName ALB 实例的名称。
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(@Nullable Output<String> loadBalancerName) {
            $.loadBalancerName = loadBalancerName;
            return this;
        }

        /**
         * @param loadBalancerName ALB 实例的名称。
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerName(String loadBalancerName) {
            return loadBalancerName(Output.of(loadBalancerName));
        }

        /**
         * @param modificationProtectionReason 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
         * 
         * @return builder
         * 
         */
        public Builder modificationProtectionReason(@Nullable Output<String> modificationProtectionReason) {
            $.modificationProtectionReason = modificationProtectionReason;
            return this;
        }

        /**
         * @param modificationProtectionReason 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
         * 
         * @return builder
         * 
         */
        public Builder modificationProtectionReason(String modificationProtectionReason) {
            return modificationProtectionReason(Output.of(modificationProtectionReason));
        }

        /**
         * @param modificationProtectionStatus 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
         * 
         * @return builder
         * 
         */
        public Builder modificationProtectionStatus(@Nullable Output<String> modificationProtectionStatus) {
            $.modificationProtectionStatus = modificationProtectionStatus;
            return this;
        }

        /**
         * @param modificationProtectionStatus 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
         * 
         * @return builder
         * 
         */
        public Builder modificationProtectionStatus(String modificationProtectionStatus) {
            return modificationProtectionStatus(Output.of(modificationProtectionStatus));
        }

        /**
         * @param projectName 实例所属项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 实例所属项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public Builder tags(@Nullable Output<List<LoadBalancerTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<LoadBalancerTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(LoadBalancerTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param type ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpcId 负载均衡实例所属的私有网络（VPC）的ID。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId 负载均衡实例所属的私有网络（VPC）的ID。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        /**
         * @param wafInstanceId ALB 实例绑定的 WAF 安全防护实例 ID。
         * 
         * @return builder
         * 
         */
        public Builder wafInstanceId(@Nullable Output<String> wafInstanceId) {
            $.wafInstanceId = wafInstanceId;
            return this;
        }

        /**
         * @param wafInstanceId ALB 实例绑定的 WAF 安全防护实例 ID。
         * 
         * @return builder
         * 
         */
        public Builder wafInstanceId(String wafInstanceId) {
            return wafInstanceId(Output.of(wafInstanceId));
        }

        /**
         * @param wafProtectedDomain WAF防护的域名，用于精确匹配防护规则。
         * 
         * @return builder
         * 
         */
        public Builder wafProtectedDomain(@Nullable Output<String> wafProtectedDomain) {
            $.wafProtectedDomain = wafProtectedDomain;
            return this;
        }

        /**
         * @param wafProtectedDomain WAF防护的域名，用于精确匹配防护规则。
         * 
         * @return builder
         * 
         */
        public Builder wafProtectedDomain(String wafProtectedDomain) {
            return wafProtectedDomain(Output.of(wafProtectedDomain));
        }

        /**
         * @param wafProtectionEnabled WAF 安全防护开关。on：开启；off：关闭。
         * 
         * @return builder
         * 
         */
        public Builder wafProtectionEnabled(@Nullable Output<String> wafProtectionEnabled) {
            $.wafProtectionEnabled = wafProtectionEnabled;
            return this;
        }

        /**
         * @param wafProtectionEnabled WAF 安全防护开关。on：开启；off：关闭。
         * 
         * @return builder
         * 
         */
        public Builder wafProtectionEnabled(String wafProtectionEnabled) {
            return wafProtectionEnabled(Output.of(wafProtectionEnabled));
        }

        public Builder zoneMappings(@Nullable Output<List<LoadBalancerZoneMappingArgs>> zoneMappings) {
            $.zoneMappings = zoneMappings;
            return this;
        }

        public Builder zoneMappings(List<LoadBalancerZoneMappingArgs> zoneMappings) {
            return zoneMappings(Output.of(zoneMappings));
        }

        public Builder zoneMappings(LoadBalancerZoneMappingArgs... zoneMappings) {
            return zoneMappings(List.of(zoneMappings));
        }

        public LoadBalancerArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("LoadBalancerArgs", "type");
            }
            if ($.vpcId == null) {
                throw new MissingRequiredPropertyException("LoadBalancerArgs", "vpcId");
            }
            return $;
        }
    }

}
