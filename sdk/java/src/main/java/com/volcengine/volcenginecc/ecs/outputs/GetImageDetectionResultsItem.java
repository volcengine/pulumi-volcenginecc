// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetImageDetectionResultsItem {
    /**
     * @return 检测项名称。
     * 
     */
    private String name;
    /**
     * @return 该检测项对应结果。
     * 
     */
    private String result;
    /**
     * @return 风险描述码。
     * 
     */
    private String riskCode;
    /**
     * @return 风险等级。若该参数返回值为空，表示无风险。
     * 
     */
    private String riskLevel;

    private GetImageDetectionResultsItem() {}
    /**
     * @return 检测项名称。
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return 该检测项对应结果。
     * 
     */
    public String result() {
        return this.result;
    }
    /**
     * @return 风险描述码。
     * 
     */
    public String riskCode() {
        return this.riskCode;
    }
    /**
     * @return 风险等级。若该参数返回值为空，表示无风险。
     * 
     */
    public String riskLevel() {
        return this.riskLevel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageDetectionResultsItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String result;
        private String riskCode;
        private String riskLevel;
        public Builder() {}
        public Builder(GetImageDetectionResultsItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.result = defaults.result;
    	      this.riskCode = defaults.riskCode;
    	      this.riskLevel = defaults.riskLevel;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetImageDetectionResultsItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder result(String result) {
            if (result == null) {
              throw new MissingRequiredPropertyException("GetImageDetectionResultsItem", "result");
            }
            this.result = result;
            return this;
        }
        @CustomType.Setter
        public Builder riskCode(String riskCode) {
            if (riskCode == null) {
              throw new MissingRequiredPropertyException("GetImageDetectionResultsItem", "riskCode");
            }
            this.riskCode = riskCode;
            return this;
        }
        @CustomType.Setter
        public Builder riskLevel(String riskLevel) {
            if (riskLevel == null) {
              throw new MissingRequiredPropertyException("GetImageDetectionResultsItem", "riskLevel");
            }
            this.riskLevel = riskLevel;
            return this;
        }
        public GetImageDetectionResultsItem build() {
            final var _resultValue = new GetImageDetectionResultsItem();
            _resultValue.name = name;
            _resultValue.result = result;
            _resultValue.riskCode = riskCode;
            _resultValue.riskLevel = riskLevel;
            return _resultValue;
        }
    }
}
