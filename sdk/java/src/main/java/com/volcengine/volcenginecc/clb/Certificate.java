// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.clb.CertificateArgs;
import com.volcengine.volcenginecc.clb.inputs.CertificateState;
import com.volcengine.volcenginecc.clb.outputs.CertificateTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 针对HTTPS协议，提供统一的证书管理服务，证书无需上传到后端服务器，支持在CLB实例上解密处理，降低了后端服务器的CPU开销。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.clb.Certificate;
 * import com.volcengine.volcenginecc.clb.CertificateArgs;
 * import com.pulumi.volcenginecc.clb.inputs.CertificateTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var certificatDemo = new Certificate("certificatDemo", CertificateArgs.builder()
 *             .certificateName("CertificatDemo")
 *             .privateKey("-----BEGIN RSA PRIVATE KEY-----***----END RSA PRIVATE KEY-----")
 *             .publicKey("""
 * -----BEGIN CERTIFICATE-----***-----END CERTIFICATE-----
 * -----BEGIN CERTIFICATE-----***-----END CERTIFICATE-----
 * -----BEGIN CERTIFICATE-----***-----END CERTIFICATE-----            """)
 *             .description("CertificateDemo Example")
 *             .projectName("default")
 *             .tags(CertificateTagArgs.builder()
 *                 .key("env")
 *                 .value("test")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:clb/certificate:Certificate example &#34;certificate_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:clb/certificate:Certificate")
public class Certificate extends com.pulumi.resources.CustomResource {
    /**
     * 证书的ID。
     * 
     */
    @Export(name="certificateId", refs={String.class}, tree="[0]")
    private Output<String> certificateId;

    /**
     * @return 证书的ID。
     * 
     */
    public Output<String> certificateId() {
        return this.certificateId;
    }
    /**
     * 证书的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1 ～ 128个字符。
     * 
     */
    @Export(name="certificateName", refs={String.class}, tree="[0]")
    private Output<String> certificateName;

    /**
     * @return 证书的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1 ～ 128个字符。
     * 
     */
    public Output<String> certificateName() {
        return this.certificateName;
    }
    /**
     * 证书的创建时间。
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 证书的创建时间。
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 证书的描述，默认值为空字符串。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 证书的描述，默认值为空字符串。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 证书的主域名。
     * 
     */
    @Export(name="domainName", refs={String.class}, tree="[0]")
    private Output<String> domainName;

    /**
     * @return 证书的主域名。
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }
    /**
     * 证书的过期时间。
     * 
     */
    @Export(name="expiredAt", refs={String.class}, tree="[0]")
    private Output<String> expiredAt;

    /**
     * @return 证书的过期时间。
     * 
     */
    public Output<String> expiredAt() {
        return this.expiredAt;
    }
    /**
     * 证书关联的监听器的ID。
     * 
     */
    @Export(name="listeners", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> listeners;

    /**
     * @return 证书关联的监听器的ID。
     * 
     */
    public Output<List<String>> listeners() {
        return this.listeners;
    }
    /**
     * 证书的私钥。
     * 
     */
    @Export(name="privateKey", refs={String.class}, tree="[0]")
    private Output<String> privateKey;

    /**
     * @return 证书的私钥。
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }
    /**
     * 证书所属项目的名称。不填默认为default。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 证书所属项目的名称。不填默认为default。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 证书的公钥。
     * 
     */
    @Export(name="publicKey", refs={String.class}, tree="[0]")
    private Output<String> publicKey;

    /**
     * @return 证书的公钥。
     * 
     */
    public Output<String> publicKey() {
        return this.publicKey;
    }
    /**
     * 是否为托管资源。true：托管资源。false：非托管资源。
     * 
     */
    @Export(name="serviceManaged", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> serviceManaged;

    /**
     * @return 是否为托管资源。true：托管资源。false：非托管资源。
     * 
     */
    public Output<Boolean> serviceManaged() {
        return this.serviceManaged;
    }
    /**
     * 证书的备用域名列表。
     * 
     */
    @Export(name="subjectAlternativeNames", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subjectAlternativeNames;

    /**
     * @return 证书的备用域名列表。
     * 
     */
    public Output<List<String>> subjectAlternativeNames() {
        return this.subjectAlternativeNames;
    }
    @Export(name="tags", refs={List.class,CertificateTag.class}, tree="[0,1]")
    private Output<List<CertificateTag>> tags;

    public Output<List<CertificateTag>> tags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Certificate(java.lang.String name) {
        this(name, CertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Certificate(java.lang.String name, CertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certificate(java.lang.String name, CertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:clb/certificate:Certificate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Certificate(java.lang.String name, Output<java.lang.String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:clb/certificate:Certificate", name, state, makeResourceOptions(options, id), false);
    }

    private static CertificateArgs makeArgs(CertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CertificateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certificate get(java.lang.String name, Output<java.lang.String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Certificate(name, id, state, options);
    }
}
