// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ImageDetectionResultsItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageDetectionResultsItemArgs Empty = new ImageDetectionResultsItemArgs();

    /**
     * 检测项名称。
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return 检测项名称。
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * 该检测项对应结果。
     * 
     */
    @Import(name="result")
    private @Nullable Output<String> result;

    /**
     * @return 该检测项对应结果。
     * 
     */
    public Optional<Output<String>> result() {
        return Optional.ofNullable(this.result);
    }

    /**
     * 风险描述码。
     * 
     */
    @Import(name="riskCode")
    private @Nullable Output<String> riskCode;

    /**
     * @return 风险描述码。
     * 
     */
    public Optional<Output<String>> riskCode() {
        return Optional.ofNullable(this.riskCode);
    }

    /**
     * 风险等级。若该参数返回值为空，表示无风险。
     * 
     */
    @Import(name="riskLevel")
    private @Nullable Output<String> riskLevel;

    /**
     * @return 风险等级。若该参数返回值为空，表示无风险。
     * 
     */
    public Optional<Output<String>> riskLevel() {
        return Optional.ofNullable(this.riskLevel);
    }

    private ImageDetectionResultsItemArgs() {}

    private ImageDetectionResultsItemArgs(ImageDetectionResultsItemArgs $) {
        this.name = $.name;
        this.result = $.result;
        this.riskCode = $.riskCode;
        this.riskLevel = $.riskLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageDetectionResultsItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageDetectionResultsItemArgs $;

        public Builder() {
            $ = new ImageDetectionResultsItemArgs();
        }

        public Builder(ImageDetectionResultsItemArgs defaults) {
            $ = new ImageDetectionResultsItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name 检测项名称。
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name 检测项名称。
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param result 该检测项对应结果。
         * 
         * @return builder
         * 
         */
        public Builder result(@Nullable Output<String> result) {
            $.result = result;
            return this;
        }

        /**
         * @param result 该检测项对应结果。
         * 
         * @return builder
         * 
         */
        public Builder result(String result) {
            return result(Output.of(result));
        }

        /**
         * @param riskCode 风险描述码。
         * 
         * @return builder
         * 
         */
        public Builder riskCode(@Nullable Output<String> riskCode) {
            $.riskCode = riskCode;
            return this;
        }

        /**
         * @param riskCode 风险描述码。
         * 
         * @return builder
         * 
         */
        public Builder riskCode(String riskCode) {
            return riskCode(Output.of(riskCode));
        }

        /**
         * @param riskLevel 风险等级。若该参数返回值为空，表示无风险。
         * 
         * @return builder
         * 
         */
        public Builder riskLevel(@Nullable Output<String> riskLevel) {
            $.riskLevel = riskLevel;
            return this;
        }

        /**
         * @param riskLevel 风险等级。若该参数返回值为空，表示无风险。
         * 
         * @return builder
         * 
         */
        public Builder riskLevel(String riskLevel) {
            return riskLevel(Output.of(riskLevel));
        }

        public ImageDetectionResultsItemArgs build() {
            return $;
        }
    }

}
