// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NlbListenerHealth {
    /**
     * @return 后端服务器的实例 ID或IP地址。
     * 
     */
    private @Nullable String instanceId;
    /**
     * @return 后端服务器的IP地址。
     * 
     */
    private @Nullable String ip;
    /**
     * @return 后端服务器提供服务的端口。
     * 
     */
    private @Nullable Integer port;
    /**
     * @return 后端服务器ID。
     * 
     */
    private @Nullable String serverId;
    /**
     * @return 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
     * 
     */
    private @Nullable String serverType;
    /**
     * @return 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
     * 
     */
    private @Nullable String status;
    /**
     * @return 健康状态最后更新时间。
     * 
     */
    private @Nullable String updatedTime;
    /**
     * @return 后端服务器接收访问流量的可用区ID。
     * 
     */
    private @Nullable String zoneId;

    private NlbListenerHealth() {}
    /**
     * @return 后端服务器的实例 ID或IP地址。
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return 后端服务器的IP地址。
     * 
     */
    public Optional<String> ip() {
        return Optional.ofNullable(this.ip);
    }
    /**
     * @return 后端服务器提供服务的端口。
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return 后端服务器ID。
     * 
     */
    public Optional<String> serverId() {
        return Optional.ofNullable(this.serverId);
    }
    /**
     * @return 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
     * 
     */
    public Optional<String> serverType() {
        return Optional.ofNullable(this.serverType);
    }
    /**
     * @return 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return 健康状态最后更新时间。
     * 
     */
    public Optional<String> updatedTime() {
        return Optional.ofNullable(this.updatedTime);
    }
    /**
     * @return 后端服务器接收访问流量的可用区ID。
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NlbListenerHealth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String instanceId;
        private @Nullable String ip;
        private @Nullable Integer port;
        private @Nullable String serverId;
        private @Nullable String serverType;
        private @Nullable String status;
        private @Nullable String updatedTime;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(NlbListenerHealth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceId = defaults.instanceId;
    	      this.ip = defaults.ip;
    	      this.port = defaults.port;
    	      this.serverId = defaults.serverId;
    	      this.serverType = defaults.serverType;
    	      this.status = defaults.status;
    	      this.updatedTime = defaults.updatedTime;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {

            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder ip(@Nullable String ip) {

            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder serverId(@Nullable String serverId) {

            this.serverId = serverId;
            return this;
        }
        @CustomType.Setter
        public Builder serverType(@Nullable String serverType) {

            this.serverType = serverType;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updatedTime(@Nullable String updatedTime) {

            this.updatedTime = updatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {

            this.zoneId = zoneId;
            return this;
        }
        public NlbListenerHealth build() {
            final var _resultValue = new NlbListenerHealth();
            _resultValue.instanceId = instanceId;
            _resultValue.ip = ip;
            _resultValue.port = port;
            _resultValue.serverId = serverId;
            _resultValue.serverType = serverType;
            _resultValue.status = status;
            _resultValue.updatedTime = updatedTime;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
