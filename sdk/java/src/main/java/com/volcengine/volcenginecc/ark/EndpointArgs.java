// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ark;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.ark.inputs.EndpointModelReferenceArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointModerationArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointRateLimitArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final EndpointArgs Empty = new EndpointArgs();

    /**
     * 接入点描述。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 接入点描述。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 接入点接入模型。
     * 
     */
    @Import(name="modelReference", required=true)
    private Output<EndpointModelReferenceArgs> modelReference;

    /**
     * @return 接入点接入模型。
     * 
     */
    public Output<EndpointModelReferenceArgs> modelReference() {
        return this.modelReference;
    }

    /**
     * 模型单元，为空表示后付费；否则预付费。
     * 
     */
    @Import(name="modelUnitId")
    private @Nullable Output<String> modelUnitId;

    /**
     * @return 模型单元，为空表示后付费；否则预付费。
     * 
     */
    public Optional<Output<String>> modelUnitId() {
        return Optional.ofNullable(this.modelUnitId);
    }

    /**
     * 内容护栏方案。
     * 
     */
    @Import(name="moderation")
    private @Nullable Output<EndpointModerationArgs> moderation;

    /**
     * @return 内容护栏方案。
     * 
     */
    public Optional<Output<EndpointModerationArgs>> moderation() {
        return Optional.ofNullable(this.moderation);
    }

    /**
     * 接入点名称。
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return 接入点名称。
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * 资源所属的项目名称，默认值为default。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 资源所属的项目名称，默认值为default。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 接入点限流。
     * 
     */
    @Import(name="rateLimit")
    private @Nullable Output<EndpointRateLimitArgs> rateLimit;

    /**
     * @return 接入点限流。
     * 
     */
    public Optional<Output<EndpointRateLimitArgs>> rateLimit() {
        return Optional.ofNullable(this.rateLimit);
    }

    @Import(name="tags")
    private @Nullable Output<List<EndpointTagArgs>> tags;

    public Optional<Output<List<EndpointTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EndpointArgs() {}

    private EndpointArgs(EndpointArgs $) {
        this.description = $.description;
        this.modelReference = $.modelReference;
        this.modelUnitId = $.modelUnitId;
        this.moderation = $.moderation;
        this.name = $.name;
        this.projectName = $.projectName;
        this.rateLimit = $.rateLimit;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointArgs $;

        public Builder() {
            $ = new EndpointArgs();
        }

        public Builder(EndpointArgs defaults) {
            $ = new EndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description 接入点描述。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 接入点描述。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param modelReference 接入点接入模型。
         * 
         * @return builder
         * 
         */
        public Builder modelReference(Output<EndpointModelReferenceArgs> modelReference) {
            $.modelReference = modelReference;
            return this;
        }

        /**
         * @param modelReference 接入点接入模型。
         * 
         * @return builder
         * 
         */
        public Builder modelReference(EndpointModelReferenceArgs modelReference) {
            return modelReference(Output.of(modelReference));
        }

        /**
         * @param modelUnitId 模型单元，为空表示后付费；否则预付费。
         * 
         * @return builder
         * 
         */
        public Builder modelUnitId(@Nullable Output<String> modelUnitId) {
            $.modelUnitId = modelUnitId;
            return this;
        }

        /**
         * @param modelUnitId 模型单元，为空表示后付费；否则预付费。
         * 
         * @return builder
         * 
         */
        public Builder modelUnitId(String modelUnitId) {
            return modelUnitId(Output.of(modelUnitId));
        }

        /**
         * @param moderation 内容护栏方案。
         * 
         * @return builder
         * 
         */
        public Builder moderation(@Nullable Output<EndpointModerationArgs> moderation) {
            $.moderation = moderation;
            return this;
        }

        /**
         * @param moderation 内容护栏方案。
         * 
         * @return builder
         * 
         */
        public Builder moderation(EndpointModerationArgs moderation) {
            return moderation(Output.of(moderation));
        }

        /**
         * @param name 接入点名称。
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name 接入点名称。
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectName 资源所属的项目名称，默认值为default。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 资源所属的项目名称，默认值为default。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param rateLimit 接入点限流。
         * 
         * @return builder
         * 
         */
        public Builder rateLimit(@Nullable Output<EndpointRateLimitArgs> rateLimit) {
            $.rateLimit = rateLimit;
            return this;
        }

        /**
         * @param rateLimit 接入点限流。
         * 
         * @return builder
         * 
         */
        public Builder rateLimit(EndpointRateLimitArgs rateLimit) {
            return rateLimit(Output.of(rateLimit));
        }

        public Builder tags(@Nullable Output<List<EndpointTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<EndpointTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(EndpointTagArgs... tags) {
            return tags(List.of(tags));
        }

        public EndpointArgs build() {
            if ($.modelReference == null) {
                throw new MissingRequiredPropertyException("EndpointArgs", "modelReference");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("EndpointArgs", "name");
            }
            return $;
        }
    }

}
