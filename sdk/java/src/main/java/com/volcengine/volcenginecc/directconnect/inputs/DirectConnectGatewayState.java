// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.directconnect.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.directconnect.inputs.DirectConnectGatewayAssociateCenArgs;
import com.volcengine.volcenginecc.directconnect.inputs.DirectConnectGatewayTagArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DirectConnectGatewayState extends com.pulumi.resources.ResourceArgs {

    public static final DirectConnectGatewayState Empty = new DirectConnectGatewayState();

    /**
     * 专线网关所属账号的ID。
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return 专线网关所属账号的ID。
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="associateCens")
    private @Nullable Output<List<DirectConnectGatewayAssociateCenArgs>> associateCens;

    public Optional<Output<List<DirectConnectGatewayAssociateCenArgs>>> associateCens() {
        return Optional.ofNullable(this.associateCens);
    }

    /**
     * 专线网关是否被锁定。Normal：正常。FinancialLocked：被锁定。
     * 
     */
    @Import(name="businessStatus")
    private @Nullable Output<String> businessStatus;

    /**
     * @return 专线网关是否被锁定。Normal：正常。FinancialLocked：被锁定。
     * 
     */
    public Optional<Output<String>> businessStatus() {
        return Optional.ofNullable(this.businessStatus);
    }

    /**
     * 创建专线网关的时间。
     * 
     */
    @Import(name="createdTime")
    private @Nullable Output<String> createdTime;

    /**
     * @return 创建专线网关的时间。
     * 
     */
    public Optional<Output<String>> createdTime() {
        return Optional.ofNullable(this.createdTime);
    }

    /**
     * 预期资源强制回收时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
     * 
     */
    @Import(name="deletedTime")
    private @Nullable Output<String> deletedTime;

    /**
     * @return 预期资源强制回收时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
     * 
     */
    public Optional<Output<String>> deletedTime() {
        return Optional.ofNullable(this.deletedTime);
    }

    /**
     * 专线网关的描述信息。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、空格（ ）、下划线（_）、中划线（-）、等号（=）、英文逗号（,）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 专线网关的描述信息。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、空格（ ）、下划线（_）、中划线（-）、等号（=）、英文逗号（,）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 专线网关的ID。
     * 
     */
    @Import(name="directConnectGatewayId")
    private @Nullable Output<String> directConnectGatewayId;

    /**
     * @return 专线网关的ID。
     * 
     */
    public Optional<Output<String>> directConnectGatewayId() {
        return Optional.ofNullable(this.directConnectGatewayId);
    }

    /**
     * 专线网关的名称。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为专线网关的ID。
     * 
     */
    @Import(name="directConnectGatewayName")
    private @Nullable Output<String> directConnectGatewayName;

    /**
     * @return 专线网关的名称。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为专线网关的ID。
     * 
     */
    public Optional<Output<String>> directConnectGatewayName() {
        return Optional.ofNullable(this.directConnectGatewayName);
    }

    /**
     * 是否支持IPv6。true：支持。false：不支持。
     * 
     */
    @Import(name="enableIpv6")
    private @Nullable Output<Boolean> enableIpv6;

    /**
     * @return 是否支持IPv6。true：支持。false：不支持。
     * 
     */
    public Optional<Output<Boolean>> enableIpv6() {
        return Optional.ofNullable(this.enableIpv6);
    }

    /**
     * 专线网关被锁定的原因。unlock：解锁。financial：因欠费被锁定。security：因安全被锁定。
     * 
     */
    @Import(name="lockReason")
    private @Nullable Output<String> lockReason;

    /**
     * @return 专线网关被锁定的原因。unlock：解锁。financial：因欠费被锁定。security：因安全被锁定。
     * 
     */
    public Optional<Output<String>> lockReason() {
        return Optional.ofNullable(this.lockReason);
    }

    /**
     * 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
     * 
     */
    @Import(name="overdueTime")
    private @Nullable Output<String> overdueTime;

    /**
     * @return 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
     * 
     */
    public Optional<Output<String>> overdueTime() {
        return Optional.ofNullable(this.overdueTime);
    }

    /**
     * 专线网关所属的项目。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 专线网关所属的项目。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 专线网关的状态。Creating：创建中。Deleting：删除中。Pending：配置中。Available：可用。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 专线网关的状态。Creating：创建中。Deleting：删除中。Pending：配置中。Available：可用。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<List<DirectConnectGatewayTagArgs>> tags;

    public Optional<Output<List<DirectConnectGatewayTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 更新专线网关的时间。
     * 
     */
    @Import(name="updatedTime")
    private @Nullable Output<String> updatedTime;

    /**
     * @return 更新专线网关的时间。
     * 
     */
    public Optional<Output<String>> updatedTime() {
        return Optional.ofNullable(this.updatedTime);
    }

    private DirectConnectGatewayState() {}

    private DirectConnectGatewayState(DirectConnectGatewayState $) {
        this.accountId = $.accountId;
        this.associateCens = $.associateCens;
        this.businessStatus = $.businessStatus;
        this.createdTime = $.createdTime;
        this.deletedTime = $.deletedTime;
        this.description = $.description;
        this.directConnectGatewayId = $.directConnectGatewayId;
        this.directConnectGatewayName = $.directConnectGatewayName;
        this.enableIpv6 = $.enableIpv6;
        this.lockReason = $.lockReason;
        this.overdueTime = $.overdueTime;
        this.projectName = $.projectName;
        this.status = $.status;
        this.tags = $.tags;
        this.updatedTime = $.updatedTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DirectConnectGatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DirectConnectGatewayState $;

        public Builder() {
            $ = new DirectConnectGatewayState();
        }

        public Builder(DirectConnectGatewayState defaults) {
            $ = new DirectConnectGatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId 专线网关所属账号的ID。
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId 专线网关所属账号的ID。
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder associateCens(@Nullable Output<List<DirectConnectGatewayAssociateCenArgs>> associateCens) {
            $.associateCens = associateCens;
            return this;
        }

        public Builder associateCens(List<DirectConnectGatewayAssociateCenArgs> associateCens) {
            return associateCens(Output.of(associateCens));
        }

        public Builder associateCens(DirectConnectGatewayAssociateCenArgs... associateCens) {
            return associateCens(List.of(associateCens));
        }

        /**
         * @param businessStatus 专线网关是否被锁定。Normal：正常。FinancialLocked：被锁定。
         * 
         * @return builder
         * 
         */
        public Builder businessStatus(@Nullable Output<String> businessStatus) {
            $.businessStatus = businessStatus;
            return this;
        }

        /**
         * @param businessStatus 专线网关是否被锁定。Normal：正常。FinancialLocked：被锁定。
         * 
         * @return builder
         * 
         */
        public Builder businessStatus(String businessStatus) {
            return businessStatus(Output.of(businessStatus));
        }

        /**
         * @param createdTime 创建专线网关的时间。
         * 
         * @return builder
         * 
         */
        public Builder createdTime(@Nullable Output<String> createdTime) {
            $.createdTime = createdTime;
            return this;
        }

        /**
         * @param createdTime 创建专线网关的时间。
         * 
         * @return builder
         * 
         */
        public Builder createdTime(String createdTime) {
            return createdTime(Output.of(createdTime));
        }

        /**
         * @param deletedTime 预期资源强制回收时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
         * 
         * @return builder
         * 
         */
        public Builder deletedTime(@Nullable Output<String> deletedTime) {
            $.deletedTime = deletedTime;
            return this;
        }

        /**
         * @param deletedTime 预期资源强制回收时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
         * 
         * @return builder
         * 
         */
        public Builder deletedTime(String deletedTime) {
            return deletedTime(Output.of(deletedTime));
        }

        /**
         * @param description 专线网关的描述信息。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、空格（ ）、下划线（_）、中划线（-）、等号（=）、英文逗号（,）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 专线网关的描述信息。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、空格（ ）、下划线（_）、中划线（-）、等号（=）、英文逗号（,）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param directConnectGatewayId 专线网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder directConnectGatewayId(@Nullable Output<String> directConnectGatewayId) {
            $.directConnectGatewayId = directConnectGatewayId;
            return this;
        }

        /**
         * @param directConnectGatewayId 专线网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder directConnectGatewayId(String directConnectGatewayId) {
            return directConnectGatewayId(Output.of(directConnectGatewayId));
        }

        /**
         * @param directConnectGatewayName 专线网关的名称。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为专线网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder directConnectGatewayName(@Nullable Output<String> directConnectGatewayName) {
            $.directConnectGatewayName = directConnectGatewayName;
            return this;
        }

        /**
         * @param directConnectGatewayName 专线网关的名称。以中文、字母、数字开头，只能包含中文、字母、数字、点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为专线网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder directConnectGatewayName(String directConnectGatewayName) {
            return directConnectGatewayName(Output.of(directConnectGatewayName));
        }

        /**
         * @param enableIpv6 是否支持IPv6。true：支持。false：不支持。
         * 
         * @return builder
         * 
         */
        public Builder enableIpv6(@Nullable Output<Boolean> enableIpv6) {
            $.enableIpv6 = enableIpv6;
            return this;
        }

        /**
         * @param enableIpv6 是否支持IPv6。true：支持。false：不支持。
         * 
         * @return builder
         * 
         */
        public Builder enableIpv6(Boolean enableIpv6) {
            return enableIpv6(Output.of(enableIpv6));
        }

        /**
         * @param lockReason 专线网关被锁定的原因。unlock：解锁。financial：因欠费被锁定。security：因安全被锁定。
         * 
         * @return builder
         * 
         */
        public Builder lockReason(@Nullable Output<String> lockReason) {
            $.lockReason = lockReason;
            return this;
        }

        /**
         * @param lockReason 专线网关被锁定的原因。unlock：解锁。financial：因欠费被锁定。security：因安全被锁定。
         * 
         * @return builder
         * 
         */
        public Builder lockReason(String lockReason) {
            return lockReason(Output.of(lockReason));
        }

        /**
         * @param overdueTime 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
         * 
         * @return builder
         * 
         */
        public Builder overdueTime(@Nullable Output<String> overdueTime) {
            $.overdueTime = overdueTime;
            return this;
        }

        /**
         * @param overdueTime 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值，否则均返回空值。
         * 
         * @return builder
         * 
         */
        public Builder overdueTime(String overdueTime) {
            return overdueTime(Output.of(overdueTime));
        }

        /**
         * @param projectName 专线网关所属的项目。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 专线网关所属的项目。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param status 专线网关的状态。Creating：创建中。Deleting：删除中。Pending：配置中。Available：可用。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 专线网关的状态。Creating：创建中。Deleting：删除中。Pending：配置中。Available：可用。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<List<DirectConnectGatewayTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<DirectConnectGatewayTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(DirectConnectGatewayTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updatedTime 更新专线网关的时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedTime(@Nullable Output<String> updatedTime) {
            $.updatedTime = updatedTime;
            return this;
        }

        /**
         * @param updatedTime 更新专线网关的时间。
         * 
         * @return builder
         * 
         */
        public Builder updatedTime(String updatedTime) {
            return updatedTime(Output.of(updatedTime));
        }

        public DirectConnectGatewayState build() {
            return $;
        }
    }

}
