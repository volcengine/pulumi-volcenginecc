// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.redis.outputs.GetInstanceInstanceShardServerNode;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceInstanceShard {
    /**
     * @return 分片中的节点数量
     * 
     */
    private Integer nodeNumber;
    /**
     * @return 分片中所有 Server 节点的详情列表。
     * 
     */
    private List<GetInstanceInstanceShardServerNode> serverNodes;
    /**
     * @return 分片 ID。
     * 
     */
    private String shardId;

    private GetInstanceInstanceShard() {}
    /**
     * @return 分片中的节点数量
     * 
     */
    public Integer nodeNumber() {
        return this.nodeNumber;
    }
    /**
     * @return 分片中所有 Server 节点的详情列表。
     * 
     */
    public List<GetInstanceInstanceShardServerNode> serverNodes() {
        return this.serverNodes;
    }
    /**
     * @return 分片 ID。
     * 
     */
    public String shardId() {
        return this.shardId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceInstanceShard defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer nodeNumber;
        private List<GetInstanceInstanceShardServerNode> serverNodes;
        private String shardId;
        public Builder() {}
        public Builder(GetInstanceInstanceShard defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeNumber = defaults.nodeNumber;
    	      this.serverNodes = defaults.serverNodes;
    	      this.shardId = defaults.shardId;
        }

        @CustomType.Setter
        public Builder nodeNumber(Integer nodeNumber) {
            if (nodeNumber == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShard", "nodeNumber");
            }
            this.nodeNumber = nodeNumber;
            return this;
        }
        @CustomType.Setter
        public Builder serverNodes(List<GetInstanceInstanceShardServerNode> serverNodes) {
            if (serverNodes == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShard", "serverNodes");
            }
            this.serverNodes = serverNodes;
            return this;
        }
        public Builder serverNodes(GetInstanceInstanceShardServerNode... serverNodes) {
            return serverNodes(List.of(serverNodes));
        }
        @CustomType.Setter
        public Builder shardId(String shardId) {
            if (shardId == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShard", "shardId");
            }
            this.shardId = shardId;
            return this;
        }
        public GetInstanceInstanceShard build() {
            final var _resultValue = new GetInstanceInstanceShard();
            _resultValue.nodeNumber = nodeNumber;
            _resultValue.serverNodes = serverNodes;
            _resultValue.shardId = shardId;
            return _resultValue;
        }
    }
}
