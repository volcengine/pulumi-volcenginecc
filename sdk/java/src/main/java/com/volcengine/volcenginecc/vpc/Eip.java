// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.vpc.EipArgs;
import com.volcengine.volcenginecc.vpc.inputs.EipState;
import com.volcengine.volcenginecc.vpc.outputs.EipTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 公网IP（Elastic IP Address，EIP）及其公网出口带宽，是火山引擎为云资源提供的可独立购买和持有的IP连通服务。公网IP支持直接绑定云服务器（包括ECS云服务器、EBM裸金属服务器、GPU云服务器），还支持绑定公网NAT网关、负载均衡、辅助网卡等组件，为云服务器提供公网互通能力。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.vpc.Eip;
 * import com.volcengine.volcenginecc.vpc.EipArgs;
 * import com.pulumi.volcenginecc.vpc.inputs.EipTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var eipDemo = new Eip("eipDemo", EipArgs.builder()
 *             .name("EipDemo")
 *             .description("EipDemo description")
 *             .isp("BGP")
 *             .billingType(2)
 *             .bandwidth(3)
 *             .period(5)
 *             .projectName("default")
 *             .bandwidthPackageId("bwp-ij5gz1lf66m874o8cth*****")
 *             .tags(EipTagArgs.builder()
 *                 .key("env")
 *                 .value("test")
 *                 .build())
 *             .instanceId("i-ye48ymyy9s5i3z4*****")
 *             .instanceType("EcsInstance")
 *             .directMode(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:vpc/eip:Eip example &#34;allocation_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:vpc/eip:Eip")
public class Eip extends com.pulumi.resources.CustomResource {
    /**
     * 公网IP的ID。
     * 
     */
    @Export(name="allocationId", refs={String.class}, tree="[0]")
    private Output<String> allocationId;

    /**
     * @return 公网IP的ID。
     * 
     */
    public Output<String> allocationId() {
        return this.allocationId;
    }
    /**
     * 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
     * 
     */
    @Export(name="bandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> bandwidth;

    /**
     * @return 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
     * 
     */
    public Output<Integer> bandwidth() {
        return this.bandwidth;
    }
    /**
     * 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
     * 
     */
    @Export(name="bandwidthPackageId", refs={String.class}, tree="[0]")
    private Output<String> bandwidthPackageId;

    /**
     * @return 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
     * 
     */
    public Output<String> bandwidthPackageId() {
        return this.bandwidthPackageId;
    }
    /**
     * 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
     * 
     */
    @Export(name="billingType", refs={Integer.class}, tree="[0]")
    private Output<Integer> billingType;

    /**
     * @return 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
     * 
     */
    public Output<Integer> billingType() {
        return this.billingType;
    }
    /**
     * 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
     * 
     */
    @Export(name="businessStatus", refs={String.class}, tree="[0]")
    private Output<String> businessStatus;

    /**
     * @return 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
     * 
     */
    public Output<String> businessStatus() {
        return this.businessStatus;
    }
    /**
     * 公网IP的创建时间。
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 公网IP的创建时间。
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
     * 
     */
    @Export(name="deletedTime", refs={String.class}, tree="[0]")
    private Output<String> deletedTime;

    /**
     * @return 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
     * 
     */
    public Output<String> deletedTime() {
        return this.deletedTime;
    }
    /**
     * 公网IP的描述信息。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 公网IP的描述信息。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
     * 
     */
    @Export(name="directMode", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> directMode;

    /**
     * @return 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
     * 
     */
    public Output<Boolean> directMode() {
        return this.directMode;
    }
    /**
     * 公网IP地址。
     * 
     */
    @Export(name="eipAddress", refs={String.class}, tree="[0]")
    private Output<String> eipAddress;

    /**
     * @return 公网IP地址。
     * 
     */
    public Output<String> eipAddress() {
        return this.eipAddress;
    }
    /**
     * 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
     * 
     */
    @Export(name="expiredTime", refs={String.class}, tree="[0]")
    private Output<String> expiredTime;

    /**
     * @return 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
     * 
     */
    public Output<String> expiredTime() {
        return this.expiredTime;
    }
    /**
     * 当前绑定的实例ID。
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return 当前绑定的实例ID。
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
     * 
     */
    @Export(name="instanceType", refs={String.class}, tree="[0]")
    private Output<String> instanceType;

    /**
     * @return 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
     * 
     */
    @Export(name="ipAddress", refs={String.class}, tree="[0]")
    private Output<String> ipAddress;

    /**
     * @return 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * IP地址池的ID。
     * 
     */
    @Export(name="ipAddressPoolId", refs={String.class}, tree="[0]")
    private Output<String> ipAddressPoolId;

    /**
     * @return IP地址池的ID。
     * 
     */
    public Output<String> ipAddressPoolId() {
        return this.ipAddressPoolId;
    }
    /**
     * 是否被封禁。true：是。false：否。
     * 
     */
    @Export(name="isBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isBlocked;

    /**
     * @return 是否被封禁。true：是。false：否。
     * 
     */
    public Output<Boolean> isBlocked() {
        return this.isBlocked;
    }
    /**
     * 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
     * 
     */
    @Export(name="isp", refs={String.class}, tree="[0]")
    private Output<String> isp;

    /**
     * @return 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
     * 
     */
    public Output<String> isp() {
        return this.isp;
    }
    /**
     * 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
     * 
     */
    @Export(name="lockReason", refs={String.class}, tree="[0]")
    private Output<String> lockReason;

    /**
     * @return 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
     * 
     */
    public Output<String> lockReason() {
        return this.lockReason;
    }
    /**
     * 公网IP的名称。
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return 公网IP的名称。
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
     * 
     */
    @Export(name="overdueTime", refs={String.class}, tree="[0]")
    private Output<String> overdueTime;

    /**
     * @return 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
     * 
     */
    public Output<String> overdueTime() {
        return this.overdueTime;
    }
    /**
     * 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
     * 
     */
    @Export(name="period", refs={Integer.class}, tree="[0]")
    private Output<Integer> period;

    /**
     * @return 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
     * 
     */
    public Output<Integer> period() {
        return this.period;
    }
    /**
     * 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
     * 
     */
    @Export(name="periodUnit", refs={Integer.class}, tree="[0]")
    private Output<Integer> periodUnit;

    /**
     * @return 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
     * 
     */
    public Output<Integer> periodUnit() {
        return this.periodUnit;
    }
    /**
     * 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
     * 
     */
    @Export(name="privateIpAddress", refs={String.class}, tree="[0]")
    private Output<String> privateIpAddress;

    /**
     * @return 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
     * 
     */
    public Output<String> privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * 公网IP所属项目的名称。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 公网IP所属项目的名称。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
     * 
     */
    @Export(name="releaseWithInstance", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> releaseWithInstance;

    /**
     * @return 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
     * 
     */
    public Output<Boolean> releaseWithInstance() {
        return this.releaseWithInstance;
    }
    /**
     * 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
     * 
     */
    @Export(name="renewPeriodTimes", refs={Integer.class}, tree="[0]")
    private Output<Integer> renewPeriodTimes;

    /**
     * @return 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
     * 
     */
    public Output<Integer> renewPeriodTimes() {
        return this.renewPeriodTimes;
    }
    /**
     * 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
     * 
     */
    @Export(name="renewType", refs={Integer.class}, tree="[0]")
    private Output<Integer> renewType;

    /**
     * @return 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
     * 
     */
    public Output<Integer> renewType() {
        return this.renewType;
    }
    /**
     * DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
     * 
     */
    @Export(name="securityProtectionInstanceId", refs={Integer.class}, tree="[0]")
    private Output<Integer> securityProtectionInstanceId;

    /**
     * @return DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
     * 
     */
    public Output<Integer> securityProtectionInstanceId() {
        return this.securityProtectionInstanceId;
    }
    /**
     * 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
     * 
     */
    @Export(name="securityProtectionTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityProtectionTypes;

    /**
     * @return 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
     * 
     */
    public Output<List<String>> securityProtectionTypes() {
        return this.securityProtectionTypes;
    }
    /**
     * 是否由服务管理
     * 
     */
    @Export(name="serviceManaged", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> serviceManaged;

    /**
     * @return 是否由服务管理
     * 
     */
    public Output<Boolean> serviceManaged() {
        return this.serviceManaged;
    }
    /**
     * 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    @Export(name="tags", refs={List.class,EipTag.class}, tree="[0,1]")
    private Output<List<EipTag>> tags;

    public Output<List<EipTag>> tags() {
        return this.tags;
    }
    /**
     * 更新公网IP的时间。
     * 
     */
    @Export(name="updatedTime", refs={String.class}, tree="[0]")
    private Output<String> updatedTime;

    /**
     * @return 更新公网IP的时间。
     * 
     */
    public Output<String> updatedTime() {
        return this.updatedTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Eip(java.lang.String name) {
        this(name, EipArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Eip(java.lang.String name, EipArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Eip(java.lang.String name, EipArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/eip:Eip", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Eip(java.lang.String name, Output<java.lang.String> id, @Nullable EipState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/eip:Eip", name, state, makeResourceOptions(options, id), false);
    }

    private static EipArgs makeArgs(EipArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EipArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Eip get(java.lang.String name, Output<java.lang.String> id, @Nullable EipState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Eip(name, id, state, options);
    }
}
