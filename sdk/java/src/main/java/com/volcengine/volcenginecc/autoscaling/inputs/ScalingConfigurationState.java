// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.autoscaling.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.autoscaling.inputs.ScalingConfigurationEipArgs;
import com.volcengine.volcenginecc.autoscaling.inputs.ScalingConfigurationInstanceTypeOverrideArgs;
import com.volcengine.volcenginecc.autoscaling.inputs.ScalingConfigurationTagArgs;
import com.volcengine.volcenginecc.autoscaling.inputs.ScalingConfigurationVolumeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScalingConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final ScalingConfigurationState Empty = new ScalingConfigurationState();

    /**
     * 资源创建时间(UTC时间)
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return 资源创建时间(UTC时间)
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * 公网IP。
     * 
     */
    @Import(name="eip")
    private @Nullable Output<ScalingConfigurationEipArgs> eip;

    /**
     * @return 公网IP。
     * 
     */
    public Optional<Output<ScalingConfigurationEipArgs>> eip() {
        return Optional.ofNullable(this.eip);
    }

    /**
     * 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
     * 
     */
    @Import(name="hpcClusterId")
    private @Nullable Output<String> hpcClusterId;

    /**
     * @return 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
     * 
     */
    public Optional<Output<String>> hpcClusterId() {
        return Optional.ofNullable(this.hpcClusterId);
    }

    /**
     * 镜像ID，伸缩组自动创建实例时使用的镜像资源。
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return 镜像ID，伸缩组自动创建实例时使用的镜像资源。
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
     * 
     */
    @Import(name="instanceChargeType")
    private @Nullable Output<String> instanceChargeType;

    /**
     * @return 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
     * 
     */
    public Optional<Output<String>> instanceChargeType() {
        return Optional.ofNullable(this.instanceChargeType);
    }

    /**
     * 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
     * 
     */
    @Import(name="instanceDescription")
    private @Nullable Output<String> instanceDescription;

    /**
     * @return 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
     * 
     */
    public Optional<Output<String>> instanceDescription() {
        return Optional.ofNullable(this.instanceDescription);
    }

    /**
     * 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    @Import(name="instanceTypeOverrides")
    private @Nullable Output<List<ScalingConfigurationInstanceTypeOverrideArgs>> instanceTypeOverrides;

    public Optional<Output<List<ScalingConfigurationInstanceTypeOverrideArgs>>> instanceTypeOverrides() {
        return Optional.ofNullable(this.instanceTypeOverrides);
    }

    /**
     * 实例的计算规格列表。
     * 
     */
    @Import(name="instanceTypes")
    private @Nullable Output<List<String>> instanceTypes;

    /**
     * @return 实例的计算规格列表。
     * 
     */
    public Optional<Output<List<String>>> instanceTypes() {
        return Optional.ofNullable(this.instanceTypes);
    }

    /**
     * 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
     * 
     */
    @Import(name="ipv6AddressCount")
    private @Nullable Output<Integer> ipv6AddressCount;

    /**
     * @return 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
     * 
     */
    public Optional<Output<Integer>> ipv6AddressCount() {
        return Optional.ofNullable(this.ipv6AddressCount);
    }

    /**
     * KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
     * 
     */
    @Import(name="keyPairName")
    private @Nullable Output<String> keyPairName;

    /**
     * @return KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
     * 
     */
    public Optional<Output<String>> keyPairName() {
        return Optional.ofNullable(this.keyPairName);
    }

    /**
     * 生命周期状态。取值：Active（活跃）/InActive（非活跃）
     * 
     */
    @Import(name="lifecycleState")
    private @Nullable Output<String> lifecycleState;

    /**
     * @return 生命周期状态。取值：Active（活跃）/InActive（非活跃）
     * 
     */
    public Optional<Output<String>> lifecycleState() {
        return Optional.ofNullable(this.lifecycleState);
    }

    /**
     * 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&amp;*()_-+= |，不能以“/”和“$6$”开头
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&amp;*()_-+= |，不能以“/”和“$6$”开头
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
     * 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
     * 长度限制在64个字符以内。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
     * 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
     * 长度限制在64个字符以内。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 伸缩配置ID。
     * 
     */
    @Import(name="scalingConfigurationId")
    private @Nullable Output<String> scalingConfigurationId;

    /**
     * @return 伸缩配置ID。
     * 
     */
    public Optional<Output<String>> scalingConfigurationId() {
        return Optional.ofNullable(this.scalingConfigurationId);
    }

    /**
     * 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
     * 
     */
    @Import(name="scalingConfigurationName")
    private @Nullable Output<String> scalingConfigurationName;

    /**
     * @return 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
     * 
     */
    public Optional<Output<String>> scalingConfigurationName() {
        return Optional.ofNullable(this.scalingConfigurationName);
    }

    /**
     * 伸缩配置所属的伸缩组ID。
     * 
     */
    @Import(name="scalingGroupId")
    private @Nullable Output<String> scalingGroupId;

    /**
     * @return 伸缩配置所属的伸缩组ID。
     * 
     */
    public Optional<Output<String>> scalingGroupId() {
        return Optional.ofNullable(this.scalingGroupId);
    }

    /**
     * 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
     * 
     */
    @Import(name="securityEnhancementStrategy")
    private @Nullable Output<String> securityEnhancementStrategy;

    /**
     * @return 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
     * 
     */
    public Optional<Output<String>> securityEnhancementStrategy() {
        return Optional.ofNullable(this.securityEnhancementStrategy);
    }

    /**
     * 实例主网卡关联的安全组ID。
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return 实例主网卡关联的安全组ID。
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
     * 
     */
    @Import(name="spotStrategy")
    private @Nullable Output<String> spotStrategy;

    /**
     * @return 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
     * 
     */
    public Optional<Output<String>> spotStrategy() {
        return Optional.ofNullable(this.spotStrategy);
    }

    @Import(name="tags")
    private @Nullable Output<List<ScalingConfigurationTagArgs>> tags;

    public Optional<Output<List<ScalingConfigurationTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 资源更新时间(UTC时间)
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return 资源更新时间(UTC时间)
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    @Import(name="volumes")
    private @Nullable Output<List<ScalingConfigurationVolumeArgs>> volumes;

    public Optional<Output<List<ScalingConfigurationVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    /**
     * 伸缩配置可用区ID。
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return 伸缩配置可用区ID。
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private ScalingConfigurationState() {}

    private ScalingConfigurationState(ScalingConfigurationState $) {
        this.createdAt = $.createdAt;
        this.eip = $.eip;
        this.hostName = $.hostName;
        this.hpcClusterId = $.hpcClusterId;
        this.imageId = $.imageId;
        this.instanceChargeType = $.instanceChargeType;
        this.instanceDescription = $.instanceDescription;
        this.instanceName = $.instanceName;
        this.instanceTypeOverrides = $.instanceTypeOverrides;
        this.instanceTypes = $.instanceTypes;
        this.ipv6AddressCount = $.ipv6AddressCount;
        this.keyPairName = $.keyPairName;
        this.lifecycleState = $.lifecycleState;
        this.password = $.password;
        this.projectName = $.projectName;
        this.scalingConfigurationId = $.scalingConfigurationId;
        this.scalingConfigurationName = $.scalingConfigurationName;
        this.scalingGroupId = $.scalingGroupId;
        this.securityEnhancementStrategy = $.securityEnhancementStrategy;
        this.securityGroupIds = $.securityGroupIds;
        this.spotStrategy = $.spotStrategy;
        this.tags = $.tags;
        this.updatedAt = $.updatedAt;
        this.userData = $.userData;
        this.volumes = $.volumes;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingConfigurationState $;

        public Builder() {
            $ = new ScalingConfigurationState();
        }

        public Builder(ScalingConfigurationState defaults) {
            $ = new ScalingConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt 资源创建时间(UTC时间)
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt 资源创建时间(UTC时间)
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param eip 公网IP。
         * 
         * @return builder
         * 
         */
        public Builder eip(@Nullable Output<ScalingConfigurationEipArgs> eip) {
            $.eip = eip;
            return this;
        }

        /**
         * @param eip 公网IP。
         * 
         * @return builder
         * 
         */
        public Builder eip(ScalingConfigurationEipArgs eip) {
            return eip(Output.of(eip));
        }

        /**
         * @param hostName 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param hpcClusterId 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
         * 
         * @return builder
         * 
         */
        public Builder hpcClusterId(@Nullable Output<String> hpcClusterId) {
            $.hpcClusterId = hpcClusterId;
            return this;
        }

        /**
         * @param hpcClusterId 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
         * 
         * @return builder
         * 
         */
        public Builder hpcClusterId(String hpcClusterId) {
            return hpcClusterId(Output.of(hpcClusterId));
        }

        /**
         * @param imageId 镜像ID，伸缩组自动创建实例时使用的镜像资源。
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId 镜像ID，伸缩组自动创建实例时使用的镜像资源。
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param instanceChargeType 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(@Nullable Output<String> instanceChargeType) {
            $.instanceChargeType = instanceChargeType;
            return this;
        }

        /**
         * @param instanceChargeType 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
         * 
         * @return builder
         * 
         */
        public Builder instanceChargeType(String instanceChargeType) {
            return instanceChargeType(Output.of(instanceChargeType));
        }

        /**
         * @param instanceDescription 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
         * 
         * @return builder
         * 
         */
        public Builder instanceDescription(@Nullable Output<String> instanceDescription) {
            $.instanceDescription = instanceDescription;
            return this;
        }

        /**
         * @param instanceDescription 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
         * 
         * @return builder
         * 
         */
        public Builder instanceDescription(String instanceDescription) {
            return instanceDescription(Output.of(instanceDescription));
        }

        /**
         * @param instanceName 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        public Builder instanceTypeOverrides(@Nullable Output<List<ScalingConfigurationInstanceTypeOverrideArgs>> instanceTypeOverrides) {
            $.instanceTypeOverrides = instanceTypeOverrides;
            return this;
        }

        public Builder instanceTypeOverrides(List<ScalingConfigurationInstanceTypeOverrideArgs> instanceTypeOverrides) {
            return instanceTypeOverrides(Output.of(instanceTypeOverrides));
        }

        public Builder instanceTypeOverrides(ScalingConfigurationInstanceTypeOverrideArgs... instanceTypeOverrides) {
            return instanceTypeOverrides(List.of(instanceTypeOverrides));
        }

        /**
         * @param instanceTypes 实例的计算规格列表。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypes(@Nullable Output<List<String>> instanceTypes) {
            $.instanceTypes = instanceTypes;
            return this;
        }

        /**
         * @param instanceTypes 实例的计算规格列表。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypes(List<String> instanceTypes) {
            return instanceTypes(Output.of(instanceTypes));
        }

        /**
         * @param instanceTypes 实例的计算规格列表。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }

        /**
         * @param ipv6AddressCount 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressCount(@Nullable Output<Integer> ipv6AddressCount) {
            $.ipv6AddressCount = ipv6AddressCount;
            return this;
        }

        /**
         * @param ipv6AddressCount 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressCount(Integer ipv6AddressCount) {
            return ipv6AddressCount(Output.of(ipv6AddressCount));
        }

        /**
         * @param keyPairName KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(@Nullable Output<String> keyPairName) {
            $.keyPairName = keyPairName;
            return this;
        }

        /**
         * @param keyPairName KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
         * 
         * @return builder
         * 
         */
        public Builder keyPairName(String keyPairName) {
            return keyPairName(Output.of(keyPairName));
        }

        /**
         * @param lifecycleState 生命周期状态。取值：Active（活跃）/InActive（非活跃）
         * 
         * @return builder
         * 
         */
        public Builder lifecycleState(@Nullable Output<String> lifecycleState) {
            $.lifecycleState = lifecycleState;
            return this;
        }

        /**
         * @param lifecycleState 生命周期状态。取值：Active（活跃）/InActive（非活跃）
         * 
         * @return builder
         * 
         */
        public Builder lifecycleState(String lifecycleState) {
            return lifecycleState(Output.of(lifecycleState));
        }

        /**
         * @param password 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&amp;*()_-+= |，不能以“/”和“$6$”开头
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&amp;*()_-+= |，不能以“/”和“$6$”开头
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param projectName 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
         * 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
         * 长度限制在64个字符以内。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
         * 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
         * 长度限制在64个字符以内。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param scalingConfigurationId 伸缩配置ID。
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationId(@Nullable Output<String> scalingConfigurationId) {
            $.scalingConfigurationId = scalingConfigurationId;
            return this;
        }

        /**
         * @param scalingConfigurationId 伸缩配置ID。
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationId(String scalingConfigurationId) {
            return scalingConfigurationId(Output.of(scalingConfigurationId));
        }

        /**
         * @param scalingConfigurationName 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationName(@Nullable Output<String> scalingConfigurationName) {
            $.scalingConfigurationName = scalingConfigurationName;
            return this;
        }

        /**
         * @param scalingConfigurationName 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
         * 
         * @return builder
         * 
         */
        public Builder scalingConfigurationName(String scalingConfigurationName) {
            return scalingConfigurationName(Output.of(scalingConfigurationName));
        }

        /**
         * @param scalingGroupId 伸缩配置所属的伸缩组ID。
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(@Nullable Output<String> scalingGroupId) {
            $.scalingGroupId = scalingGroupId;
            return this;
        }

        /**
         * @param scalingGroupId 伸缩配置所属的伸缩组ID。
         * 
         * @return builder
         * 
         */
        public Builder scalingGroupId(String scalingGroupId) {
            return scalingGroupId(Output.of(scalingGroupId));
        }

        /**
         * @param securityEnhancementStrategy 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
         * 
         * @return builder
         * 
         */
        public Builder securityEnhancementStrategy(@Nullable Output<String> securityEnhancementStrategy) {
            $.securityEnhancementStrategy = securityEnhancementStrategy;
            return this;
        }

        /**
         * @param securityEnhancementStrategy 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
         * 
         * @return builder
         * 
         */
        public Builder securityEnhancementStrategy(String securityEnhancementStrategy) {
            return securityEnhancementStrategy(Output.of(securityEnhancementStrategy));
        }

        /**
         * @param securityGroupIds 实例主网卡关联的安全组ID。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds 实例主网卡关联的安全组ID。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds 实例主网卡关联的安全组ID。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param spotStrategy 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(@Nullable Output<String> spotStrategy) {
            $.spotStrategy = spotStrategy;
            return this;
        }

        /**
         * @param spotStrategy 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
         * 
         * @return builder
         * 
         */
        public Builder spotStrategy(String spotStrategy) {
            return spotStrategy(Output.of(spotStrategy));
        }

        public Builder tags(@Nullable Output<List<ScalingConfigurationTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<ScalingConfigurationTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(ScalingConfigurationTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updatedAt 资源更新时间(UTC时间)
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt 资源更新时间(UTC时间)
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param userData 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        public Builder volumes(@Nullable Output<List<ScalingConfigurationVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        public Builder volumes(List<ScalingConfigurationVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        public Builder volumes(ScalingConfigurationVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        /**
         * @param zoneId 伸缩配置可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId 伸缩配置可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public ScalingConfigurationState build() {
            return $;
        }
    }

}
