// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLoadBalancerIpv6EipBillingConfig {
    /**
     * @return IPv6 EIP的带宽峰值，单位为Mbps。
     * 
     */
    private Integer bandwidth;
    /**
     * @return IPv6 EIP的计费方式，2为按带宽计费，3为按流量计费。
     * 
     */
    private Integer billingType;
    /**
     * @return IPv6公网IP的线路类型，BGP表示多线。
     * 
     */
    private String isp;

    private GetLoadBalancerIpv6EipBillingConfig() {}
    /**
     * @return IPv6 EIP的带宽峰值，单位为Mbps。
     * 
     */
    public Integer bandwidth() {
        return this.bandwidth;
    }
    /**
     * @return IPv6 EIP的计费方式，2为按带宽计费，3为按流量计费。
     * 
     */
    public Integer billingType() {
        return this.billingType;
    }
    /**
     * @return IPv6公网IP的线路类型，BGP表示多线。
     * 
     */
    public String isp() {
        return this.isp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLoadBalancerIpv6EipBillingConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidth;
        private Integer billingType;
        private String isp;
        public Builder() {}
        public Builder(GetLoadBalancerIpv6EipBillingConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidth = defaults.bandwidth;
    	      this.billingType = defaults.billingType;
    	      this.isp = defaults.isp;
        }

        @CustomType.Setter
        public Builder bandwidth(Integer bandwidth) {
            if (bandwidth == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerIpv6EipBillingConfig", "bandwidth");
            }
            this.bandwidth = bandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder billingType(Integer billingType) {
            if (billingType == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerIpv6EipBillingConfig", "billingType");
            }
            this.billingType = billingType;
            return this;
        }
        @CustomType.Setter
        public Builder isp(String isp) {
            if (isp == null) {
              throw new MissingRequiredPropertyException("GetLoadBalancerIpv6EipBillingConfig", "isp");
            }
            this.isp = isp;
            return this;
        }
        public GetLoadBalancerIpv6EipBillingConfig build() {
            final var _resultValue = new GetLoadBalancerIpv6EipBillingConfig();
            _resultValue.bandwidth = bandwidth;
            _resultValue.billingType = billingType;
            _resultValue.isp = isp;
            return _resultValue;
        }
    }
}
