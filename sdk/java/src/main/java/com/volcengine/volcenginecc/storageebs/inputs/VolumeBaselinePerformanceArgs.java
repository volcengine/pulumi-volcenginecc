// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.storageebs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeBaselinePerformanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeBaselinePerformanceArgs Empty = new VolumeBaselinePerformanceArgs();

    /**
     * 云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。
     * 
     */
    @Import(name="iops")
    private @Nullable Output<Double> iops;

    /**
     * @return 云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。
     * 
     */
    public Optional<Output<Double>> iops() {
        return Optional.ofNullable(this.iops);
    }

    /**
     * 云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。
     * 
     */
    @Import(name="throughput")
    private @Nullable Output<Double> throughput;

    /**
     * @return 云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。
     * 
     */
    public Optional<Output<Double>> throughput() {
        return Optional.ofNullable(this.throughput);
    }

    private VolumeBaselinePerformanceArgs() {}

    private VolumeBaselinePerformanceArgs(VolumeBaselinePerformanceArgs $) {
        this.iops = $.iops;
        this.throughput = $.throughput;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeBaselinePerformanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeBaselinePerformanceArgs $;

        public Builder() {
            $ = new VolumeBaselinePerformanceArgs();
        }

        public Builder(VolumeBaselinePerformanceArgs defaults) {
            $ = new VolumeBaselinePerformanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param iops 云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。
         * 
         * @return builder
         * 
         */
        public Builder iops(@Nullable Output<Double> iops) {
            $.iops = iops;
            return this;
        }

        /**
         * @param iops 云盘的总IOPS，即云盘的基准IOPS和额外IOPS之和。
         * 
         * @return builder
         * 
         */
        public Builder iops(Double iops) {
            return iops(Output.of(iops));
        }

        /**
         * @param throughput 云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。
         * 
         * @return builder
         * 
         */
        public Builder throughput(@Nullable Output<Double> throughput) {
            $.throughput = throughput;
            return this;
        }

        /**
         * @param throughput 云盘的总吞吐量，即云盘的基准吞吐量和额外吞吐量之和。
         * 
         * @return builder
         * 
         */
        public Builder throughput(Double throughput) {
            return throughput(Output.of(throughput));
        }

        public VolumeBaselinePerformanceArgs build() {
            return $;
        }
    }

}
