// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vmp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetWorkspaceUsage {
    /**
     * @return 活跃时序数。
     * 
     */
    private Integer activeSeries;
    /**
     * @return 每秒写入样本数。
     * 
     */
    private Double ingestedSamplesPerSecond;

    private GetWorkspaceUsage() {}
    /**
     * @return 活跃时序数。
     * 
     */
    public Integer activeSeries() {
        return this.activeSeries;
    }
    /**
     * @return 每秒写入样本数。
     * 
     */
    public Double ingestedSamplesPerSecond() {
        return this.ingestedSamplesPerSecond;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activeSeries;
        private Double ingestedSamplesPerSecond;
        public Builder() {}
        public Builder(GetWorkspaceUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeSeries = defaults.activeSeries;
    	      this.ingestedSamplesPerSecond = defaults.ingestedSamplesPerSecond;
        }

        @CustomType.Setter
        public Builder activeSeries(Integer activeSeries) {
            if (activeSeries == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceUsage", "activeSeries");
            }
            this.activeSeries = activeSeries;
            return this;
        }
        @CustomType.Setter
        public Builder ingestedSamplesPerSecond(Double ingestedSamplesPerSecond) {
            if (ingestedSamplesPerSecond == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceUsage", "ingestedSamplesPerSecond");
            }
            this.ingestedSamplesPerSecond = ingestedSamplesPerSecond;
            return this;
        }
        public GetWorkspaceUsage build() {
            final var _resultValue = new GetWorkspaceUsage();
            _resultValue.activeSeries = activeSeries;
            _resultValue.ingestedSamplesPerSecond = ingestedSamplesPerSecond;
            return _resultValue;
        }
    }
}
