// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserPolicy {
    /**
     * @return 权限策略名称，长度1~64，支持英文、数字和+=,.{@literal @}-_符号。
     * 
     */
    private String policyName;
    /**
     * @return 权限策略类型，策略类型。System代表系统预设策略，Custom代表自定义策略。
     * 
     */
    private String policyType;

    private GetUserPolicy() {}
    /**
     * @return 权限策略名称，长度1~64，支持英文、数字和+=,.{@literal @}-_符号。
     * 
     */
    public String policyName() {
        return this.policyName;
    }
    /**
     * @return 权限策略类型，策略类型。System代表系统预设策略，Custom代表自定义策略。
     * 
     */
    public String policyType() {
        return this.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String policyName;
        private String policyType;
        public Builder() {}
        public Builder(GetUserPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policyName = defaults.policyName;
    	      this.policyType = defaults.policyType;
        }

        @CustomType.Setter
        public Builder policyName(String policyName) {
            if (policyName == null) {
              throw new MissingRequiredPropertyException("GetUserPolicy", "policyName");
            }
            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(String policyType) {
            if (policyType == null) {
              throw new MissingRequiredPropertyException("GetUserPolicy", "policyType");
            }
            this.policyType = policyType;
            return this;
        }
        public GetUserPolicy build() {
            final var _resultValue = new GetUserPolicy();
            _resultValue.policyName = policyName;
            _resultValue.policyType = policyType;
            return _resultValue;
        }
    }
}
