// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.ecs.InvocationArgs;
import com.volcengine.volcenginecc.ecs.inputs.InvocationState;
import com.volcengine.volcenginecc.ecs.outputs.InvocationInvocationResult;
import com.volcengine.volcenginecc.ecs.outputs.InvocationParameterDefinition;
import com.volcengine.volcenginecc.ecs.outputs.InvocationTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 云助手是火山引擎打造的原生自动化运维工具。您可以创建立即执行、周期执行、定时执行的作业任务，创建完成后完，云助手客户端将按照执行模式自动开始执行。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.volcengine.volcenginecc.ecs.Invocation;
 * import com.volcengine.volcenginecc.ecs.InvocationArgs;
 * import com.pulumi.volcenginecc.ecs.inputs.InvocationTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var invocationDemo = new Invocation("invocationDemo", InvocationArgs.builder()
 *             .invocationName("InvocationDemo")
 *             .invocationDescription("InvocationDemo desc")
 *             .workingDir("/home")
 *             .username("InvocationDemo")
 *             .windowsPassword("********")
 *             .timeout(60)
 *             .instanceIds("i-ye2v6l0pvkqc6inxxxxx")
 *             .repeatMode("Rate")
 *             .frequency("1h")
 *             .launchTime("2025-08-30T11:10Z")
 *             .recurrenceEndTime("2025-08-31T11:04Z")
 *             .projectName("default")
 *             .tags(InvocationTagArgs.builder()
 *                 .key("env")
 *                 .value("test")
 *                 .build())
 *             .commandId("cmd-ye28kugp249tzrexxxxx")
 *             .parameters("{\"dirname\":\"10\"}")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:ecs/invocation:Invocation example &#34;invocation_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:ecs/invocation:Invocation")
public class Invocation extends com.pulumi.resources.CustomResource {
    /**
     * 命令内容。
     * 
     */
    @Export(name="commandContent", refs={String.class}, tree="[0]")
    private Output<String> commandContent;

    /**
     * @return 命令内容。
     * 
     */
    public Output<String> commandContent() {
        return this.commandContent;
    }
    /**
     * 被调用命令的描述。
     * 
     */
    @Export(name="commandDescription", refs={String.class}, tree="[0]")
    private Output<String> commandDescription;

    /**
     * @return 被调用命令的描述。
     * 
     */
    public Output<String> commandDescription() {
        return this.commandDescription;
    }
    /**
     * 命令ID。
     * 
     */
    @Export(name="commandId", refs={String.class}, tree="[0]")
    private Output<String> commandId;

    /**
     * @return 命令ID。
     * 
     */
    public Output<String> commandId() {
        return this.commandId;
    }
    /**
     * 任务触发时的命令名称。
     * 
     */
    @Export(name="commandName", refs={String.class}, tree="[0]")
    private Output<String> commandName;

    /**
     * @return 任务触发时的命令名称。
     * 
     */
    public Output<String> commandName() {
        return this.commandName;
    }
    /**
     * 被调用命令的提供方。
     * 
     */
    @Export(name="commandProvider", refs={String.class}, tree="[0]")
    private Output<String> commandProvider;

    /**
     * @return 被调用命令的提供方。
     * 
     */
    public Output<String> commandProvider() {
        return this.commandProvider;
    }
    /**
     * 作业触发的命令类型。
     * 
     */
    @Export(name="commandType", refs={String.class}, tree="[0]")
    private Output<String> commandType;

    /**
     * @return 作业触发的命令类型。
     * 
     */
    public Output<String> commandType() {
        return this.commandType;
    }
    /**
     * 被调用命令是否使用自定义参数。true：已启用。false：未启用。
     * 
     */
    @Export(name="enableParameter", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableParameter;

    /**
     * @return 被调用命令是否使用自定义参数。true：已启用。false：未启用。
     * 
     */
    public Output<Boolean> enableParameter() {
        return this.enableParameter;
    }
    /**
     * 任务结束时间。
     * 
     */
    @Export(name="endTime", refs={String.class}, tree="[0]")
    private Output<String> endTime;

    /**
     * @return 任务结束时间。
     * 
     */
    public Output<String> endTime() {
        return this.endTime;
    }
    /**
     * 执行频率。RepeatMode=Rate 时本参数必填。格式：&lt;执行间隔数值&gt;&lt;执行间隔单位&gt;，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
     * 
     */
    @Export(name="frequency", refs={String.class}, tree="[0]")
    private Output<String> frequency;

    /**
     * @return 执行频率。RepeatMode=Rate 时本参数必填。格式：&lt;执行间隔数值&gt;&lt;执行间隔单位&gt;，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
     * 
     */
    public Output<String> frequency() {
        return this.frequency;
    }
    /**
     * 实例ID列表，最多支持200个ID。
     * 
     */
    @Export(name="instanceIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> instanceIds;

    /**
     * @return 实例ID列表，最多支持200个ID。
     * 
     */
    public Output<List<String>> instanceIds() {
        return this.instanceIds;
    }
    /**
     * 执行实例数量。
     * 
     */
    @Export(name="instanceNumber", refs={Integer.class}, tree="[0]")
    private Output<Integer> instanceNumber;

    /**
     * @return 执行实例数量。
     * 
     */
    public Output<Integer> instanceNumber() {
        return this.instanceNumber;
    }
    /**
     * 作业描述，默认为空字符串，不超过256个字符。
     * 
     */
    @Export(name="invocationDescription", refs={String.class}, tree="[0]")
    private Output<String> invocationDescription;

    /**
     * @return 作业描述，默认为空字符串，不超过256个字符。
     * 
     */
    public Output<String> invocationDescription() {
        return this.invocationDescription;
    }
    /**
     * 任务执行 ID。
     * 
     */
    @Export(name="invocationId", refs={String.class}, tree="[0]")
    private Output<String> invocationId;

    /**
     * @return 任务执行 ID。
     * 
     */
    public Output<String> invocationId() {
        return this.invocationId;
    }
    /**
     * 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
     * 
     */
    @Export(name="invocationName", refs={String.class}, tree="[0]")
    private Output<String> invocationName;

    /**
     * @return 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
     * 
     */
    public Output<String> invocationName() {
        return this.invocationName;
    }
    @Export(name="invocationResults", refs={List.class,InvocationInvocationResult.class}, tree="[0,1]")
    private Output<List<InvocationInvocationResult>> invocationResults;

    public Output<List<InvocationInvocationResult>> invocationResults() {
        return this.invocationResults;
    }
    /**
     * 命令执行的总执行状态。
     * 
     */
    @Export(name="invocationStatus", refs={String.class}, tree="[0]")
    private Output<String> invocationStatus;

    /**
     * @return 命令执行的总执行状态。
     * 
     */
    public Output<String> invocationStatus() {
        return this.invocationStatus;
    }
    /**
     * 执行时间。
     * 
     */
    @Export(name="launchTime", refs={String.class}, tree="[0]")
    private Output<String> launchTime;

    /**
     * @return 执行时间。
     * 
     */
    public Output<String> launchTime() {
        return this.launchTime;
    }
    @Export(name="parameterDefinitions", refs={List.class,InvocationParameterDefinition.class}, tree="[0,1]")
    private Output<List<InvocationParameterDefinition>> parameterDefinitions;

    public Output<List<InvocationParameterDefinition>> parameterDefinitions() {
        return this.parameterDefinitions;
    }
    /**
     * 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
     * 
     */
    @Export(name="parameters", refs={String.class}, tree="[0]")
    private Output<String> parameters;

    /**
     * @return 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
     * 
     */
    public Output<String> parameters() {
        return this.parameters;
    }
    /**
     * 资源所属项目，一个资源只能归属于一个项目。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 资源所属项目，一个资源只能归属于一个项目。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 周期结束时间，仅适用于周期任务（Rate）。
     * 
     */
    @Export(name="recurrenceEndTime", refs={String.class}, tree="[0]")
    private Output<String> recurrenceEndTime;

    /**
     * @return 周期结束时间，仅适用于周期任务（Rate）。
     * 
     */
    public Output<String> recurrenceEndTime() {
        return this.recurrenceEndTime;
    }
    /**
     * 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
     * 
     */
    @Export(name="repeatMode", refs={String.class}, tree="[0]")
    private Output<String> repeatMode;

    /**
     * @return 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
     * 
     */
    public Output<String> repeatMode() {
        return this.repeatMode;
    }
    /**
     * 任务开始时间。
     * 
     */
    @Export(name="startTime", refs={String.class}, tree="[0]")
    private Output<String> startTime;

    /**
     * @return 任务开始时间。
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }
    @Export(name="tags", refs={List.class,InvocationTag.class}, tree="[0,1]")
    private Output<List<InvocationTag>> tags;

    public Output<List<InvocationTag>> tags() {
        return this.tags;
    }
    /**
     * 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
     * 
     */
    @Export(name="timeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> timeout;

    /**
     * @return 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
     * 
     */
    public Output<Integer> timeout() {
        return this.timeout;
    }
    /**
     * 在ECS实例中执行命令的用户名称。
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return 在ECS实例中执行命令的用户名称。
     * 
     */
    public Output<String> username() {
        return this.username;
    }
    /**
     * 自定义windows用户的密码。
     * 
     */
    @Export(name="windowsPassword", refs={String.class}, tree="[0]")
    private Output<String> windowsPassword;

    /**
     * @return 自定义windows用户的密码。
     * 
     */
    public Output<String> windowsPassword() {
        return this.windowsPassword;
    }
    /**
     * 创建的命令在ECS实例中运行的目录。
     * 
     */
    @Export(name="workingDir", refs={String.class}, tree="[0]")
    private Output<String> workingDir;

    /**
     * @return 创建的命令在ECS实例中运行的目录。
     * 
     */
    public Output<String> workingDir() {
        return this.workingDir;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Invocation(java.lang.String name) {
        this(name, InvocationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Invocation(java.lang.String name, InvocationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Invocation(java.lang.String name, InvocationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:ecs/invocation:Invocation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Invocation(java.lang.String name, Output<java.lang.String> id, @Nullable InvocationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:ecs/invocation:Invocation", name, state, makeResourceOptions(options, id), false);
    }

    private static InvocationArgs makeArgs(InvocationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? InvocationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Invocation get(java.lang.String name, Output<java.lang.String> id, @Nullable InvocationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Invocation(name, id, state, options);
    }
}
