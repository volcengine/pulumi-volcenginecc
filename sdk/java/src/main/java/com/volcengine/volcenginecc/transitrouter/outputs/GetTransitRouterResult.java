// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.transitrouter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.transitrouter.outputs.GetTransitRouterAttachment;
import com.volcengine.volcenginecc.transitrouter.outputs.GetTransitRouterTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTransitRouterResult {
    /**
     * @return 网络实例连接所属的账号ID。
     * 
     */
    private String accountId;
    /**
     * @return 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
     * 
     */
    private Integer asn;
    /**
     * @return 网络实例连接的详细信息。
     * 
     */
    private List<GetTransitRouterAttachment> attachments;
    /**
     * @return 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    private String businessStatus;
    /**
     * @return 网络实例连接的创建时间。
     * 
     */
    private String creationTime;
    /**
     * @return 网络实例连接的删除时间。
     * 
     */
    private String deletedTime;
    /**
     * @return 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    private String description;
    /**
     * @return 实例共享的状态。Accepted：已接受。Initial：待接受。
     * 
     */
    private String grantStatus;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 中转路由器实例的欠费关停时间。
     * 
     */
    private String overdueTime;
    /**
     * @return 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
     * 
     */
    private String projectName;
    /**
     * @return 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    private String status;
    /**
     * @return 标签列表
     * 
     */
    private List<GetTransitRouterTag> tags;
    /**
     * @return 中转路由器实例的ID。
     * 
     */
    private String transitRouterId;
    /**
     * @return 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
     * 
     */
    private String transitRouterName;
    /**
     * @return 中转路由器实例的最近操作时间。
     * 
     */
    private String updateTime;

    private GetTransitRouterResult() {}
    /**
     * @return 网络实例连接所属的账号ID。
     * 
     */
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
     * 
     */
    public Integer asn() {
        return this.asn;
    }
    /**
     * @return 网络实例连接的详细信息。
     * 
     */
    public List<GetTransitRouterAttachment> attachments() {
        return this.attachments;
    }
    /**
     * @return 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
     * 
     */
    public String businessStatus() {
        return this.businessStatus;
    }
    /**
     * @return 网络实例连接的创建时间。
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return 网络实例连接的删除时间。
     * 
     */
    public String deletedTime() {
        return this.deletedTime;
    }
    /**
     * @return 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return 实例共享的状态。Accepted：已接受。Initial：待接受。
     * 
     */
    public String grantStatus() {
        return this.grantStatus;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 中转路由器实例的欠费关停时间。
     * 
     */
    public String overdueTime() {
        return this.overdueTime;
    }
    /**
     * @return 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 标签列表
     * 
     */
    public List<GetTransitRouterTag> tags() {
        return this.tags;
    }
    /**
     * @return 中转路由器实例的ID。
     * 
     */
    public String transitRouterId() {
        return this.transitRouterId;
    }
    /**
     * @return 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
     * 
     */
    public String transitRouterName() {
        return this.transitRouterName;
    }
    /**
     * @return 中转路由器实例的最近操作时间。
     * 
     */
    public String updateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransitRouterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private Integer asn;
        private List<GetTransitRouterAttachment> attachments;
        private String businessStatus;
        private String creationTime;
        private String deletedTime;
        private String description;
        private String grantStatus;
        private String id;
        private String overdueTime;
        private String projectName;
        private String status;
        private List<GetTransitRouterTag> tags;
        private String transitRouterId;
        private String transitRouterName;
        private String updateTime;
        public Builder() {}
        public Builder(GetTransitRouterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.asn = defaults.asn;
    	      this.attachments = defaults.attachments;
    	      this.businessStatus = defaults.businessStatus;
    	      this.creationTime = defaults.creationTime;
    	      this.deletedTime = defaults.deletedTime;
    	      this.description = defaults.description;
    	      this.grantStatus = defaults.grantStatus;
    	      this.id = defaults.id;
    	      this.overdueTime = defaults.overdueTime;
    	      this.projectName = defaults.projectName;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.transitRouterId = defaults.transitRouterId;
    	      this.transitRouterName = defaults.transitRouterName;
    	      this.updateTime = defaults.updateTime;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder asn(Integer asn) {
            if (asn == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "asn");
            }
            this.asn = asn;
            return this;
        }
        @CustomType.Setter
        public Builder attachments(List<GetTransitRouterAttachment> attachments) {
            if (attachments == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "attachments");
            }
            this.attachments = attachments;
            return this;
        }
        public Builder attachments(GetTransitRouterAttachment... attachments) {
            return attachments(List.of(attachments));
        }
        @CustomType.Setter
        public Builder businessStatus(String businessStatus) {
            if (businessStatus == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "businessStatus");
            }
            this.businessStatus = businessStatus;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder deletedTime(String deletedTime) {
            if (deletedTime == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "deletedTime");
            }
            this.deletedTime = deletedTime;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder grantStatus(String grantStatus) {
            if (grantStatus == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "grantStatus");
            }
            this.grantStatus = grantStatus;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder overdueTime(String overdueTime) {
            if (overdueTime == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "overdueTime");
            }
            this.overdueTime = overdueTime;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetTransitRouterTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetTransitRouterTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder transitRouterId(String transitRouterId) {
            if (transitRouterId == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "transitRouterId");
            }
            this.transitRouterId = transitRouterId;
            return this;
        }
        @CustomType.Setter
        public Builder transitRouterName(String transitRouterName) {
            if (transitRouterName == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "transitRouterName");
            }
            this.transitRouterName = transitRouterName;
            return this;
        }
        @CustomType.Setter
        public Builder updateTime(String updateTime) {
            if (updateTime == null) {
              throw new MissingRequiredPropertyException("GetTransitRouterResult", "updateTime");
            }
            this.updateTime = updateTime;
            return this;
        }
        public GetTransitRouterResult build() {
            final var _resultValue = new GetTransitRouterResult();
            _resultValue.accountId = accountId;
            _resultValue.asn = asn;
            _resultValue.attachments = attachments;
            _resultValue.businessStatus = businessStatus;
            _resultValue.creationTime = creationTime;
            _resultValue.deletedTime = deletedTime;
            _resultValue.description = description;
            _resultValue.grantStatus = grantStatus;
            _resultValue.id = id;
            _resultValue.overdueTime = overdueTime;
            _resultValue.projectName = projectName;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.transitRouterId = transitRouterId;
            _resultValue.transitRouterName = transitRouterName;
            _resultValue.updateTime = updateTime;
            return _resultValue;
        }
    }
}
