// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.transitrouter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.transitrouter.inputs.TransitRouterRouteTableTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TransitRouterRouteTableState extends com.pulumi.resources.ResourceArgs {

    public static final TransitRouterRouteTableState Empty = new TransitRouterRouteTableState();

    /**
     * TR路由表的创建时间
     * 
     */
    @Import(name="creationTime")
    private @Nullable Output<String> creationTime;

    /**
     * @return TR路由表的创建时间
     * 
     */
    public Optional<Output<String>> creationTime() {
        return Optional.ofNullable(this.creationTime);
    }

    /**
     * TR路由表的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return TR路由表的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * TR路由表关联的收方向路由策略的ID
     * 
     */
    @Import(name="inRoutePolicyTableId")
    private @Nullable Output<String> inRoutePolicyTableId;

    /**
     * @return TR路由表关联的收方向路由策略的ID
     * 
     */
    public Optional<Output<String>> inRoutePolicyTableId() {
        return Optional.ofNullable(this.inRoutePolicyTableId);
    }

    /**
     * TR路由表关联的发方向路由策略的ID
     * 
     */
    @Import(name="outRoutePolicyTableId")
    private @Nullable Output<String> outRoutePolicyTableId;

    /**
     * @return TR路由表关联的发方向路由策略的ID
     * 
     */
    public Optional<Output<String>> outRoutePolicyTableId() {
        return Optional.ofNullable(this.outRoutePolicyTableId);
    }

    /**
     * TR路由表的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return TR路由表的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<List<TransitRouterRouteTableTagArgs>> tags;

    public Optional<Output<List<TransitRouterRouteTableTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 中转路由器实例的ID
     * 
     */
    @Import(name="transitRouterId")
    private @Nullable Output<String> transitRouterId;

    /**
     * @return 中转路由器实例的ID
     * 
     */
    public Optional<Output<String>> transitRouterId() {
        return Optional.ofNullable(this.transitRouterId);
    }

    /**
     * TR路由表的ID
     * 
     */
    @Import(name="transitRouterRouteTableId")
    private @Nullable Output<String> transitRouterRouteTableId;

    /**
     * @return TR路由表的ID
     * 
     */
    public Optional<Output<String>> transitRouterRouteTableId() {
        return Optional.ofNullable(this.transitRouterRouteTableId);
    }

    /**
     * TR路由表的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为TR路由表的ID
     * 
     */
    @Import(name="transitRouterRouteTableName")
    private @Nullable Output<String> transitRouterRouteTableName;

    /**
     * @return TR路由表的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为TR路由表的ID
     * 
     */
    public Optional<Output<String>> transitRouterRouteTableName() {
        return Optional.ofNullable(this.transitRouterRouteTableName);
    }

    /**
     * TR路由表的类型。System：系统路由表。Custom：自定义路由表。
     * 
     */
    @Import(name="transitRouterRouteTableType")
    private @Nullable Output<String> transitRouterRouteTableType;

    /**
     * @return TR路由表的类型。System：系统路由表。Custom：自定义路由表。
     * 
     */
    public Optional<Output<String>> transitRouterRouteTableType() {
        return Optional.ofNullable(this.transitRouterRouteTableType);
    }

    /**
     * TR路由表的最近操作时间
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return TR路由表的最近操作时间
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private TransitRouterRouteTableState() {}

    private TransitRouterRouteTableState(TransitRouterRouteTableState $) {
        this.creationTime = $.creationTime;
        this.description = $.description;
        this.inRoutePolicyTableId = $.inRoutePolicyTableId;
        this.outRoutePolicyTableId = $.outRoutePolicyTableId;
        this.status = $.status;
        this.tags = $.tags;
        this.transitRouterId = $.transitRouterId;
        this.transitRouterRouteTableId = $.transitRouterRouteTableId;
        this.transitRouterRouteTableName = $.transitRouterRouteTableName;
        this.transitRouterRouteTableType = $.transitRouterRouteTableType;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TransitRouterRouteTableState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TransitRouterRouteTableState $;

        public Builder() {
            $ = new TransitRouterRouteTableState();
        }

        public Builder(TransitRouterRouteTableState defaults) {
            $ = new TransitRouterRouteTableState(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationTime TR路由表的创建时间
         * 
         * @return builder
         * 
         */
        public Builder creationTime(@Nullable Output<String> creationTime) {
            $.creationTime = creationTime;
            return this;
        }

        /**
         * @param creationTime TR路由表的创建时间
         * 
         * @return builder
         * 
         */
        public Builder creationTime(String creationTime) {
            return creationTime(Output.of(creationTime));
        }

        /**
         * @param description TR路由表的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description TR路由表的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param inRoutePolicyTableId TR路由表关联的收方向路由策略的ID
         * 
         * @return builder
         * 
         */
        public Builder inRoutePolicyTableId(@Nullable Output<String> inRoutePolicyTableId) {
            $.inRoutePolicyTableId = inRoutePolicyTableId;
            return this;
        }

        /**
         * @param inRoutePolicyTableId TR路由表关联的收方向路由策略的ID
         * 
         * @return builder
         * 
         */
        public Builder inRoutePolicyTableId(String inRoutePolicyTableId) {
            return inRoutePolicyTableId(Output.of(inRoutePolicyTableId));
        }

        /**
         * @param outRoutePolicyTableId TR路由表关联的发方向路由策略的ID
         * 
         * @return builder
         * 
         */
        public Builder outRoutePolicyTableId(@Nullable Output<String> outRoutePolicyTableId) {
            $.outRoutePolicyTableId = outRoutePolicyTableId;
            return this;
        }

        /**
         * @param outRoutePolicyTableId TR路由表关联的发方向路由策略的ID
         * 
         * @return builder
         * 
         */
        public Builder outRoutePolicyTableId(String outRoutePolicyTableId) {
            return outRoutePolicyTableId(Output.of(outRoutePolicyTableId));
        }

        /**
         * @param status TR路由表的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status TR路由表的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<List<TransitRouterRouteTableTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<TransitRouterRouteTableTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(TransitRouterRouteTableTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param transitRouterId 中转路由器实例的ID
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(@Nullable Output<String> transitRouterId) {
            $.transitRouterId = transitRouterId;
            return this;
        }

        /**
         * @param transitRouterId 中转路由器实例的ID
         * 
         * @return builder
         * 
         */
        public Builder transitRouterId(String transitRouterId) {
            return transitRouterId(Output.of(transitRouterId));
        }

        /**
         * @param transitRouterRouteTableId TR路由表的ID
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableId(@Nullable Output<String> transitRouterRouteTableId) {
            $.transitRouterRouteTableId = transitRouterRouteTableId;
            return this;
        }

        /**
         * @param transitRouterRouteTableId TR路由表的ID
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableId(String transitRouterRouteTableId) {
            return transitRouterRouteTableId(Output.of(transitRouterRouteTableId));
        }

        /**
         * @param transitRouterRouteTableName TR路由表的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为TR路由表的ID
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableName(@Nullable Output<String> transitRouterRouteTableName) {
            $.transitRouterRouteTableName = transitRouterRouteTableName;
            return this;
        }

        /**
         * @param transitRouterRouteTableName TR路由表的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为TR路由表的ID
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableName(String transitRouterRouteTableName) {
            return transitRouterRouteTableName(Output.of(transitRouterRouteTableName));
        }

        /**
         * @param transitRouterRouteTableType TR路由表的类型。System：系统路由表。Custom：自定义路由表。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableType(@Nullable Output<String> transitRouterRouteTableType) {
            $.transitRouterRouteTableType = transitRouterRouteTableType;
            return this;
        }

        /**
         * @param transitRouterRouteTableType TR路由表的类型。System：系统路由表。Custom：自定义路由表。
         * 
         * @return builder
         * 
         */
        public Builder transitRouterRouteTableType(String transitRouterRouteTableType) {
            return transitRouterRouteTableType(Output.of(transitRouterRouteTableType));
        }

        /**
         * @param updateTime TR路由表的最近操作时间
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime TR路由表的最近操作时间
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public TransitRouterRouteTableState build() {
            return $;
        }
    }

}
