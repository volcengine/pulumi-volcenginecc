// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NlbZoneMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final NlbZoneMappingArgs Empty = new NlbZoneMappingArgs();

    /**
     * 网卡ID。
     * 
     */
    @Import(name="eniId")
    private @Nullable Output<String> eniId;

    /**
     * @return 网卡ID。
     * 
     */
    public Optional<Output<String>> eniId() {
        return Optional.ofNullable(this.eniId);
    }

    /**
     * NLB实例的私网IPv4 VIP地址。该参数不传入，则系统自动从子网中分配一个可用的IPv4地址。
     * 
     */
    @Import(name="ipv4Address")
    private @Nullable Output<String> ipv4Address;

    /**
     * @return NLB实例的私网IPv4 VIP地址。该参数不传入，则系统自动从子网中分配一个可用的IPv4地址。
     * 
     */
    public Optional<Output<String>> ipv4Address() {
        return Optional.ofNullable(this.ipv4Address);
    }

    /**
     * NLB实例的公网IPv4 EIP地址。
     * 
     */
    @Import(name="ipv4EipAddress")
    private @Nullable Output<String> ipv4EipAddress;

    /**
     * @return NLB实例的公网IPv4 EIP地址。
     * 
     */
    public Optional<Output<String>> ipv4EipAddress() {
        return Optional.ofNullable(this.ipv4EipAddress);
    }

    /**
     * NLB实例的公网IPv4 EIP ID。
     * 
     */
    @Import(name="ipv4EipId")
    private @Nullable Output<String> ipv4EipId;

    /**
     * @return NLB实例的公网IPv4 EIP ID。
     * 
     */
    public Optional<Output<String>> ipv4EipId() {
        return Optional.ofNullable(this.ipv4EipId);
    }

    /**
     * NLB实例私网IPv4地址的健康状态。Healthy：健康。Unhealthy：异常。
     * 
     */
    @Import(name="ipv4HcStatus")
    private @Nullable Output<String> ipv4HcStatus;

    /**
     * @return NLB实例私网IPv4地址的健康状态。Healthy：健康。Unhealthy：异常。
     * 
     */
    public Optional<Output<String>> ipv4HcStatus() {
        return Optional.ofNullable(this.ipv4HcStatus);
    }

    /**
     * NLB实例的私网IPv4 LIP地址。
     * 
     */
    @Import(name="ipv4LocalAddresses")
    private @Nullable Output<List<String>> ipv4LocalAddresses;

    /**
     * @return NLB实例的私网IPv4 LIP地址。
     * 
     */
    public Optional<Output<List<String>>> ipv4LocalAddresses() {
        return Optional.ofNullable(this.ipv4LocalAddresses);
    }

    /**
     * NLB实例的私网IPv6 VIP地址。
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return NLB实例的私网IPv6 VIP地址。
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * NLB实例关联的IPv6公网带宽的ID。
     * 
     */
    @Import(name="ipv6EipId")
    private @Nullable Output<String> ipv6EipId;

    /**
     * @return NLB实例关联的IPv6公网带宽的ID。
     * 
     */
    public Optional<Output<String>> ipv6EipId() {
        return Optional.ofNullable(this.ipv6EipId);
    }

    /**
     * NLB实例私网IPv6地址的健康状态。Healthy：健康。Unhealthy：异常。
     * 
     */
    @Import(name="ipv6HcStatus")
    private @Nullable Output<String> ipv6HcStatus;

    /**
     * @return NLB实例私网IPv6地址的健康状态。Healthy：健康。Unhealthy：异常。
     * 
     */
    public Optional<Output<String>> ipv6HcStatus() {
        return Optional.ofNullable(this.ipv6HcStatus);
    }

    /**
     * NLB实例的私网IPv6 LIP地址。
     * 
     */
    @Import(name="ipv6LocalAddresses")
    private @Nullable Output<List<String>> ipv6LocalAddresses;

    /**
     * @return NLB实例的私网IPv6 LIP地址。
     * 
     */
    public Optional<Output<List<String>>> ipv6LocalAddresses() {
        return Optional.ofNullable(this.ipv6LocalAddresses);
    }

    /**
     * NLB实例所属的子网ID。
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return NLB实例所属的子网ID。
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * NLB实例所属的可用区ID。
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return NLB实例所属的可用区ID。
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private NlbZoneMappingArgs() {}

    private NlbZoneMappingArgs(NlbZoneMappingArgs $) {
        this.eniId = $.eniId;
        this.ipv4Address = $.ipv4Address;
        this.ipv4EipAddress = $.ipv4EipAddress;
        this.ipv4EipId = $.ipv4EipId;
        this.ipv4HcStatus = $.ipv4HcStatus;
        this.ipv4LocalAddresses = $.ipv4LocalAddresses;
        this.ipv6Address = $.ipv6Address;
        this.ipv6EipId = $.ipv6EipId;
        this.ipv6HcStatus = $.ipv6HcStatus;
        this.ipv6LocalAddresses = $.ipv6LocalAddresses;
        this.subnetId = $.subnetId;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NlbZoneMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NlbZoneMappingArgs $;

        public Builder() {
            $ = new NlbZoneMappingArgs();
        }

        public Builder(NlbZoneMappingArgs defaults) {
            $ = new NlbZoneMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eniId 网卡ID。
         * 
         * @return builder
         * 
         */
        public Builder eniId(@Nullable Output<String> eniId) {
            $.eniId = eniId;
            return this;
        }

        /**
         * @param eniId 网卡ID。
         * 
         * @return builder
         * 
         */
        public Builder eniId(String eniId) {
            return eniId(Output.of(eniId));
        }

        /**
         * @param ipv4Address NLB实例的私网IPv4 VIP地址。该参数不传入，则系统自动从子网中分配一个可用的IPv4地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(@Nullable Output<String> ipv4Address) {
            $.ipv4Address = ipv4Address;
            return this;
        }

        /**
         * @param ipv4Address NLB实例的私网IPv4 VIP地址。该参数不传入，则系统自动从子网中分配一个可用的IPv4地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4Address(String ipv4Address) {
            return ipv4Address(Output.of(ipv4Address));
        }

        /**
         * @param ipv4EipAddress NLB实例的公网IPv4 EIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4EipAddress(@Nullable Output<String> ipv4EipAddress) {
            $.ipv4EipAddress = ipv4EipAddress;
            return this;
        }

        /**
         * @param ipv4EipAddress NLB实例的公网IPv4 EIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4EipAddress(String ipv4EipAddress) {
            return ipv4EipAddress(Output.of(ipv4EipAddress));
        }

        /**
         * @param ipv4EipId NLB实例的公网IPv4 EIP ID。
         * 
         * @return builder
         * 
         */
        public Builder ipv4EipId(@Nullable Output<String> ipv4EipId) {
            $.ipv4EipId = ipv4EipId;
            return this;
        }

        /**
         * @param ipv4EipId NLB实例的公网IPv4 EIP ID。
         * 
         * @return builder
         * 
         */
        public Builder ipv4EipId(String ipv4EipId) {
            return ipv4EipId(Output.of(ipv4EipId));
        }

        /**
         * @param ipv4HcStatus NLB实例私网IPv4地址的健康状态。Healthy：健康。Unhealthy：异常。
         * 
         * @return builder
         * 
         */
        public Builder ipv4HcStatus(@Nullable Output<String> ipv4HcStatus) {
            $.ipv4HcStatus = ipv4HcStatus;
            return this;
        }

        /**
         * @param ipv4HcStatus NLB实例私网IPv4地址的健康状态。Healthy：健康。Unhealthy：异常。
         * 
         * @return builder
         * 
         */
        public Builder ipv4HcStatus(String ipv4HcStatus) {
            return ipv4HcStatus(Output.of(ipv4HcStatus));
        }

        /**
         * @param ipv4LocalAddresses NLB实例的私网IPv4 LIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4LocalAddresses(@Nullable Output<List<String>> ipv4LocalAddresses) {
            $.ipv4LocalAddresses = ipv4LocalAddresses;
            return this;
        }

        /**
         * @param ipv4LocalAddresses NLB实例的私网IPv4 LIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4LocalAddresses(List<String> ipv4LocalAddresses) {
            return ipv4LocalAddresses(Output.of(ipv4LocalAddresses));
        }

        /**
         * @param ipv4LocalAddresses NLB实例的私网IPv4 LIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv4LocalAddresses(String... ipv4LocalAddresses) {
            return ipv4LocalAddresses(List.of(ipv4LocalAddresses));
        }

        /**
         * @param ipv6Address NLB实例的私网IPv6 VIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address NLB实例的私网IPv6 VIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param ipv6EipId NLB实例关联的IPv6公网带宽的ID。
         * 
         * @return builder
         * 
         */
        public Builder ipv6EipId(@Nullable Output<String> ipv6EipId) {
            $.ipv6EipId = ipv6EipId;
            return this;
        }

        /**
         * @param ipv6EipId NLB实例关联的IPv6公网带宽的ID。
         * 
         * @return builder
         * 
         */
        public Builder ipv6EipId(String ipv6EipId) {
            return ipv6EipId(Output.of(ipv6EipId));
        }

        /**
         * @param ipv6HcStatus NLB实例私网IPv6地址的健康状态。Healthy：健康。Unhealthy：异常。
         * 
         * @return builder
         * 
         */
        public Builder ipv6HcStatus(@Nullable Output<String> ipv6HcStatus) {
            $.ipv6HcStatus = ipv6HcStatus;
            return this;
        }

        /**
         * @param ipv6HcStatus NLB实例私网IPv6地址的健康状态。Healthy：健康。Unhealthy：异常。
         * 
         * @return builder
         * 
         */
        public Builder ipv6HcStatus(String ipv6HcStatus) {
            return ipv6HcStatus(Output.of(ipv6HcStatus));
        }

        /**
         * @param ipv6LocalAddresses NLB实例的私网IPv6 LIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6LocalAddresses(@Nullable Output<List<String>> ipv6LocalAddresses) {
            $.ipv6LocalAddresses = ipv6LocalAddresses;
            return this;
        }

        /**
         * @param ipv6LocalAddresses NLB实例的私网IPv6 LIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6LocalAddresses(List<String> ipv6LocalAddresses) {
            return ipv6LocalAddresses(Output.of(ipv6LocalAddresses));
        }

        /**
         * @param ipv6LocalAddresses NLB实例的私网IPv6 LIP地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6LocalAddresses(String... ipv6LocalAddresses) {
            return ipv6LocalAddresses(List.of(ipv6LocalAddresses));
        }

        /**
         * @param subnetId NLB实例所属的子网ID。
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId NLB实例所属的子网ID。
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param zoneId NLB实例所属的可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId NLB实例所属的可用区ID。
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public NlbZoneMappingArgs build() {
            return $;
        }
    }

}
