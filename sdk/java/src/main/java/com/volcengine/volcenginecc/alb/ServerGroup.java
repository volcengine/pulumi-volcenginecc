// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.alb.ServerGroupArgs;
import com.volcengine.volcenginecc.alb.inputs.ServerGroupState;
import com.volcengine.volcenginecc.alb.outputs.ServerGroupHealthCheck;
import com.volcengine.volcenginecc.alb.outputs.ServerGroupListener;
import com.volcengine.volcenginecc.alb.outputs.ServerGroupServer;
import com.volcengine.volcenginecc.alb.outputs.ServerGroupStickySessionConfig;
import com.volcengine.volcenginecc.alb.outputs.ServerGroupTag;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 服务器组是后端服务器的逻辑集合。ALB 实例按照您配置的转发规则确定客户端请求将被转发到的服务器组。然后，ALB 实例根据您配置的负载均衡策略，将请求分发给服务器组内的后端服务器。后端服务器接收并处理请求。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:alb/serverGroup:ServerGroup example &#34;server_group_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:alb/serverGroup:ServerGroup")
public class ServerGroup extends com.pulumi.resources.CustomResource {
    /**
     * 后端服务器组的创建时间。
     * 
     */
    @Export(name="createTime", refs={String.class}, tree="[0]")
    private Output<String> createTime;

    /**
     * @return 后端服务器组的创建时间。
     * 
     */
    public Output<String> createTime() {
        return this.createTime;
    }
    /**
     * 后端服务器组的描述。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return 后端服务器组的描述。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * 服务器组健康检查配置信息。
     * 
     */
    @Export(name="healthCheck", refs={ServerGroupHealthCheck.class}, tree="[0]")
    private Output<ServerGroupHealthCheck> healthCheck;

    /**
     * @return 服务器组健康检查配置信息。
     * 
     */
    public Output<ServerGroupHealthCheck> healthCheck() {
        return this.healthCheck;
    }
    /**
     * 服务器组的IP地址类型。目前只支持 IPv4
     * 
     */
    @Export(name="ipAddressType", refs={String.class}, tree="[0]")
    private Output<String> ipAddressType;

    /**
     * @return 服务器组的IP地址类型。目前只支持 IPv4
     * 
     */
    public Output<String> ipAddressType() {
        return this.ipAddressType;
    }
    @Export(name="listeners", refs={List.class,ServerGroupListener.class}, tree="[0,1]")
    private Output<List<ServerGroupListener>> listeners;

    public Output<List<ServerGroupListener>> listeners() {
        return this.listeners;
    }
    /**
     * 后端服务器组所属项目名称。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return 后端服务器组所属项目名称。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * 后端协议：HTTP，HTTPS。
     * 
     */
    @Export(name="protocol", refs={String.class}, tree="[0]")
    private Output<String> protocol;

    /**
     * @return 后端协议：HTTP，HTTPS。
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * 调度算法。取值：wrr：加权轮询。wlc：加权最小连接数。sh：源地址哈希。
     * 
     */
    @Export(name="scheduler", refs={String.class}, tree="[0]")
    private Output<String> scheduler;

    /**
     * @return 调度算法。取值：wrr：加权轮询。wlc：加权最小连接数。sh：源地址哈希。
     * 
     */
    public Output<String> scheduler() {
        return this.scheduler;
    }
    /**
     * 服务器组内后端服务器的个数。
     * 
     */
    @Export(name="serverCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> serverCount;

    /**
     * @return 服务器组内后端服务器的个数。
     * 
     */
    public Output<Integer> serverCount() {
        return this.serverCount;
    }
    /**
     * 后端服务器组的ID。
     * 
     */
    @Export(name="serverGroupId", refs={String.class}, tree="[0]")
    private Output<String> serverGroupId;

    /**
     * @return 后端服务器组的ID。
     * 
     */
    public Output<String> serverGroupId() {
        return this.serverGroupId;
    }
    /**
     * 后端服务器组的名称。
     * 
     */
    @Export(name="serverGroupName", refs={String.class}, tree="[0]")
    private Output<String> serverGroupName;

    /**
     * @return 后端服务器组的名称。
     * 
     */
    public Output<String> serverGroupName() {
        return this.serverGroupName;
    }
    /**
     * 后端服务器组的类型。instance：服务器类型，该类型服务器组支持添加 ecs、eni 实例作为后端服务器。ip：IP类型，该类型服务器组支持添加 IP 地址作为后端服务器。
     * 
     */
    @Export(name="serverGroupType", refs={String.class}, tree="[0]")
    private Output<String> serverGroupType;

    /**
     * @return 后端服务器组的类型。instance：服务器类型，该类型服务器组支持添加 ecs、eni 实例作为后端服务器。ip：IP类型，该类型服务器组支持添加 IP 地址作为后端服务器。
     * 
     */
    public Output<String> serverGroupType() {
        return this.serverGroupType;
    }
    @Export(name="servers", refs={List.class,ServerGroupServer.class}, tree="[0,1]")
    private Output<List<ServerGroupServer>> servers;

    public Output<List<ServerGroupServer>> servers() {
        return this.servers;
    }
    /**
     * 服务器组状态。Creating：创建中。Active：运行中。Configuring：配置中。Deleting：删除中。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return 服务器组状态。Creating：创建中。Active：运行中。Configuring：配置中。Deleting：删除中。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * 会话保持功能的参数信息。
     * 
     */
    @Export(name="stickySessionConfig", refs={ServerGroupStickySessionConfig.class}, tree="[0]")
    private Output<ServerGroupStickySessionConfig> stickySessionConfig;

    /**
     * @return 会话保持功能的参数信息。
     * 
     */
    public Output<ServerGroupStickySessionConfig> stickySessionConfig() {
        return this.stickySessionConfig;
    }
    @Export(name="tags", refs={List.class,ServerGroupTag.class}, tree="[0,1]")
    private Output<List<ServerGroupTag>> tags;

    public Output<List<ServerGroupTag>> tags() {
        return this.tags;
    }
    /**
     * 后端服务器组的最近操作时间。
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return 后端服务器组的最近操作时间。
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * 后端服务器组所属 Vpc 的 ID。
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return 后端服务器组所属 Vpc 的 ID。
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerGroup(java.lang.String name) {
        this(name, ServerGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerGroup(java.lang.String name, ServerGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerGroup(java.lang.String name, ServerGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:alb/serverGroup:ServerGroup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServerGroup(java.lang.String name, Output<java.lang.String> id, @Nullable ServerGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:alb/serverGroup:ServerGroup", name, state, makeResourceOptions(options, id), false);
    }

    private static ServerGroupArgs makeArgs(ServerGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServerGroupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerGroup get(java.lang.String name, Output<java.lang.String> id, @Nullable ServerGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerGroup(name, id, state, options);
    }
}
