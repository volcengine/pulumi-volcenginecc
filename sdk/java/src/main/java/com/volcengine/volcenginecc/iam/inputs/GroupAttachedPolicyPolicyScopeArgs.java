// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupAttachedPolicyPolicyScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupAttachedPolicyPolicyScopeArgs Empty = new GroupAttachedPolicyPolicyScopeArgs();

    /**
     * 项目授权时间。
     * 
     */
    @Import(name="attachTime")
    private @Nullable Output<String> attachTime;

    /**
     * @return 项目授权时间。
     * 
     */
    public Optional<Output<String>> attachTime() {
        return Optional.ofNullable(this.attachTime);
    }

    /**
     * 授权类型。Global代表全局授权（不限制项目），Project代表按项目授权。
     * 
     */
    @Import(name="policyScopeType")
    private @Nullable Output<String> policyScopeType;

    /**
     * @return 授权类型。Global代表全局授权（不限制项目），Project代表按项目授权。
     * 
     */
    public Optional<Output<String>> policyScopeType() {
        return Optional.ofNullable(this.policyScopeType);
    }

    /**
     * 按项目授权时的项目显示名。
     * 
     */
    @Import(name="projectDisplayName")
    private @Nullable Output<String> projectDisplayName;

    /**
     * @return 按项目授权时的项目显示名。
     * 
     */
    public Optional<Output<String>> projectDisplayName() {
        return Optional.ofNullable(this.projectDisplayName);
    }

    /**
     * 按项目授权时的项目名。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 按项目授权时的项目名。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    private GroupAttachedPolicyPolicyScopeArgs() {}

    private GroupAttachedPolicyPolicyScopeArgs(GroupAttachedPolicyPolicyScopeArgs $) {
        this.attachTime = $.attachTime;
        this.policyScopeType = $.policyScopeType;
        this.projectDisplayName = $.projectDisplayName;
        this.projectName = $.projectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupAttachedPolicyPolicyScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupAttachedPolicyPolicyScopeArgs $;

        public Builder() {
            $ = new GroupAttachedPolicyPolicyScopeArgs();
        }

        public Builder(GroupAttachedPolicyPolicyScopeArgs defaults) {
            $ = new GroupAttachedPolicyPolicyScopeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachTime 项目授权时间。
         * 
         * @return builder
         * 
         */
        public Builder attachTime(@Nullable Output<String> attachTime) {
            $.attachTime = attachTime;
            return this;
        }

        /**
         * @param attachTime 项目授权时间。
         * 
         * @return builder
         * 
         */
        public Builder attachTime(String attachTime) {
            return attachTime(Output.of(attachTime));
        }

        /**
         * @param policyScopeType 授权类型。Global代表全局授权（不限制项目），Project代表按项目授权。
         * 
         * @return builder
         * 
         */
        public Builder policyScopeType(@Nullable Output<String> policyScopeType) {
            $.policyScopeType = policyScopeType;
            return this;
        }

        /**
         * @param policyScopeType 授权类型。Global代表全局授权（不限制项目），Project代表按项目授权。
         * 
         * @return builder
         * 
         */
        public Builder policyScopeType(String policyScopeType) {
            return policyScopeType(Output.of(policyScopeType));
        }

        /**
         * @param projectDisplayName 按项目授权时的项目显示名。
         * 
         * @return builder
         * 
         */
        public Builder projectDisplayName(@Nullable Output<String> projectDisplayName) {
            $.projectDisplayName = projectDisplayName;
            return this;
        }

        /**
         * @param projectDisplayName 按项目授权时的项目显示名。
         * 
         * @return builder
         * 
         */
        public Builder projectDisplayName(String projectDisplayName) {
            return projectDisplayName(Output.of(projectDisplayName));
        }

        /**
         * @param projectName 按项目授权时的项目名。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 按项目授权时的项目名。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public GroupAttachedPolicyPolicyScopeArgs build() {
            return $;
        }
    }

}
