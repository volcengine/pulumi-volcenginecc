// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.iam.inputs.UserLoginProfileArgs;
import com.volcengine.volcenginecc.iam.inputs.UserPolicyArgs;
import com.volcengine.volcenginecc.iam.inputs.UserSecurityConfigArgs;
import com.volcengine.volcenginecc.iam.inputs.UserTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserArgs Empty = new UserArgs();

    /**
     * 子用户对应的描述信息，长度不超过255。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 子用户对应的描述信息，长度不超过255。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_{@literal @}符号。
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_{@literal @}符号。
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * 子用户对应的电子邮件地址。
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return 子用户对应的电子邮件地址。
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * 子用户归属的用户组。
     * 
     */
    @Import(name="groups")
    private @Nullable Output<List<String>> groups;

    /**
     * @return 子用户归属的用户组。
     * 
     */
    public Optional<Output<List<String>>> groups() {
        return Optional.ofNullable(this.groups);
    }

    /**
     * 子用户的登录配置。
     * 
     */
    @Import(name="loginProfile")
    private @Nullable Output<UserLoginProfileArgs> loginProfile;

    /**
     * @return 子用户的登录配置。
     * 
     */
    public Optional<Output<UserLoginProfileArgs>> loginProfile() {
        return Optional.ofNullable(this.loginProfile);
    }

    /**
     * 子用户对应的手机号。
     * 
     */
    @Import(name="mobilePhone")
    private @Nullable Output<String> mobilePhone;

    /**
     * @return 子用户对应的手机号。
     * 
     */
    public Optional<Output<String>> mobilePhone() {
        return Optional.ofNullable(this.mobilePhone);
    }

    @Import(name="policies")
    private @Nullable Output<List<UserPolicyArgs>> policies;

    public Optional<Output<List<UserPolicyArgs>>> policies() {
        return Optional.ofNullable(this.policies);
    }

    /**
     * 子用户的操作保护配置。
     * 
     */
    @Import(name="securityConfig")
    private @Nullable Output<UserSecurityConfigArgs> securityConfig;

    /**
     * @return 子用户的操作保护配置。
     * 
     */
    public Optional<Output<UserSecurityConfigArgs>> securityConfig() {
        return Optional.ofNullable(this.securityConfig);
    }

    @Import(name="tags")
    private @Nullable Output<List<UserTagArgs>> tags;

    public Optional<Output<List<UserTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-{@literal @}符号。
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-{@literal @}符号。
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private UserArgs() {}

    private UserArgs(UserArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.email = $.email;
        this.groups = $.groups;
        this.loginProfile = $.loginProfile;
        this.mobilePhone = $.mobilePhone;
        this.policies = $.policies;
        this.securityConfig = $.securityConfig;
        this.tags = $.tags;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserArgs $;

        public Builder() {
            $ = new UserArgs();
        }

        public Builder(UserArgs defaults) {
            $ = new UserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description 子用户对应的描述信息，长度不超过255。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 子用户对应的描述信息，长度不超过255。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_{@literal @}符号。
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_{@literal @}符号。
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param email 子用户对应的电子邮件地址。
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email 子用户对应的电子邮件地址。
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param groups 子用户归属的用户组。
         * 
         * @return builder
         * 
         */
        public Builder groups(@Nullable Output<List<String>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups 子用户归属的用户组。
         * 
         * @return builder
         * 
         */
        public Builder groups(List<String> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups 子用户归属的用户组。
         * 
         * @return builder
         * 
         */
        public Builder groups(String... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param loginProfile 子用户的登录配置。
         * 
         * @return builder
         * 
         */
        public Builder loginProfile(@Nullable Output<UserLoginProfileArgs> loginProfile) {
            $.loginProfile = loginProfile;
            return this;
        }

        /**
         * @param loginProfile 子用户的登录配置。
         * 
         * @return builder
         * 
         */
        public Builder loginProfile(UserLoginProfileArgs loginProfile) {
            return loginProfile(Output.of(loginProfile));
        }

        /**
         * @param mobilePhone 子用户对应的手机号。
         * 
         * @return builder
         * 
         */
        public Builder mobilePhone(@Nullable Output<String> mobilePhone) {
            $.mobilePhone = mobilePhone;
            return this;
        }

        /**
         * @param mobilePhone 子用户对应的手机号。
         * 
         * @return builder
         * 
         */
        public Builder mobilePhone(String mobilePhone) {
            return mobilePhone(Output.of(mobilePhone));
        }

        public Builder policies(@Nullable Output<List<UserPolicyArgs>> policies) {
            $.policies = policies;
            return this;
        }

        public Builder policies(List<UserPolicyArgs> policies) {
            return policies(Output.of(policies));
        }

        public Builder policies(UserPolicyArgs... policies) {
            return policies(List.of(policies));
        }

        /**
         * @param securityConfig 子用户的操作保护配置。
         * 
         * @return builder
         * 
         */
        public Builder securityConfig(@Nullable Output<UserSecurityConfigArgs> securityConfig) {
            $.securityConfig = securityConfig;
            return this;
        }

        /**
         * @param securityConfig 子用户的操作保护配置。
         * 
         * @return builder
         * 
         */
        public Builder securityConfig(UserSecurityConfigArgs securityConfig) {
            return securityConfig(Output.of(securityConfig));
        }

        public Builder tags(@Nullable Output<List<UserTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<UserTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(UserTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param userName 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-{@literal @}符号。
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-{@literal @}符号。
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public UserArgs build() {
            if ($.userName == null) {
                throw new MissingRequiredPropertyException("UserArgs", "userName");
            }
            return $;
        }
    }

}
