// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.vpc.VpcArgs;
import com.volcengine.volcenginecc.vpc.inputs.VpcState;
import com.volcengine.volcenginecc.vpc.outputs.VpcAssociateCen;
import com.volcengine.volcenginecc.vpc.outputs.VpcTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 私有网络为云上资源构建隔离的、自主配置的虚拟网络环境。可以在私有网络中自定义IP地址段、安全组、路由策略等网络特性，简单高效安全地管理云上资源。
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:vpc/vpc:Vpc example &#34;vpc_id&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:vpc/vpc:Vpc")
public class Vpc extends com.pulumi.resources.CustomResource {
    /**
     * VPC所属账号的ID。
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return VPC所属账号的ID。
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    @Export(name="associateCens", refs={List.class,VpcAssociateCen.class}, tree="[0,1]")
    private Output<List<VpcAssociateCen>> associateCens;

    public Output<List<VpcAssociateCen>> associateCens() {
        return this.associateCens;
    }
    /**
     * VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     * 
     */
    @Export(name="cidrBlock", refs={String.class}, tree="[0]")
    private Output<String> cidrBlock;

    /**
     * @return VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     * 
     */
    public Output<String> cidrBlock() {
        return this.cidrBlock;
    }
    /**
     * 创建VPC的时间。
     * 
     */
    @Export(name="creationTime", refs={String.class}, tree="[0]")
    private Output<String> creationTime;

    /**
     * @return 创建VPC的时间。
     * 
     */
    public Output<String> creationTime() {
        return this.creationTime;
    }
    /**
     * VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
     * 
     */
    @Export(name="dnsServers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dnsServers;

    /**
     * @return VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
     * 
     */
    public Output<List<String>> dnsServers() {
        return this.dnsServers;
    }
    /**
     * VPC 绑定的 IPv4 网关的 ID。
     * 
     */
    @Export(name="ipv4GatewayId", refs={String.class}, tree="[0]")
    private Output<String> ipv4GatewayId;

    /**
     * @return VPC 绑定的 IPv4 网关的 ID。
     * 
     */
    public Output<String> ipv4GatewayId() {
        return this.ipv4GatewayId;
    }
    /**
     * VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     * 
     */
    @Export(name="ipv6CidrBlock", refs={String.class}, tree="[0]")
    private Output<String> ipv6CidrBlock;

    /**
     * @return VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     * 
     */
    public Output<String> ipv6CidrBlock() {
        return this.ipv6CidrBlock;
    }
    /**
     * 该VPC是否为默认VPC。true：默认VPC，表示该VPC是创建ECS实例时系统自动创建的VPC。false：非默认VPC，表示该VPC是用户手动创建的。
     * 
     */
    @Export(name="isDefault", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isDefault;

    /**
     * @return 该VPC是否为默认VPC。true：默认VPC，表示该VPC是创建ECS实例时系统自动创建的VPC。false：非默认VPC，表示该VPC是用户手动创建的。
     * 
     */
    public Output<Boolean> isDefault() {
        return this.isDefault;
    }
    /**
     * VPC中创建的NAT网关的ID。
     * 
     */
    @Export(name="natGatewayIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> natGatewayIds;

    /**
     * @return VPC中创建的NAT网关的ID。
     * 
     */
    public Output<List<String>> natGatewayIds() {
        return this.natGatewayIds;
    }
    /**
     * VPC中的网络ACL的数量。
     * 
     */
    @Export(name="networkAclNum", refs={String.class}, tree="[0]")
    private Output<String> networkAclNum;

    /**
     * @return VPC中的网络ACL的数量。
     * 
     */
    public Output<String> networkAclNum() {
        return this.networkAclNum;
    }
    /**
     * VPC所属项目的名称。不填默认加入default项目。
     * 
     */
    @Export(name="projectName", refs={String.class}, tree="[0]")
    private Output<String> projectName;

    /**
     * @return VPC所属项目的名称。不填默认加入default项目。
     * 
     */
    public Output<String> projectName() {
        return this.projectName;
    }
    /**
     * VPC关联的路由表ID。
     * 
     */
    @Export(name="routeTableIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> routeTableIds;

    /**
     * @return VPC关联的路由表ID。
     * 
     */
    public Output<List<String>> routeTableIds() {
        return this.routeTableIds;
    }
    /**
     * VPC的辅助网段。
     * 
     */
    @Export(name="secondaryCidrBlocks", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> secondaryCidrBlocks;

    /**
     * @return VPC的辅助网段。
     * 
     */
    public Output<List<String>> secondaryCidrBlocks() {
        return this.secondaryCidrBlocks;
    }
    /**
     * VPC中安全组的列表。
     * 
     */
    @Export(name="securityGroupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> securityGroupIds;

    /**
     * @return VPC中安全组的列表。
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * VPC的状态。Creating：创建中。Pending：已创建。Available：可用。
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return VPC的状态。Creating：创建中。Pending：已创建。Available：可用。
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * VPC中子网的列表。
     * 
     */
    @Export(name="subnetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subnetIds;

    /**
     * @return VPC中子网的列表。
     * 
     */
    public Output<List<String>> subnetIds() {
        return this.subnetIds;
    }
    /**
     * VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     * 
     */
    @Export(name="supportIpv4Gateway", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> supportIpv4Gateway;

    /**
     * @return VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     * 
     */
    public Output<Boolean> supportIpv4Gateway() {
        return this.supportIpv4Gateway;
    }
    @Export(name="tags", refs={List.class,VpcTag.class}, tree="[0,1]")
    private Output<List<VpcTag>> tags;

    public Output<List<VpcTag>> tags() {
        return this.tags;
    }
    /**
     * 更新VPC的时间。
     * 
     */
    @Export(name="updateTime", refs={String.class}, tree="[0]")
    private Output<String> updateTime;

    /**
     * @return 更新VPC的时间。
     * 
     */
    public Output<String> updateTime() {
        return this.updateTime;
    }
    /**
     * VPC的用户网段。
     * 
     */
    @Export(name="userCidrBlocks", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> userCidrBlocks;

    /**
     * @return VPC的用户网段。
     * 
     */
    public Output<List<String>> userCidrBlocks() {
        return this.userCidrBlocks;
    }
    /**
     * VPC的ID。
     * 
     */
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    /**
     * @return VPC的ID。
     * 
     */
    public Output<String> vpcId() {
        return this.vpcId;
    }
    /**
     * VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     * 
     */
    @Export(name="vpcName", refs={String.class}, tree="[0]")
    private Output<String> vpcName;

    /**
     * @return VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     * 
     */
    public Output<String> vpcName() {
        return this.vpcName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Vpc(java.lang.String name) {
        this(name, VpcArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Vpc(java.lang.String name, @Nullable VpcArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Vpc(java.lang.String name, @Nullable VpcArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/vpc:Vpc", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Vpc(java.lang.String name, Output<java.lang.String> id, @Nullable VpcState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:vpc/vpc:Vpc", name, state, makeResourceOptions(options, id), false);
    }

    private static VpcArgs makeArgs(@Nullable VpcArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VpcArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Vpc get(java.lang.String name, Output<java.lang.String> id, @Nullable VpcState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Vpc(name, id, state, options);
    }
}
