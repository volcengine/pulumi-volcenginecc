// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.autoscaling.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.autoscaling.outputs.GetScalingConfigurationEip;
import com.volcengine.volcenginecc.autoscaling.outputs.GetScalingConfigurationInstanceTypeOverride;
import com.volcengine.volcenginecc.autoscaling.outputs.GetScalingConfigurationTag;
import com.volcengine.volcenginecc.autoscaling.outputs.GetScalingConfigurationVolume;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetScalingConfigurationResult {
    /**
     * @return 资源创建时间(UTC时间)
     * 
     */
    private String createdAt;
    /**
     * @return 公网IP。
     * 
     */
    private GetScalingConfigurationEip eip;
    /**
     * @return 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
     * 
     */
    private String hostName;
    /**
     * @return 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
     * 
     */
    private String hpcClusterId;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return 镜像ID，伸缩组自动创建实例时使用的镜像资源。
     * 
     */
    private String imageId;
    /**
     * @return 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
     * 
     */
    private String instanceChargeType;
    /**
     * @return 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
     * 
     */
    private String instanceDescription;
    /**
     * @return 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
     * 
     */
    private String instanceName;
    private List<GetScalingConfigurationInstanceTypeOverride> instanceTypeOverrides;
    /**
     * @return 实例的计算规格列表。
     * 
     */
    private List<String> instanceTypes;
    /**
     * @return 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
     * 
     */
    private Integer ipv6AddressCount;
    /**
     * @return KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
     * 
     */
    private String keyPairName;
    /**
     * @return 生命周期状态。取值：Active（活跃）/InActive（非活跃）
     * 
     */
    private String lifecycleState;
    /**
     * @return 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&amp;*()_-+= |，不能以“/”和“$6$”开头
     * 
     */
    private String password;
    /**
     * @return 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
     * 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
     * 长度限制在64个字符以内。
     * 
     */
    private String projectName;
    /**
     * @return 伸缩配置ID。
     * 
     */
    private String scalingConfigurationId;
    /**
     * @return 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
     * 
     */
    private String scalingConfigurationName;
    /**
     * @return 伸缩配置所属的伸缩组ID。
     * 
     */
    private String scalingGroupId;
    /**
     * @return 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
     * 
     */
    private String securityEnhancementStrategy;
    /**
     * @return 实例主网卡关联的安全组ID。
     * 
     */
    private List<String> securityGroupIds;
    /**
     * @return 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
     * 
     */
    private String spotStrategy;
    /**
     * @return 标签键值对。
     * 
     */
    private List<GetScalingConfigurationTag> tags;
    /**
     * @return 资源更新时间(UTC时间)
     * 
     */
    private String updatedAt;
    /**
     * @return 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
     * 
     */
    private String userData;
    /**
     * @return 云盘。
     * 
     */
    private List<GetScalingConfigurationVolume> volumes;
    /**
     * @return 伸缩配置可用区ID。
     * 
     */
    private String zoneId;

    private GetScalingConfigurationResult() {}
    /**
     * @return 资源创建时间(UTC时间)
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return 公网IP。
     * 
     */
    public GetScalingConfigurationEip eip() {
        return this.eip;
    }
    /**
     * @return 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
     * 
     */
    public String hpcClusterId() {
        return this.hpcClusterId;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return 镜像ID，伸缩组自动创建实例时使用的镜像资源。
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
     * 
     */
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    /**
     * @return 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
     * 
     */
    public String instanceDescription() {
        return this.instanceDescription;
    }
    /**
     * @return 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    public List<GetScalingConfigurationInstanceTypeOverride> instanceTypeOverrides() {
        return this.instanceTypeOverrides;
    }
    /**
     * @return 实例的计算规格列表。
     * 
     */
    public List<String> instanceTypes() {
        return this.instanceTypes;
    }
    /**
     * @return 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
     * 
     */
    public Integer ipv6AddressCount() {
        return this.ipv6AddressCount;
    }
    /**
     * @return KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
     * 
     */
    public String keyPairName() {
        return this.keyPairName;
    }
    /**
     * @return 生命周期状态。取值：Active（活跃）/InActive（非活跃）
     * 
     */
    public String lifecycleState() {
        return this.lifecycleState;
    }
    /**
     * @return 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&amp;*()_-+= |，不能以“/”和“$6$”开头
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
     * 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
     * 长度限制在64个字符以内。
     * 
     */
    public String projectName() {
        return this.projectName;
    }
    /**
     * @return 伸缩配置ID。
     * 
     */
    public String scalingConfigurationId() {
        return this.scalingConfigurationId;
    }
    /**
     * @return 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
     * 
     */
    public String scalingConfigurationName() {
        return this.scalingConfigurationName;
    }
    /**
     * @return 伸缩配置所属的伸缩组ID。
     * 
     */
    public String scalingGroupId() {
        return this.scalingGroupId;
    }
    /**
     * @return 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
     * 
     */
    public String securityEnhancementStrategy() {
        return this.securityEnhancementStrategy;
    }
    /**
     * @return 实例主网卡关联的安全组ID。
     * 
     */
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * @return 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
     * 
     */
    public String spotStrategy() {
        return this.spotStrategy;
    }
    /**
     * @return 标签键值对。
     * 
     */
    public List<GetScalingConfigurationTag> tags() {
        return this.tags;
    }
    /**
     * @return 资源更新时间(UTC时间)
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
     * 
     */
    public String userData() {
        return this.userData;
    }
    /**
     * @return 云盘。
     * 
     */
    public List<GetScalingConfigurationVolume> volumes() {
        return this.volumes;
    }
    /**
     * @return 伸缩配置可用区ID。
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScalingConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private GetScalingConfigurationEip eip;
        private String hostName;
        private String hpcClusterId;
        private String id;
        private String imageId;
        private String instanceChargeType;
        private String instanceDescription;
        private String instanceName;
        private List<GetScalingConfigurationInstanceTypeOverride> instanceTypeOverrides;
        private List<String> instanceTypes;
        private Integer ipv6AddressCount;
        private String keyPairName;
        private String lifecycleState;
        private String password;
        private String projectName;
        private String scalingConfigurationId;
        private String scalingConfigurationName;
        private String scalingGroupId;
        private String securityEnhancementStrategy;
        private List<String> securityGroupIds;
        private String spotStrategy;
        private List<GetScalingConfigurationTag> tags;
        private String updatedAt;
        private String userData;
        private List<GetScalingConfigurationVolume> volumes;
        private String zoneId;
        public Builder() {}
        public Builder(GetScalingConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.eip = defaults.eip;
    	      this.hostName = defaults.hostName;
    	      this.hpcClusterId = defaults.hpcClusterId;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.instanceDescription = defaults.instanceDescription;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceTypeOverrides = defaults.instanceTypeOverrides;
    	      this.instanceTypes = defaults.instanceTypes;
    	      this.ipv6AddressCount = defaults.ipv6AddressCount;
    	      this.keyPairName = defaults.keyPairName;
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.password = defaults.password;
    	      this.projectName = defaults.projectName;
    	      this.scalingConfigurationId = defaults.scalingConfigurationId;
    	      this.scalingConfigurationName = defaults.scalingConfigurationName;
    	      this.scalingGroupId = defaults.scalingGroupId;
    	      this.securityEnhancementStrategy = defaults.securityEnhancementStrategy;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.spotStrategy = defaults.spotStrategy;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
    	      this.userData = defaults.userData;
    	      this.volumes = defaults.volumes;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder eip(GetScalingConfigurationEip eip) {
            if (eip == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "eip");
            }
            this.eip = eip;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder hpcClusterId(String hpcClusterId) {
            if (hpcClusterId == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "hpcClusterId");
            }
            this.hpcClusterId = hpcClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceChargeType(String instanceChargeType) {
            if (instanceChargeType == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "instanceChargeType");
            }
            this.instanceChargeType = instanceChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceDescription(String instanceDescription) {
            if (instanceDescription == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "instanceDescription");
            }
            this.instanceDescription = instanceDescription;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceTypeOverrides(List<GetScalingConfigurationInstanceTypeOverride> instanceTypeOverrides) {
            if (instanceTypeOverrides == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "instanceTypeOverrides");
            }
            this.instanceTypeOverrides = instanceTypeOverrides;
            return this;
        }
        public Builder instanceTypeOverrides(GetScalingConfigurationInstanceTypeOverride... instanceTypeOverrides) {
            return instanceTypeOverrides(List.of(instanceTypeOverrides));
        }
        @CustomType.Setter
        public Builder instanceTypes(List<String> instanceTypes) {
            if (instanceTypes == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "instanceTypes");
            }
            this.instanceTypes = instanceTypes;
            return this;
        }
        public Builder instanceTypes(String... instanceTypes) {
            return instanceTypes(List.of(instanceTypes));
        }
        @CustomType.Setter
        public Builder ipv6AddressCount(Integer ipv6AddressCount) {
            if (ipv6AddressCount == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "ipv6AddressCount");
            }
            this.ipv6AddressCount = ipv6AddressCount;
            return this;
        }
        @CustomType.Setter
        public Builder keyPairName(String keyPairName) {
            if (keyPairName == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "keyPairName");
            }
            this.keyPairName = keyPairName;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleState(String lifecycleState) {
            if (lifecycleState == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "lifecycleState");
            }
            this.lifecycleState = lifecycleState;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder scalingConfigurationId(String scalingConfigurationId) {
            if (scalingConfigurationId == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "scalingConfigurationId");
            }
            this.scalingConfigurationId = scalingConfigurationId;
            return this;
        }
        @CustomType.Setter
        public Builder scalingConfigurationName(String scalingConfigurationName) {
            if (scalingConfigurationName == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "scalingConfigurationName");
            }
            this.scalingConfigurationName = scalingConfigurationName;
            return this;
        }
        @CustomType.Setter
        public Builder scalingGroupId(String scalingGroupId) {
            if (scalingGroupId == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "scalingGroupId");
            }
            this.scalingGroupId = scalingGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityEnhancementStrategy(String securityEnhancementStrategy) {
            if (securityEnhancementStrategy == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "securityEnhancementStrategy");
            }
            this.securityEnhancementStrategy = securityEnhancementStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(List<String> securityGroupIds) {
            if (securityGroupIds == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "securityGroupIds");
            }
            this.securityGroupIds = securityGroupIds;
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder spotStrategy(String spotStrategy) {
            if (spotStrategy == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "spotStrategy");
            }
            this.spotStrategy = spotStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetScalingConfigurationTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetScalingConfigurationTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder userData(String userData) {
            if (userData == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "userData");
            }
            this.userData = userData;
            return this;
        }
        @CustomType.Setter
        public Builder volumes(List<GetScalingConfigurationVolume> volumes) {
            if (volumes == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "volumes");
            }
            this.volumes = volumes;
            return this;
        }
        public Builder volumes(GetScalingConfigurationVolume... volumes) {
            return volumes(List.of(volumes));
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetScalingConfigurationResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetScalingConfigurationResult build() {
            final var _resultValue = new GetScalingConfigurationResult();
            _resultValue.createdAt = createdAt;
            _resultValue.eip = eip;
            _resultValue.hostName = hostName;
            _resultValue.hpcClusterId = hpcClusterId;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.instanceChargeType = instanceChargeType;
            _resultValue.instanceDescription = instanceDescription;
            _resultValue.instanceName = instanceName;
            _resultValue.instanceTypeOverrides = instanceTypeOverrides;
            _resultValue.instanceTypes = instanceTypes;
            _resultValue.ipv6AddressCount = ipv6AddressCount;
            _resultValue.keyPairName = keyPairName;
            _resultValue.lifecycleState = lifecycleState;
            _resultValue.password = password;
            _resultValue.projectName = projectName;
            _resultValue.scalingConfigurationId = scalingConfigurationId;
            _resultValue.scalingConfigurationName = scalingConfigurationName;
            _resultValue.scalingGroupId = scalingGroupId;
            _resultValue.securityEnhancementStrategy = securityEnhancementStrategy;
            _resultValue.securityGroupIds = securityGroupIds;
            _resultValue.spotStrategy = spotStrategy;
            _resultValue.tags = tags;
            _resultValue.updatedAt = updatedAt;
            _resultValue.userData = userData;
            _resultValue.volumes = volumes;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
