// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceCpuMemoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceCpuMemoryArgs Empty = new InstanceCpuMemoryArgs();

    /**
     * 实例的核数。
     * 
     */
    @Import(name="coreCount")
    private @Nullable Output<Integer> coreCount;

    /**
     * @return 实例的核数。
     * 
     */
    public Optional<Output<Integer>> coreCount() {
        return Optional.ofNullable(this.coreCount);
    }

    /**
     * 实例的CPU数量。
     * 
     */
    @Import(name="cpuNumber")
    private @Nullable Output<Integer> cpuNumber;

    /**
     * @return 实例的CPU数量。
     * 
     */
    public Optional<Output<Integer>> cpuNumber() {
        return Optional.ofNullable(this.cpuNumber);
    }

    /**
     * 实例的内存大小，单位MB。
     * 
     */
    @Import(name="memorySize")
    private @Nullable Output<Integer> memorySize;

    /**
     * @return 实例的内存大小，单位MB。
     * 
     */
    public Optional<Output<Integer>> memorySize() {
        return Optional.ofNullable(this.memorySize);
    }

    /**
     * 实例的每核线程数。
     * 
     */
    @Import(name="threadsPerCore")
    private @Nullable Output<Integer> threadsPerCore;

    /**
     * @return 实例的每核线程数。
     * 
     */
    public Optional<Output<Integer>> threadsPerCore() {
        return Optional.ofNullable(this.threadsPerCore);
    }

    private InstanceCpuMemoryArgs() {}

    private InstanceCpuMemoryArgs(InstanceCpuMemoryArgs $) {
        this.coreCount = $.coreCount;
        this.cpuNumber = $.cpuNumber;
        this.memorySize = $.memorySize;
        this.threadsPerCore = $.threadsPerCore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceCpuMemoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceCpuMemoryArgs $;

        public Builder() {
            $ = new InstanceCpuMemoryArgs();
        }

        public Builder(InstanceCpuMemoryArgs defaults) {
            $ = new InstanceCpuMemoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param coreCount 实例的核数。
         * 
         * @return builder
         * 
         */
        public Builder coreCount(@Nullable Output<Integer> coreCount) {
            $.coreCount = coreCount;
            return this;
        }

        /**
         * @param coreCount 实例的核数。
         * 
         * @return builder
         * 
         */
        public Builder coreCount(Integer coreCount) {
            return coreCount(Output.of(coreCount));
        }

        /**
         * @param cpuNumber 实例的CPU数量。
         * 
         * @return builder
         * 
         */
        public Builder cpuNumber(@Nullable Output<Integer> cpuNumber) {
            $.cpuNumber = cpuNumber;
            return this;
        }

        /**
         * @param cpuNumber 实例的CPU数量。
         * 
         * @return builder
         * 
         */
        public Builder cpuNumber(Integer cpuNumber) {
            return cpuNumber(Output.of(cpuNumber));
        }

        /**
         * @param memorySize 实例的内存大小，单位MB。
         * 
         * @return builder
         * 
         */
        public Builder memorySize(@Nullable Output<Integer> memorySize) {
            $.memorySize = memorySize;
            return this;
        }

        /**
         * @param memorySize 实例的内存大小，单位MB。
         * 
         * @return builder
         * 
         */
        public Builder memorySize(Integer memorySize) {
            return memorySize(Output.of(memorySize));
        }

        /**
         * @param threadsPerCore 实例的每核线程数。
         * 
         * @return builder
         * 
         */
        public Builder threadsPerCore(@Nullable Output<Integer> threadsPerCore) {
            $.threadsPerCore = threadsPerCore;
            return this;
        }

        /**
         * @param threadsPerCore 实例的每核线程数。
         * 
         * @return builder
         * 
         */
        public Builder threadsPerCore(Integer threadsPerCore) {
            return threadsPerCore(Output.of(threadsPerCore));
        }

        public InstanceCpuMemoryArgs build() {
            return $;
        }
    }

}
