// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.vpc.inputs.VpcAssociateCenArgs;
import com.volcengine.volcenginecc.vpc.inputs.VpcTagArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpcArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpcArgs Empty = new VpcArgs();

    @Import(name="associateCens")
    private @Nullable Output<List<VpcAssociateCenArgs>> associateCens;

    public Optional<Output<List<VpcAssociateCenArgs>>> associateCens() {
        return Optional.ofNullable(this.associateCens);
    }

    /**
     * VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     * 
     */
    @Import(name="cidrBlock")
    private @Nullable Output<String> cidrBlock;

    /**
     * @return VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     * 
     */
    public Optional<Output<String>> cidrBlock() {
        return Optional.ofNullable(this.cidrBlock);
    }

    /**
     * VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * VPC 绑定的 IPv4 网关的 ID。
     * 
     */
    @Import(name="ipv4GatewayId")
    private @Nullable Output<String> ipv4GatewayId;

    /**
     * @return VPC 绑定的 IPv4 网关的 ID。
     * 
     */
    public Optional<Output<String>> ipv4GatewayId() {
        return Optional.ofNullable(this.ipv4GatewayId);
    }

    /**
     * VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     * 
     */
    @Import(name="ipv6CidrBlock")
    private @Nullable Output<String> ipv6CidrBlock;

    /**
     * @return VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     * 
     */
    public Optional<Output<String>> ipv6CidrBlock() {
        return Optional.ofNullable(this.ipv6CidrBlock);
    }

    /**
     * VPC中创建的NAT网关的ID。
     * 
     */
    @Import(name="natGatewayIds")
    private @Nullable Output<List<String>> natGatewayIds;

    /**
     * @return VPC中创建的NAT网关的ID。
     * 
     */
    public Optional<Output<List<String>>> natGatewayIds() {
        return Optional.ofNullable(this.natGatewayIds);
    }

    /**
     * VPC所属项目的名称。不填默认加入default项目。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return VPC所属项目的名称。不填默认加入default项目。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * VPC关联的路由表ID。
     * 
     */
    @Import(name="routeTableIds")
    private @Nullable Output<List<String>> routeTableIds;

    /**
     * @return VPC关联的路由表ID。
     * 
     */
    public Optional<Output<List<String>>> routeTableIds() {
        return Optional.ofNullable(this.routeTableIds);
    }

    /**
     * VPC的辅助网段。
     * 
     */
    @Import(name="secondaryCidrBlocks")
    private @Nullable Output<List<String>> secondaryCidrBlocks;

    /**
     * @return VPC的辅助网段。
     * 
     */
    public Optional<Output<List<String>>> secondaryCidrBlocks() {
        return Optional.ofNullable(this.secondaryCidrBlocks);
    }

    /**
     * VPC中安全组的列表。
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return VPC中安全组的列表。
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * VPC中子网的列表。
     * 
     */
    @Import(name="subnetIds")
    private @Nullable Output<List<String>> subnetIds;

    /**
     * @return VPC中子网的列表。
     * 
     */
    public Optional<Output<List<String>>> subnetIds() {
        return Optional.ofNullable(this.subnetIds);
    }

    /**
     * VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     * 
     */
    @Import(name="supportIpv4Gateway")
    private @Nullable Output<Boolean> supportIpv4Gateway;

    /**
     * @return VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     * 
     */
    public Optional<Output<Boolean>> supportIpv4Gateway() {
        return Optional.ofNullable(this.supportIpv4Gateway);
    }

    @Import(name="tags")
    private @Nullable Output<List<VpcTagArgs>> tags;

    public Optional<Output<List<VpcTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * VPC的用户网段。
     * 
     */
    @Import(name="userCidrBlocks")
    private @Nullable Output<List<String>> userCidrBlocks;

    /**
     * @return VPC的用户网段。
     * 
     */
    public Optional<Output<List<String>>> userCidrBlocks() {
        return Optional.ofNullable(this.userCidrBlocks);
    }

    /**
     * VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     * 
     */
    @Import(name="vpcName")
    private @Nullable Output<String> vpcName;

    /**
     * @return VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     * 
     */
    public Optional<Output<String>> vpcName() {
        return Optional.ofNullable(this.vpcName);
    }

    private VpcArgs() {}

    private VpcArgs(VpcArgs $) {
        this.associateCens = $.associateCens;
        this.cidrBlock = $.cidrBlock;
        this.description = $.description;
        this.dnsServers = $.dnsServers;
        this.ipv4GatewayId = $.ipv4GatewayId;
        this.ipv6CidrBlock = $.ipv6CidrBlock;
        this.natGatewayIds = $.natGatewayIds;
        this.projectName = $.projectName;
        this.routeTableIds = $.routeTableIds;
        this.secondaryCidrBlocks = $.secondaryCidrBlocks;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetIds = $.subnetIds;
        this.supportIpv4Gateway = $.supportIpv4Gateway;
        this.tags = $.tags;
        this.userCidrBlocks = $.userCidrBlocks;
        this.vpcName = $.vpcName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpcArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpcArgs $;

        public Builder() {
            $ = new VpcArgs();
        }

        public Builder(VpcArgs defaults) {
            $ = new VpcArgs(Objects.requireNonNull(defaults));
        }

        public Builder associateCens(@Nullable Output<List<VpcAssociateCenArgs>> associateCens) {
            $.associateCens = associateCens;
            return this;
        }

        public Builder associateCens(List<VpcAssociateCenArgs> associateCens) {
            return associateCens(Output.of(associateCens));
        }

        public Builder associateCens(VpcAssociateCenArgs... associateCens) {
            return associateCens(List.of(associateCens));
        }

        /**
         * @param cidrBlock VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(@Nullable Output<String> cidrBlock) {
            $.cidrBlock = cidrBlock;
            return this;
        }

        /**
         * @param cidrBlock VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
         * 
         * @return builder
         * 
         */
        public Builder cidrBlock(String cidrBlock) {
            return cidrBlock(Output.of(cidrBlock));
        }

        /**
         * @param description VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param dnsServers VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&amp;分隔。不填则配置为默认DNS服务器地址。
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param ipv4GatewayId VPC 绑定的 IPv4 网关的 ID。
         * 
         * @return builder
         * 
         */
        public Builder ipv4GatewayId(@Nullable Output<String> ipv4GatewayId) {
            $.ipv4GatewayId = ipv4GatewayId;
            return this;
        }

        /**
         * @param ipv4GatewayId VPC 绑定的 IPv4 网关的 ID。
         * 
         * @return builder
         * 
         */
        public Builder ipv4GatewayId(String ipv4GatewayId) {
            return ipv4GatewayId(Output.of(ipv4GatewayId));
        }

        /**
         * @param ipv6CidrBlock VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
         * 
         * @return builder
         * 
         */
        public Builder ipv6CidrBlock(@Nullable Output<String> ipv6CidrBlock) {
            $.ipv6CidrBlock = ipv6CidrBlock;
            return this;
        }

        /**
         * @param ipv6CidrBlock VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
         * 
         * @return builder
         * 
         */
        public Builder ipv6CidrBlock(String ipv6CidrBlock) {
            return ipv6CidrBlock(Output.of(ipv6CidrBlock));
        }

        /**
         * @param natGatewayIds VPC中创建的NAT网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder natGatewayIds(@Nullable Output<List<String>> natGatewayIds) {
            $.natGatewayIds = natGatewayIds;
            return this;
        }

        /**
         * @param natGatewayIds VPC中创建的NAT网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder natGatewayIds(List<String> natGatewayIds) {
            return natGatewayIds(Output.of(natGatewayIds));
        }

        /**
         * @param natGatewayIds VPC中创建的NAT网关的ID。
         * 
         * @return builder
         * 
         */
        public Builder natGatewayIds(String... natGatewayIds) {
            return natGatewayIds(List.of(natGatewayIds));
        }

        /**
         * @param projectName VPC所属项目的名称。不填默认加入default项目。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName VPC所属项目的名称。不填默认加入default项目。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param routeTableIds VPC关联的路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder routeTableIds(@Nullable Output<List<String>> routeTableIds) {
            $.routeTableIds = routeTableIds;
            return this;
        }

        /**
         * @param routeTableIds VPC关联的路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder routeTableIds(List<String> routeTableIds) {
            return routeTableIds(Output.of(routeTableIds));
        }

        /**
         * @param routeTableIds VPC关联的路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder routeTableIds(String... routeTableIds) {
            return routeTableIds(List.of(routeTableIds));
        }

        /**
         * @param secondaryCidrBlocks VPC的辅助网段。
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlocks(@Nullable Output<List<String>> secondaryCidrBlocks) {
            $.secondaryCidrBlocks = secondaryCidrBlocks;
            return this;
        }

        /**
         * @param secondaryCidrBlocks VPC的辅助网段。
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlocks(List<String> secondaryCidrBlocks) {
            return secondaryCidrBlocks(Output.of(secondaryCidrBlocks));
        }

        /**
         * @param secondaryCidrBlocks VPC的辅助网段。
         * 
         * @return builder
         * 
         */
        public Builder secondaryCidrBlocks(String... secondaryCidrBlocks) {
            return secondaryCidrBlocks(List.of(secondaryCidrBlocks));
        }

        /**
         * @param securityGroupIds VPC中安全组的列表。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds VPC中安全组的列表。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds VPC中安全组的列表。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param subnetIds VPC中子网的列表。
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(@Nullable Output<List<String>> subnetIds) {
            $.subnetIds = subnetIds;
            return this;
        }

        /**
         * @param subnetIds VPC中子网的列表。
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(List<String> subnetIds) {
            return subnetIds(Output.of(subnetIds));
        }

        /**
         * @param subnetIds VPC中子网的列表。
         * 
         * @return builder
         * 
         */
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }

        /**
         * @param supportIpv4Gateway VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
         * 
         * @return builder
         * 
         */
        public Builder supportIpv4Gateway(@Nullable Output<Boolean> supportIpv4Gateway) {
            $.supportIpv4Gateway = supportIpv4Gateway;
            return this;
        }

        /**
         * @param supportIpv4Gateway VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
         * 
         * @return builder
         * 
         */
        public Builder supportIpv4Gateway(Boolean supportIpv4Gateway) {
            return supportIpv4Gateway(Output.of(supportIpv4Gateway));
        }

        public Builder tags(@Nullable Output<List<VpcTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<VpcTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(VpcTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param userCidrBlocks VPC的用户网段。
         * 
         * @return builder
         * 
         */
        public Builder userCidrBlocks(@Nullable Output<List<String>> userCidrBlocks) {
            $.userCidrBlocks = userCidrBlocks;
            return this;
        }

        /**
         * @param userCidrBlocks VPC的用户网段。
         * 
         * @return builder
         * 
         */
        public Builder userCidrBlocks(List<String> userCidrBlocks) {
            return userCidrBlocks(Output.of(userCidrBlocks));
        }

        /**
         * @param userCidrBlocks VPC的用户网段。
         * 
         * @return builder
         * 
         */
        public Builder userCidrBlocks(String... userCidrBlocks) {
            return userCidrBlocks(List.of(userCidrBlocks));
        }

        /**
         * @param vpcName VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
         * 
         * @return builder
         * 
         */
        public Builder vpcName(@Nullable Output<String> vpcName) {
            $.vpcName = vpcName;
            return this;
        }

        /**
         * @param vpcName VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
         * 
         * @return builder
         * 
         */
        public Builder vpcName(String vpcName) {
            return vpcName(Output.of(vpcName));
        }

        public VpcArgs build() {
            return $;
        }
    }

}
