// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNlbListenerHealth {
    /**
     * @return 后端服务器的实例 ID或IP地址。
     * 
     */
    private String instanceId;
    /**
     * @return 后端服务器的IP地址。
     * 
     */
    private String ip;
    /**
     * @return 后端服务器提供服务的端口。
     * 
     */
    private Integer port;
    /**
     * @return 后端服务器ID。
     * 
     */
    private String serverId;
    /**
     * @return 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
     * 
     */
    private String serverType;
    /**
     * @return 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
     * 
     */
    private String status;
    /**
     * @return 健康状态最后更新时间。
     * 
     */
    private String updatedTime;
    /**
     * @return 后端服务器接收访问流量的可用区ID。
     * 
     */
    private String zoneId;

    private GetNlbListenerHealth() {}
    /**
     * @return 后端服务器的实例 ID或IP地址。
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return 后端服务器的IP地址。
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return 后端服务器提供服务的端口。
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return 后端服务器ID。
     * 
     */
    public String serverId() {
        return this.serverId;
    }
    /**
     * @return 后端服务器的类型。ecs：云服务器实例（即主网卡）；eni：辅助网卡；ip：IP地址
     * 
     */
    public String serverType() {
        return this.serverType;
    }
    /**
     * @return 后端服务器的健康状态。Up：正常；Down：异常；Unused：未被使用（NLB实例已关闭跨可用区转发，且没有来自该后端服务器可用区的访问流量）。
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 健康状态最后更新时间。
     * 
     */
    public String updatedTime() {
        return this.updatedTime;
    }
    /**
     * @return 后端服务器接收访问流量的可用区ID。
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNlbListenerHealth defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String instanceId;
        private String ip;
        private Integer port;
        private String serverId;
        private String serverType;
        private String status;
        private String updatedTime;
        private String zoneId;
        public Builder() {}
        public Builder(GetNlbListenerHealth defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceId = defaults.instanceId;
    	      this.ip = defaults.ip;
    	      this.port = defaults.port;
    	      this.serverId = defaults.serverId;
    	      this.serverType = defaults.serverType;
    	      this.status = defaults.status;
    	      this.updatedTime = defaults.updatedTime;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder serverId(String serverId) {
            if (serverId == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "serverId");
            }
            this.serverId = serverId;
            return this;
        }
        @CustomType.Setter
        public Builder serverType(String serverType) {
            if (serverType == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "serverType");
            }
            this.serverType = serverType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updatedTime(String updatedTime) {
            if (updatedTime == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "updatedTime");
            }
            this.updatedTime = updatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetNlbListenerHealth", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetNlbListenerHealth build() {
            final var _resultValue = new GetNlbListenerHealth();
            _resultValue.instanceId = instanceId;
            _resultValue.ip = ip;
            _resultValue.port = port;
            _resultValue.serverId = serverId;
            _resultValue.serverType = serverType;
            _resultValue.status = status;
            _resultValue.updatedTime = updatedTime;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
