// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InvocationInvocationResultArgs extends com.pulumi.resources.ResourceArgs {

    public static final InvocationInvocationResultArgs Empty = new InvocationInvocationResultArgs();

    /**
     * 命令ID。
     * 
     */
    @Import(name="commandId")
    private @Nullable Output<String> commandId;

    /**
     * @return 命令ID。
     * 
     */
    public Optional<Output<String>> commandId() {
        return Optional.ofNullable(this.commandId);
    }

    /**
     * 命令执行的完成时间。
     * 
     */
    @Import(name="endTime")
    private @Nullable Output<String> endTime;

    /**
     * @return 命令执行的完成时间。
     * 
     */
    public Optional<Output<String>> endTime() {
        return Optional.ofNullable(this.endTime);
    }

    /**
     * 命令执行失败的错误码。TaskDeliveryTimeout：表示命令下发超时。TaskExecutionTimeout：表示命令执行超时。TaskExecutionFailed：表示命令执行失败。
     * 
     */
    @Import(name="errorCode")
    private @Nullable Output<String> errorCode;

    /**
     * @return 命令执行失败的错误码。TaskDeliveryTimeout：表示命令下发超时。TaskExecutionTimeout：表示命令执行超时。TaskExecutionFailed：表示命令执行失败。
     * 
     */
    public Optional<Output<String>> errorCode() {
        return Optional.ofNullable(this.errorCode);
    }

    /**
     * 命令执行失败的错误信息。
     * 
     */
    @Import(name="errorMessage")
    private @Nullable Output<String> errorMessage;

    /**
     * @return 命令执行失败的错误信息。
     * 
     */
    public Optional<Output<String>> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * 脚本执行后的退出状态码。
     * 
     */
    @Import(name="exitCode")
    private @Nullable Output<Integer> exitCode;

    /**
     * @return 脚本执行后的退出状态码。
     * 
     */
    public Optional<Output<Integer>> exitCode() {
        return Optional.ofNullable(this.exitCode);
    }

    /**
     * 实例ID。
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return 实例ID。
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * 任务执行ID。
     * 
     */
    @Import(name="invocationId")
    private @Nullable Output<String> invocationId;

    /**
     * @return 任务执行ID。
     * 
     */
    public Optional<Output<String>> invocationId() {
        return Optional.ofNullable(this.invocationId);
    }

    /**
     * 任务执行结果ID。
     * 
     */
    @Import(name="invocationResultId")
    private @Nullable Output<String> invocationResultId;

    /**
     * @return 任务执行结果ID。
     * 
     */
    public Optional<Output<String>> invocationResultId() {
        return Optional.ofNullable(this.invocationResultId);
    }

    /**
     * 单台实例的命令进度状态。
     * 
     */
    @Import(name="invocationResultStatus")
    private @Nullable Output<String> invocationResultStatus;

    /**
     * @return 单台实例的命令进度状态。
     * 
     */
    public Optional<Output<String>> invocationResultStatus() {
        return Optional.ofNullable(this.invocationResultStatus);
    }

    /**
     * 经过Base64编码的命令执行后输出信息。
     * 
     */
    @Import(name="output")
    private @Nullable Output<String> output;

    /**
     * @return 经过Base64编码的命令执行后输出信息。
     * 
     */
    public Optional<Output<String>> output() {
        return Optional.ofNullable(this.output);
    }

    /**
     * 命令在实例中开始执行的时间。
     * 
     */
    @Import(name="startTime")
    private @Nullable Output<String> startTime;

    /**
     * @return 命令在实例中开始执行的时间。
     * 
     */
    public Optional<Output<String>> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    /**
     * 在实例中执行命令的用户名称。
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return 在实例中执行命令的用户名称。
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private InvocationInvocationResultArgs() {}

    private InvocationInvocationResultArgs(InvocationInvocationResultArgs $) {
        this.commandId = $.commandId;
        this.endTime = $.endTime;
        this.errorCode = $.errorCode;
        this.errorMessage = $.errorMessage;
        this.exitCode = $.exitCode;
        this.instanceId = $.instanceId;
        this.invocationId = $.invocationId;
        this.invocationResultId = $.invocationResultId;
        this.invocationResultStatus = $.invocationResultStatus;
        this.output = $.output;
        this.startTime = $.startTime;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InvocationInvocationResultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InvocationInvocationResultArgs $;

        public Builder() {
            $ = new InvocationInvocationResultArgs();
        }

        public Builder(InvocationInvocationResultArgs defaults) {
            $ = new InvocationInvocationResultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commandId 命令ID。
         * 
         * @return builder
         * 
         */
        public Builder commandId(@Nullable Output<String> commandId) {
            $.commandId = commandId;
            return this;
        }

        /**
         * @param commandId 命令ID。
         * 
         * @return builder
         * 
         */
        public Builder commandId(String commandId) {
            return commandId(Output.of(commandId));
        }

        /**
         * @param endTime 命令执行的完成时间。
         * 
         * @return builder
         * 
         */
        public Builder endTime(@Nullable Output<String> endTime) {
            $.endTime = endTime;
            return this;
        }

        /**
         * @param endTime 命令执行的完成时间。
         * 
         * @return builder
         * 
         */
        public Builder endTime(String endTime) {
            return endTime(Output.of(endTime));
        }

        /**
         * @param errorCode 命令执行失败的错误码。TaskDeliveryTimeout：表示命令下发超时。TaskExecutionTimeout：表示命令执行超时。TaskExecutionFailed：表示命令执行失败。
         * 
         * @return builder
         * 
         */
        public Builder errorCode(@Nullable Output<String> errorCode) {
            $.errorCode = errorCode;
            return this;
        }

        /**
         * @param errorCode 命令执行失败的错误码。TaskDeliveryTimeout：表示命令下发超时。TaskExecutionTimeout：表示命令执行超时。TaskExecutionFailed：表示命令执行失败。
         * 
         * @return builder
         * 
         */
        public Builder errorCode(String errorCode) {
            return errorCode(Output.of(errorCode));
        }

        /**
         * @param errorMessage 命令执行失败的错误信息。
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(@Nullable Output<String> errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        /**
         * @param errorMessage 命令执行失败的错误信息。
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(String errorMessage) {
            return errorMessage(Output.of(errorMessage));
        }

        /**
         * @param exitCode 脚本执行后的退出状态码。
         * 
         * @return builder
         * 
         */
        public Builder exitCode(@Nullable Output<Integer> exitCode) {
            $.exitCode = exitCode;
            return this;
        }

        /**
         * @param exitCode 脚本执行后的退出状态码。
         * 
         * @return builder
         * 
         */
        public Builder exitCode(Integer exitCode) {
            return exitCode(Output.of(exitCode));
        }

        /**
         * @param instanceId 实例ID。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId 实例ID。
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param invocationId 任务执行ID。
         * 
         * @return builder
         * 
         */
        public Builder invocationId(@Nullable Output<String> invocationId) {
            $.invocationId = invocationId;
            return this;
        }

        /**
         * @param invocationId 任务执行ID。
         * 
         * @return builder
         * 
         */
        public Builder invocationId(String invocationId) {
            return invocationId(Output.of(invocationId));
        }

        /**
         * @param invocationResultId 任务执行结果ID。
         * 
         * @return builder
         * 
         */
        public Builder invocationResultId(@Nullable Output<String> invocationResultId) {
            $.invocationResultId = invocationResultId;
            return this;
        }

        /**
         * @param invocationResultId 任务执行结果ID。
         * 
         * @return builder
         * 
         */
        public Builder invocationResultId(String invocationResultId) {
            return invocationResultId(Output.of(invocationResultId));
        }

        /**
         * @param invocationResultStatus 单台实例的命令进度状态。
         * 
         * @return builder
         * 
         */
        public Builder invocationResultStatus(@Nullable Output<String> invocationResultStatus) {
            $.invocationResultStatus = invocationResultStatus;
            return this;
        }

        /**
         * @param invocationResultStatus 单台实例的命令进度状态。
         * 
         * @return builder
         * 
         */
        public Builder invocationResultStatus(String invocationResultStatus) {
            return invocationResultStatus(Output.of(invocationResultStatus));
        }

        /**
         * @param output 经过Base64编码的命令执行后输出信息。
         * 
         * @return builder
         * 
         */
        public Builder output(@Nullable Output<String> output) {
            $.output = output;
            return this;
        }

        /**
         * @param output 经过Base64编码的命令执行后输出信息。
         * 
         * @return builder
         * 
         */
        public Builder output(String output) {
            return output(Output.of(output));
        }

        /**
         * @param startTime 命令在实例中开始执行的时间。
         * 
         * @return builder
         * 
         */
        public Builder startTime(@Nullable Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime 命令在实例中开始执行的时间。
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param username 在实例中执行命令的用户名称。
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username 在实例中执行命令的用户名称。
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public InvocationInvocationResultArgs build() {
            return $;
        }
    }

}
