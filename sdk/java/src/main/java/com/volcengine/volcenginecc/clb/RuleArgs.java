// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.clb.inputs.RuleRedirectConfigArgs;
import com.volcengine.volcenginecc.clb.inputs.RuleTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleArgs Empty = new RuleArgs();

    /**
     * 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
     * 
     */
    @Import(name="actionType")
    private @Nullable Output<String> actionType;

    /**
     * @return 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
     * 
     */
    public Optional<Output<String>> actionType() {
        return Optional.ofNullable(this.actionType);
    }

    /**
     * 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 转发规则的域名。
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return 转发规则的域名。
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * 监听器ID。
     * 
     */
    @Import(name="listenerId", required=true)
    private Output<String> listenerId;

    /**
     * @return 监听器ID。
     * 
     */
    public Output<String> listenerId() {
        return this.listenerId;
    }

    /**
     * 重定向相关配置信息。
     * 
     */
    @Import(name="redirectConfig")
    private @Nullable Output<RuleRedirectConfigArgs> redirectConfig;

    /**
     * @return 重定向相关配置信息。
     * 
     */
    public Optional<Output<RuleRedirectConfigArgs>> redirectConfig() {
        return Optional.ofNullable(this.redirectConfig);
    }

    /**
     * 转发规则关联的后端服务器组的ID。
     * 
     */
    @Import(name="serverGroupId")
    private @Nullable Output<String> serverGroupId;

    /**
     * @return 转发规则关联的后端服务器组的ID。
     * 
     */
    public Optional<Output<String>> serverGroupId() {
        return Optional.ofNullable(this.serverGroupId);
    }

    @Import(name="tags")
    private @Nullable Output<List<RuleTagArgs>> tags;

    public Optional<Output<List<RuleTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 转发规则的URL。
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return 转发规则的URL。
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private RuleArgs() {}

    private RuleArgs(RuleArgs $) {
        this.actionType = $.actionType;
        this.description = $.description;
        this.domain = $.domain;
        this.listenerId = $.listenerId;
        this.redirectConfig = $.redirectConfig;
        this.serverGroupId = $.serverGroupId;
        this.tags = $.tags;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleArgs $;

        public Builder() {
            $ = new RuleArgs();
        }

        public Builder(RuleArgs defaults) {
            $ = new RuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionType 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
         * 
         * @return builder
         * 
         */
        public Builder actionType(@Nullable Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        /**
         * @param actionType 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
         * 
         * @return builder
         * 
         */
        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        /**
         * @param description 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domain 转发规则的域名。
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain 转发规则的域名。
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param listenerId 监听器ID。
         * 
         * @return builder
         * 
         */
        public Builder listenerId(Output<String> listenerId) {
            $.listenerId = listenerId;
            return this;
        }

        /**
         * @param listenerId 监听器ID。
         * 
         * @return builder
         * 
         */
        public Builder listenerId(String listenerId) {
            return listenerId(Output.of(listenerId));
        }

        /**
         * @param redirectConfig 重定向相关配置信息。
         * 
         * @return builder
         * 
         */
        public Builder redirectConfig(@Nullable Output<RuleRedirectConfigArgs> redirectConfig) {
            $.redirectConfig = redirectConfig;
            return this;
        }

        /**
         * @param redirectConfig 重定向相关配置信息。
         * 
         * @return builder
         * 
         */
        public Builder redirectConfig(RuleRedirectConfigArgs redirectConfig) {
            return redirectConfig(Output.of(redirectConfig));
        }

        /**
         * @param serverGroupId 转发规则关联的后端服务器组的ID。
         * 
         * @return builder
         * 
         */
        public Builder serverGroupId(@Nullable Output<String> serverGroupId) {
            $.serverGroupId = serverGroupId;
            return this;
        }

        /**
         * @param serverGroupId 转发规则关联的后端服务器组的ID。
         * 
         * @return builder
         * 
         */
        public Builder serverGroupId(String serverGroupId) {
            return serverGroupId(Output.of(serverGroupId));
        }

        public Builder tags(@Nullable Output<List<RuleTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<RuleTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(RuleTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param url 转发规则的URL。
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url 转发规则的URL。
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public RuleArgs build() {
            if ($.listenerId == null) {
                throw new MissingRequiredPropertyException("RuleArgs", "listenerId");
            }
            return $;
        }
    }

}
