// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceKeyPair {
    /**
     * @return 实例的公钥。
     * 
     */
    private String keyPairId;
    /**
     * @return 实例的密钥对名称。
     * 
     */
    private String keyPairName;

    private GetInstanceKeyPair() {}
    /**
     * @return 实例的公钥。
     * 
     */
    public String keyPairId() {
        return this.keyPairId;
    }
    /**
     * @return 实例的密钥对名称。
     * 
     */
    public String keyPairName() {
        return this.keyPairName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceKeyPair defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String keyPairId;
        private String keyPairName;
        public Builder() {}
        public Builder(GetInstanceKeyPair defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyPairId = defaults.keyPairId;
    	      this.keyPairName = defaults.keyPairName;
        }

        @CustomType.Setter
        public Builder keyPairId(String keyPairId) {
            if (keyPairId == null) {
              throw new MissingRequiredPropertyException("GetInstanceKeyPair", "keyPairId");
            }
            this.keyPairId = keyPairId;
            return this;
        }
        @CustomType.Setter
        public Builder keyPairName(String keyPairName) {
            if (keyPairName == null) {
              throw new MissingRequiredPropertyException("GetInstanceKeyPair", "keyPairName");
            }
            this.keyPairName = keyPairName;
            return this;
        }
        public GetInstanceKeyPair build() {
            final var _resultValue = new GetInstanceKeyPair();
            _resultValue.keyPairId = keyPairId;
            _resultValue.keyPairName = keyPairName;
            return _resultValue;
        }
    }
}
