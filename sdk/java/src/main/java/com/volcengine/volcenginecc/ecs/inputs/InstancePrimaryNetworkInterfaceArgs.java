// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePrimaryNetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePrimaryNetworkInterfaceArgs Empty = new InstancePrimaryNetworkInterfaceArgs();

    /**
     * 实例的IPv6地址数量。
     * 
     */
    @Import(name="ipv6AddressCount")
    private @Nullable Output<Integer> ipv6AddressCount;

    /**
     * @return 实例的IPv6地址数量。
     * 
     */
    public Optional<Output<Integer>> ipv6AddressCount() {
        return Optional.ofNullable(this.ipv6AddressCount);
    }

    /**
     * 实例的IPv6地址。
     * 
     */
    @Import(name="ipv6Addresses")
    private @Nullable Output<List<String>> ipv6Addresses;

    /**
     * @return 实例的IPv6地址。
     * 
     */
    public Optional<Output<List<String>>> ipv6Addresses() {
        return Optional.ofNullable(this.ipv6Addresses);
    }

    /**
     * 实例的MAC地址。
     * 
     */
    @Import(name="macAddress")
    private @Nullable Output<String> macAddress;

    /**
     * @return 实例的MAC地址。
     * 
     */
    public Optional<Output<String>> macAddress() {
        return Optional.ofNullable(this.macAddress);
    }

    /**
     * 实例的网络接口ID。
     * 
     */
    @Import(name="networkInterfaceId")
    private @Nullable Output<String> networkInterfaceId;

    /**
     * @return 实例的网络接口ID。
     * 
     */
    public Optional<Output<String>> networkInterfaceId() {
        return Optional.ofNullable(this.networkInterfaceId);
    }

    /**
     * 实例的主IP地址。
     * 
     */
    @Import(name="primaryIpAddress")
    private @Nullable Output<String> primaryIpAddress;

    /**
     * @return 实例的主IP地址。
     * 
     */
    public Optional<Output<String>> primaryIpAddress() {
        return Optional.ofNullable(this.primaryIpAddress);
    }

    /**
     * 实例的私有IP地址。
     * 
     */
    @Import(name="privateIpAddresses")
    private @Nullable Output<List<String>> privateIpAddresses;

    /**
     * @return 实例的私有IP地址。
     * 
     */
    public Optional<Output<List<String>>> privateIpAddresses() {
        return Optional.ofNullable(this.privateIpAddresses);
    }

    /**
     * 实例的安全组ID。
     * 
     */
    @Import(name="securityGroupIds", required=true)
    private Output<List<String>> securityGroupIds;

    /**
     * @return 实例的安全组ID。
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }

    /**
     * 实例的子网ID。
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return 实例的子网ID。
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * 实例的VPC ID。
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return 实例的VPC ID。
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private InstancePrimaryNetworkInterfaceArgs() {}

    private InstancePrimaryNetworkInterfaceArgs(InstancePrimaryNetworkInterfaceArgs $) {
        this.ipv6AddressCount = $.ipv6AddressCount;
        this.ipv6Addresses = $.ipv6Addresses;
        this.macAddress = $.macAddress;
        this.networkInterfaceId = $.networkInterfaceId;
        this.primaryIpAddress = $.primaryIpAddress;
        this.privateIpAddresses = $.privateIpAddresses;
        this.securityGroupIds = $.securityGroupIds;
        this.subnetId = $.subnetId;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePrimaryNetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePrimaryNetworkInterfaceArgs $;

        public Builder() {
            $ = new InstancePrimaryNetworkInterfaceArgs();
        }

        public Builder(InstancePrimaryNetworkInterfaceArgs defaults) {
            $ = new InstancePrimaryNetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipv6AddressCount 实例的IPv6地址数量。
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressCount(@Nullable Output<Integer> ipv6AddressCount) {
            $.ipv6AddressCount = ipv6AddressCount;
            return this;
        }

        /**
         * @param ipv6AddressCount 实例的IPv6地址数量。
         * 
         * @return builder
         * 
         */
        public Builder ipv6AddressCount(Integer ipv6AddressCount) {
            return ipv6AddressCount(Output.of(ipv6AddressCount));
        }

        /**
         * @param ipv6Addresses 实例的IPv6地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Addresses(@Nullable Output<List<String>> ipv6Addresses) {
            $.ipv6Addresses = ipv6Addresses;
            return this;
        }

        /**
         * @param ipv6Addresses 实例的IPv6地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Addresses(List<String> ipv6Addresses) {
            return ipv6Addresses(Output.of(ipv6Addresses));
        }

        /**
         * @param ipv6Addresses 实例的IPv6地址。
         * 
         * @return builder
         * 
         */
        public Builder ipv6Addresses(String... ipv6Addresses) {
            return ipv6Addresses(List.of(ipv6Addresses));
        }

        /**
         * @param macAddress 实例的MAC地址。
         * 
         * @return builder
         * 
         */
        public Builder macAddress(@Nullable Output<String> macAddress) {
            $.macAddress = macAddress;
            return this;
        }

        /**
         * @param macAddress 实例的MAC地址。
         * 
         * @return builder
         * 
         */
        public Builder macAddress(String macAddress) {
            return macAddress(Output.of(macAddress));
        }

        /**
         * @param networkInterfaceId 实例的网络接口ID。
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(@Nullable Output<String> networkInterfaceId) {
            $.networkInterfaceId = networkInterfaceId;
            return this;
        }

        /**
         * @param networkInterfaceId 实例的网络接口ID。
         * 
         * @return builder
         * 
         */
        public Builder networkInterfaceId(String networkInterfaceId) {
            return networkInterfaceId(Output.of(networkInterfaceId));
        }

        /**
         * @param primaryIpAddress 实例的主IP地址。
         * 
         * @return builder
         * 
         */
        public Builder primaryIpAddress(@Nullable Output<String> primaryIpAddress) {
            $.primaryIpAddress = primaryIpAddress;
            return this;
        }

        /**
         * @param primaryIpAddress 实例的主IP地址。
         * 
         * @return builder
         * 
         */
        public Builder primaryIpAddress(String primaryIpAddress) {
            return primaryIpAddress(Output.of(primaryIpAddress));
        }

        /**
         * @param privateIpAddresses 实例的私有IP地址。
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddresses(@Nullable Output<List<String>> privateIpAddresses) {
            $.privateIpAddresses = privateIpAddresses;
            return this;
        }

        /**
         * @param privateIpAddresses 实例的私有IP地址。
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddresses(List<String> privateIpAddresses) {
            return privateIpAddresses(Output.of(privateIpAddresses));
        }

        /**
         * @param privateIpAddresses 实例的私有IP地址。
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddresses(String... privateIpAddresses) {
            return privateIpAddresses(List.of(privateIpAddresses));
        }

        /**
         * @param securityGroupIds 实例的安全组ID。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds 实例的安全组ID。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds 实例的安全组ID。
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param subnetId 实例的子网ID。
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId 实例的子网ID。
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param vpcId 实例的VPC ID。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId 实例的VPC ID。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public InstancePrimaryNetworkInterfaceArgs build() {
            if ($.securityGroupIds == null) {
                throw new MissingRequiredPropertyException("InstancePrimaryNetworkInterfaceArgs", "securityGroupIds");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("InstancePrimaryNetworkInterfaceArgs", "subnetId");
            }
            return $;
        }
    }

}
