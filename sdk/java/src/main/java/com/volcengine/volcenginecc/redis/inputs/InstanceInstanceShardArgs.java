// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.redis.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.redis.inputs.InstanceInstanceShardServerNodeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceInstanceShardArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceInstanceShardArgs Empty = new InstanceInstanceShardArgs();

    /**
     * 分片中的节点数量
     * 
     */
    @Import(name="nodeNumber")
    private @Nullable Output<Integer> nodeNumber;

    /**
     * @return 分片中的节点数量
     * 
     */
    public Optional<Output<Integer>> nodeNumber() {
        return Optional.ofNullable(this.nodeNumber);
    }

    @Import(name="serverNodes")
    private @Nullable Output<List<InstanceInstanceShardServerNodeArgs>> serverNodes;

    public Optional<Output<List<InstanceInstanceShardServerNodeArgs>>> serverNodes() {
        return Optional.ofNullable(this.serverNodes);
    }

    /**
     * 分片 ID。
     * 
     */
    @Import(name="shardId")
    private @Nullable Output<String> shardId;

    /**
     * @return 分片 ID。
     * 
     */
    public Optional<Output<String>> shardId() {
        return Optional.ofNullable(this.shardId);
    }

    private InstanceInstanceShardArgs() {}

    private InstanceInstanceShardArgs(InstanceInstanceShardArgs $) {
        this.nodeNumber = $.nodeNumber;
        this.serverNodes = $.serverNodes;
        this.shardId = $.shardId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceInstanceShardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceInstanceShardArgs $;

        public Builder() {
            $ = new InstanceInstanceShardArgs();
        }

        public Builder(InstanceInstanceShardArgs defaults) {
            $ = new InstanceInstanceShardArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodeNumber 分片中的节点数量
         * 
         * @return builder
         * 
         */
        public Builder nodeNumber(@Nullable Output<Integer> nodeNumber) {
            $.nodeNumber = nodeNumber;
            return this;
        }

        /**
         * @param nodeNumber 分片中的节点数量
         * 
         * @return builder
         * 
         */
        public Builder nodeNumber(Integer nodeNumber) {
            return nodeNumber(Output.of(nodeNumber));
        }

        public Builder serverNodes(@Nullable Output<List<InstanceInstanceShardServerNodeArgs>> serverNodes) {
            $.serverNodes = serverNodes;
            return this;
        }

        public Builder serverNodes(List<InstanceInstanceShardServerNodeArgs> serverNodes) {
            return serverNodes(Output.of(serverNodes));
        }

        public Builder serverNodes(InstanceInstanceShardServerNodeArgs... serverNodes) {
            return serverNodes(List.of(serverNodes));
        }

        /**
         * @param shardId 分片 ID。
         * 
         * @return builder
         * 
         */
        public Builder shardId(@Nullable Output<String> shardId) {
            $.shardId = shardId;
            return this;
        }

        /**
         * @param shardId 分片 ID。
         * 
         * @return builder
         * 
         */
        public Builder shardId(String shardId) {
            return shardId(Output.of(shardId));
        }

        public InstanceInstanceShardArgs build() {
            return $;
        }
    }

}
