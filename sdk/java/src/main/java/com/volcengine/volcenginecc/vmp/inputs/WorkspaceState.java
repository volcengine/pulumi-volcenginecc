// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vmp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.vmp.inputs.WorkspaceInstanceTypeArgs;
import com.volcengine.volcenginecc.vmp.inputs.WorkspaceQuotaArgs;
import com.volcengine.volcenginecc.vmp.inputs.WorkspaceTagArgs;
import com.volcengine.volcenginecc.vmp.inputs.WorkspaceUsageArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkspaceState extends com.pulumi.resources.ResourceArgs {

    public static final WorkspaceState Empty = new WorkspaceState();

    /**
     * 工作区创建时间，RFC3339 格式。
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return 工作区创建时间，RFC3339 格式。
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * 是否开启工作区删除保护,true：开启，false：关闭。
     * 
     */
    @Import(name="deleteProtectionEnabled")
    private @Nullable Output<Boolean> deleteProtectionEnabled;

    /**
     * @return 是否开启工作区删除保护,true：开启，false：关闭。
     * 
     */
    public Optional<Output<Boolean>> deleteProtectionEnabled() {
        return Optional.ofNullable(this.deleteProtectionEnabled);
    }

    /**
     * 工作区描述信息，字符串形式，长度限制为 0～200。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 工作区描述信息，字符串形式，长度限制为 0～200。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 工作区规格详情。
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<WorkspaceInstanceTypeArgs> instanceType;

    /**
     * @return 工作区规格详情。
     * 
     */
    public Optional<Output<WorkspaceInstanceTypeArgs>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
     * 
     */
    @Import(name="instanceTypeId")
    private @Nullable Output<String> instanceTypeId;

    /**
     * @return 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
     * 
     */
    public Optional<Output<String>> instanceTypeId() {
        return Optional.ofNullable(this.instanceTypeId);
    }

    /**
     * 工作区名称，字符串形式，长度限制为 1～100。
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return 工作区名称，字符串形式，长度限制为 1～100。
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * 工作区预期欠费回收时间，RFC3339 格式。
     * 
     */
    @Import(name="overdueReclaimTime")
    private @Nullable Output<String> overdueReclaimTime;

    /**
     * @return 工作区预期欠费回收时间，RFC3339 格式。
     * 
     */
    public Optional<Output<String>> overdueReclaimTime() {
        return Optional.ofNullable(this.overdueReclaimTime);
    }

    /**
     * 工作区 BasicAuth 密码。
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return 工作区 BasicAuth 密码。
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * 项目名称。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 项目名称。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 工作区 Push Gateway URL 地址。
     * 
     */
    @Import(name="prometheusPushIntranetEndpoint")
    private @Nullable Output<String> prometheusPushIntranetEndpoint;

    /**
     * @return 工作区 Push Gateway URL 地址。
     * 
     */
    public Optional<Output<String>> prometheusPushIntranetEndpoint() {
        return Optional.ofNullable(this.prometheusPushIntranetEndpoint);
    }

    /**
     * 工作区 Query URL 地址。
     * 
     */
    @Import(name="prometheusQueryIntranetEndpoint")
    private @Nullable Output<String> prometheusQueryIntranetEndpoint;

    /**
     * @return 工作区 Query URL 地址。
     * 
     */
    public Optional<Output<String>> prometheusQueryIntranetEndpoint() {
        return Optional.ofNullable(this.prometheusQueryIntranetEndpoint);
    }

    /**
     * 工作区 RemoteWrite URL 地址。
     * 
     */
    @Import(name="prometheusWriteIntranetEndpoint")
    private @Nullable Output<String> prometheusWriteIntranetEndpoint;

    /**
     * @return 工作区 RemoteWrite URL 地址。
     * 
     */
    public Optional<Output<String>> prometheusWriteIntranetEndpoint() {
        return Optional.ofNullable(this.prometheusWriteIntranetEndpoint);
    }

    /**
     * 工作区配额详情。
     * 
     */
    @Import(name="quota")
    private @Nullable Output<WorkspaceQuotaArgs> quota;

    /**
     * @return 工作区配额详情。
     * 
     */
    public Optional<Output<WorkspaceQuotaArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="tags")
    private @Nullable Output<List<WorkspaceTagArgs>> tags;

    public Optional<Output<List<WorkspaceTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 工作区用量。
     * 
     */
    @Import(name="usage")
    private @Nullable Output<WorkspaceUsageArgs> usage;

    /**
     * @return 工作区用量。
     * 
     */
    public Optional<Output<WorkspaceUsageArgs>> usage() {
        return Optional.ofNullable(this.usage);
    }

    /**
     * 工作区 BasicAuth 用户名。
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return 工作区 BasicAuth 用户名。
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    /**
     * 工作区Id。
     * 
     */
    @Import(name="workspaceId")
    private @Nullable Output<String> workspaceId;

    /**
     * @return 工作区Id。
     * 
     */
    public Optional<Output<String>> workspaceId() {
        return Optional.ofNullable(this.workspaceId);
    }

    private WorkspaceState() {}

    private WorkspaceState(WorkspaceState $) {
        this.createTime = $.createTime;
        this.deleteProtectionEnabled = $.deleteProtectionEnabled;
        this.description = $.description;
        this.instanceType = $.instanceType;
        this.instanceTypeId = $.instanceTypeId;
        this.name = $.name;
        this.overdueReclaimTime = $.overdueReclaimTime;
        this.password = $.password;
        this.projectName = $.projectName;
        this.prometheusPushIntranetEndpoint = $.prometheusPushIntranetEndpoint;
        this.prometheusQueryIntranetEndpoint = $.prometheusQueryIntranetEndpoint;
        this.prometheusWriteIntranetEndpoint = $.prometheusWriteIntranetEndpoint;
        this.quota = $.quota;
        this.status = $.status;
        this.tags = $.tags;
        this.usage = $.usage;
        this.username = $.username;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkspaceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkspaceState $;

        public Builder() {
            $ = new WorkspaceState();
        }

        public Builder(WorkspaceState defaults) {
            $ = new WorkspaceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createTime 工作区创建时间，RFC3339 格式。
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime 工作区创建时间，RFC3339 格式。
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param deleteProtectionEnabled 是否开启工作区删除保护,true：开启，false：关闭。
         * 
         * @return builder
         * 
         */
        public Builder deleteProtectionEnabled(@Nullable Output<Boolean> deleteProtectionEnabled) {
            $.deleteProtectionEnabled = deleteProtectionEnabled;
            return this;
        }

        /**
         * @param deleteProtectionEnabled 是否开启工作区删除保护,true：开启，false：关闭。
         * 
         * @return builder
         * 
         */
        public Builder deleteProtectionEnabled(Boolean deleteProtectionEnabled) {
            return deleteProtectionEnabled(Output.of(deleteProtectionEnabled));
        }

        /**
         * @param description 工作区描述信息，字符串形式，长度限制为 0～200。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 工作区描述信息，字符串形式，长度限制为 0～200。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instanceType 工作区规格详情。
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<WorkspaceInstanceTypeArgs> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType 工作区规格详情。
         * 
         * @return builder
         * 
         */
        public Builder instanceType(WorkspaceInstanceTypeArgs instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param instanceTypeId 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypeId(@Nullable Output<String> instanceTypeId) {
            $.instanceTypeId = instanceTypeId;
            return this;
        }

        /**
         * @param instanceTypeId 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
         * 
         * @return builder
         * 
         */
        public Builder instanceTypeId(String instanceTypeId) {
            return instanceTypeId(Output.of(instanceTypeId));
        }

        /**
         * @param name 工作区名称，字符串形式，长度限制为 1～100。
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name 工作区名称，字符串形式，长度限制为 1～100。
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param overdueReclaimTime 工作区预期欠费回收时间，RFC3339 格式。
         * 
         * @return builder
         * 
         */
        public Builder overdueReclaimTime(@Nullable Output<String> overdueReclaimTime) {
            $.overdueReclaimTime = overdueReclaimTime;
            return this;
        }

        /**
         * @param overdueReclaimTime 工作区预期欠费回收时间，RFC3339 格式。
         * 
         * @return builder
         * 
         */
        public Builder overdueReclaimTime(String overdueReclaimTime) {
            return overdueReclaimTime(Output.of(overdueReclaimTime));
        }

        /**
         * @param password 工作区 BasicAuth 密码。
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password 工作区 BasicAuth 密码。
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param projectName 项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 项目名称。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param prometheusPushIntranetEndpoint 工作区 Push Gateway URL 地址。
         * 
         * @return builder
         * 
         */
        public Builder prometheusPushIntranetEndpoint(@Nullable Output<String> prometheusPushIntranetEndpoint) {
            $.prometheusPushIntranetEndpoint = prometheusPushIntranetEndpoint;
            return this;
        }

        /**
         * @param prometheusPushIntranetEndpoint 工作区 Push Gateway URL 地址。
         * 
         * @return builder
         * 
         */
        public Builder prometheusPushIntranetEndpoint(String prometheusPushIntranetEndpoint) {
            return prometheusPushIntranetEndpoint(Output.of(prometheusPushIntranetEndpoint));
        }

        /**
         * @param prometheusQueryIntranetEndpoint 工作区 Query URL 地址。
         * 
         * @return builder
         * 
         */
        public Builder prometheusQueryIntranetEndpoint(@Nullable Output<String> prometheusQueryIntranetEndpoint) {
            $.prometheusQueryIntranetEndpoint = prometheusQueryIntranetEndpoint;
            return this;
        }

        /**
         * @param prometheusQueryIntranetEndpoint 工作区 Query URL 地址。
         * 
         * @return builder
         * 
         */
        public Builder prometheusQueryIntranetEndpoint(String prometheusQueryIntranetEndpoint) {
            return prometheusQueryIntranetEndpoint(Output.of(prometheusQueryIntranetEndpoint));
        }

        /**
         * @param prometheusWriteIntranetEndpoint 工作区 RemoteWrite URL 地址。
         * 
         * @return builder
         * 
         */
        public Builder prometheusWriteIntranetEndpoint(@Nullable Output<String> prometheusWriteIntranetEndpoint) {
            $.prometheusWriteIntranetEndpoint = prometheusWriteIntranetEndpoint;
            return this;
        }

        /**
         * @param prometheusWriteIntranetEndpoint 工作区 RemoteWrite URL 地址。
         * 
         * @return builder
         * 
         */
        public Builder prometheusWriteIntranetEndpoint(String prometheusWriteIntranetEndpoint) {
            return prometheusWriteIntranetEndpoint(Output.of(prometheusWriteIntranetEndpoint));
        }

        /**
         * @param quota 工作区配额详情。
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<WorkspaceQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota 工作区配额详情。
         * 
         * @return builder
         * 
         */
        public Builder quota(WorkspaceQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param status 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder tags(@Nullable Output<List<WorkspaceTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<WorkspaceTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(WorkspaceTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param usage 工作区用量。
         * 
         * @return builder
         * 
         */
        public Builder usage(@Nullable Output<WorkspaceUsageArgs> usage) {
            $.usage = usage;
            return this;
        }

        /**
         * @param usage 工作区用量。
         * 
         * @return builder
         * 
         */
        public Builder usage(WorkspaceUsageArgs usage) {
            return usage(Output.of(usage));
        }

        /**
         * @param username 工作区 BasicAuth 用户名。
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username 工作区 BasicAuth 用户名。
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        /**
         * @param workspaceId 工作区Id。
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(@Nullable Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId 工作区Id。
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public WorkspaceState build() {
            return $;
        }
    }

}
