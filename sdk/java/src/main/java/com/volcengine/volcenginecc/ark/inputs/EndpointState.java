// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ark.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.volcengine.volcenginecc.ark.inputs.EndpointCertificateArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointModelReferenceArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointModerationArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointRateLimitArgs;
import com.volcengine.volcenginecc.ark.inputs.EndpointTagArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EndpointState extends com.pulumi.resources.ResourceArgs {

    public static final EndpointState Empty = new EndpointState();

    /**
     * 是否只支持 BatchChat。如果为true，只能访问 Batch 推理接口，否则只能访问在线推理接口。
     * 
     */
    @Import(name="batchOnly")
    private @Nullable Output<Boolean> batchOnly;

    /**
     * @return 是否只支持 BatchChat。如果为true，只能访问 Batch 推理接口，否则只能访问在线推理接口。
     * 
     */
    public Optional<Output<Boolean>> batchOnly() {
        return Optional.ofNullable(this.batchOnly);
    }

    /**
     * 证书信息。
     * 
     */
    @Import(name="certificate")
    private @Nullable Output<EndpointCertificateArgs> certificate;

    /**
     * @return 证书信息。
     * 
     */
    public Optional<Output<EndpointCertificateArgs>> certificate() {
        return Optional.ofNullable(this.certificate);
    }

    /**
     * 接入点创建时间，RFC3339格式。
     * 
     */
    @Import(name="createTime")
    private @Nullable Output<String> createTime;

    /**
     * @return 接入点创建时间，RFC3339格式。
     * 
     */
    public Optional<Output<String>> createTime() {
        return Optional.ofNullable(this.createTime);
    }

    /**
     * 接入点描述。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 接入点描述。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 推理接入点的ID。
     * 
     */
    @Import(name="endpointId")
    private @Nullable Output<String> endpointId;

    /**
     * @return 推理接入点的ID。
     * 
     */
    public Optional<Output<String>> endpointId() {
        return Optional.ofNullable(this.endpointId);
    }

    /**
     * 接入点模型类型。取值:FoundationModel为基础模型;CustomModel为定制模型。
     * 
     */
    @Import(name="endpointModelType")
    private @Nullable Output<String> endpointModelType;

    /**
     * @return 接入点模型类型。取值:FoundationModel为基础模型;CustomModel为定制模型。
     * 
     */
    public Optional<Output<String>> endpointModelType() {
        return Optional.ofNullable(this.endpointModelType);
    }

    /**
     * 接入点接入模型。
     * 
     */
    @Import(name="modelReference")
    private @Nullable Output<EndpointModelReferenceArgs> modelReference;

    /**
     * @return 接入点接入模型。
     * 
     */
    public Optional<Output<EndpointModelReferenceArgs>> modelReference() {
        return Optional.ofNullable(this.modelReference);
    }

    /**
     * 模型单元，为空表示后付费；否则预付费。
     * 
     */
    @Import(name="modelUnitId")
    private @Nullable Output<String> modelUnitId;

    /**
     * @return 模型单元，为空表示后付费；否则预付费。
     * 
     */
    public Optional<Output<String>> modelUnitId() {
        return Optional.ofNullable(this.modelUnitId);
    }

    /**
     * 内容护栏方案。
     * 
     */
    @Import(name="moderation")
    private @Nullable Output<EndpointModerationArgs> moderation;

    /**
     * @return 内容护栏方案。
     * 
     */
    public Optional<Output<EndpointModerationArgs>> moderation() {
        return Optional.ofNullable(this.moderation);
    }

    /**
     * 接入点名称。
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return 接入点名称。
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * 资源所属的项目名称，默认值为default。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 资源所属的项目名称，默认值为default。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    /**
     * 接入点限流。
     * 
     */
    @Import(name="rateLimit")
    private @Nullable Output<EndpointRateLimitArgs> rateLimit;

    /**
     * @return 接入点限流。
     * 
     */
    public Optional<Output<EndpointRateLimitArgs>> rateLimit() {
        return Optional.ofNullable(this.rateLimit);
    }

    /**
     * 接入点切换的Id。
     * 
     */
    @Import(name="rollingId")
    private @Nullable Output<String> rollingId;

    /**
     * @return 接入点切换的Id。
     * 
     */
    public Optional<Output<String>> rollingId() {
        return Optional.ofNullable(this.rollingId);
    }

    /**
     * 如果存在 TPM 保障包，则为 TPM 保障包 ID。
     * 
     */
    @Import(name="scaleTierId")
    private @Nullable Output<String> scaleTierId;

    /**
     * @return 如果存在 TPM 保障包，则为 TPM 保障包 ID。
     * 
     */
    public Optional<Output<String>> scaleTierId() {
        return Optional.ofNullable(this.scaleTierId);
    }

    /**
     * 接入点状态。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 接入点状态。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * 状态附加说明信息。
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return 状态附加说明信息。
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * 是否支持接入点切换模型版本。
     * 
     */
    @Import(name="supportRolling")
    private @Nullable Output<Boolean> supportRolling;

    /**
     * @return 是否支持接入点切换模型版本。
     * 
     */
    public Optional<Output<Boolean>> supportRolling() {
        return Optional.ofNullable(this.supportRolling);
    }

    /**
     * 是否支持TPM保障包。
     * 
     */
    @Import(name="supportScaleTier")
    private @Nullable Output<Boolean> supportScaleTier;

    /**
     * @return 是否支持TPM保障包。
     * 
     */
    public Optional<Output<Boolean>> supportScaleTier() {
        return Optional.ofNullable(this.supportScaleTier);
    }

    @Import(name="tags")
    private @Nullable Output<List<EndpointTagArgs>> tags;

    public Optional<Output<List<EndpointTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * 接入点更新时间，RFC3339格式。
     * 
     */
    @Import(name="updateTime")
    private @Nullable Output<String> updateTime;

    /**
     * @return 接入点更新时间，RFC3339格式。
     * 
     */
    public Optional<Output<String>> updateTime() {
        return Optional.ofNullable(this.updateTime);
    }

    private EndpointState() {}

    private EndpointState(EndpointState $) {
        this.batchOnly = $.batchOnly;
        this.certificate = $.certificate;
        this.createTime = $.createTime;
        this.description = $.description;
        this.endpointId = $.endpointId;
        this.endpointModelType = $.endpointModelType;
        this.modelReference = $.modelReference;
        this.modelUnitId = $.modelUnitId;
        this.moderation = $.moderation;
        this.name = $.name;
        this.projectName = $.projectName;
        this.rateLimit = $.rateLimit;
        this.rollingId = $.rollingId;
        this.scaleTierId = $.scaleTierId;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.supportRolling = $.supportRolling;
        this.supportScaleTier = $.supportScaleTier;
        this.tags = $.tags;
        this.updateTime = $.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EndpointState $;

        public Builder() {
            $ = new EndpointState();
        }

        public Builder(EndpointState defaults) {
            $ = new EndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param batchOnly 是否只支持 BatchChat。如果为true，只能访问 Batch 推理接口，否则只能访问在线推理接口。
         * 
         * @return builder
         * 
         */
        public Builder batchOnly(@Nullable Output<Boolean> batchOnly) {
            $.batchOnly = batchOnly;
            return this;
        }

        /**
         * @param batchOnly 是否只支持 BatchChat。如果为true，只能访问 Batch 推理接口，否则只能访问在线推理接口。
         * 
         * @return builder
         * 
         */
        public Builder batchOnly(Boolean batchOnly) {
            return batchOnly(Output.of(batchOnly));
        }

        /**
         * @param certificate 证书信息。
         * 
         * @return builder
         * 
         */
        public Builder certificate(@Nullable Output<EndpointCertificateArgs> certificate) {
            $.certificate = certificate;
            return this;
        }

        /**
         * @param certificate 证书信息。
         * 
         * @return builder
         * 
         */
        public Builder certificate(EndpointCertificateArgs certificate) {
            return certificate(Output.of(certificate));
        }

        /**
         * @param createTime 接入点创建时间，RFC3339格式。
         * 
         * @return builder
         * 
         */
        public Builder createTime(@Nullable Output<String> createTime) {
            $.createTime = createTime;
            return this;
        }

        /**
         * @param createTime 接入点创建时间，RFC3339格式。
         * 
         * @return builder
         * 
         */
        public Builder createTime(String createTime) {
            return createTime(Output.of(createTime));
        }

        /**
         * @param description 接入点描述。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 接入点描述。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param endpointId 推理接入点的ID。
         * 
         * @return builder
         * 
         */
        public Builder endpointId(@Nullable Output<String> endpointId) {
            $.endpointId = endpointId;
            return this;
        }

        /**
         * @param endpointId 推理接入点的ID。
         * 
         * @return builder
         * 
         */
        public Builder endpointId(String endpointId) {
            return endpointId(Output.of(endpointId));
        }

        /**
         * @param endpointModelType 接入点模型类型。取值:FoundationModel为基础模型;CustomModel为定制模型。
         * 
         * @return builder
         * 
         */
        public Builder endpointModelType(@Nullable Output<String> endpointModelType) {
            $.endpointModelType = endpointModelType;
            return this;
        }

        /**
         * @param endpointModelType 接入点模型类型。取值:FoundationModel为基础模型;CustomModel为定制模型。
         * 
         * @return builder
         * 
         */
        public Builder endpointModelType(String endpointModelType) {
            return endpointModelType(Output.of(endpointModelType));
        }

        /**
         * @param modelReference 接入点接入模型。
         * 
         * @return builder
         * 
         */
        public Builder modelReference(@Nullable Output<EndpointModelReferenceArgs> modelReference) {
            $.modelReference = modelReference;
            return this;
        }

        /**
         * @param modelReference 接入点接入模型。
         * 
         * @return builder
         * 
         */
        public Builder modelReference(EndpointModelReferenceArgs modelReference) {
            return modelReference(Output.of(modelReference));
        }

        /**
         * @param modelUnitId 模型单元，为空表示后付费；否则预付费。
         * 
         * @return builder
         * 
         */
        public Builder modelUnitId(@Nullable Output<String> modelUnitId) {
            $.modelUnitId = modelUnitId;
            return this;
        }

        /**
         * @param modelUnitId 模型单元，为空表示后付费；否则预付费。
         * 
         * @return builder
         * 
         */
        public Builder modelUnitId(String modelUnitId) {
            return modelUnitId(Output.of(modelUnitId));
        }

        /**
         * @param moderation 内容护栏方案。
         * 
         * @return builder
         * 
         */
        public Builder moderation(@Nullable Output<EndpointModerationArgs> moderation) {
            $.moderation = moderation;
            return this;
        }

        /**
         * @param moderation 内容护栏方案。
         * 
         * @return builder
         * 
         */
        public Builder moderation(EndpointModerationArgs moderation) {
            return moderation(Output.of(moderation));
        }

        /**
         * @param name 接入点名称。
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name 接入点名称。
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectName 资源所属的项目名称，默认值为default。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 资源所属的项目名称，默认值为default。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        /**
         * @param rateLimit 接入点限流。
         * 
         * @return builder
         * 
         */
        public Builder rateLimit(@Nullable Output<EndpointRateLimitArgs> rateLimit) {
            $.rateLimit = rateLimit;
            return this;
        }

        /**
         * @param rateLimit 接入点限流。
         * 
         * @return builder
         * 
         */
        public Builder rateLimit(EndpointRateLimitArgs rateLimit) {
            return rateLimit(Output.of(rateLimit));
        }

        /**
         * @param rollingId 接入点切换的Id。
         * 
         * @return builder
         * 
         */
        public Builder rollingId(@Nullable Output<String> rollingId) {
            $.rollingId = rollingId;
            return this;
        }

        /**
         * @param rollingId 接入点切换的Id。
         * 
         * @return builder
         * 
         */
        public Builder rollingId(String rollingId) {
            return rollingId(Output.of(rollingId));
        }

        /**
         * @param scaleTierId 如果存在 TPM 保障包，则为 TPM 保障包 ID。
         * 
         * @return builder
         * 
         */
        public Builder scaleTierId(@Nullable Output<String> scaleTierId) {
            $.scaleTierId = scaleTierId;
            return this;
        }

        /**
         * @param scaleTierId 如果存在 TPM 保障包，则为 TPM 保障包 ID。
         * 
         * @return builder
         * 
         */
        public Builder scaleTierId(String scaleTierId) {
            return scaleTierId(Output.of(scaleTierId));
        }

        /**
         * @param status 接入点状态。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 接入点状态。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason 状态附加说明信息。
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason 状态附加说明信息。
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param supportRolling 是否支持接入点切换模型版本。
         * 
         * @return builder
         * 
         */
        public Builder supportRolling(@Nullable Output<Boolean> supportRolling) {
            $.supportRolling = supportRolling;
            return this;
        }

        /**
         * @param supportRolling 是否支持接入点切换模型版本。
         * 
         * @return builder
         * 
         */
        public Builder supportRolling(Boolean supportRolling) {
            return supportRolling(Output.of(supportRolling));
        }

        /**
         * @param supportScaleTier 是否支持TPM保障包。
         * 
         * @return builder
         * 
         */
        public Builder supportScaleTier(@Nullable Output<Boolean> supportScaleTier) {
            $.supportScaleTier = supportScaleTier;
            return this;
        }

        /**
         * @param supportScaleTier 是否支持TPM保障包。
         * 
         * @return builder
         * 
         */
        public Builder supportScaleTier(Boolean supportScaleTier) {
            return supportScaleTier(Output.of(supportScaleTier));
        }

        public Builder tags(@Nullable Output<List<EndpointTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<EndpointTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(EndpointTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updateTime 接入点更新时间，RFC3339格式。
         * 
         * @return builder
         * 
         */
        public Builder updateTime(@Nullable Output<String> updateTime) {
            $.updateTime = updateTime;
            return this;
        }

        /**
         * @param updateTime 接入点更新时间，RFC3339格式。
         * 
         * @return builder
         * 
         */
        public Builder updateTime(String updateTime) {
            return updateTime(Output.of(updateTime));
        }

        public EndpointState build() {
            return $;
        }
    }

}
