// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class InstanceCpuMemory {
    /**
     * @return 实例的核数。
     * 
     */
    private @Nullable Integer coreCount;
    /**
     * @return 实例的CPU数量。
     * 
     */
    private @Nullable Integer cpuNumber;
    /**
     * @return 实例的内存大小，单位MB。
     * 
     */
    private @Nullable Integer memorySize;
    /**
     * @return 实例的每核线程数。
     * 
     */
    private @Nullable Integer threadsPerCore;

    private InstanceCpuMemory() {}
    /**
     * @return 实例的核数。
     * 
     */
    public Optional<Integer> coreCount() {
        return Optional.ofNullable(this.coreCount);
    }
    /**
     * @return 实例的CPU数量。
     * 
     */
    public Optional<Integer> cpuNumber() {
        return Optional.ofNullable(this.cpuNumber);
    }
    /**
     * @return 实例的内存大小，单位MB。
     * 
     */
    public Optional<Integer> memorySize() {
        return Optional.ofNullable(this.memorySize);
    }
    /**
     * @return 实例的每核线程数。
     * 
     */
    public Optional<Integer> threadsPerCore() {
        return Optional.ofNullable(this.threadsPerCore);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceCpuMemory defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer coreCount;
        private @Nullable Integer cpuNumber;
        private @Nullable Integer memorySize;
        private @Nullable Integer threadsPerCore;
        public Builder() {}
        public Builder(InstanceCpuMemory defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coreCount = defaults.coreCount;
    	      this.cpuNumber = defaults.cpuNumber;
    	      this.memorySize = defaults.memorySize;
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        @CustomType.Setter
        public Builder coreCount(@Nullable Integer coreCount) {

            this.coreCount = coreCount;
            return this;
        }
        @CustomType.Setter
        public Builder cpuNumber(@Nullable Integer cpuNumber) {

            this.cpuNumber = cpuNumber;
            return this;
        }
        @CustomType.Setter
        public Builder memorySize(@Nullable Integer memorySize) {

            this.memorySize = memorySize;
            return this;
        }
        @CustomType.Setter
        public Builder threadsPerCore(@Nullable Integer threadsPerCore) {

            this.threadsPerCore = threadsPerCore;
            return this;
        }
        public InstanceCpuMemory build() {
            final var _resultValue = new InstanceCpuMemory();
            _resultValue.coreCount = coreCount;
            _resultValue.cpuNumber = cpuNumber;
            _resultValue.memorySize = memorySize;
            _resultValue.threadsPerCore = threadsPerCore;
            return _resultValue;
        }
    }
}
