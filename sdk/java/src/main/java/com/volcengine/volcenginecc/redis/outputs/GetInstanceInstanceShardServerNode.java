// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceInstanceShardServerNode {
    /**
     * @return 节点当前的角色。取值范围如下：PrimaryNode：主节点。SecondaryNode：从节点。
     * 
     */
    private String currentRole;
    /**
     * @return 节点 ID。
     * 
     */
    private String nodeId;
    /**
     * @return 节点状态。取值范围如下：deploy：启动中。running：运行中。loading：数据加载中。error：错误。
     * 
     */
    private String status;
    /**
     * @return 节点所在的可用区。
     * 
     */
    private String zoneId;

    private GetInstanceInstanceShardServerNode() {}
    /**
     * @return 节点当前的角色。取值范围如下：PrimaryNode：主节点。SecondaryNode：从节点。
     * 
     */
    public String currentRole() {
        return this.currentRole;
    }
    /**
     * @return 节点 ID。
     * 
     */
    public String nodeId() {
        return this.nodeId;
    }
    /**
     * @return 节点状态。取值范围如下：deploy：启动中。running：运行中。loading：数据加载中。error：错误。
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 节点所在的可用区。
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceInstanceShardServerNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currentRole;
        private String nodeId;
        private String status;
        private String zoneId;
        public Builder() {}
        public Builder(GetInstanceInstanceShardServerNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentRole = defaults.currentRole;
    	      this.nodeId = defaults.nodeId;
    	      this.status = defaults.status;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder currentRole(String currentRole) {
            if (currentRole == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShardServerNode", "currentRole");
            }
            this.currentRole = currentRole;
            return this;
        }
        @CustomType.Setter
        public Builder nodeId(String nodeId) {
            if (nodeId == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShardServerNode", "nodeId");
            }
            this.nodeId = nodeId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShardServerNode", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetInstanceInstanceShardServerNode", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetInstanceInstanceShardServerNode build() {
            final var _resultValue = new GetInstanceInstanceShardServerNode();
            _resultValue.currentRole = currentRole;
            _resultValue.nodeId = nodeId;
            _resultValue.status = status;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
