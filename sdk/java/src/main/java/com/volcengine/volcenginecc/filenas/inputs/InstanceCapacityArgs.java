// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.filenas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceCapacityArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceCapacityArgs Empty = new InstanceCapacityArgs();

    /**
     * 文件系统可用总容量，单位为 GiB。
     * 
     */
    @Import(name="total")
    private @Nullable Output<Double> total;

    /**
     * @return 文件系统可用总容量，单位为 GiB。
     * 
     */
    public Optional<Output<Double>> total() {
        return Optional.ofNullable(this.total);
    }

    /**
     * 文件系统已使用容量，单位为 MiB。
     * 
     */
    @Import(name="used")
    private @Nullable Output<Double> used;

    /**
     * @return 文件系统已使用容量，单位为 MiB。
     * 
     */
    public Optional<Output<Double>> used() {
        return Optional.ofNullable(this.used);
    }

    private InstanceCapacityArgs() {}

    private InstanceCapacityArgs(InstanceCapacityArgs $) {
        this.total = $.total;
        this.used = $.used;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceCapacityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceCapacityArgs $;

        public Builder() {
            $ = new InstanceCapacityArgs();
        }

        public Builder(InstanceCapacityArgs defaults) {
            $ = new InstanceCapacityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param total 文件系统可用总容量，单位为 GiB。
         * 
         * @return builder
         * 
         */
        public Builder total(@Nullable Output<Double> total) {
            $.total = total;
            return this;
        }

        /**
         * @param total 文件系统可用总容量，单位为 GiB。
         * 
         * @return builder
         * 
         */
        public Builder total(Double total) {
            return total(Output.of(total));
        }

        /**
         * @param used 文件系统已使用容量，单位为 MiB。
         * 
         * @return builder
         * 
         */
        public Builder used(@Nullable Output<Double> used) {
            $.used = used;
            return this;
        }

        /**
         * @param used 文件系统已使用容量，单位为 MiB。
         * 
         * @return builder
         * 
         */
        public Builder used(Double used) {
            return used(Output.of(used));
        }

        public InstanceCapacityArgs build() {
            return $;
        }
    }

}
