// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RouteTableSystemRouteEntry {
    /**
     * @return 路由条目描述。
     * 
     */
    private @Nullable String description;
    /**
     * @return 路由条目的目标网段。
     * 
     */
    private @Nullable String destinationCidrBlock;
    /**
     * @return 前缀列表ID。
     * 
     */
    private @Nullable String destinationPrefixListId;
    /**
     * @return 下一跳资源ID。
     * 
     */
    private @Nullable String nextHopId;
    /**
     * @return 路由条目下一跳资源的名称。
     * 
     */
    private @Nullable String nextHopName;
    /**
     * @return 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    private @Nullable String nextHopType;
    /**
     * @return 前缀列表的CIDR。
     * 
     */
    private @Nullable List<String> prefixListCidrBlocks;
    /**
     * @return 路由条目ID。
     * 
     */
    private @Nullable String routeEntryId;
    /**
     * @return 路由条目名称。
     * 
     */
    private @Nullable String routeEntryName;
    /**
     * @return 路由表ID。
     * 
     */
    private @Nullable String routeTableId;
    /**
     * @return 路由条目状态。1、Pending：待创建。2、Available：可用。
     * 
     */
    private @Nullable String status;
    /**
     * @return 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
     * 
     */
    private @Nullable String type;
    /**
     * @return 路由条目所属私有网络的ID。
     * 
     */
    private @Nullable String vpcId;

    private RouteTableSystemRouteEntry() {}
    /**
     * @return 路由条目描述。
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return 路由条目的目标网段。
     * 
     */
    public Optional<String> destinationCidrBlock() {
        return Optional.ofNullable(this.destinationCidrBlock);
    }
    /**
     * @return 前缀列表ID。
     * 
     */
    public Optional<String> destinationPrefixListId() {
        return Optional.ofNullable(this.destinationPrefixListId);
    }
    /**
     * @return 下一跳资源ID。
     * 
     */
    public Optional<String> nextHopId() {
        return Optional.ofNullable(this.nextHopId);
    }
    /**
     * @return 路由条目下一跳资源的名称。
     * 
     */
    public Optional<String> nextHopName() {
        return Optional.ofNullable(this.nextHopName);
    }
    /**
     * @return 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    public Optional<String> nextHopType() {
        return Optional.ofNullable(this.nextHopType);
    }
    /**
     * @return 前缀列表的CIDR。
     * 
     */
    public List<String> prefixListCidrBlocks() {
        return this.prefixListCidrBlocks == null ? List.of() : this.prefixListCidrBlocks;
    }
    /**
     * @return 路由条目ID。
     * 
     */
    public Optional<String> routeEntryId() {
        return Optional.ofNullable(this.routeEntryId);
    }
    /**
     * @return 路由条目名称。
     * 
     */
    public Optional<String> routeEntryName() {
        return Optional.ofNullable(this.routeEntryName);
    }
    /**
     * @return 路由表ID。
     * 
     */
    public Optional<String> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }
    /**
     * @return 路由条目状态。1、Pending：待创建。2、Available：可用。
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return 路由条目所属私有网络的ID。
     * 
     */
    public Optional<String> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteTableSystemRouteEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String destinationCidrBlock;
        private @Nullable String destinationPrefixListId;
        private @Nullable String nextHopId;
        private @Nullable String nextHopName;
        private @Nullable String nextHopType;
        private @Nullable List<String> prefixListCidrBlocks;
        private @Nullable String routeEntryId;
        private @Nullable String routeEntryName;
        private @Nullable String routeTableId;
        private @Nullable String status;
        private @Nullable String type;
        private @Nullable String vpcId;
        public Builder() {}
        public Builder(RouteTableSystemRouteEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destinationCidrBlock = defaults.destinationCidrBlock;
    	      this.destinationPrefixListId = defaults.destinationPrefixListId;
    	      this.nextHopId = defaults.nextHopId;
    	      this.nextHopName = defaults.nextHopName;
    	      this.nextHopType = defaults.nextHopType;
    	      this.prefixListCidrBlocks = defaults.prefixListCidrBlocks;
    	      this.routeEntryId = defaults.routeEntryId;
    	      this.routeEntryName = defaults.routeEntryName;
    	      this.routeTableId = defaults.routeTableId;
    	      this.status = defaults.status;
    	      this.type = defaults.type;
    	      this.vpcId = defaults.vpcId;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinationCidrBlock(@Nullable String destinationCidrBlock) {

            this.destinationCidrBlock = destinationCidrBlock;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPrefixListId(@Nullable String destinationPrefixListId) {

            this.destinationPrefixListId = destinationPrefixListId;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopId(@Nullable String nextHopId) {

            this.nextHopId = nextHopId;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopName(@Nullable String nextHopName) {

            this.nextHopName = nextHopName;
            return this;
        }
        @CustomType.Setter
        public Builder nextHopType(@Nullable String nextHopType) {

            this.nextHopType = nextHopType;
            return this;
        }
        @CustomType.Setter
        public Builder prefixListCidrBlocks(@Nullable List<String> prefixListCidrBlocks) {

            this.prefixListCidrBlocks = prefixListCidrBlocks;
            return this;
        }
        public Builder prefixListCidrBlocks(String... prefixListCidrBlocks) {
            return prefixListCidrBlocks(List.of(prefixListCidrBlocks));
        }
        @CustomType.Setter
        public Builder routeEntryId(@Nullable String routeEntryId) {

            this.routeEntryId = routeEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder routeEntryName(@Nullable String routeEntryName) {

            this.routeEntryName = routeEntryName;
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(@Nullable String routeTableId) {

            this.routeTableId = routeTableId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(@Nullable String vpcId) {

            this.vpcId = vpcId;
            return this;
        }
        public RouteTableSystemRouteEntry build() {
            final var _resultValue = new RouteTableSystemRouteEntry();
            _resultValue.description = description;
            _resultValue.destinationCidrBlock = destinationCidrBlock;
            _resultValue.destinationPrefixListId = destinationPrefixListId;
            _resultValue.nextHopId = nextHopId;
            _resultValue.nextHopName = nextHopName;
            _resultValue.nextHopType = nextHopType;
            _resultValue.prefixListCidrBlocks = prefixListCidrBlocks;
            _resultValue.routeEntryId = routeEntryId;
            _resultValue.routeEntryName = routeEntryName;
            _resultValue.routeTableId = routeTableId;
            _resultValue.status = status;
            _resultValue.type = type;
            _resultValue.vpcId = vpcId;
            return _resultValue;
        }
    }
}
