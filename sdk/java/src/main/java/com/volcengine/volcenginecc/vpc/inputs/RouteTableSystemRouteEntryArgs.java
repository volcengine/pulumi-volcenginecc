// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteTableSystemRouteEntryArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteTableSystemRouteEntryArgs Empty = new RouteTableSystemRouteEntryArgs();

    /**
     * 路由条目描述。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 路由条目描述。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * 路由条目的目标网段。
     * 
     */
    @Import(name="destinationCidrBlock")
    private @Nullable Output<String> destinationCidrBlock;

    /**
     * @return 路由条目的目标网段。
     * 
     */
    public Optional<Output<String>> destinationCidrBlock() {
        return Optional.ofNullable(this.destinationCidrBlock);
    }

    /**
     * 前缀列表ID。
     * 
     */
    @Import(name="destinationPrefixListId")
    private @Nullable Output<String> destinationPrefixListId;

    /**
     * @return 前缀列表ID。
     * 
     */
    public Optional<Output<String>> destinationPrefixListId() {
        return Optional.ofNullable(this.destinationPrefixListId);
    }

    /**
     * 下一跳资源ID。
     * 
     */
    @Import(name="nextHopId")
    private @Nullable Output<String> nextHopId;

    /**
     * @return 下一跳资源ID。
     * 
     */
    public Optional<Output<String>> nextHopId() {
        return Optional.ofNullable(this.nextHopId);
    }

    /**
     * 路由条目下一跳资源的名称。
     * 
     */
    @Import(name="nextHopName")
    private @Nullable Output<String> nextHopName;

    /**
     * @return 路由条目下一跳资源的名称。
     * 
     */
    public Optional<Output<String>> nextHopName() {
        return Optional.ofNullable(this.nextHopName);
    }

    /**
     * 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    @Import(name="nextHopType")
    private @Nullable Output<String> nextHopType;

    /**
     * @return 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
     * 
     */
    public Optional<Output<String>> nextHopType() {
        return Optional.ofNullable(this.nextHopType);
    }

    /**
     * 前缀列表的CIDR。
     * 
     */
    @Import(name="prefixListCidrBlocks")
    private @Nullable Output<List<String>> prefixListCidrBlocks;

    /**
     * @return 前缀列表的CIDR。
     * 
     */
    public Optional<Output<List<String>>> prefixListCidrBlocks() {
        return Optional.ofNullable(this.prefixListCidrBlocks);
    }

    /**
     * 路由条目ID。
     * 
     */
    @Import(name="routeEntryId")
    private @Nullable Output<String> routeEntryId;

    /**
     * @return 路由条目ID。
     * 
     */
    public Optional<Output<String>> routeEntryId() {
        return Optional.ofNullable(this.routeEntryId);
    }

    /**
     * 路由条目名称。
     * 
     */
    @Import(name="routeEntryName")
    private @Nullable Output<String> routeEntryName;

    /**
     * @return 路由条目名称。
     * 
     */
    public Optional<Output<String>> routeEntryName() {
        return Optional.ofNullable(this.routeEntryName);
    }

    /**
     * 路由表ID。
     * 
     */
    @Import(name="routeTableId")
    private @Nullable Output<String> routeTableId;

    /**
     * @return 路由表ID。
     * 
     */
    public Optional<Output<String>> routeTableId() {
        return Optional.ofNullable(this.routeTableId);
    }

    /**
     * 路由条目状态。1、Pending：待创建。2、Available：可用。
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return 路由条目状态。1、Pending：待创建。2、Available：可用。
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * 路由条目所属私有网络的ID。
     * 
     */
    @Import(name="vpcId")
    private @Nullable Output<String> vpcId;

    /**
     * @return 路由条目所属私有网络的ID。
     * 
     */
    public Optional<Output<String>> vpcId() {
        return Optional.ofNullable(this.vpcId);
    }

    private RouteTableSystemRouteEntryArgs() {}

    private RouteTableSystemRouteEntryArgs(RouteTableSystemRouteEntryArgs $) {
        this.description = $.description;
        this.destinationCidrBlock = $.destinationCidrBlock;
        this.destinationPrefixListId = $.destinationPrefixListId;
        this.nextHopId = $.nextHopId;
        this.nextHopName = $.nextHopName;
        this.nextHopType = $.nextHopType;
        this.prefixListCidrBlocks = $.prefixListCidrBlocks;
        this.routeEntryId = $.routeEntryId;
        this.routeEntryName = $.routeEntryName;
        this.routeTableId = $.routeTableId;
        this.status = $.status;
        this.type = $.type;
        this.vpcId = $.vpcId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteTableSystemRouteEntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteTableSystemRouteEntryArgs $;

        public Builder() {
            $ = new RouteTableSystemRouteEntryArgs();
        }

        public Builder(RouteTableSystemRouteEntryArgs defaults) {
            $ = new RouteTableSystemRouteEntryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description 路由条目描述。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 路由条目描述。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationCidrBlock 路由条目的目标网段。
         * 
         * @return builder
         * 
         */
        public Builder destinationCidrBlock(@Nullable Output<String> destinationCidrBlock) {
            $.destinationCidrBlock = destinationCidrBlock;
            return this;
        }

        /**
         * @param destinationCidrBlock 路由条目的目标网段。
         * 
         * @return builder
         * 
         */
        public Builder destinationCidrBlock(String destinationCidrBlock) {
            return destinationCidrBlock(Output.of(destinationCidrBlock));
        }

        /**
         * @param destinationPrefixListId 前缀列表ID。
         * 
         * @return builder
         * 
         */
        public Builder destinationPrefixListId(@Nullable Output<String> destinationPrefixListId) {
            $.destinationPrefixListId = destinationPrefixListId;
            return this;
        }

        /**
         * @param destinationPrefixListId 前缀列表ID。
         * 
         * @return builder
         * 
         */
        public Builder destinationPrefixListId(String destinationPrefixListId) {
            return destinationPrefixListId(Output.of(destinationPrefixListId));
        }

        /**
         * @param nextHopId 下一跳资源ID。
         * 
         * @return builder
         * 
         */
        public Builder nextHopId(@Nullable Output<String> nextHopId) {
            $.nextHopId = nextHopId;
            return this;
        }

        /**
         * @param nextHopId 下一跳资源ID。
         * 
         * @return builder
         * 
         */
        public Builder nextHopId(String nextHopId) {
            return nextHopId(Output.of(nextHopId));
        }

        /**
         * @param nextHopName 路由条目下一跳资源的名称。
         * 
         * @return builder
         * 
         */
        public Builder nextHopName(@Nullable Output<String> nextHopName) {
            $.nextHopName = nextHopName;
            return this;
        }

        /**
         * @param nextHopName 路由条目下一跳资源的名称。
         * 
         * @return builder
         * 
         */
        public Builder nextHopName(String nextHopName) {
            return nextHopName(Output.of(nextHopName));
        }

        /**
         * @param nextHopType 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
         * 
         * @return builder
         * 
         */
        public Builder nextHopType(@Nullable Output<String> nextHopType) {
            $.nextHopType = nextHopType;
            return this;
        }

        /**
         * @param nextHopType 自定义路由条目的下一跳的类型。1、Instance：ECS实例。2、HaVip：高可用虚拟IP。3、NetworkInterface：辅助网卡。4、NatGW：NAT网关。5、VpnGW：VPN网关。6、TransitRouter：中转路由器。7、IPv6GW：IPv6网关。8、CloudConnector：云连接器。9、GWLBEndpoint：网关负载均衡终端节点。
         * 
         * @return builder
         * 
         */
        public Builder nextHopType(String nextHopType) {
            return nextHopType(Output.of(nextHopType));
        }

        /**
         * @param prefixListCidrBlocks 前缀列表的CIDR。
         * 
         * @return builder
         * 
         */
        public Builder prefixListCidrBlocks(@Nullable Output<List<String>> prefixListCidrBlocks) {
            $.prefixListCidrBlocks = prefixListCidrBlocks;
            return this;
        }

        /**
         * @param prefixListCidrBlocks 前缀列表的CIDR。
         * 
         * @return builder
         * 
         */
        public Builder prefixListCidrBlocks(List<String> prefixListCidrBlocks) {
            return prefixListCidrBlocks(Output.of(prefixListCidrBlocks));
        }

        /**
         * @param prefixListCidrBlocks 前缀列表的CIDR。
         * 
         * @return builder
         * 
         */
        public Builder prefixListCidrBlocks(String... prefixListCidrBlocks) {
            return prefixListCidrBlocks(List.of(prefixListCidrBlocks));
        }

        /**
         * @param routeEntryId 路由条目ID。
         * 
         * @return builder
         * 
         */
        public Builder routeEntryId(@Nullable Output<String> routeEntryId) {
            $.routeEntryId = routeEntryId;
            return this;
        }

        /**
         * @param routeEntryId 路由条目ID。
         * 
         * @return builder
         * 
         */
        public Builder routeEntryId(String routeEntryId) {
            return routeEntryId(Output.of(routeEntryId));
        }

        /**
         * @param routeEntryName 路由条目名称。
         * 
         * @return builder
         * 
         */
        public Builder routeEntryName(@Nullable Output<String> routeEntryName) {
            $.routeEntryName = routeEntryName;
            return this;
        }

        /**
         * @param routeEntryName 路由条目名称。
         * 
         * @return builder
         * 
         */
        public Builder routeEntryName(String routeEntryName) {
            return routeEntryName(Output.of(routeEntryName));
        }

        /**
         * @param routeTableId 路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(@Nullable Output<String> routeTableId) {
            $.routeTableId = routeTableId;
            return this;
        }

        /**
         * @param routeTableId 路由表ID。
         * 
         * @return builder
         * 
         */
        public Builder routeTableId(String routeTableId) {
            return routeTableId(Output.of(routeTableId));
        }

        /**
         * @param status 路由条目状态。1、Pending：待创建。2、Available：可用。
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status 路由条目状态。1、Pending：待创建。2、Available：可用。
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type 路由条目类型。1、Custom：自定义路由条目。2、System：系统默认路由条目。
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vpcId 路由条目所属私有网络的ID。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(@Nullable Output<String> vpcId) {
            $.vpcId = vpcId;
            return this;
        }

        /**
         * @param vpcId 路由条目所属私有网络的ID。
         * 
         * @return builder
         * 
         */
        public Builder vpcId(String vpcId) {
            return vpcId(Output.of(vpcId));
        }

        public RouteTableSystemRouteEntryArgs build() {
            return $;
        }
    }

}
