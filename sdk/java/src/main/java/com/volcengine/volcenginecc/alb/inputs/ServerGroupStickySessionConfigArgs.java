// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.alb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerGroupStickySessionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerGroupStickySessionConfigArgs Empty = new ServerGroupStickySessionConfigArgs();

    /**
     * 服务配置的会话保持 Cookie 名称。仅在开启会话保持功能并选择重写 Cookie 时有效。 具体规则如下：Cookie 名称长度为1~200个字符。名称只能包含 ASCII 英文字母和数字字符，不能包含半角逗号（,）、半角分号（;）或空格，也不能以美元符号（$）开头。当 tickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 server时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，该参数无效。
     * 
     */
    @Import(name="cookie")
    private @Nullable Output<String> cookie;

    /**
     * @return 服务配置的会话保持 Cookie 名称。仅在开启会话保持功能并选择重写 Cookie 时有效。 具体规则如下：Cookie 名称长度为1~200个字符。名称只能包含 ASCII 英文字母和数字字符，不能包含半角逗号（,）、半角分号（;）或空格，也不能以美元符号（$）开头。当 tickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 server时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，该参数无效。
     * 
     */
    public Optional<Output<String>> cookie() {
        return Optional.ofNullable(this.cookie);
    }

    /**
     * 会话保持 Cookie 超时时间。仅在开启会话保持功能并选择植入 Cookie 时有效。 单位：秒。具体规则如下：超时时间的取值范围：1～86400。 默认值为：1000。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionType 为 server 时，此参数无效。
     * 
     */
    @Import(name="cookieTimeout")
    private @Nullable Output<Integer> cookieTimeout;

    /**
     * @return 会话保持 Cookie 超时时间。仅在开启会话保持功能并选择植入 Cookie 时有效。 单位：秒。具体规则如下：超时时间的取值范围：1～86400。 默认值为：1000。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionType 为 server 时，此参数无效。
     * 
     */
    public Optional<Output<Integer>> cookieTimeout() {
        return Optional.ofNullable(this.cookieTimeout);
    }

    /**
     * 是否开启会话保持功能。on：开启；off（默认值）：关闭。
     * 
     */
    @Import(name="stickySessionEnabled")
    private @Nullable Output<String> stickySessionEnabled;

    /**
     * @return 是否开启会话保持功能。on：开启；off（默认值）：关闭。
     * 
     */
    public Optional<Output<String>> stickySessionEnabled() {
        return Optional.ofNullable(this.stickySessionEnabled);
    }

    /**
     * 对 Cookie 的处理方式。当 StickySessionConfig.StickySessionEnabled 值为 on 时，此字段参数必填。取值如下：insert：植入 Cookie；ALB 会记录客户端请求第一次转发到的后端服务器。ALB 在返回请求中植入 Cookie ，后续客户端请求携带此 Cookie，ALB 会将请求转发到之前记录的后端服务器上。server：重写 Cookie；开启重写 Cookie 的会话保持后，在客户端请求第一次转发到后端服务器后，ALB 在返回请求中发现您自定义的 Cookie 时，会对原来的 Cookie 进行重写。后续客户端请求携带改写后的 Cookie，ALB 会将请求转发到之前记录的后端服务器上。
     * 
     */
    @Import(name="stickySessionType")
    private @Nullable Output<String> stickySessionType;

    /**
     * @return 对 Cookie 的处理方式。当 StickySessionConfig.StickySessionEnabled 值为 on 时，此字段参数必填。取值如下：insert：植入 Cookie；ALB 会记录客户端请求第一次转发到的后端服务器。ALB 在返回请求中植入 Cookie ，后续客户端请求携带此 Cookie，ALB 会将请求转发到之前记录的后端服务器上。server：重写 Cookie；开启重写 Cookie 的会话保持后，在客户端请求第一次转发到后端服务器后，ALB 在返回请求中发现您自定义的 Cookie 时，会对原来的 Cookie 进行重写。后续客户端请求携带改写后的 Cookie，ALB 会将请求转发到之前记录的后端服务器上。
     * 
     */
    public Optional<Output<String>> stickySessionType() {
        return Optional.ofNullable(this.stickySessionType);
    }

    private ServerGroupStickySessionConfigArgs() {}

    private ServerGroupStickySessionConfigArgs(ServerGroupStickySessionConfigArgs $) {
        this.cookie = $.cookie;
        this.cookieTimeout = $.cookieTimeout;
        this.stickySessionEnabled = $.stickySessionEnabled;
        this.stickySessionType = $.stickySessionType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerGroupStickySessionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerGroupStickySessionConfigArgs $;

        public Builder() {
            $ = new ServerGroupStickySessionConfigArgs();
        }

        public Builder(ServerGroupStickySessionConfigArgs defaults) {
            $ = new ServerGroupStickySessionConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookie 服务配置的会话保持 Cookie 名称。仅在开启会话保持功能并选择重写 Cookie 时有效。 具体规则如下：Cookie 名称长度为1~200个字符。名称只能包含 ASCII 英文字母和数字字符，不能包含半角逗号（,）、半角分号（;）或空格，也不能以美元符号（$）开头。当 tickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 server时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，该参数无效。
         * 
         * @return builder
         * 
         */
        public Builder cookie(@Nullable Output<String> cookie) {
            $.cookie = cookie;
            return this;
        }

        /**
         * @param cookie 服务配置的会话保持 Cookie 名称。仅在开启会话保持功能并选择重写 Cookie 时有效。 具体规则如下：Cookie 名称长度为1~200个字符。名称只能包含 ASCII 英文字母和数字字符，不能包含半角逗号（,）、半角分号（;）或空格，也不能以美元符号（$）开头。当 tickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 server时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，该参数无效。
         * 
         * @return builder
         * 
         */
        public Builder cookie(String cookie) {
            return cookie(Output.of(cookie));
        }

        /**
         * @param cookieTimeout 会话保持 Cookie 超时时间。仅在开启会话保持功能并选择植入 Cookie 时有效。 单位：秒。具体规则如下：超时时间的取值范围：1～86400。 默认值为：1000。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionType 为 server 时，此参数无效。
         * 
         * @return builder
         * 
         */
        public Builder cookieTimeout(@Nullable Output<Integer> cookieTimeout) {
            $.cookieTimeout = cookieTimeout;
            return this;
        }

        /**
         * @param cookieTimeout 会话保持 Cookie 超时时间。仅在开启会话保持功能并选择植入 Cookie 时有效。 单位：秒。具体规则如下：超时时间的取值范围：1～86400。 默认值为：1000。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionConfig.StickySessionType 为 insert 时，此参数必填。当 StickySessionConfig.StickySessionEnabled 值为 on，且 StickySessionType 为 server 时，此参数无效。
         * 
         * @return builder
         * 
         */
        public Builder cookieTimeout(Integer cookieTimeout) {
            return cookieTimeout(Output.of(cookieTimeout));
        }

        /**
         * @param stickySessionEnabled 是否开启会话保持功能。on：开启；off（默认值）：关闭。
         * 
         * @return builder
         * 
         */
        public Builder stickySessionEnabled(@Nullable Output<String> stickySessionEnabled) {
            $.stickySessionEnabled = stickySessionEnabled;
            return this;
        }

        /**
         * @param stickySessionEnabled 是否开启会话保持功能。on：开启；off（默认值）：关闭。
         * 
         * @return builder
         * 
         */
        public Builder stickySessionEnabled(String stickySessionEnabled) {
            return stickySessionEnabled(Output.of(stickySessionEnabled));
        }

        /**
         * @param stickySessionType 对 Cookie 的处理方式。当 StickySessionConfig.StickySessionEnabled 值为 on 时，此字段参数必填。取值如下：insert：植入 Cookie；ALB 会记录客户端请求第一次转发到的后端服务器。ALB 在返回请求中植入 Cookie ，后续客户端请求携带此 Cookie，ALB 会将请求转发到之前记录的后端服务器上。server：重写 Cookie；开启重写 Cookie 的会话保持后，在客户端请求第一次转发到后端服务器后，ALB 在返回请求中发现您自定义的 Cookie 时，会对原来的 Cookie 进行重写。后续客户端请求携带改写后的 Cookie，ALB 会将请求转发到之前记录的后端服务器上。
         * 
         * @return builder
         * 
         */
        public Builder stickySessionType(@Nullable Output<String> stickySessionType) {
            $.stickySessionType = stickySessionType;
            return this;
        }

        /**
         * @param stickySessionType 对 Cookie 的处理方式。当 StickySessionConfig.StickySessionEnabled 值为 on 时，此字段参数必填。取值如下：insert：植入 Cookie；ALB 会记录客户端请求第一次转发到的后端服务器。ALB 在返回请求中植入 Cookie ，后续客户端请求携带此 Cookie，ALB 会将请求转发到之前记录的后端服务器上。server：重写 Cookie；开启重写 Cookie 的会话保持后，在客户端请求第一次转发到后端服务器后，ALB 在返回请求中发现您自定义的 Cookie 时，会对原来的 Cookie 进行重写。后续客户端请求携带改写后的 Cookie，ALB 会将请求转发到之前记录的后端服务器上。
         * 
         * @return builder
         * 
         */
        public Builder stickySessionType(String stickySessionType) {
            return stickySessionType(Output.of(stickySessionType));
        }

        public ServerGroupStickySessionConfigArgs build() {
            return $;
        }
    }

}
