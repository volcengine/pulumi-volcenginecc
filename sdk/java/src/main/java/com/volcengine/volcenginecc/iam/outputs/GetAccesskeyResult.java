// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.iam.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccesskeyResult {
    /**
     * @return 密钥ID（Access Key Id）。
     * 
     */
    private String accessKeyId;
    /**
     * @return 密钥创建时间
     * 
     */
    private String createDate;
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    private String id;
    /**
     * @return API密钥最后访问的地域。
     * 
     */
    private String region;
    /**
     * @return API密钥的最后使用的时间。
     * 
     */
    private String requestTime;
    /**
     * @return 私有密钥（Secret Access Key）。
     * 
     */
    private String secretAccessKey;
    /**
     * @return API密钥最后访问的服务的英文简称。
     * 
     */
    private String service;
    /**
     * @return 密钥状态 (active/inactive)
     * 
     */
    private String status;
    /**
     * @return 密钥更新时间
     * 
     */
    private String updateDate;
    /**
     * @return 用户名
     * 
     */
    private String userName;

    private GetAccesskeyResult() {}
    /**
     * @return 密钥ID（Access Key Id）。
     * 
     */
    public String accessKeyId() {
        return this.accessKeyId;
    }
    /**
     * @return 密钥创建时间
     * 
     */
    public String createDate() {
        return this.createDate;
    }
    /**
     * @return Uniquely identifies the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return API密钥最后访问的地域。
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return API密钥的最后使用的时间。
     * 
     */
    public String requestTime() {
        return this.requestTime;
    }
    /**
     * @return 私有密钥（Secret Access Key）。
     * 
     */
    public String secretAccessKey() {
        return this.secretAccessKey;
    }
    /**
     * @return API密钥最后访问的服务的英文简称。
     * 
     */
    public String service() {
        return this.service;
    }
    /**
     * @return 密钥状态 (active/inactive)
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return 密钥更新时间
     * 
     */
    public String updateDate() {
        return this.updateDate;
    }
    /**
     * @return 用户名
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccesskeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKeyId;
        private String createDate;
        private String id;
        private String region;
        private String requestTime;
        private String secretAccessKey;
        private String service;
        private String status;
        private String updateDate;
        private String userName;
        public Builder() {}
        public Builder(GetAccesskeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.createDate = defaults.createDate;
    	      this.id = defaults.id;
    	      this.region = defaults.region;
    	      this.requestTime = defaults.requestTime;
    	      this.secretAccessKey = defaults.secretAccessKey;
    	      this.service = defaults.service;
    	      this.status = defaults.status;
    	      this.updateDate = defaults.updateDate;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder accessKeyId(String accessKeyId) {
            if (accessKeyId == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "accessKeyId");
            }
            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder createDate(String createDate) {
            if (createDate == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "createDate");
            }
            this.createDate = createDate;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder requestTime(String requestTime) {
            if (requestTime == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "requestTime");
            }
            this.requestTime = requestTime;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(String secretAccessKey) {
            if (secretAccessKey == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "secretAccessKey");
            }
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "service");
            }
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder updateDate(String updateDate) {
            if (updateDate == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "updateDate");
            }
            this.updateDate = updateDate;
            return this;
        }
        @CustomType.Setter
        public Builder userName(String userName) {
            if (userName == null) {
              throw new MissingRequiredPropertyException("GetAccesskeyResult", "userName");
            }
            this.userName = userName;
            return this;
        }
        public GetAccesskeyResult build() {
            final var _resultValue = new GetAccesskeyResult();
            _resultValue.accessKeyId = accessKeyId;
            _resultValue.createDate = createDate;
            _resultValue.id = id;
            _resultValue.region = region;
            _resultValue.requestTime = requestTime;
            _resultValue.secretAccessKey = secretAccessKey;
            _resultValue.service = service;
            _resultValue.status = status;
            _resultValue.updateDate = updateDate;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
