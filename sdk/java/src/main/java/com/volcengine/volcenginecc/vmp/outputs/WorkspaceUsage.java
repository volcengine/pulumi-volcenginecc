// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vmp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceUsage {
    /**
     * @return 活跃时序数。
     * 
     */
    private @Nullable Integer activeSeries;
    /**
     * @return 每秒写入样本数。
     * 
     */
    private @Nullable Double ingestedSamplesPerSecond;

    private WorkspaceUsage() {}
    /**
     * @return 活跃时序数。
     * 
     */
    public Optional<Integer> activeSeries() {
        return Optional.ofNullable(this.activeSeries);
    }
    /**
     * @return 每秒写入样本数。
     * 
     */
    public Optional<Double> ingestedSamplesPerSecond() {
        return Optional.ofNullable(this.ingestedSamplesPerSecond);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer activeSeries;
        private @Nullable Double ingestedSamplesPerSecond;
        public Builder() {}
        public Builder(WorkspaceUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeSeries = defaults.activeSeries;
    	      this.ingestedSamplesPerSecond = defaults.ingestedSamplesPerSecond;
        }

        @CustomType.Setter
        public Builder activeSeries(@Nullable Integer activeSeries) {

            this.activeSeries = activeSeries;
            return this;
        }
        @CustomType.Setter
        public Builder ingestedSamplesPerSecond(@Nullable Double ingestedSamplesPerSecond) {

            this.ingestedSamplesPerSecond = ingestedSamplesPerSecond;
            return this;
        }
        public WorkspaceUsage build() {
            final var _resultValue = new WorkspaceUsage();
            _resultValue.activeSeries = activeSeries;
            _resultValue.ingestedSamplesPerSecond = ingestedSamplesPerSecond;
            return _resultValue;
        }
    }
}
