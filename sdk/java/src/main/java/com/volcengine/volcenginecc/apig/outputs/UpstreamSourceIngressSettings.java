// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.apig.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UpstreamSourceIngressSettings {
    /**
     * @return 是否启用所有Ingress类。
     * 
     */
    private @Nullable Boolean enableAllIngressClasses;
    /**
     * @return 是否全部命名空间。
     * 
     */
    private @Nullable Boolean enableAllNamespaces;
    /**
     * @return 是否开启。
     * 
     */
    private @Nullable Boolean enableIngress;
    /**
     * @return 是否监听IngressClass为空的资源。
     * 
     */
    private @Nullable Boolean enableIngressWithoutIngressClass;
    /**
     * @return 指定IngressClass。
     * 
     */
    private @Nullable List<String> ingressClasses;
    /**
     * @return 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
     * 
     */
    private @Nullable Boolean updateStatus;
    /**
     * @return 指定命名空间。
     * 
     */
    private @Nullable List<String> watchNamespaces;

    private UpstreamSourceIngressSettings() {}
    /**
     * @return 是否启用所有Ingress类。
     * 
     */
    public Optional<Boolean> enableAllIngressClasses() {
        return Optional.ofNullable(this.enableAllIngressClasses);
    }
    /**
     * @return 是否全部命名空间。
     * 
     */
    public Optional<Boolean> enableAllNamespaces() {
        return Optional.ofNullable(this.enableAllNamespaces);
    }
    /**
     * @return 是否开启。
     * 
     */
    public Optional<Boolean> enableIngress() {
        return Optional.ofNullable(this.enableIngress);
    }
    /**
     * @return 是否监听IngressClass为空的资源。
     * 
     */
    public Optional<Boolean> enableIngressWithoutIngressClass() {
        return Optional.ofNullable(this.enableIngressWithoutIngressClass);
    }
    /**
     * @return 指定IngressClass。
     * 
     */
    public List<String> ingressClasses() {
        return this.ingressClasses == null ? List.of() : this.ingressClasses;
    }
    /**
     * @return 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
     * 
     */
    public Optional<Boolean> updateStatus() {
        return Optional.ofNullable(this.updateStatus);
    }
    /**
     * @return 指定命名空间。
     * 
     */
    public List<String> watchNamespaces() {
        return this.watchNamespaces == null ? List.of() : this.watchNamespaces;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UpstreamSourceIngressSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enableAllIngressClasses;
        private @Nullable Boolean enableAllNamespaces;
        private @Nullable Boolean enableIngress;
        private @Nullable Boolean enableIngressWithoutIngressClass;
        private @Nullable List<String> ingressClasses;
        private @Nullable Boolean updateStatus;
        private @Nullable List<String> watchNamespaces;
        public Builder() {}
        public Builder(UpstreamSourceIngressSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableAllIngressClasses = defaults.enableAllIngressClasses;
    	      this.enableAllNamespaces = defaults.enableAllNamespaces;
    	      this.enableIngress = defaults.enableIngress;
    	      this.enableIngressWithoutIngressClass = defaults.enableIngressWithoutIngressClass;
    	      this.ingressClasses = defaults.ingressClasses;
    	      this.updateStatus = defaults.updateStatus;
    	      this.watchNamespaces = defaults.watchNamespaces;
        }

        @CustomType.Setter
        public Builder enableAllIngressClasses(@Nullable Boolean enableAllIngressClasses) {

            this.enableAllIngressClasses = enableAllIngressClasses;
            return this;
        }
        @CustomType.Setter
        public Builder enableAllNamespaces(@Nullable Boolean enableAllNamespaces) {

            this.enableAllNamespaces = enableAllNamespaces;
            return this;
        }
        @CustomType.Setter
        public Builder enableIngress(@Nullable Boolean enableIngress) {

            this.enableIngress = enableIngress;
            return this;
        }
        @CustomType.Setter
        public Builder enableIngressWithoutIngressClass(@Nullable Boolean enableIngressWithoutIngressClass) {

            this.enableIngressWithoutIngressClass = enableIngressWithoutIngressClass;
            return this;
        }
        @CustomType.Setter
        public Builder ingressClasses(@Nullable List<String> ingressClasses) {

            this.ingressClasses = ingressClasses;
            return this;
        }
        public Builder ingressClasses(String... ingressClasses) {
            return ingressClasses(List.of(ingressClasses));
        }
        @CustomType.Setter
        public Builder updateStatus(@Nullable Boolean updateStatus) {

            this.updateStatus = updateStatus;
            return this;
        }
        @CustomType.Setter
        public Builder watchNamespaces(@Nullable List<String> watchNamespaces) {

            this.watchNamespaces = watchNamespaces;
            return this;
        }
        public Builder watchNamespaces(String... watchNamespaces) {
            return watchNamespaces(List.of(watchNamespaces));
        }
        public UpstreamSourceIngressSettings build() {
            final var _resultValue = new UpstreamSourceIngressSettings();
            _resultValue.enableAllIngressClasses = enableAllIngressClasses;
            _resultValue.enableAllNamespaces = enableAllNamespaces;
            _resultValue.enableIngress = enableIngress;
            _resultValue.enableIngressWithoutIngressClass = enableIngressWithoutIngressClass;
            _resultValue.ingressClasses = ingressClasses;
            _resultValue.updateStatus = updateStatus;
            _resultValue.watchNamespaces = watchNamespaces;
            return _resultValue;
        }
    }
}
