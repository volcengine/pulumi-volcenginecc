// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.cr.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegistryStatus {
    /**
     * @return Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
     * 
     */
    private List<String> conditions;
    /**
     * @return Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
     * 
     */
    private String phase;

    private GetRegistryStatus() {}
    /**
     * @return Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
     * 
     */
    public List<String> conditions() {
        return this.conditions;
    }
    /**
     * @return Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
     * 
     */
    public String phase() {
        return this.phase;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> conditions;
        private String phase;
        public Builder() {}
        public Builder(GetRegistryStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.phase = defaults.phase;
        }

        @CustomType.Setter
        public Builder conditions(List<String> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetRegistryStatus", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(String... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder phase(String phase) {
            if (phase == null) {
              throw new MissingRequiredPropertyException("GetRegistryStatus", "phase");
            }
            this.phase = phase;
            return this;
        }
        public GetRegistryStatus build() {
            final var _resultValue = new GetRegistryStatus();
            _resultValue.conditions = conditions;
            _resultValue.phase = phase;
            return _resultValue;
        }
    }
}
