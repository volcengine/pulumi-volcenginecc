// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.cr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.volcengine.volcenginecc.Utilities;
import com.volcengine.volcenginecc.cr.RegistryArgs;
import com.volcengine.volcenginecc.cr.inputs.RegistryState;
import com.volcengine.volcenginecc.cr.outputs.RegistryProxyCache;
import com.volcengine.volcenginecc.cr.outputs.RegistryStatus;
import com.volcengine.volcenginecc.cr.outputs.RegistryTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * 镜像仓库（Container Registry，CR）提供安全高可用的容器镜像、Helm Chart 等符合 OCI 标准的云原生制品托管服务，方便企业用户管理容器镜像和 Helm Chart 的全生命周期。
 * 
 * ## Import
 * 
 * ```sh
 * $ pulumi import volcenginecc:cr/registry:Registry example &#34;name&#34;
 * ```
 * 
 */
@ResourceType(type="volcenginecc:cr/registry:Registry")
public class Registry extends com.pulumi.resources.CustomResource {
    /**
     * 镜像仓库实例的付费类型，目前仅支持 PostCharge按量付费模式。
     * 
     */
    @Export(name="chargeType", refs={String.class}, tree="[0]")
    private Output<String> chargeType;

    /**
     * @return 镜像仓库实例的付费类型，目前仅支持 PostCharge按量付费模式。
     * 
     */
    public Output<String> chargeType() {
        return this.chargeType;
    }
    /**
     * 创建镜像仓库实例的时间。
     * 
     */
    @Export(name="createdTime", refs={String.class}, tree="[0]")
    private Output<String> createdTime;

    /**
     * @return 创建镜像仓库实例的时间。
     * 
     */
    public Output<String> createdTime() {
        return this.createdTime;
    }
    /**
     * 仅计费类型为HybridCharge有值，实例到期时间
     * 
     */
    @Export(name="expireTime", refs={String.class}, tree="[0]")
    private Output<String> expireTime;

    /**
     * @return 仅计费类型为HybridCharge有值，实例到期时间
     * 
     */
    public Output<String> expireTime() {
        return this.expireTime;
    }
    /**
     * 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * 填写实例需要关联的项目。一个实例仅支持关联一个项目
     * 
     */
    @Export(name="project", refs={String.class}, tree="[0]")
    private Output<String> project;

    /**
     * @return 填写实例需要关联的项目。一个实例仅支持关联一个项目
     * 
     */
    public Output<String> project() {
        return this.project;
    }
    /**
     * ProxyCache配置，设置为ProxyCache时必填
     * 
     */
    @Export(name="proxyCache", refs={RegistryProxyCache.class}, tree="[0]")
    private Output<RegistryProxyCache> proxyCache;

    /**
     * @return ProxyCache配置，设置为ProxyCache时必填
     * 
     */
    public Output<RegistryProxyCache> proxyCache() {
        return this.proxyCache;
    }
    /**
     * 是否设置为ProxyCache实例
     * 
     */
    @Export(name="proxyCacheEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> proxyCacheEnabled;

    /**
     * @return 是否设置为ProxyCache实例
     * 
     */
    public Output<Boolean> proxyCacheEnabled() {
        return this.proxyCacheEnabled;
    }
    /**
     * 仅计费类型为HybridCharge有值，实例自动续费类型
     * 
     */
    @Export(name="renewType", refs={String.class}, tree="[0]")
    private Output<String> renewType;

    /**
     * @return 仅计费类型为HybridCharge有值，实例自动续费类型
     * 
     */
    public Output<String> renewType() {
        return this.renewType;
    }
    /**
     * 镜像仓库实例状态，由 Phase 和 Conditions 组成。合法的 Phase 和 Conditions 组合如下所示：{Creating, [Progressing]}：创建中,{Running, [Ok]}：运行中,{Running, [Degraded]}：运行中,{Stopped, [Balance]}：欠费关停,{Stopped, [Released]}：待回收,{Stopped, [Released, Balance]}：欠费关停,{Starting, [Progressing]}：启动中,{Deleting, [Progressing]}：销毁中,{Failed, [Unknown]}：异常
     * 
     */
    @Export(name="status", refs={RegistryStatus.class}, tree="[0]")
    private Output<RegistryStatus> status;

    /**
     * @return 镜像仓库实例状态，由 Phase 和 Conditions 组成。合法的 Phase 和 Conditions 组合如下所示：{Creating, [Progressing]}：创建中,{Running, [Ok]}：运行中,{Running, [Degraded]}：运行中,{Stopped, [Balance]}：欠费关停,{Stopped, [Released]}：待回收,{Stopped, [Released, Balance]}：欠费关停,{Starting, [Progressing]}：启动中,{Deleting, [Progressing]}：销毁中,{Failed, [Unknown]}：异常
     * 
     */
    public Output<RegistryStatus> status() {
        return this.status;
    }
    @Export(name="tags", refs={List.class,RegistryTag.class}, tree="[0,1]")
    private Output<List<RegistryTag>> tags;

    public Output<List<RegistryTag>> tags() {
        return this.tags;
    }
    /**
     * 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Registry(java.lang.String name) {
        this(name, RegistryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Registry(java.lang.String name, RegistryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Registry(java.lang.String name, RegistryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:cr/registry:Registry", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Registry(java.lang.String name, Output<java.lang.String> id, @Nullable RegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("volcenginecc:cr/registry:Registry", name, state, makeResourceOptions(options, id), false);
    }

    private static RegistryArgs makeArgs(RegistryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RegistryArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/volcengine")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Registry get(java.lang.String name, Output<java.lang.String> id, @Nullable RegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Registry(name, id, state, options);
    }
}
