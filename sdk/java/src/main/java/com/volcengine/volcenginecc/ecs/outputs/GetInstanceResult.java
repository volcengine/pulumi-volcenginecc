// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.ecs.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceCpuMemory;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceEipAddress;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceImage;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceKeyPair;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceOperationSystem;
import com.volcengine.volcenginecc.ecs.outputs.GetInstancePlacement;
import com.volcengine.volcenginecc.ecs.outputs.GetInstancePrimaryNetworkInterface;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceSecondaryNetworkInterface;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceSystemVolume;
import com.volcengine.volcenginecc.ecs.outputs.GetInstanceTag;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstanceResult {
    private Integer affinityGroupSize;
    private Boolean autoRenew;
    private Integer autoRenewPeriod;
    private Double cpuMaxFrequency;
    private GetInstanceCpuMemory cpuMemory;
    private String createdAt;
    private String creditSpecification;
    private Boolean deletionProtection;
    private Integer deploymentSetGroupNumber;
    private String deploymentSetId;
    private String description;
    private GetInstanceEipAddress eipAddress;
    private String expiredAt;
    private String hostname;
    private String hpcClusterId;
    private String id;
    private GetInstanceImage image;
    private String instanceChargeType;
    private String instanceId;
    private String instanceName;
    private String instanceType;
    private GetInstanceKeyPair keyPair;
    private GetInstanceOperationSystem operationSystem;
    private String password;
    private Integer period;
    private String periodUnit;
    private GetInstancePlacement placement;
    private GetInstancePrimaryNetworkInterface primaryNetworkInterface;
    private String projectName;
    private List<GetInstanceSecondaryNetworkInterface> secondaryNetworkInterfaces;
    private Double spotPriceLimit;
    private String spotStrategy;
    private String status;
    private GetInstanceSystemVolume systemVolume;
    private List<GetInstanceTag> tags;
    private String updatedAt;
    private String userData;
    private String vpcId;
    private String zoneId;

    private GetInstanceResult() {}
    public Integer affinityGroupSize() {
        return this.affinityGroupSize;
    }
    public Boolean autoRenew() {
        return this.autoRenew;
    }
    public Integer autoRenewPeriod() {
        return this.autoRenewPeriod;
    }
    public Double cpuMaxFrequency() {
        return this.cpuMaxFrequency;
    }
    public GetInstanceCpuMemory cpuMemory() {
        return this.cpuMemory;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String creditSpecification() {
        return this.creditSpecification;
    }
    public Boolean deletionProtection() {
        return this.deletionProtection;
    }
    public Integer deploymentSetGroupNumber() {
        return this.deploymentSetGroupNumber;
    }
    public String deploymentSetId() {
        return this.deploymentSetId;
    }
    public String description() {
        return this.description;
    }
    public GetInstanceEipAddress eipAddress() {
        return this.eipAddress;
    }
    public String expiredAt() {
        return this.expiredAt;
    }
    public String hostname() {
        return this.hostname;
    }
    public String hpcClusterId() {
        return this.hpcClusterId;
    }
    public String id() {
        return this.id;
    }
    public GetInstanceImage image() {
        return this.image;
    }
    public String instanceChargeType() {
        return this.instanceChargeType;
    }
    public String instanceId() {
        return this.instanceId;
    }
    public String instanceName() {
        return this.instanceName;
    }
    public String instanceType() {
        return this.instanceType;
    }
    public GetInstanceKeyPair keyPair() {
        return this.keyPair;
    }
    public GetInstanceOperationSystem operationSystem() {
        return this.operationSystem;
    }
    public String password() {
        return this.password;
    }
    public Integer period() {
        return this.period;
    }
    public String periodUnit() {
        return this.periodUnit;
    }
    public GetInstancePlacement placement() {
        return this.placement;
    }
    public GetInstancePrimaryNetworkInterface primaryNetworkInterface() {
        return this.primaryNetworkInterface;
    }
    public String projectName() {
        return this.projectName;
    }
    public List<GetInstanceSecondaryNetworkInterface> secondaryNetworkInterfaces() {
        return this.secondaryNetworkInterfaces;
    }
    public Double spotPriceLimit() {
        return this.spotPriceLimit;
    }
    public String spotStrategy() {
        return this.spotStrategy;
    }
    public String status() {
        return this.status;
    }
    public GetInstanceSystemVolume systemVolume() {
        return this.systemVolume;
    }
    public List<GetInstanceTag> tags() {
        return this.tags;
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public String userData() {
        return this.userData;
    }
    public String vpcId() {
        return this.vpcId;
    }
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer affinityGroupSize;
        private Boolean autoRenew;
        private Integer autoRenewPeriod;
        private Double cpuMaxFrequency;
        private GetInstanceCpuMemory cpuMemory;
        private String createdAt;
        private String creditSpecification;
        private Boolean deletionProtection;
        private Integer deploymentSetGroupNumber;
        private String deploymentSetId;
        private String description;
        private GetInstanceEipAddress eipAddress;
        private String expiredAt;
        private String hostname;
        private String hpcClusterId;
        private String id;
        private GetInstanceImage image;
        private String instanceChargeType;
        private String instanceId;
        private String instanceName;
        private String instanceType;
        private GetInstanceKeyPair keyPair;
        private GetInstanceOperationSystem operationSystem;
        private String password;
        private Integer period;
        private String periodUnit;
        private GetInstancePlacement placement;
        private GetInstancePrimaryNetworkInterface primaryNetworkInterface;
        private String projectName;
        private List<GetInstanceSecondaryNetworkInterface> secondaryNetworkInterfaces;
        private Double spotPriceLimit;
        private String spotStrategy;
        private String status;
        private GetInstanceSystemVolume systemVolume;
        private List<GetInstanceTag> tags;
        private String updatedAt;
        private String userData;
        private String vpcId;
        private String zoneId;
        public Builder() {}
        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affinityGroupSize = defaults.affinityGroupSize;
    	      this.autoRenew = defaults.autoRenew;
    	      this.autoRenewPeriod = defaults.autoRenewPeriod;
    	      this.cpuMaxFrequency = defaults.cpuMaxFrequency;
    	      this.cpuMemory = defaults.cpuMemory;
    	      this.createdAt = defaults.createdAt;
    	      this.creditSpecification = defaults.creditSpecification;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.deploymentSetGroupNumber = defaults.deploymentSetGroupNumber;
    	      this.deploymentSetId = defaults.deploymentSetId;
    	      this.description = defaults.description;
    	      this.eipAddress = defaults.eipAddress;
    	      this.expiredAt = defaults.expiredAt;
    	      this.hostname = defaults.hostname;
    	      this.hpcClusterId = defaults.hpcClusterId;
    	      this.id = defaults.id;
    	      this.image = defaults.image;
    	      this.instanceChargeType = defaults.instanceChargeType;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.instanceType = defaults.instanceType;
    	      this.keyPair = defaults.keyPair;
    	      this.operationSystem = defaults.operationSystem;
    	      this.password = defaults.password;
    	      this.period = defaults.period;
    	      this.periodUnit = defaults.periodUnit;
    	      this.placement = defaults.placement;
    	      this.primaryNetworkInterface = defaults.primaryNetworkInterface;
    	      this.projectName = defaults.projectName;
    	      this.secondaryNetworkInterfaces = defaults.secondaryNetworkInterfaces;
    	      this.spotPriceLimit = defaults.spotPriceLimit;
    	      this.spotStrategy = defaults.spotStrategy;
    	      this.status = defaults.status;
    	      this.systemVolume = defaults.systemVolume;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
    	      this.userData = defaults.userData;
    	      this.vpcId = defaults.vpcId;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder affinityGroupSize(Integer affinityGroupSize) {
            if (affinityGroupSize == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "affinityGroupSize");
            }
            this.affinityGroupSize = affinityGroupSize;
            return this;
        }
        @CustomType.Setter
        public Builder autoRenew(Boolean autoRenew) {
            if (autoRenew == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "autoRenew");
            }
            this.autoRenew = autoRenew;
            return this;
        }
        @CustomType.Setter
        public Builder autoRenewPeriod(Integer autoRenewPeriod) {
            if (autoRenewPeriod == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "autoRenewPeriod");
            }
            this.autoRenewPeriod = autoRenewPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder cpuMaxFrequency(Double cpuMaxFrequency) {
            if (cpuMaxFrequency == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "cpuMaxFrequency");
            }
            this.cpuMaxFrequency = cpuMaxFrequency;
            return this;
        }
        @CustomType.Setter
        public Builder cpuMemory(GetInstanceCpuMemory cpuMemory) {
            if (cpuMemory == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "cpuMemory");
            }
            this.cpuMemory = cpuMemory;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder creditSpecification(String creditSpecification) {
            if (creditSpecification == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "creditSpecification");
            }
            this.creditSpecification = creditSpecification;
            return this;
        }
        @CustomType.Setter
        public Builder deletionProtection(Boolean deletionProtection) {
            if (deletionProtection == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "deletionProtection");
            }
            this.deletionProtection = deletionProtection;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentSetGroupNumber(Integer deploymentSetGroupNumber) {
            if (deploymentSetGroupNumber == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "deploymentSetGroupNumber");
            }
            this.deploymentSetGroupNumber = deploymentSetGroupNumber;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentSetId(String deploymentSetId) {
            if (deploymentSetId == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "deploymentSetId");
            }
            this.deploymentSetId = deploymentSetId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder eipAddress(GetInstanceEipAddress eipAddress) {
            if (eipAddress == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "eipAddress");
            }
            this.eipAddress = eipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder expiredAt(String expiredAt) {
            if (expiredAt == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "expiredAt");
            }
            this.expiredAt = expiredAt;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder hpcClusterId(String hpcClusterId) {
            if (hpcClusterId == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "hpcClusterId");
            }
            this.hpcClusterId = hpcClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder image(GetInstanceImage image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder instanceChargeType(String instanceChargeType) {
            if (instanceChargeType == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "instanceChargeType");
            }
            this.instanceChargeType = instanceChargeType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            if (instanceType == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "instanceType");
            }
            this.instanceType = instanceType;
            return this;
        }
        @CustomType.Setter
        public Builder keyPair(GetInstanceKeyPair keyPair) {
            if (keyPair == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "keyPair");
            }
            this.keyPair = keyPair;
            return this;
        }
        @CustomType.Setter
        public Builder operationSystem(GetInstanceOperationSystem operationSystem) {
            if (operationSystem == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "operationSystem");
            }
            this.operationSystem = operationSystem;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder period(Integer period) {
            if (period == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "period");
            }
            this.period = period;
            return this;
        }
        @CustomType.Setter
        public Builder periodUnit(String periodUnit) {
            if (periodUnit == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "periodUnit");
            }
            this.periodUnit = periodUnit;
            return this;
        }
        @CustomType.Setter
        public Builder placement(GetInstancePlacement placement) {
            if (placement == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "placement");
            }
            this.placement = placement;
            return this;
        }
        @CustomType.Setter
        public Builder primaryNetworkInterface(GetInstancePrimaryNetworkInterface primaryNetworkInterface) {
            if (primaryNetworkInterface == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "primaryNetworkInterface");
            }
            this.primaryNetworkInterface = primaryNetworkInterface;
            return this;
        }
        @CustomType.Setter
        public Builder projectName(String projectName) {
            if (projectName == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "projectName");
            }
            this.projectName = projectName;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryNetworkInterfaces(List<GetInstanceSecondaryNetworkInterface> secondaryNetworkInterfaces) {
            if (secondaryNetworkInterfaces == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "secondaryNetworkInterfaces");
            }
            this.secondaryNetworkInterfaces = secondaryNetworkInterfaces;
            return this;
        }
        public Builder secondaryNetworkInterfaces(GetInstanceSecondaryNetworkInterface... secondaryNetworkInterfaces) {
            return secondaryNetworkInterfaces(List.of(secondaryNetworkInterfaces));
        }
        @CustomType.Setter
        public Builder spotPriceLimit(Double spotPriceLimit) {
            if (spotPriceLimit == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "spotPriceLimit");
            }
            this.spotPriceLimit = spotPriceLimit;
            return this;
        }
        @CustomType.Setter
        public Builder spotStrategy(String spotStrategy) {
            if (spotStrategy == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "spotStrategy");
            }
            this.spotStrategy = spotStrategy;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemVolume(GetInstanceSystemVolume systemVolume) {
            if (systemVolume == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "systemVolume");
            }
            this.systemVolume = systemVolume;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetInstanceTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetInstanceTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder userData(String userData) {
            if (userData == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "userData");
            }
            this.userData = userData;
            return this;
        }
        @CustomType.Setter
        public Builder vpcId(String vpcId) {
            if (vpcId == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "vpcId");
            }
            this.vpcId = vpcId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetInstanceResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetInstanceResult build() {
            final var _resultValue = new GetInstanceResult();
            _resultValue.affinityGroupSize = affinityGroupSize;
            _resultValue.autoRenew = autoRenew;
            _resultValue.autoRenewPeriod = autoRenewPeriod;
            _resultValue.cpuMaxFrequency = cpuMaxFrequency;
            _resultValue.cpuMemory = cpuMemory;
            _resultValue.createdAt = createdAt;
            _resultValue.creditSpecification = creditSpecification;
            _resultValue.deletionProtection = deletionProtection;
            _resultValue.deploymentSetGroupNumber = deploymentSetGroupNumber;
            _resultValue.deploymentSetId = deploymentSetId;
            _resultValue.description = description;
            _resultValue.eipAddress = eipAddress;
            _resultValue.expiredAt = expiredAt;
            _resultValue.hostname = hostname;
            _resultValue.hpcClusterId = hpcClusterId;
            _resultValue.id = id;
            _resultValue.image = image;
            _resultValue.instanceChargeType = instanceChargeType;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.instanceType = instanceType;
            _resultValue.keyPair = keyPair;
            _resultValue.operationSystem = operationSystem;
            _resultValue.password = password;
            _resultValue.period = period;
            _resultValue.periodUnit = periodUnit;
            _resultValue.placement = placement;
            _resultValue.primaryNetworkInterface = primaryNetworkInterface;
            _resultValue.projectName = projectName;
            _resultValue.secondaryNetworkInterfaces = secondaryNetworkInterfaces;
            _resultValue.spotPriceLimit = spotPriceLimit;
            _resultValue.spotStrategy = spotStrategy;
            _resultValue.status = status;
            _resultValue.systemVolume = systemVolume;
            _resultValue.tags = tags;
            _resultValue.updatedAt = updatedAt;
            _resultValue.userData = userData;
            _resultValue.vpcId = vpcId;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
