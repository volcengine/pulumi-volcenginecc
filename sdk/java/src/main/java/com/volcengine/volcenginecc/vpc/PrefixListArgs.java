// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vpc;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.vpc.inputs.PrefixListPrefixListEntryArgs;
import com.volcengine.volcenginecc.vpc.inputs.PrefixListTagArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrefixListArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrefixListArgs Empty = new PrefixListArgs();

    /**
     * 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
     * 
     */
    @Import(name="maxEntries", required=true)
    private Output<Integer> maxEntries;

    /**
     * @return 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
     * 
     */
    public Output<Integer> maxEntries() {
        return this.maxEntries;
    }

    @Import(name="prefixListEntries")
    private @Nullable Output<List<PrefixListPrefixListEntryArgs>> prefixListEntries;

    public Optional<Output<List<PrefixListPrefixListEntryArgs>>> prefixListEntries() {
        return Optional.ofNullable(this.prefixListEntries);
    }

    /**
     * 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
     * 
     */
    @Import(name="prefixListName")
    private @Nullable Output<String> prefixListName;

    /**
     * @return 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
     * 
     */
    public Optional<Output<String>> prefixListName() {
        return Optional.ofNullable(this.prefixListName);
    }

    /**
     * 前缀列表所属项目的名称，不填默认加入default项目。
     * 
     */
    @Import(name="projectName")
    private @Nullable Output<String> projectName;

    /**
     * @return 前缀列表所属项目的名称，不填默认加入default项目。
     * 
     */
    public Optional<Output<String>> projectName() {
        return Optional.ofNullable(this.projectName);
    }

    @Import(name="tags")
    private @Nullable Output<List<PrefixListTagArgs>> tags;

    public Optional<Output<List<PrefixListTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private PrefixListArgs() {}

    private PrefixListArgs(PrefixListArgs $) {
        this.description = $.description;
        this.ipVersion = $.ipVersion;
        this.maxEntries = $.maxEntries;
        this.prefixListEntries = $.prefixListEntries;
        this.prefixListName = $.prefixListName;
        this.projectName = $.projectName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrefixListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrefixListArgs $;

        public Builder() {
            $ = new PrefixListArgs();
        }

        public Builder(PrefixListArgs defaults) {
            $ = new PrefixListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param ipVersion IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param maxEntries 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
         * 
         * @return builder
         * 
         */
        public Builder maxEntries(Output<Integer> maxEntries) {
            $.maxEntries = maxEntries;
            return this;
        }

        /**
         * @param maxEntries 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
         * 
         * @return builder
         * 
         */
        public Builder maxEntries(Integer maxEntries) {
            return maxEntries(Output.of(maxEntries));
        }

        public Builder prefixListEntries(@Nullable Output<List<PrefixListPrefixListEntryArgs>> prefixListEntries) {
            $.prefixListEntries = prefixListEntries;
            return this;
        }

        public Builder prefixListEntries(List<PrefixListPrefixListEntryArgs> prefixListEntries) {
            return prefixListEntries(Output.of(prefixListEntries));
        }

        public Builder prefixListEntries(PrefixListPrefixListEntryArgs... prefixListEntries) {
            return prefixListEntries(List.of(prefixListEntries));
        }

        /**
         * @param prefixListName 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
         * 
         * @return builder
         * 
         */
        public Builder prefixListName(@Nullable Output<String> prefixListName) {
            $.prefixListName = prefixListName;
            return this;
        }

        /**
         * @param prefixListName 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
         * 
         * @return builder
         * 
         */
        public Builder prefixListName(String prefixListName) {
            return prefixListName(Output.of(prefixListName));
        }

        /**
         * @param projectName 前缀列表所属项目的名称，不填默认加入default项目。
         * 
         * @return builder
         * 
         */
        public Builder projectName(@Nullable Output<String> projectName) {
            $.projectName = projectName;
            return this;
        }

        /**
         * @param projectName 前缀列表所属项目的名称，不填默认加入default项目。
         * 
         * @return builder
         * 
         */
        public Builder projectName(String projectName) {
            return projectName(Output.of(projectName));
        }

        public Builder tags(@Nullable Output<List<PrefixListTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<PrefixListTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(PrefixListTagArgs... tags) {
            return tags(List.of(tags));
        }

        public PrefixListArgs build() {
            if ($.maxEntries == null) {
                throw new MissingRequiredPropertyException("PrefixListArgs", "maxEntries");
            }
            return $;
        }
    }

}
