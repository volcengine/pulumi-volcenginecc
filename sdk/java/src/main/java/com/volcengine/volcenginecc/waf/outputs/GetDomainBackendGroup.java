// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.waf.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.waf.outputs.GetDomainBackendGroupBackend;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainBackendGroup {
    /**
     * @return 接入的端口号。
     * 
     */
    private List<Integer> accessPorts;
    /**
     * @return 源站组详情。
     * 
     */
    private List<GetDomainBackendGroupBackend> backends;
    /**
     * @return 源站组名称。
     * 
     */
    private String name;

    private GetDomainBackendGroup() {}
    /**
     * @return 接入的端口号。
     * 
     */
    public List<Integer> accessPorts() {
        return this.accessPorts;
    }
    /**
     * @return 源站组详情。
     * 
     */
    public List<GetDomainBackendGroupBackend> backends() {
        return this.backends;
    }
    /**
     * @return 源站组名称。
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainBackendGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> accessPorts;
        private List<GetDomainBackendGroupBackend> backends;
        private String name;
        public Builder() {}
        public Builder(GetDomainBackendGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPorts = defaults.accessPorts;
    	      this.backends = defaults.backends;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder accessPorts(List<Integer> accessPorts) {
            if (accessPorts == null) {
              throw new MissingRequiredPropertyException("GetDomainBackendGroup", "accessPorts");
            }
            this.accessPorts = accessPorts;
            return this;
        }
        public Builder accessPorts(Integer... accessPorts) {
            return accessPorts(List.of(accessPorts));
        }
        @CustomType.Setter
        public Builder backends(List<GetDomainBackendGroupBackend> backends) {
            if (backends == null) {
              throw new MissingRequiredPropertyException("GetDomainBackendGroup", "backends");
            }
            this.backends = backends;
            return this;
        }
        public Builder backends(GetDomainBackendGroupBackend... backends) {
            return backends(List.of(backends));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDomainBackendGroup", "name");
            }
            this.name = name;
            return this;
        }
        public GetDomainBackendGroup build() {
            final var _resultValue = new GetDomainBackendGroup();
            _resultValue.accessPorts = accessPorts;
            _resultValue.backends = backends;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
