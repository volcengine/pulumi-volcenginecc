// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.clb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClbAccessLogArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClbAccessLogArgs Empty = new ClbAccessLogArgs();

    /**
     * 存储七层访问日志的对象存储桶的名称
     * 
     */
    @Import(name="bucketName")
    private @Nullable Output<String> bucketName;

    /**
     * @return 存储七层访问日志的对象存储桶的名称
     * 
     */
    public Optional<Output<String>> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }

    /**
     * 日志投递类型
     * 
     */
    @Import(name="deliveryType")
    private @Nullable Output<String> deliveryType;

    /**
     * @return 日志投递类型
     * 
     */
    public Optional<Output<String>> deliveryType() {
        return Optional.ofNullable(this.deliveryType);
    }

    /**
     * 是否开启访问日志（七层）投递至对象存储TOS的功能
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return 是否开启访问日志（七层）投递至对象存储TOS的功能
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * 日志项目
     * 
     */
    @Import(name="tlsProjectId")
    private @Nullable Output<String> tlsProjectId;

    /**
     * @return 日志项目
     * 
     */
    public Optional<Output<String>> tlsProjectId() {
        return Optional.ofNullable(this.tlsProjectId);
    }

    /**
     * 日志主题
     * 
     */
    @Import(name="tlsTopicId")
    private @Nullable Output<String> tlsTopicId;

    /**
     * @return 日志主题
     * 
     */
    public Optional<Output<String>> tlsTopicId() {
        return Optional.ofNullable(this.tlsTopicId);
    }

    private ClbAccessLogArgs() {}

    private ClbAccessLogArgs(ClbAccessLogArgs $) {
        this.bucketName = $.bucketName;
        this.deliveryType = $.deliveryType;
        this.enabled = $.enabled;
        this.tlsProjectId = $.tlsProjectId;
        this.tlsTopicId = $.tlsTopicId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClbAccessLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClbAccessLogArgs $;

        public Builder() {
            $ = new ClbAccessLogArgs();
        }

        public Builder(ClbAccessLogArgs defaults) {
            $ = new ClbAccessLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucketName 存储七层访问日志的对象存储桶的名称
         * 
         * @return builder
         * 
         */
        public Builder bucketName(@Nullable Output<String> bucketName) {
            $.bucketName = bucketName;
            return this;
        }

        /**
         * @param bucketName 存储七层访问日志的对象存储桶的名称
         * 
         * @return builder
         * 
         */
        public Builder bucketName(String bucketName) {
            return bucketName(Output.of(bucketName));
        }

        /**
         * @param deliveryType 日志投递类型
         * 
         * @return builder
         * 
         */
        public Builder deliveryType(@Nullable Output<String> deliveryType) {
            $.deliveryType = deliveryType;
            return this;
        }

        /**
         * @param deliveryType 日志投递类型
         * 
         * @return builder
         * 
         */
        public Builder deliveryType(String deliveryType) {
            return deliveryType(Output.of(deliveryType));
        }

        /**
         * @param enabled 是否开启访问日志（七层）投递至对象存储TOS的功能
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled 是否开启访问日志（七层）投递至对象存储TOS的功能
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param tlsProjectId 日志项目
         * 
         * @return builder
         * 
         */
        public Builder tlsProjectId(@Nullable Output<String> tlsProjectId) {
            $.tlsProjectId = tlsProjectId;
            return this;
        }

        /**
         * @param tlsProjectId 日志项目
         * 
         * @return builder
         * 
         */
        public Builder tlsProjectId(String tlsProjectId) {
            return tlsProjectId(Output.of(tlsProjectId));
        }

        /**
         * @param tlsTopicId 日志主题
         * 
         * @return builder
         * 
         */
        public Builder tlsTopicId(@Nullable Output<String> tlsTopicId) {
            $.tlsTopicId = tlsTopicId;
            return this;
        }

        /**
         * @param tlsTopicId 日志主题
         * 
         * @return builder
         * 
         */
        public Builder tlsTopicId(String tlsTopicId) {
            return tlsTopicId(Output.of(tlsTopicId));
        }

        public ClbAccessLogArgs build() {
            return $;
        }
    }

}
