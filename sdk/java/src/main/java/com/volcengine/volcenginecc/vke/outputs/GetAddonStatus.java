// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.volcengine.volcenginecc.vke.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.volcengine.volcenginecc.vke.outputs.GetAddonStatusCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAddonStatus {
    /**
     * @return 组件当前主状态下的状态条件。
     * 
     */
    private List<GetAddonStatusCondition> conditions;
    /**
     * @return 组件的状态，参数值有：Running, Failed, Creating, Deleting, Updating
     * 
     */
    private String phase;

    private GetAddonStatus() {}
    /**
     * @return 组件当前主状态下的状态条件。
     * 
     */
    public List<GetAddonStatusCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return 组件的状态，参数值有：Running, Failed, Creating, Deleting, Updating
     * 
     */
    public String phase() {
        return this.phase;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAddonStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAddonStatusCondition> conditions;
        private String phase;
        public Builder() {}
        public Builder(GetAddonStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.phase = defaults.phase;
        }

        @CustomType.Setter
        public Builder conditions(List<GetAddonStatusCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetAddonStatus", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetAddonStatusCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder phase(String phase) {
            if (phase == null) {
              throw new MissingRequiredPropertyException("GetAddonStatus", "phase");
            }
            this.phase = phase;
            return this;
        }
        public GetAddonStatus build() {
            final var _resultValue = new GetAddonStatus();
            _resultValue.conditions = conditions;
            _resultValue.phase = phase;
            return _resultValue;
        }
    }
}
