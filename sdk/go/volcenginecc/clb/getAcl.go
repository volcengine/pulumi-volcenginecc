// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::CLB::ACL
func LookupAcl(ctx *pulumi.Context, args *LookupAclArgs, opts ...pulumi.InvokeOption) (*LookupAclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAclResult
	err := ctx.Invoke("volcenginecc:clb/getAcl:getAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAcl.
type LookupAclArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getAcl.
type LookupAclResult struct {
	// 访问控制策略组中IP条目的详细信息。
	AclEntries []GetAclAclEntry `pulumi:"aclEntries"`
	// 访问控制策略组包含的IP条目数量。
	AclEntryCount int `pulumi:"aclEntryCount"`
	// 访问控制策略组的ID。
	AclId string `pulumi:"aclId"`
	// 访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。
	AclName string `pulumi:"aclName"`
	// 访问控制策略组的创建时间。
	CreateTime string `pulumi:"createTime"`
	// 访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。
	Description string `pulumi:"description"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 访问控制策略组关联的监听器的详细信息。
	Listeners []GetAclListener `pulumi:"listeners"`
	// 访问控制策略组所属项目的名称。不填默认为default。
	ProjectName string `pulumi:"projectName"`
	// 是否为托管资源。true：是。false：否。
	ServiceManaged bool `pulumi:"serviceManaged"`
	// 访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。
	Status string `pulumi:"status"`
	// 访问控制策略组标签的详细信息。
	Tags []GetAclTag `pulumi:"tags"`
	// 访问控制策略组的最近操作时间。
	UpdateTime string `pulumi:"updateTime"`
}

func LookupAclOutput(ctx *pulumi.Context, args LookupAclOutputArgs, opts ...pulumi.InvokeOption) LookupAclResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAclResultOutput, error) {
			args := v.(LookupAclArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:clb/getAcl:getAcl", args, LookupAclResultOutput{}, options).(LookupAclResultOutput), nil
		}).(LookupAclResultOutput)
}

// A collection of arguments for invoking getAcl.
type LookupAclOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAclArgs)(nil)).Elem()
}

// A collection of values returned by getAcl.
type LookupAclResultOutput struct{ *pulumi.OutputState }

func (LookupAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAclResult)(nil)).Elem()
}

func (o LookupAclResultOutput) ToLookupAclResultOutput() LookupAclResultOutput {
	return o
}

func (o LookupAclResultOutput) ToLookupAclResultOutputWithContext(ctx context.Context) LookupAclResultOutput {
	return o
}

// 访问控制策略组中IP条目的详细信息。
func (o LookupAclResultOutput) AclEntries() GetAclAclEntryArrayOutput {
	return o.ApplyT(func(v LookupAclResult) []GetAclAclEntry { return v.AclEntries }).(GetAclAclEntryArrayOutput)
}

// 访问控制策略组包含的IP条目数量。
func (o LookupAclResultOutput) AclEntryCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAclResult) int { return v.AclEntryCount }).(pulumi.IntOutput)
}

// 访问控制策略组的ID。
func (o LookupAclResultOutput) AclId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.AclId }).(pulumi.StringOutput)
}

// 访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。
func (o LookupAclResultOutput) AclName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.AclName }).(pulumi.StringOutput)
}

// 访问控制策略组的创建时间。
func (o LookupAclResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// 访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。
func (o LookupAclResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.Description }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupAclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.Id }).(pulumi.StringOutput)
}

// 访问控制策略组关联的监听器的详细信息。
func (o LookupAclResultOutput) Listeners() GetAclListenerArrayOutput {
	return o.ApplyT(func(v LookupAclResult) []GetAclListener { return v.Listeners }).(GetAclListenerArrayOutput)
}

// 访问控制策略组所属项目的名称。不填默认为default。
func (o LookupAclResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 是否为托管资源。true：是。false：否。
func (o LookupAclResultOutput) ServiceManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAclResult) bool { return v.ServiceManaged }).(pulumi.BoolOutput)
}

// 访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。
func (o LookupAclResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.Status }).(pulumi.StringOutput)
}

// 访问控制策略组标签的详细信息。
func (o LookupAclResultOutput) Tags() GetAclTagArrayOutput {
	return o.ApplyT(func(v LookupAclResult) []GetAclTag { return v.Tags }).(GetAclTagArrayOutput)
}

// 访问控制策略组的最近操作时间。
func (o LookupAclResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAclResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAclResultOutput{})
}
