// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// NLB 实例用于接收用户的访问请求，并根据监听器和服务器组的配置设定，将访问请求转发至后端服务器。
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:clb/nlb:Nlb example "load_balancer_id"
// ```
type Nlb struct {
	pulumi.CustomResourceState

	// NLB实例所属的账号ID。
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
	BillingStatus pulumi.StringOutput `pulumi:"billingStatus"`
	// NLB实例的计费类型。3：按使用量计费
	BillingType pulumi.IntOutput `pulumi:"billingType"`
	// NLB实例的创建时间。
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
	CrossZoneEnabled pulumi.BoolOutput `pulumi:"crossZoneEnabled"`
	// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
	Description pulumi.StringOutput `pulumi:"description"`
	// NLB实例的DNS地址。
	DnsName pulumi.StringOutput `pulumi:"dnsName"`
	// NLB实例欠费关停时间。
	ExpectedOverdueTime pulumi.StringOutput `pulumi:"expectedOverdueTime"`
	// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
	IpAddressVersion pulumi.StringOutput `pulumi:"ipAddressVersion"`
	// IPv4类型的共享带宽包ID。
	Ipv4BandwidthPackageId pulumi.StringOutput `pulumi:"ipv4BandwidthPackageId"`
	// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
	Ipv4NetworkType pulumi.StringOutput `pulumi:"ipv4NetworkType"`
	// IPv6类型的共享带宽包ID。
	Ipv6BandwidthPackageId pulumi.StringOutput `pulumi:"ipv6BandwidthPackageId"`
	// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
	Ipv6NetworkType pulumi.StringOutput `pulumi:"ipv6NetworkType"`
	// NLB实例ID。
	LoadBalancerId pulumi.StringOutput `pulumi:"loadBalancerId"`
	// NLB实例的名称。
	LoadBalancerName pulumi.StringOutput `pulumi:"loadBalancerName"`
	// 系统为NLB实例自动关联的托管安全组ID。
	ManagedSecurityGroupId pulumi.StringOutput `pulumi:"managedSecurityGroupId"`
	// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
	ModificationProtectionStatus pulumi.StringOutput `pulumi:"modificationProtectionStatus"`
	// NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	OverdueTime pulumi.StringOutput `pulumi:"overdueTime"`
	// NLB实例所属项目的名称。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	ReclaimedTime pulumi.StringOutput `pulumi:"reclaimedTime"`
	// NLB实例关联的安全组ID列表。
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
	Status pulumi.StringOutput `pulumi:"status"`
	Tags   NlbTagArrayOutput   `pulumi:"tags"`
	// NLB实例的更新时间。
	UpdatedTime pulumi.StringOutput `pulumi:"updatedTime"`
	// NLB实例所属的VPC ID。
	VpcId        pulumi.StringOutput       `pulumi:"vpcId"`
	ZoneMappings NlbZoneMappingArrayOutput `pulumi:"zoneMappings"`
}

// NewNlb registers a new resource with the given unique name, arguments, and options.
func NewNlb(ctx *pulumi.Context,
	name string, args *NlbArgs, opts ...pulumi.ResourceOption) (*Nlb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ipv4NetworkType == nil {
		return nil, errors.New("invalid value for required argument 'Ipv4NetworkType'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	if args.ZoneMappings == nil {
		return nil, errors.New("invalid value for required argument 'ZoneMappings'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Nlb
	err := ctx.RegisterResource("volcenginecc:clb/nlb:Nlb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNlb gets an existing Nlb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNlb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NlbState, opts ...pulumi.ResourceOption) (*Nlb, error) {
	var resource Nlb
	err := ctx.ReadResource("volcenginecc:clb/nlb:Nlb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Nlb resources.
type nlbState struct {
	// NLB实例所属的账号ID。
	AccountId *string `pulumi:"accountId"`
	// NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
	BillingStatus *string `pulumi:"billingStatus"`
	// NLB实例的计费类型。3：按使用量计费
	BillingType *int `pulumi:"billingType"`
	// NLB实例的创建时间。
	CreatedTime *string `pulumi:"createdTime"`
	// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
	CrossZoneEnabled *bool `pulumi:"crossZoneEnabled"`
	// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
	Description *string `pulumi:"description"`
	// NLB实例的DNS地址。
	DnsName *string `pulumi:"dnsName"`
	// NLB实例欠费关停时间。
	ExpectedOverdueTime *string `pulumi:"expectedOverdueTime"`
	// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
	IpAddressVersion *string `pulumi:"ipAddressVersion"`
	// IPv4类型的共享带宽包ID。
	Ipv4BandwidthPackageId *string `pulumi:"ipv4BandwidthPackageId"`
	// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
	Ipv4NetworkType *string `pulumi:"ipv4NetworkType"`
	// IPv6类型的共享带宽包ID。
	Ipv6BandwidthPackageId *string `pulumi:"ipv6BandwidthPackageId"`
	// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
	Ipv6NetworkType *string `pulumi:"ipv6NetworkType"`
	// NLB实例ID。
	LoadBalancerId *string `pulumi:"loadBalancerId"`
	// NLB实例的名称。
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	// 系统为NLB实例自动关联的托管安全组ID。
	ManagedSecurityGroupId *string `pulumi:"managedSecurityGroupId"`
	// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
	ModificationProtectionStatus *string `pulumi:"modificationProtectionStatus"`
	// NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	OverdueTime *string `pulumi:"overdueTime"`
	// NLB实例所属项目的名称。
	ProjectName *string `pulumi:"projectName"`
	// NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	ReclaimedTime *string `pulumi:"reclaimedTime"`
	// NLB实例关联的安全组ID列表。
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
	Status *string  `pulumi:"status"`
	Tags   []NlbTag `pulumi:"tags"`
	// NLB实例的更新时间。
	UpdatedTime *string `pulumi:"updatedTime"`
	// NLB实例所属的VPC ID。
	VpcId        *string          `pulumi:"vpcId"`
	ZoneMappings []NlbZoneMapping `pulumi:"zoneMappings"`
}

type NlbState struct {
	// NLB实例所属的账号ID。
	AccountId pulumi.StringPtrInput
	// NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
	BillingStatus pulumi.StringPtrInput
	// NLB实例的计费类型。3：按使用量计费
	BillingType pulumi.IntPtrInput
	// NLB实例的创建时间。
	CreatedTime pulumi.StringPtrInput
	// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
	CrossZoneEnabled pulumi.BoolPtrInput
	// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
	Description pulumi.StringPtrInput
	// NLB实例的DNS地址。
	DnsName pulumi.StringPtrInput
	// NLB实例欠费关停时间。
	ExpectedOverdueTime pulumi.StringPtrInput
	// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
	IpAddressVersion pulumi.StringPtrInput
	// IPv4类型的共享带宽包ID。
	Ipv4BandwidthPackageId pulumi.StringPtrInput
	// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
	Ipv4NetworkType pulumi.StringPtrInput
	// IPv6类型的共享带宽包ID。
	Ipv6BandwidthPackageId pulumi.StringPtrInput
	// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
	Ipv6NetworkType pulumi.StringPtrInput
	// NLB实例ID。
	LoadBalancerId pulumi.StringPtrInput
	// NLB实例的名称。
	LoadBalancerName pulumi.StringPtrInput
	// 系统为NLB实例自动关联的托管安全组ID。
	ManagedSecurityGroupId pulumi.StringPtrInput
	// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
	ModificationProtectionStatus pulumi.StringPtrInput
	// NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	OverdueTime pulumi.StringPtrInput
	// NLB实例所属项目的名称。
	ProjectName pulumi.StringPtrInput
	// NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	ReclaimedTime pulumi.StringPtrInput
	// NLB实例关联的安全组ID列表。
	SecurityGroupIds pulumi.StringArrayInput
	// NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
	Status pulumi.StringPtrInput
	Tags   NlbTagArrayInput
	// NLB实例的更新时间。
	UpdatedTime pulumi.StringPtrInput
	// NLB实例所属的VPC ID。
	VpcId        pulumi.StringPtrInput
	ZoneMappings NlbZoneMappingArrayInput
}

func (NlbState) ElementType() reflect.Type {
	return reflect.TypeOf((*nlbState)(nil)).Elem()
}

type nlbArgs struct {
	// NLB实例所属的账号ID。
	AccountId *string `pulumi:"accountId"`
	// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
	CrossZoneEnabled *bool `pulumi:"crossZoneEnabled"`
	// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
	Description *string `pulumi:"description"`
	// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
	IpAddressVersion *string `pulumi:"ipAddressVersion"`
	// IPv4类型的共享带宽包ID。
	Ipv4BandwidthPackageId *string `pulumi:"ipv4BandwidthPackageId"`
	// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
	Ipv4NetworkType string `pulumi:"ipv4NetworkType"`
	// IPv6类型的共享带宽包ID。
	Ipv6BandwidthPackageId *string `pulumi:"ipv6BandwidthPackageId"`
	// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
	Ipv6NetworkType *string `pulumi:"ipv6NetworkType"`
	// NLB实例的名称。
	LoadBalancerName *string `pulumi:"loadBalancerName"`
	// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
	ModificationProtectionStatus *string `pulumi:"modificationProtectionStatus"`
	// NLB实例所属项目的名称。
	ProjectName *string `pulumi:"projectName"`
	// NLB实例关联的安全组ID列表。
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Tags             []NlbTag `pulumi:"tags"`
	// NLB实例所属的VPC ID。
	VpcId        string           `pulumi:"vpcId"`
	ZoneMappings []NlbZoneMapping `pulumi:"zoneMappings"`
}

// The set of arguments for constructing a Nlb resource.
type NlbArgs struct {
	// NLB实例所属的账号ID。
	AccountId pulumi.StringPtrInput
	// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
	CrossZoneEnabled pulumi.BoolPtrInput
	// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
	Description pulumi.StringPtrInput
	// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
	IpAddressVersion pulumi.StringPtrInput
	// IPv4类型的共享带宽包ID。
	Ipv4BandwidthPackageId pulumi.StringPtrInput
	// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
	Ipv4NetworkType pulumi.StringInput
	// IPv6类型的共享带宽包ID。
	Ipv6BandwidthPackageId pulumi.StringPtrInput
	// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
	Ipv6NetworkType pulumi.StringPtrInput
	// NLB实例的名称。
	LoadBalancerName pulumi.StringPtrInput
	// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
	ModificationProtectionStatus pulumi.StringPtrInput
	// NLB实例所属项目的名称。
	ProjectName pulumi.StringPtrInput
	// NLB实例关联的安全组ID列表。
	SecurityGroupIds pulumi.StringArrayInput
	Tags             NlbTagArrayInput
	// NLB实例所属的VPC ID。
	VpcId        pulumi.StringInput
	ZoneMappings NlbZoneMappingArrayInput
}

func (NlbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nlbArgs)(nil)).Elem()
}

type NlbInput interface {
	pulumi.Input

	ToNlbOutput() NlbOutput
	ToNlbOutputWithContext(ctx context.Context) NlbOutput
}

func (*Nlb) ElementType() reflect.Type {
	return reflect.TypeOf((**Nlb)(nil)).Elem()
}

func (i *Nlb) ToNlbOutput() NlbOutput {
	return i.ToNlbOutputWithContext(context.Background())
}

func (i *Nlb) ToNlbOutputWithContext(ctx context.Context) NlbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NlbOutput)
}

// NlbArrayInput is an input type that accepts NlbArray and NlbArrayOutput values.
// You can construct a concrete instance of `NlbArrayInput` via:
//
//	NlbArray{ NlbArgs{...} }
type NlbArrayInput interface {
	pulumi.Input

	ToNlbArrayOutput() NlbArrayOutput
	ToNlbArrayOutputWithContext(context.Context) NlbArrayOutput
}

type NlbArray []NlbInput

func (NlbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Nlb)(nil)).Elem()
}

func (i NlbArray) ToNlbArrayOutput() NlbArrayOutput {
	return i.ToNlbArrayOutputWithContext(context.Background())
}

func (i NlbArray) ToNlbArrayOutputWithContext(ctx context.Context) NlbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NlbArrayOutput)
}

// NlbMapInput is an input type that accepts NlbMap and NlbMapOutput values.
// You can construct a concrete instance of `NlbMapInput` via:
//
//	NlbMap{ "key": NlbArgs{...} }
type NlbMapInput interface {
	pulumi.Input

	ToNlbMapOutput() NlbMapOutput
	ToNlbMapOutputWithContext(context.Context) NlbMapOutput
}

type NlbMap map[string]NlbInput

func (NlbMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Nlb)(nil)).Elem()
}

func (i NlbMap) ToNlbMapOutput() NlbMapOutput {
	return i.ToNlbMapOutputWithContext(context.Background())
}

func (i NlbMap) ToNlbMapOutputWithContext(ctx context.Context) NlbMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NlbMapOutput)
}

type NlbOutput struct{ *pulumi.OutputState }

func (NlbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Nlb)(nil)).Elem()
}

func (o NlbOutput) ToNlbOutput() NlbOutput {
	return o
}

func (o NlbOutput) ToNlbOutputWithContext(ctx context.Context) NlbOutput {
	return o
}

// NLB实例所属的账号ID。
func (o NlbOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
func (o NlbOutput) BillingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.BillingStatus }).(pulumi.StringOutput)
}

// NLB实例的计费类型。3：按使用量计费
func (o NlbOutput) BillingType() pulumi.IntOutput {
	return o.ApplyT(func(v *Nlb) pulumi.IntOutput { return v.BillingType }).(pulumi.IntOutput)
}

// NLB实例的创建时间。
func (o NlbOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
func (o NlbOutput) CrossZoneEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Nlb) pulumi.BoolOutput { return v.CrossZoneEnabled }).(pulumi.BoolOutput)
}

// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
func (o NlbOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// NLB实例的DNS地址。
func (o NlbOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

// NLB实例欠费关停时间。
func (o NlbOutput) ExpectedOverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.ExpectedOverdueTime }).(pulumi.StringOutput)
}

// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
func (o NlbOutput) IpAddressVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.IpAddressVersion }).(pulumi.StringOutput)
}

// IPv4类型的共享带宽包ID。
func (o NlbOutput) Ipv4BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.Ipv4BandwidthPackageId }).(pulumi.StringOutput)
}

// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
func (o NlbOutput) Ipv4NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.Ipv4NetworkType }).(pulumi.StringOutput)
}

// IPv6类型的共享带宽包ID。
func (o NlbOutput) Ipv6BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.Ipv6BandwidthPackageId }).(pulumi.StringOutput)
}

// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
func (o NlbOutput) Ipv6NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.Ipv6NetworkType }).(pulumi.StringOutput)
}

// NLB实例ID。
func (o NlbOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// NLB实例的名称。
func (o NlbOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// 系统为NLB实例自动关联的托管安全组ID。
func (o NlbOutput) ManagedSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.ManagedSecurityGroupId }).(pulumi.StringOutput)
}

// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
func (o NlbOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
func (o NlbOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.OverdueTime }).(pulumi.StringOutput)
}

// NLB实例所属项目的名称。
func (o NlbOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
func (o NlbOutput) ReclaimedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.ReclaimedTime }).(pulumi.StringOutput)
}

// NLB实例关联的安全组ID列表。
func (o NlbOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
func (o NlbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o NlbOutput) Tags() NlbTagArrayOutput {
	return o.ApplyT(func(v *Nlb) NlbTagArrayOutput { return v.Tags }).(NlbTagArrayOutput)
}

// NLB实例的更新时间。
func (o NlbOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.UpdatedTime }).(pulumi.StringOutput)
}

// NLB实例所属的VPC ID。
func (o NlbOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Nlb) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o NlbOutput) ZoneMappings() NlbZoneMappingArrayOutput {
	return o.ApplyT(func(v *Nlb) NlbZoneMappingArrayOutput { return v.ZoneMappings }).(NlbZoneMappingArrayOutput)
}

type NlbArrayOutput struct{ *pulumi.OutputState }

func (NlbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Nlb)(nil)).Elem()
}

func (o NlbArrayOutput) ToNlbArrayOutput() NlbArrayOutput {
	return o
}

func (o NlbArrayOutput) ToNlbArrayOutputWithContext(ctx context.Context) NlbArrayOutput {
	return o
}

func (o NlbArrayOutput) Index(i pulumi.IntInput) NlbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Nlb {
		return vs[0].([]*Nlb)[vs[1].(int)]
	}).(NlbOutput)
}

type NlbMapOutput struct{ *pulumi.OutputState }

func (NlbMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Nlb)(nil)).Elem()
}

func (o NlbMapOutput) ToNlbMapOutput() NlbMapOutput {
	return o
}

func (o NlbMapOutput) ToNlbMapOutputWithContext(ctx context.Context) NlbMapOutput {
	return o
}

func (o NlbMapOutput) MapIndex(k pulumi.StringInput) NlbOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Nlb {
		return vs[0].(map[string]*Nlb)[vs[1].(string)]
	}).(NlbOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NlbInput)(nil)).Elem(), &Nlb{})
	pulumi.RegisterInputType(reflect.TypeOf((*NlbArrayInput)(nil)).Elem(), NlbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NlbMapInput)(nil)).Elem(), NlbMap{})
	pulumi.RegisterOutputType(NlbOutput{})
	pulumi.RegisterOutputType(NlbArrayOutput{})
	pulumi.RegisterOutputType(NlbMapOutput{})
}
