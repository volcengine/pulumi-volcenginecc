// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::CLB::NLB
func LookupNlb(ctx *pulumi.Context, args *LookupNlbArgs, opts ...pulumi.InvokeOption) (*LookupNlbResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNlbResult
	err := ctx.Invoke("volcenginecc:clb/getNlb:getNlb", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNlb.
type LookupNlbArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getNlb.
type LookupNlbResult struct {
	// NLB实例所属的账号ID。
	AccountId string `pulumi:"accountId"`
	// NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
	BillingStatus string `pulumi:"billingStatus"`
	// NLB实例的计费类型。3：按使用量计费
	BillingType int `pulumi:"billingType"`
	// NLB实例的创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
	CrossZoneEnabled bool `pulumi:"crossZoneEnabled"`
	// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
	Description string `pulumi:"description"`
	// NLB实例的DNS地址。
	DnsName string `pulumi:"dnsName"`
	// NLB实例欠费关停时间。
	ExpectedOverdueTime string `pulumi:"expectedOverdueTime"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
	IpAddressVersion string `pulumi:"ipAddressVersion"`
	// IPv4类型的共享带宽包ID。
	Ipv4BandwidthPackageId string `pulumi:"ipv4BandwidthPackageId"`
	// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
	Ipv4NetworkType string `pulumi:"ipv4NetworkType"`
	// IPv6类型的共享带宽包ID。
	Ipv6BandwidthPackageId string `pulumi:"ipv6BandwidthPackageId"`
	// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
	Ipv6NetworkType string `pulumi:"ipv6NetworkType"`
	// NLB实例ID。
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// NLB实例的名称。
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// 系统为NLB实例自动关联的托管安全组ID。
	ManagedSecurityGroupId string `pulumi:"managedSecurityGroupId"`
	// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
	ModificationProtectionStatus string `pulumi:"modificationProtectionStatus"`
	// NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	OverdueTime string `pulumi:"overdueTime"`
	// NLB实例所属项目的名称。
	ProjectName string `pulumi:"projectName"`
	// NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
	ReclaimedTime string `pulumi:"reclaimedTime"`
	// NLB实例关联的安全组ID列表。
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
	Status string `pulumi:"status"`
	// NLB实例的标签信息。
	Tags []GetNlbTag `pulumi:"tags"`
	// NLB实例的更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
	// NLB实例所属的VPC ID。
	VpcId string `pulumi:"vpcId"`
	// NLB实例的可用区信息。
	ZoneMappings []GetNlbZoneMapping `pulumi:"zoneMappings"`
}

func LookupNlbOutput(ctx *pulumi.Context, args LookupNlbOutputArgs, opts ...pulumi.InvokeOption) LookupNlbResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNlbResultOutput, error) {
			args := v.(LookupNlbArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:clb/getNlb:getNlb", args, LookupNlbResultOutput{}, options).(LookupNlbResultOutput), nil
		}).(LookupNlbResultOutput)
}

// A collection of arguments for invoking getNlb.
type LookupNlbOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupNlbOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNlbArgs)(nil)).Elem()
}

// A collection of values returned by getNlb.
type LookupNlbResultOutput struct{ *pulumi.OutputState }

func (LookupNlbResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNlbResult)(nil)).Elem()
}

func (o LookupNlbResultOutput) ToLookupNlbResultOutput() LookupNlbResultOutput {
	return o
}

func (o LookupNlbResultOutput) ToLookupNlbResultOutputWithContext(ctx context.Context) LookupNlbResultOutput {
	return o
}

// NLB实例所属的账号ID。
func (o LookupNlbResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
func (o LookupNlbResultOutput) BillingStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.BillingStatus }).(pulumi.StringOutput)
}

// NLB实例的计费类型。3：按使用量计费
func (o LookupNlbResultOutput) BillingType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupNlbResult) int { return v.BillingType }).(pulumi.IntOutput)
}

// NLB实例的创建时间。
func (o LookupNlbResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
func (o LookupNlbResultOutput) CrossZoneEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupNlbResult) bool { return v.CrossZoneEnabled }).(pulumi.BoolOutput)
}

// NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
func (o LookupNlbResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Description }).(pulumi.StringOutput)
}

// NLB实例的DNS地址。
func (o LookupNlbResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.DnsName }).(pulumi.StringOutput)
}

// NLB实例欠费关停时间。
func (o LookupNlbResultOutput) ExpectedOverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.ExpectedOverdueTime }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupNlbResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Id }).(pulumi.StringOutput)
}

// NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
func (o LookupNlbResultOutput) IpAddressVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.IpAddressVersion }).(pulumi.StringOutput)
}

// IPv4类型的共享带宽包ID。
func (o LookupNlbResultOutput) Ipv4BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Ipv4BandwidthPackageId }).(pulumi.StringOutput)
}

// NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
func (o LookupNlbResultOutput) Ipv4NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Ipv4NetworkType }).(pulumi.StringOutput)
}

// IPv6类型的共享带宽包ID。
func (o LookupNlbResultOutput) Ipv6BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Ipv6BandwidthPackageId }).(pulumi.StringOutput)
}

// NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
func (o LookupNlbResultOutput) Ipv6NetworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Ipv6NetworkType }).(pulumi.StringOutput)
}

// NLB实例ID。
func (o LookupNlbResultOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// NLB实例的名称。
func (o LookupNlbResultOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// 系统为NLB实例自动关联的托管安全组ID。
func (o LookupNlbResultOutput) ManagedSecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.ManagedSecurityGroupId }).(pulumi.StringOutput)
}

// NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
func (o LookupNlbResultOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
func (o LookupNlbResultOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// NLB实例所属项目的名称。
func (o LookupNlbResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
func (o LookupNlbResultOutput) ReclaimedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.ReclaimedTime }).(pulumi.StringOutput)
}

// NLB实例关联的安全组ID列表。
func (o LookupNlbResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupNlbResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
func (o LookupNlbResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.Status }).(pulumi.StringOutput)
}

// NLB实例的标签信息。
func (o LookupNlbResultOutput) Tags() GetNlbTagArrayOutput {
	return o.ApplyT(func(v LookupNlbResult) []GetNlbTag { return v.Tags }).(GetNlbTagArrayOutput)
}

// NLB实例的更新时间。
func (o LookupNlbResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// NLB实例所属的VPC ID。
func (o LookupNlbResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNlbResult) string { return v.VpcId }).(pulumi.StringOutput)
}

// NLB实例的可用区信息。
func (o LookupNlbResultOutput) ZoneMappings() GetNlbZoneMappingArrayOutput {
	return o.ApplyT(func(v LookupNlbResult) []GetNlbZoneMapping { return v.ZoneMappings }).(GetNlbZoneMappingArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNlbResultOutput{})
}
