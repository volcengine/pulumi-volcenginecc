// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::ALB::LoadBalancer
func LookupLoadBalancer(ctx *pulumi.Context, args *LookupLoadBalancerArgs, opts ...pulumi.InvokeOption) (*LookupLoadBalancerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadBalancerResult
	err := ctx.Invoke("volcenginecc:alb/getLoadBalancer:getLoadBalancer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResult struct {
	// ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&IPv6 双栈类型。
	AddressIpVersion string `pulumi:"addressIpVersion"`
	// 绑定的共享带宽包ID，可实现带宽共享。
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// ALB 实例的服务状态。Normal：正常；FinancialLocked：因欠费被锁定。
	BusinessStatus string `pulumi:"businessStatus"`
	// ALB 实例的创建时间。
	CreateTime string `pulumi:"createTime"`
	// 删除保护开关。on：开启；off：关闭。
	DeleteProtection string `pulumi:"deleteProtection"`
	// ALB 实例的预期回收时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
	DeletedTime string `pulumi:"deletedTime"`
	// ALB 实例的描述。
	Description string `pulumi:"description"`
	// DNS域名。
	DnsName string `pulumi:"dnsName"`
	// 公网IP的计费配置，仅适用于公网实例。
	EipBillingConfig GetLoadBalancerEipBillingConfig `pulumi:"eipBillingConfig"`
	// 全球加速器配置，用于提升跨地域访问速度。
	GlobalAccelerator GetLoadBalancerGlobalAccelerator `pulumi:"globalAccelerator"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// IPv6公网IP的计費配置，仅适用于公网实例。
	Ipv6EipBillingConfig GetLoadBalancerIpv6EipBillingConfig `pulumi:"ipv6EipBillingConfig"`
	// ALB实例计费类型，当前仅支持按量计费（取值为1）。
	LoadBalancerBillingType int `pulumi:"loadBalancerBillingType"`
	// 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
	LoadBalancerEdition string `pulumi:"loadBalancerEdition"`
	// ALB 实例 ID。
	LoadBalancerId string `pulumi:"loadBalancerId"`
	// ALB 实例的名称。
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// ALB 实例被冻结的原因，例如 Financial（欠费）或 Security（安全原因）。仅在实例被锁定时返回。
	LockReason string `pulumi:"lockReason"`
	// 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
	ModificationProtectionReason string `pulumi:"modificationProtectionReason"`
	// 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
	ModificationProtectionStatus string `pulumi:"modificationProtectionStatus"`
	// ALB 实例的冻结时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
	OverdueTime string `pulumi:"overdueTime"`
	// 实例所属项目名称。
	ProjectName string `pulumi:"projectName"`
	// ALB 实例状态：Active（运行中）、Provisioning（创建中）、Configuring（配置中）、Deleting（删除中）、CreateFailed（创建失败）、Inactive（已停止）。
	Status string `pulumi:"status"`
	// 为实例绑定的标签列表，用于分类和计费。
	Tags []GetLoadBalancerTag `pulumi:"tags"`
	// ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
	Type string `pulumi:"type"`
	// ALB 实例的最后更新时间。
	UpdateTime string `pulumi:"updateTime"`
	// 负载均衡实例所属的私有网络（VPC）的ID。
	VpcId string `pulumi:"vpcId"`
	// ALB 实例绑定的 WAF 安全防护实例 ID。
	WafInstanceId string `pulumi:"wafInstanceId"`
	// WAF防护的域名，用于精确匹配防护规则。
	WafProtectedDomain string `pulumi:"wafProtectedDomain"`
	// WAF 安全防护开关。on：开启；off：关闭。
	WafProtectionEnabled string `pulumi:"wafProtectionEnabled"`
	// 可用区映射列表，定义了实例在哪些可用区提供服务。
	ZoneMappings []GetLoadBalancerZoneMapping `pulumi:"zoneMappings"`
}

func LookupLoadBalancerOutput(ctx *pulumi.Context, args LookupLoadBalancerOutputArgs, opts ...pulumi.InvokeOption) LookupLoadBalancerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLoadBalancerResultOutput, error) {
			args := v.(LookupLoadBalancerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:alb/getLoadBalancer:getLoadBalancer", args, LookupLoadBalancerResultOutput{}, options).(LookupLoadBalancerResultOutput), nil
		}).(LookupLoadBalancerResultOutput)
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupLoadBalancerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerArgs)(nil)).Elem()
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResultOutput struct{ *pulumi.OutputState }

func (LookupLoadBalancerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerResult)(nil)).Elem()
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutput() LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutputWithContext(ctx context.Context) LookupLoadBalancerResultOutput {
	return o
}

// ALB 实例的 IP 类型。IPv4：IPv4 类型；DualStack：IPv4&IPv6 双栈类型。
func (o LookupLoadBalancerResultOutput) AddressIpVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.AddressIpVersion }).(pulumi.StringOutput)
}

// 绑定的共享带宽包ID，可实现带宽共享。
func (o LookupLoadBalancerResultOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// ALB 实例的服务状态。Normal：正常；FinancialLocked：因欠费被锁定。
func (o LookupLoadBalancerResultOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// ALB 实例的创建时间。
func (o LookupLoadBalancerResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// 删除保护开关。on：开启；off：关闭。
func (o LookupLoadBalancerResultOutput) DeleteProtection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.DeleteProtection }).(pulumi.StringOutput)
}

// ALB 实例的预期回收时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
func (o LookupLoadBalancerResultOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// ALB 实例的描述。
func (o LookupLoadBalancerResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Description }).(pulumi.StringOutput)
}

// DNS域名。
func (o LookupLoadBalancerResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.DnsName }).(pulumi.StringOutput)
}

// 公网IP的计费配置，仅适用于公网实例。
func (o LookupLoadBalancerResultOutput) EipBillingConfig() GetLoadBalancerEipBillingConfigOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) GetLoadBalancerEipBillingConfig { return v.EipBillingConfig }).(GetLoadBalancerEipBillingConfigOutput)
}

// 全球加速器配置，用于提升跨地域访问速度。
func (o LookupLoadBalancerResultOutput) GlobalAccelerator() GetLoadBalancerGlobalAcceleratorOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) GetLoadBalancerGlobalAccelerator { return v.GlobalAccelerator }).(GetLoadBalancerGlobalAcceleratorOutput)
}

// Uniquely identifies the resource.
func (o LookupLoadBalancerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Id }).(pulumi.StringOutput)
}

// IPv6公网IP的计費配置，仅适用于公网实例。
func (o LookupLoadBalancerResultOutput) Ipv6EipBillingConfig() GetLoadBalancerIpv6EipBillingConfigOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) GetLoadBalancerIpv6EipBillingConfig { return v.Ipv6EipBillingConfig }).(GetLoadBalancerIpv6EipBillingConfigOutput)
}

// ALB实例计费类型，当前仅支持按量计费（取值为1）。
func (o LookupLoadBalancerResultOutput) LoadBalancerBillingType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) int { return v.LoadBalancerBillingType }).(pulumi.IntOutput)
}

// 应用型负载均衡的版本。Basic：基础版；Standard：标准版。
func (o LookupLoadBalancerResultOutput) LoadBalancerEdition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LoadBalancerEdition }).(pulumi.StringOutput)
}

// ALB 实例 ID。
func (o LookupLoadBalancerResultOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

// ALB 实例的名称。
func (o LookupLoadBalancerResultOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

// ALB 实例被冻结的原因，例如 Financial（欠费）或 Security（安全原因）。仅在实例被锁定时返回。
func (o LookupLoadBalancerResultOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LockReason }).(pulumi.StringOutput)
}

// 修改保护原因。仅在 ModificationProtectionStatus 为 ConsoleProtection 时，该参数有效且合法。
func (o LookupLoadBalancerResultOutput) ModificationProtectionReason() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.ModificationProtectionReason }).(pulumi.StringOutput)
}

// 修改保护状态。NonProtection：不保护；ConsoleProtection：控制台修改保护，通过控制台无法修改实例配置。
func (o LookupLoadBalancerResultOutput) ModificationProtectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.ModificationProtectionStatus }).(pulumi.StringOutput)
}

// ALB 实例的冻结时间。该参数只有实例处于 FinancialLocked 状态时有返回值。
func (o LookupLoadBalancerResultOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// 实例所属项目名称。
func (o LookupLoadBalancerResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// ALB 实例状态：Active（运行中）、Provisioning（创建中）、Configuring（配置中）、Deleting（删除中）、CreateFailed（创建失败）、Inactive（已停止）。
func (o LookupLoadBalancerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Status }).(pulumi.StringOutput)
}

// 为实例绑定的标签列表，用于分类和计费。
func (o LookupLoadBalancerResultOutput) Tags() GetLoadBalancerTagArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerTag { return v.Tags }).(GetLoadBalancerTagArrayOutput)
}

// ALB 实例的类型。取值是 public 或 private 。public：表示创建一个公网负载均衡实例，系统会分配一个公网IP地址和一个私网IP地址，可用于转发公网请求和私网请求。private：表示创建一个私网负载均衡实例，系统会分配一个私网IP地址，仅用于转发私网请求。
func (o LookupLoadBalancerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Type }).(pulumi.StringOutput)
}

// ALB 实例的最后更新时间。
func (o LookupLoadBalancerResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

// 负载均衡实例所属的私有网络（VPC）的ID。
func (o LookupLoadBalancerResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.VpcId }).(pulumi.StringOutput)
}

// ALB 实例绑定的 WAF 安全防护实例 ID。
func (o LookupLoadBalancerResultOutput) WafInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.WafInstanceId }).(pulumi.StringOutput)
}

// WAF防护的域名，用于精确匹配防护规则。
func (o LookupLoadBalancerResultOutput) WafProtectedDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.WafProtectedDomain }).(pulumi.StringOutput)
}

// WAF 安全防护开关。on：开启；off：关闭。
func (o LookupLoadBalancerResultOutput) WafProtectionEnabled() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.WafProtectionEnabled }).(pulumi.StringOutput)
}

// 可用区映射列表，定义了实例在哪些可用区提供服务。
func (o LookupLoadBalancerResultOutput) ZoneMappings() GetLoadBalancerZoneMappingArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerZoneMapping { return v.ZoneMappings }).(GetLoadBalancerZoneMappingArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadBalancerResultOutput{})
}
