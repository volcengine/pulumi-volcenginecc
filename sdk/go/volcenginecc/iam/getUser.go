// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::IAM::User
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserResult
	err := ctx.Invoke("volcenginecc:iam/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	// 子用户归属的主账号。
	AccountId float64 `pulumi:"accountId"`
	// 子用户对应的创建时间。
	CreateDate string `pulumi:"createDate"`
	// 子用户对应的描述信息，长度不超过255。
	Description string `pulumi:"description"`
	// 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_@符号。
	DisplayName string `pulumi:"displayName"`
	// 子用户对应的电子邮件地址。
	Email string `pulumi:"email"`
	// 子用户归属的用户组。
	Groups []string `pulumi:"groups"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 子用户的登录配置。
	LoginProfile GetUserLoginProfile `pulumi:"loginProfile"`
	// 子用户对应的手机号。
	MobilePhone string `pulumi:"mobilePhone"`
	// 子用户对应的权限策略。
	Policies []GetUserPolicy `pulumi:"policies"`
	// 子用户的操作保护配置。
	SecurityConfig GetUserSecurityConfig `pulumi:"securityConfig"`
	// 子用户对应的资源标签。
	Tags []GetUserTag `pulumi:"tags"`
	// 子用户对应的Trn表达式。
	Trn string `pulumi:"trn"`
	// 子用户对应的更新时间。
	UpdateDate string `pulumi:"updateDate"`
	// 子用户的ID。
	UserId int `pulumi:"userId"`
	// 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-@符号。
	UserName string `pulumi:"userName"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserResultOutput, error) {
			args := v.(LookupUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:iam/getUser:getUser", args, LookupUserResultOutput{}, options).(LookupUserResultOutput), nil
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

// 子用户归属的主账号。
func (o LookupUserResultOutput) AccountId() pulumi.Float64Output {
	return o.ApplyT(func(v LookupUserResult) float64 { return v.AccountId }).(pulumi.Float64Output)
}

// 子用户对应的创建时间。
func (o LookupUserResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// 子用户对应的描述信息，长度不超过255。
func (o LookupUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Description }).(pulumi.StringOutput)
}

// 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_@符号。
func (o LookupUserResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// 子用户对应的电子邮件地址。
func (o LookupUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Email }).(pulumi.StringOutput)
}

// 子用户归属的用户组。
func (o LookupUserResultOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Uniquely identifies the resource.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// 子用户的登录配置。
func (o LookupUserResultOutput) LoginProfile() GetUserLoginProfileOutput {
	return o.ApplyT(func(v LookupUserResult) GetUserLoginProfile { return v.LoginProfile }).(GetUserLoginProfileOutput)
}

// 子用户对应的手机号。
func (o LookupUserResultOutput) MobilePhone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.MobilePhone }).(pulumi.StringOutput)
}

// 子用户对应的权限策略。
func (o LookupUserResultOutput) Policies() GetUserPolicyArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserPolicy { return v.Policies }).(GetUserPolicyArrayOutput)
}

// 子用户的操作保护配置。
func (o LookupUserResultOutput) SecurityConfig() GetUserSecurityConfigOutput {
	return o.ApplyT(func(v LookupUserResult) GetUserSecurityConfig { return v.SecurityConfig }).(GetUserSecurityConfigOutput)
}

// 子用户对应的资源标签。
func (o LookupUserResultOutput) Tags() GetUserTagArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserTag { return v.Tags }).(GetUserTagArrayOutput)
}

// 子用户对应的Trn表达式。
func (o LookupUserResultOutput) Trn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Trn }).(pulumi.StringOutput)
}

// 子用户对应的更新时间。
func (o LookupUserResultOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.UpdateDate }).(pulumi.StringOutput)
}

// 子用户的ID。
func (o LookupUserResultOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserResult) int { return v.UserId }).(pulumi.IntOutput)
}

// 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-@符号。
func (o LookupUserResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
