// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::IAM::Role
func LookupRole(ctx *pulumi.Context, args *LookupRoleArgs, opts ...pulumi.InvokeOption) (*LookupRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRoleResult
	err := ctx.Invoke("volcenginecc:iam/getRole:getRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRole.
type LookupRoleArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getRole.
type LookupRoleResult struct {
	// 角色创建时间。
	CreateDate string `pulumi:"createDate"`
	// 角色描述，长度不超过128。
	Description string `pulumi:"description"`
	// 角色显示名，长度不超过64。
	DisplayName string `pulumi:"displayName"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 是否是服务关联角色, 0否，1是。
	IsServiceLinkedRole int `pulumi:"isServiceLinkedRole"`
	// 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
	MaxSessionDuration int             `pulumi:"maxSessionDuration"`
	Policies           []GetRolePolicy `pulumi:"policies"`
	// 角色ID。
	RoleId int `pulumi:"roleId"`
	// 角色名，长度1~64，支持英文、数字和.-_符号。
	RoleName string       `pulumi:"roleName"`
	Tags     []GetRoleTag `pulumi:"tags"`
	// 角色TRN。
	Trn string `pulumi:"trn"`
	// 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
	TrustPolicyDocument string `pulumi:"trustPolicyDocument"`
	// 角色更新时间。
	UpdateDate string `pulumi:"updateDate"`
}

func LookupRoleOutput(ctx *pulumi.Context, args LookupRoleOutputArgs, opts ...pulumi.InvokeOption) LookupRoleResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRoleResultOutput, error) {
			args := v.(LookupRoleArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:iam/getRole:getRole", args, LookupRoleResultOutput{}, options).(LookupRoleResultOutput), nil
		}).(LookupRoleResultOutput)
}

// A collection of arguments for invoking getRole.
type LookupRoleOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleArgs)(nil)).Elem()
}

// A collection of values returned by getRole.
type LookupRoleResultOutput struct{ *pulumi.OutputState }

func (LookupRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleResult)(nil)).Elem()
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutput() LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutputWithContext(ctx context.Context) LookupRoleResultOutput {
	return o
}

// 角色创建时间。
func (o LookupRoleResultOutput) CreateDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.CreateDate }).(pulumi.StringOutput)
}

// 角色描述，长度不超过128。
func (o LookupRoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Description }).(pulumi.StringOutput)
}

// 角色显示名，长度不超过64。
func (o LookupRoleResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// 是否是服务关联角色, 0否，1是。
func (o LookupRoleResultOutput) IsServiceLinkedRole() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRoleResult) int { return v.IsServiceLinkedRole }).(pulumi.IntOutput)
}

// 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
func (o LookupRoleResultOutput) MaxSessionDuration() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRoleResult) int { return v.MaxSessionDuration }).(pulumi.IntOutput)
}

func (o LookupRoleResultOutput) Policies() GetRolePolicyArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []GetRolePolicy { return v.Policies }).(GetRolePolicyArrayOutput)
}

// 角色ID。
func (o LookupRoleResultOutput) RoleId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRoleResult) int { return v.RoleId }).(pulumi.IntOutput)
}

// 角色名，长度1~64，支持英文、数字和.-_符号。
func (o LookupRoleResultOutput) RoleName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.RoleName }).(pulumi.StringOutput)
}

func (o LookupRoleResultOutput) Tags() GetRoleTagArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []GetRoleTag { return v.Tags }).(GetRoleTagArrayOutput)
}

// 角色TRN。
func (o LookupRoleResultOutput) Trn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.Trn }).(pulumi.StringOutput)
}

// 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
func (o LookupRoleResultOutput) TrustPolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.TrustPolicyDocument }).(pulumi.StringOutput)
}

// 角色更新时间。
func (o LookupRoleResultOutput) UpdateDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRoleResult) string { return v.UpdateDate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleResultOutput{})
}
