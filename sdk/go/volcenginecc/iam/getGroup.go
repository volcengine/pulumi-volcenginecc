// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::IAM::Group
func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupResult
	err := ctx.Invoke("volcenginecc:iam/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	// 用户组所属主账号的ID。
	AccountId int `pulumi:"accountId"`
	// 用户组绑定的策略信息。
	AttachedPolicys []GetGroupAttachedPolicy `pulumi:"attachedPolicys"`
	// 用户组的创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 用户组描述信息。长度不超过128。
	Description string `pulumi:"description"`
	// 用户组显示名称。长度不超过64。
	DisplayName string `pulumi:"displayName"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 用户组的更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
	// 用户组ID。
	UserGroupId int `pulumi:"userGroupId"`
	// 用户组名称。长度1~64，支持英文、数字和.-_符号。
	UserGroupName string `pulumi:"userGroupName"`
	// 用户组内绑定的用户信息。
	Users []GetGroupUser `pulumi:"users"`
}

func LookupGroupOutput(ctx *pulumi.Context, args LookupGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGroupResultOutput, error) {
			args := v.(LookupGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:iam/getGroup:getGroup", args, LookupGroupResultOutput{}, options).(LookupGroupResultOutput), nil
		}).(LookupGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type LookupGroupOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type LookupGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupResult)(nil)).Elem()
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutput() LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutputWithContext(ctx context.Context) LookupGroupResultOutput {
	return o
}

// 用户组所属主账号的ID。
func (o LookupGroupResultOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGroupResult) int { return v.AccountId }).(pulumi.IntOutput)
}

// 用户组绑定的策略信息。
func (o LookupGroupResultOutput) AttachedPolicys() GetGroupAttachedPolicyArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []GetGroupAttachedPolicy { return v.AttachedPolicys }).(GetGroupAttachedPolicyArrayOutput)
}

// 用户组的创建时间。
func (o LookupGroupResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 用户组描述信息。长度不超过128。
func (o LookupGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// 用户组显示名称。长度不超过64。
func (o LookupGroupResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// 用户组的更新时间。
func (o LookupGroupResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// 用户组ID。
func (o LookupGroupResultOutput) UserGroupId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGroupResult) int { return v.UserGroupId }).(pulumi.IntOutput)
}

// 用户组名称。长度1~64，支持英文、数字和.-_符号。
func (o LookupGroupResultOutput) UserGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.UserGroupName }).(pulumi.StringOutput)
}

// 用户组内绑定的用户信息。
func (o LookupGroupResultOutput) Users() GetGroupUserArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []GetGroupUser { return v.Users }).(GetGroupUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupResultOutput{})
}
