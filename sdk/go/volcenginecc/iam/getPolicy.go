// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::IAM::Policy
func LookupPolicy(ctx *pulumi.Context, args *LookupPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyResult
	err := ctx.Invoke("volcenginecc:iam/getPolicy:getPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicy.
type LookupPolicyArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getPolicy.
type LookupPolicyResult struct {
	// 策略绑定的身份数量。
	AttachmentCount int `pulumi:"attachmentCount"`
	// 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
	Category string `pulumi:"category"`
	// 策略创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 策略描述，长度不超过128。
	Description string `pulumi:"description"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 是否是服务关联角色的策略，0代表否，1代表是。
	IsServiceRolePolicy int `pulumi:"isServiceRolePolicy"`
	// 策略语法内容，例如：{"Statement":[{"Effect":"Allow","Action":["iam:","tag:"],"Resource":["*"]}]}
	PolicyDocument string `pulumi:"policyDocument"`
	// 策略名，长度1~64，支持英文、数字和+=,.@-_符号。
	PolicyName string `pulumi:"policyName"`
	// 策略绑定的角色列表。
	PolicyRoles []GetPolicyPolicyRole `pulumi:"policyRoles"`
	// 策略的TRN。
	PolicyTrn string `pulumi:"policyTrn"`
	// 策略类型。System代表系统预设策略，Custom代表自定义策略。
	PolicyType string `pulumi:"policyType"`
	// 策略绑定的用户组列表。
	PolicyUserGroups []GetPolicyPolicyUserGroup `pulumi:"policyUserGroups"`
	// 策略绑定的用户列表。
	PolicyUsers []GetPolicyPolicyUser `pulumi:"policyUsers"`
	// 策略更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
}

func LookupPolicyOutput(ctx *pulumi.Context, args LookupPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupPolicyResultOutput, error) {
			args := v.(LookupPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:iam/getPolicy:getPolicy", args, LookupPolicyResultOutput{}, options).(LookupPolicyResultOutput), nil
		}).(LookupPolicyResultOutput)
}

// A collection of arguments for invoking getPolicy.
type LookupPolicyOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getPolicy.
type LookupPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyResult)(nil)).Elem()
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutput() LookupPolicyResultOutput {
	return o
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutputWithContext(ctx context.Context) LookupPolicyResultOutput {
	return o
}

// 策略绑定的身份数量。
func (o LookupPolicyResultOutput) AttachmentCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicyResult) int { return v.AttachmentCount }).(pulumi.IntOutput)
}

// 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
func (o LookupPolicyResultOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Category }).(pulumi.StringOutput)
}

// 策略创建时间。
func (o LookupPolicyResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 策略描述，长度不超过128。
func (o LookupPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// 是否是服务关联角色的策略，0代表否，1代表是。
func (o LookupPolicyResultOutput) IsServiceRolePolicy() pulumi.IntOutput {
	return o.ApplyT(func(v LookupPolicyResult) int { return v.IsServiceRolePolicy }).(pulumi.IntOutput)
}

// 策略语法内容，例如：{"Statement":[{"Effect":"Allow","Action":["iam:","tag:"],"Resource":["*"]}]}
func (o LookupPolicyResultOutput) PolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.PolicyDocument }).(pulumi.StringOutput)
}

// 策略名，长度1~64，支持英文、数字和+=,.@-_符号。
func (o LookupPolicyResultOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.PolicyName }).(pulumi.StringOutput)
}

// 策略绑定的角色列表。
func (o LookupPolicyResultOutput) PolicyRoles() GetPolicyPolicyRoleArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []GetPolicyPolicyRole { return v.PolicyRoles }).(GetPolicyPolicyRoleArrayOutput)
}

// 策略的TRN。
func (o LookupPolicyResultOutput) PolicyTrn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.PolicyTrn }).(pulumi.StringOutput)
}

// 策略类型。System代表系统预设策略，Custom代表自定义策略。
func (o LookupPolicyResultOutput) PolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.PolicyType }).(pulumi.StringOutput)
}

// 策略绑定的用户组列表。
func (o LookupPolicyResultOutput) PolicyUserGroups() GetPolicyPolicyUserGroupArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []GetPolicyPolicyUserGroup { return v.PolicyUserGroups }).(GetPolicyPolicyUserGroupArrayOutput)
}

// 策略绑定的用户列表。
func (o LookupPolicyResultOutput) PolicyUsers() GetPolicyPolicyUserArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []GetPolicyPolicyUser { return v.PolicyUsers }).(GetPolicyPolicyUserArrayOutput)
}

// 策略更新时间。
func (o LookupPolicyResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyResultOutput{})
}
