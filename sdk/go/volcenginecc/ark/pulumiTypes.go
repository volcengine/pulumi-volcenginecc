// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ark

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type EndpointCertificate struct {
	// X509私有证书过期的时间。使用秒级时间戳表示。
	NotAfter *int `pulumi:"notAfter"`
	// X509私有证书开始生效的时间。使用秒级时间戳表示。
	NotBefore *int `pulumi:"notBefore"`
	// 证书方。
	PcaHost *string `pulumi:"pcaHost"`
	// PEM 格式的叶子证书。
	PcaInstanceCertificate *string `pulumi:"pcaInstanceCertificate"`
	// 证书名称。
	PcaName *string `pulumi:"pcaName"`
	// PEM 格式的根证书。
	PcaRootCaCertificate *string `pulumi:"pcaRootCaCertificate"`
	// PEM 格式的中间根证书和根证书。
	PcaSubCaCertificate *string `pulumi:"pcaSubCaCertificate"`
}

// EndpointCertificateInput is an input type that accepts EndpointCertificateArgs and EndpointCertificateOutput values.
// You can construct a concrete instance of `EndpointCertificateInput` via:
//
//	EndpointCertificateArgs{...}
type EndpointCertificateInput interface {
	pulumi.Input

	ToEndpointCertificateOutput() EndpointCertificateOutput
	ToEndpointCertificateOutputWithContext(context.Context) EndpointCertificateOutput
}

type EndpointCertificateArgs struct {
	// X509私有证书过期的时间。使用秒级时间戳表示。
	NotAfter pulumi.IntPtrInput `pulumi:"notAfter"`
	// X509私有证书开始生效的时间。使用秒级时间戳表示。
	NotBefore pulumi.IntPtrInput `pulumi:"notBefore"`
	// 证书方。
	PcaHost pulumi.StringPtrInput `pulumi:"pcaHost"`
	// PEM 格式的叶子证书。
	PcaInstanceCertificate pulumi.StringPtrInput `pulumi:"pcaInstanceCertificate"`
	// 证书名称。
	PcaName pulumi.StringPtrInput `pulumi:"pcaName"`
	// PEM 格式的根证书。
	PcaRootCaCertificate pulumi.StringPtrInput `pulumi:"pcaRootCaCertificate"`
	// PEM 格式的中间根证书和根证书。
	PcaSubCaCertificate pulumi.StringPtrInput `pulumi:"pcaSubCaCertificate"`
}

func (EndpointCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointCertificate)(nil)).Elem()
}

func (i EndpointCertificateArgs) ToEndpointCertificateOutput() EndpointCertificateOutput {
	return i.ToEndpointCertificateOutputWithContext(context.Background())
}

func (i EndpointCertificateArgs) ToEndpointCertificateOutputWithContext(ctx context.Context) EndpointCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCertificateOutput)
}

func (i EndpointCertificateArgs) ToEndpointCertificatePtrOutput() EndpointCertificatePtrOutput {
	return i.ToEndpointCertificatePtrOutputWithContext(context.Background())
}

func (i EndpointCertificateArgs) ToEndpointCertificatePtrOutputWithContext(ctx context.Context) EndpointCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCertificateOutput).ToEndpointCertificatePtrOutputWithContext(ctx)
}

// EndpointCertificatePtrInput is an input type that accepts EndpointCertificateArgs, EndpointCertificatePtr and EndpointCertificatePtrOutput values.
// You can construct a concrete instance of `EndpointCertificatePtrInput` via:
//
//	        EndpointCertificateArgs{...}
//
//	or:
//
//	        nil
type EndpointCertificatePtrInput interface {
	pulumi.Input

	ToEndpointCertificatePtrOutput() EndpointCertificatePtrOutput
	ToEndpointCertificatePtrOutputWithContext(context.Context) EndpointCertificatePtrOutput
}

type endpointCertificatePtrType EndpointCertificateArgs

func EndpointCertificatePtr(v *EndpointCertificateArgs) EndpointCertificatePtrInput {
	return (*endpointCertificatePtrType)(v)
}

func (*endpointCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointCertificate)(nil)).Elem()
}

func (i *endpointCertificatePtrType) ToEndpointCertificatePtrOutput() EndpointCertificatePtrOutput {
	return i.ToEndpointCertificatePtrOutputWithContext(context.Background())
}

func (i *endpointCertificatePtrType) ToEndpointCertificatePtrOutputWithContext(ctx context.Context) EndpointCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointCertificatePtrOutput)
}

type EndpointCertificateOutput struct{ *pulumi.OutputState }

func (EndpointCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointCertificate)(nil)).Elem()
}

func (o EndpointCertificateOutput) ToEndpointCertificateOutput() EndpointCertificateOutput {
	return o
}

func (o EndpointCertificateOutput) ToEndpointCertificateOutputWithContext(ctx context.Context) EndpointCertificateOutput {
	return o
}

func (o EndpointCertificateOutput) ToEndpointCertificatePtrOutput() EndpointCertificatePtrOutput {
	return o.ToEndpointCertificatePtrOutputWithContext(context.Background())
}

func (o EndpointCertificateOutput) ToEndpointCertificatePtrOutputWithContext(ctx context.Context) EndpointCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointCertificate) *EndpointCertificate {
		return &v
	}).(EndpointCertificatePtrOutput)
}

// X509私有证书过期的时间。使用秒级时间戳表示。
func (o EndpointCertificateOutput) NotAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *int { return v.NotAfter }).(pulumi.IntPtrOutput)
}

// X509私有证书开始生效的时间。使用秒级时间戳表示。
func (o EndpointCertificateOutput) NotBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *int { return v.NotBefore }).(pulumi.IntPtrOutput)
}

// 证书方。
func (o EndpointCertificateOutput) PcaHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *string { return v.PcaHost }).(pulumi.StringPtrOutput)
}

// PEM 格式的叶子证书。
func (o EndpointCertificateOutput) PcaInstanceCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *string { return v.PcaInstanceCertificate }).(pulumi.StringPtrOutput)
}

// 证书名称。
func (o EndpointCertificateOutput) PcaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *string { return v.PcaName }).(pulumi.StringPtrOutput)
}

// PEM 格式的根证书。
func (o EndpointCertificateOutput) PcaRootCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *string { return v.PcaRootCaCertificate }).(pulumi.StringPtrOutput)
}

// PEM 格式的中间根证书和根证书。
func (o EndpointCertificateOutput) PcaSubCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointCertificate) *string { return v.PcaSubCaCertificate }).(pulumi.StringPtrOutput)
}

type EndpointCertificatePtrOutput struct{ *pulumi.OutputState }

func (EndpointCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointCertificate)(nil)).Elem()
}

func (o EndpointCertificatePtrOutput) ToEndpointCertificatePtrOutput() EndpointCertificatePtrOutput {
	return o
}

func (o EndpointCertificatePtrOutput) ToEndpointCertificatePtrOutputWithContext(ctx context.Context) EndpointCertificatePtrOutput {
	return o
}

func (o EndpointCertificatePtrOutput) Elem() EndpointCertificateOutput {
	return o.ApplyT(func(v *EndpointCertificate) EndpointCertificate {
		if v != nil {
			return *v
		}
		var ret EndpointCertificate
		return ret
	}).(EndpointCertificateOutput)
}

// X509私有证书过期的时间。使用秒级时间戳表示。
func (o EndpointCertificatePtrOutput) NotAfter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *int {
		if v == nil {
			return nil
		}
		return v.NotAfter
	}).(pulumi.IntPtrOutput)
}

// X509私有证书开始生效的时间。使用秒级时间戳表示。
func (o EndpointCertificatePtrOutput) NotBefore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *int {
		if v == nil {
			return nil
		}
		return v.NotBefore
	}).(pulumi.IntPtrOutput)
}

// 证书方。
func (o EndpointCertificatePtrOutput) PcaHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *string {
		if v == nil {
			return nil
		}
		return v.PcaHost
	}).(pulumi.StringPtrOutput)
}

// PEM 格式的叶子证书。
func (o EndpointCertificatePtrOutput) PcaInstanceCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *string {
		if v == nil {
			return nil
		}
		return v.PcaInstanceCertificate
	}).(pulumi.StringPtrOutput)
}

// 证书名称。
func (o EndpointCertificatePtrOutput) PcaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *string {
		if v == nil {
			return nil
		}
		return v.PcaName
	}).(pulumi.StringPtrOutput)
}

// PEM 格式的根证书。
func (o EndpointCertificatePtrOutput) PcaRootCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *string {
		if v == nil {
			return nil
		}
		return v.PcaRootCaCertificate
	}).(pulumi.StringPtrOutput)
}

// PEM 格式的中间根证书和根证书。
func (o EndpointCertificatePtrOutput) PcaSubCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointCertificate) *string {
		if v == nil {
			return nil
		}
		return v.PcaSubCaCertificate
	}).(pulumi.StringPtrOutput)
}

type EndpointModelReference struct {
	// 定制模型的ID。
	CustomModelId *string `pulumi:"customModelId"`
	// 基础模型。
	FoundationModel *EndpointModelReferenceFoundationModel `pulumi:"foundationModel"`
}

// EndpointModelReferenceInput is an input type that accepts EndpointModelReferenceArgs and EndpointModelReferenceOutput values.
// You can construct a concrete instance of `EndpointModelReferenceInput` via:
//
//	EndpointModelReferenceArgs{...}
type EndpointModelReferenceInput interface {
	pulumi.Input

	ToEndpointModelReferenceOutput() EndpointModelReferenceOutput
	ToEndpointModelReferenceOutputWithContext(context.Context) EndpointModelReferenceOutput
}

type EndpointModelReferenceArgs struct {
	// 定制模型的ID。
	CustomModelId pulumi.StringPtrInput `pulumi:"customModelId"`
	// 基础模型。
	FoundationModel EndpointModelReferenceFoundationModelPtrInput `pulumi:"foundationModel"`
}

func (EndpointModelReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointModelReference)(nil)).Elem()
}

func (i EndpointModelReferenceArgs) ToEndpointModelReferenceOutput() EndpointModelReferenceOutput {
	return i.ToEndpointModelReferenceOutputWithContext(context.Background())
}

func (i EndpointModelReferenceArgs) ToEndpointModelReferenceOutputWithContext(ctx context.Context) EndpointModelReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModelReferenceOutput)
}

func (i EndpointModelReferenceArgs) ToEndpointModelReferencePtrOutput() EndpointModelReferencePtrOutput {
	return i.ToEndpointModelReferencePtrOutputWithContext(context.Background())
}

func (i EndpointModelReferenceArgs) ToEndpointModelReferencePtrOutputWithContext(ctx context.Context) EndpointModelReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModelReferenceOutput).ToEndpointModelReferencePtrOutputWithContext(ctx)
}

// EndpointModelReferencePtrInput is an input type that accepts EndpointModelReferenceArgs, EndpointModelReferencePtr and EndpointModelReferencePtrOutput values.
// You can construct a concrete instance of `EndpointModelReferencePtrInput` via:
//
//	        EndpointModelReferenceArgs{...}
//
//	or:
//
//	        nil
type EndpointModelReferencePtrInput interface {
	pulumi.Input

	ToEndpointModelReferencePtrOutput() EndpointModelReferencePtrOutput
	ToEndpointModelReferencePtrOutputWithContext(context.Context) EndpointModelReferencePtrOutput
}

type endpointModelReferencePtrType EndpointModelReferenceArgs

func EndpointModelReferencePtr(v *EndpointModelReferenceArgs) EndpointModelReferencePtrInput {
	return (*endpointModelReferencePtrType)(v)
}

func (*endpointModelReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointModelReference)(nil)).Elem()
}

func (i *endpointModelReferencePtrType) ToEndpointModelReferencePtrOutput() EndpointModelReferencePtrOutput {
	return i.ToEndpointModelReferencePtrOutputWithContext(context.Background())
}

func (i *endpointModelReferencePtrType) ToEndpointModelReferencePtrOutputWithContext(ctx context.Context) EndpointModelReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModelReferencePtrOutput)
}

type EndpointModelReferenceOutput struct{ *pulumi.OutputState }

func (EndpointModelReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointModelReference)(nil)).Elem()
}

func (o EndpointModelReferenceOutput) ToEndpointModelReferenceOutput() EndpointModelReferenceOutput {
	return o
}

func (o EndpointModelReferenceOutput) ToEndpointModelReferenceOutputWithContext(ctx context.Context) EndpointModelReferenceOutput {
	return o
}

func (o EndpointModelReferenceOutput) ToEndpointModelReferencePtrOutput() EndpointModelReferencePtrOutput {
	return o.ToEndpointModelReferencePtrOutputWithContext(context.Background())
}

func (o EndpointModelReferenceOutput) ToEndpointModelReferencePtrOutputWithContext(ctx context.Context) EndpointModelReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointModelReference) *EndpointModelReference {
		return &v
	}).(EndpointModelReferencePtrOutput)
}

// 定制模型的ID。
func (o EndpointModelReferenceOutput) CustomModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointModelReference) *string { return v.CustomModelId }).(pulumi.StringPtrOutput)
}

// 基础模型。
func (o EndpointModelReferenceOutput) FoundationModel() EndpointModelReferenceFoundationModelPtrOutput {
	return o.ApplyT(func(v EndpointModelReference) *EndpointModelReferenceFoundationModel { return v.FoundationModel }).(EndpointModelReferenceFoundationModelPtrOutput)
}

type EndpointModelReferencePtrOutput struct{ *pulumi.OutputState }

func (EndpointModelReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointModelReference)(nil)).Elem()
}

func (o EndpointModelReferencePtrOutput) ToEndpointModelReferencePtrOutput() EndpointModelReferencePtrOutput {
	return o
}

func (o EndpointModelReferencePtrOutput) ToEndpointModelReferencePtrOutputWithContext(ctx context.Context) EndpointModelReferencePtrOutput {
	return o
}

func (o EndpointModelReferencePtrOutput) Elem() EndpointModelReferenceOutput {
	return o.ApplyT(func(v *EndpointModelReference) EndpointModelReference {
		if v != nil {
			return *v
		}
		var ret EndpointModelReference
		return ret
	}).(EndpointModelReferenceOutput)
}

// 定制模型的ID。
func (o EndpointModelReferencePtrOutput) CustomModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointModelReference) *string {
		if v == nil {
			return nil
		}
		return v.CustomModelId
	}).(pulumi.StringPtrOutput)
}

// 基础模型。
func (o EndpointModelReferencePtrOutput) FoundationModel() EndpointModelReferenceFoundationModelPtrOutput {
	return o.ApplyT(func(v *EndpointModelReference) *EndpointModelReferenceFoundationModel {
		if v == nil {
			return nil
		}
		return v.FoundationModel
	}).(EndpointModelReferenceFoundationModelPtrOutput)
}

type EndpointModelReferenceFoundationModel struct {
	// 基础模型版本。
	ModelVersion *string `pulumi:"modelVersion"`
	// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
	Name *string `pulumi:"name"`
}

// EndpointModelReferenceFoundationModelInput is an input type that accepts EndpointModelReferenceFoundationModelArgs and EndpointModelReferenceFoundationModelOutput values.
// You can construct a concrete instance of `EndpointModelReferenceFoundationModelInput` via:
//
//	EndpointModelReferenceFoundationModelArgs{...}
type EndpointModelReferenceFoundationModelInput interface {
	pulumi.Input

	ToEndpointModelReferenceFoundationModelOutput() EndpointModelReferenceFoundationModelOutput
	ToEndpointModelReferenceFoundationModelOutputWithContext(context.Context) EndpointModelReferenceFoundationModelOutput
}

type EndpointModelReferenceFoundationModelArgs struct {
	// 基础模型版本。
	ModelVersion pulumi.StringPtrInput `pulumi:"modelVersion"`
	// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (EndpointModelReferenceFoundationModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointModelReferenceFoundationModel)(nil)).Elem()
}

func (i EndpointModelReferenceFoundationModelArgs) ToEndpointModelReferenceFoundationModelOutput() EndpointModelReferenceFoundationModelOutput {
	return i.ToEndpointModelReferenceFoundationModelOutputWithContext(context.Background())
}

func (i EndpointModelReferenceFoundationModelArgs) ToEndpointModelReferenceFoundationModelOutputWithContext(ctx context.Context) EndpointModelReferenceFoundationModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModelReferenceFoundationModelOutput)
}

func (i EndpointModelReferenceFoundationModelArgs) ToEndpointModelReferenceFoundationModelPtrOutput() EndpointModelReferenceFoundationModelPtrOutput {
	return i.ToEndpointModelReferenceFoundationModelPtrOutputWithContext(context.Background())
}

func (i EndpointModelReferenceFoundationModelArgs) ToEndpointModelReferenceFoundationModelPtrOutputWithContext(ctx context.Context) EndpointModelReferenceFoundationModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModelReferenceFoundationModelOutput).ToEndpointModelReferenceFoundationModelPtrOutputWithContext(ctx)
}

// EndpointModelReferenceFoundationModelPtrInput is an input type that accepts EndpointModelReferenceFoundationModelArgs, EndpointModelReferenceFoundationModelPtr and EndpointModelReferenceFoundationModelPtrOutput values.
// You can construct a concrete instance of `EndpointModelReferenceFoundationModelPtrInput` via:
//
//	        EndpointModelReferenceFoundationModelArgs{...}
//
//	or:
//
//	        nil
type EndpointModelReferenceFoundationModelPtrInput interface {
	pulumi.Input

	ToEndpointModelReferenceFoundationModelPtrOutput() EndpointModelReferenceFoundationModelPtrOutput
	ToEndpointModelReferenceFoundationModelPtrOutputWithContext(context.Context) EndpointModelReferenceFoundationModelPtrOutput
}

type endpointModelReferenceFoundationModelPtrType EndpointModelReferenceFoundationModelArgs

func EndpointModelReferenceFoundationModelPtr(v *EndpointModelReferenceFoundationModelArgs) EndpointModelReferenceFoundationModelPtrInput {
	return (*endpointModelReferenceFoundationModelPtrType)(v)
}

func (*endpointModelReferenceFoundationModelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointModelReferenceFoundationModel)(nil)).Elem()
}

func (i *endpointModelReferenceFoundationModelPtrType) ToEndpointModelReferenceFoundationModelPtrOutput() EndpointModelReferenceFoundationModelPtrOutput {
	return i.ToEndpointModelReferenceFoundationModelPtrOutputWithContext(context.Background())
}

func (i *endpointModelReferenceFoundationModelPtrType) ToEndpointModelReferenceFoundationModelPtrOutputWithContext(ctx context.Context) EndpointModelReferenceFoundationModelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModelReferenceFoundationModelPtrOutput)
}

type EndpointModelReferenceFoundationModelOutput struct{ *pulumi.OutputState }

func (EndpointModelReferenceFoundationModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointModelReferenceFoundationModel)(nil)).Elem()
}

func (o EndpointModelReferenceFoundationModelOutput) ToEndpointModelReferenceFoundationModelOutput() EndpointModelReferenceFoundationModelOutput {
	return o
}

func (o EndpointModelReferenceFoundationModelOutput) ToEndpointModelReferenceFoundationModelOutputWithContext(ctx context.Context) EndpointModelReferenceFoundationModelOutput {
	return o
}

func (o EndpointModelReferenceFoundationModelOutput) ToEndpointModelReferenceFoundationModelPtrOutput() EndpointModelReferenceFoundationModelPtrOutput {
	return o.ToEndpointModelReferenceFoundationModelPtrOutputWithContext(context.Background())
}

func (o EndpointModelReferenceFoundationModelOutput) ToEndpointModelReferenceFoundationModelPtrOutputWithContext(ctx context.Context) EndpointModelReferenceFoundationModelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointModelReferenceFoundationModel) *EndpointModelReferenceFoundationModel {
		return &v
	}).(EndpointModelReferenceFoundationModelPtrOutput)
}

// 基础模型版本。
func (o EndpointModelReferenceFoundationModelOutput) ModelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointModelReferenceFoundationModel) *string { return v.ModelVersion }).(pulumi.StringPtrOutput)
}

// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
func (o EndpointModelReferenceFoundationModelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointModelReferenceFoundationModel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type EndpointModelReferenceFoundationModelPtrOutput struct{ *pulumi.OutputState }

func (EndpointModelReferenceFoundationModelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointModelReferenceFoundationModel)(nil)).Elem()
}

func (o EndpointModelReferenceFoundationModelPtrOutput) ToEndpointModelReferenceFoundationModelPtrOutput() EndpointModelReferenceFoundationModelPtrOutput {
	return o
}

func (o EndpointModelReferenceFoundationModelPtrOutput) ToEndpointModelReferenceFoundationModelPtrOutputWithContext(ctx context.Context) EndpointModelReferenceFoundationModelPtrOutput {
	return o
}

func (o EndpointModelReferenceFoundationModelPtrOutput) Elem() EndpointModelReferenceFoundationModelOutput {
	return o.ApplyT(func(v *EndpointModelReferenceFoundationModel) EndpointModelReferenceFoundationModel {
		if v != nil {
			return *v
		}
		var ret EndpointModelReferenceFoundationModel
		return ret
	}).(EndpointModelReferenceFoundationModelOutput)
}

// 基础模型版本。
func (o EndpointModelReferenceFoundationModelPtrOutput) ModelVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointModelReferenceFoundationModel) *string {
		if v == nil {
			return nil
		}
		return v.ModelVersion
	}).(pulumi.StringPtrOutput)
}

// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
func (o EndpointModelReferenceFoundationModelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointModelReferenceFoundationModel) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type EndpointModeration struct {
	// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
	Strategy *string `pulumi:"strategy"`
}

// EndpointModerationInput is an input type that accepts EndpointModerationArgs and EndpointModerationOutput values.
// You can construct a concrete instance of `EndpointModerationInput` via:
//
//	EndpointModerationArgs{...}
type EndpointModerationInput interface {
	pulumi.Input

	ToEndpointModerationOutput() EndpointModerationOutput
	ToEndpointModerationOutputWithContext(context.Context) EndpointModerationOutput
}

type EndpointModerationArgs struct {
	// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (EndpointModerationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointModeration)(nil)).Elem()
}

func (i EndpointModerationArgs) ToEndpointModerationOutput() EndpointModerationOutput {
	return i.ToEndpointModerationOutputWithContext(context.Background())
}

func (i EndpointModerationArgs) ToEndpointModerationOutputWithContext(ctx context.Context) EndpointModerationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModerationOutput)
}

func (i EndpointModerationArgs) ToEndpointModerationPtrOutput() EndpointModerationPtrOutput {
	return i.ToEndpointModerationPtrOutputWithContext(context.Background())
}

func (i EndpointModerationArgs) ToEndpointModerationPtrOutputWithContext(ctx context.Context) EndpointModerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModerationOutput).ToEndpointModerationPtrOutputWithContext(ctx)
}

// EndpointModerationPtrInput is an input type that accepts EndpointModerationArgs, EndpointModerationPtr and EndpointModerationPtrOutput values.
// You can construct a concrete instance of `EndpointModerationPtrInput` via:
//
//	        EndpointModerationArgs{...}
//
//	or:
//
//	        nil
type EndpointModerationPtrInput interface {
	pulumi.Input

	ToEndpointModerationPtrOutput() EndpointModerationPtrOutput
	ToEndpointModerationPtrOutputWithContext(context.Context) EndpointModerationPtrOutput
}

type endpointModerationPtrType EndpointModerationArgs

func EndpointModerationPtr(v *EndpointModerationArgs) EndpointModerationPtrInput {
	return (*endpointModerationPtrType)(v)
}

func (*endpointModerationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointModeration)(nil)).Elem()
}

func (i *endpointModerationPtrType) ToEndpointModerationPtrOutput() EndpointModerationPtrOutput {
	return i.ToEndpointModerationPtrOutputWithContext(context.Background())
}

func (i *endpointModerationPtrType) ToEndpointModerationPtrOutputWithContext(ctx context.Context) EndpointModerationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointModerationPtrOutput)
}

type EndpointModerationOutput struct{ *pulumi.OutputState }

func (EndpointModerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointModeration)(nil)).Elem()
}

func (o EndpointModerationOutput) ToEndpointModerationOutput() EndpointModerationOutput {
	return o
}

func (o EndpointModerationOutput) ToEndpointModerationOutputWithContext(ctx context.Context) EndpointModerationOutput {
	return o
}

func (o EndpointModerationOutput) ToEndpointModerationPtrOutput() EndpointModerationPtrOutput {
	return o.ToEndpointModerationPtrOutputWithContext(context.Background())
}

func (o EndpointModerationOutput) ToEndpointModerationPtrOutputWithContext(ctx context.Context) EndpointModerationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointModeration) *EndpointModeration {
		return &v
	}).(EndpointModerationPtrOutput)
}

// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
func (o EndpointModerationOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointModeration) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

type EndpointModerationPtrOutput struct{ *pulumi.OutputState }

func (EndpointModerationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointModeration)(nil)).Elem()
}

func (o EndpointModerationPtrOutput) ToEndpointModerationPtrOutput() EndpointModerationPtrOutput {
	return o
}

func (o EndpointModerationPtrOutput) ToEndpointModerationPtrOutputWithContext(ctx context.Context) EndpointModerationPtrOutput {
	return o
}

func (o EndpointModerationPtrOutput) Elem() EndpointModerationOutput {
	return o.ApplyT(func(v *EndpointModeration) EndpointModeration {
		if v != nil {
			return *v
		}
		var ret EndpointModeration
		return ret
	}).(EndpointModerationOutput)
}

// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
func (o EndpointModerationPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointModeration) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

type EndpointRateLimit struct {
	// Requests Per Minute，每分钟请求数。
	Rpm *int `pulumi:"rpm"`
	// Tokens Per Minute，每分钟请求 token 数。
	Tpm *int `pulumi:"tpm"`
}

// EndpointRateLimitInput is an input type that accepts EndpointRateLimitArgs and EndpointRateLimitOutput values.
// You can construct a concrete instance of `EndpointRateLimitInput` via:
//
//	EndpointRateLimitArgs{...}
type EndpointRateLimitInput interface {
	pulumi.Input

	ToEndpointRateLimitOutput() EndpointRateLimitOutput
	ToEndpointRateLimitOutputWithContext(context.Context) EndpointRateLimitOutput
}

type EndpointRateLimitArgs struct {
	// Requests Per Minute，每分钟请求数。
	Rpm pulumi.IntPtrInput `pulumi:"rpm"`
	// Tokens Per Minute，每分钟请求 token 数。
	Tpm pulumi.IntPtrInput `pulumi:"tpm"`
}

func (EndpointRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRateLimit)(nil)).Elem()
}

func (i EndpointRateLimitArgs) ToEndpointRateLimitOutput() EndpointRateLimitOutput {
	return i.ToEndpointRateLimitOutputWithContext(context.Background())
}

func (i EndpointRateLimitArgs) ToEndpointRateLimitOutputWithContext(ctx context.Context) EndpointRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRateLimitOutput)
}

func (i EndpointRateLimitArgs) ToEndpointRateLimitPtrOutput() EndpointRateLimitPtrOutput {
	return i.ToEndpointRateLimitPtrOutputWithContext(context.Background())
}

func (i EndpointRateLimitArgs) ToEndpointRateLimitPtrOutputWithContext(ctx context.Context) EndpointRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRateLimitOutput).ToEndpointRateLimitPtrOutputWithContext(ctx)
}

// EndpointRateLimitPtrInput is an input type that accepts EndpointRateLimitArgs, EndpointRateLimitPtr and EndpointRateLimitPtrOutput values.
// You can construct a concrete instance of `EndpointRateLimitPtrInput` via:
//
//	        EndpointRateLimitArgs{...}
//
//	or:
//
//	        nil
type EndpointRateLimitPtrInput interface {
	pulumi.Input

	ToEndpointRateLimitPtrOutput() EndpointRateLimitPtrOutput
	ToEndpointRateLimitPtrOutputWithContext(context.Context) EndpointRateLimitPtrOutput
}

type endpointRateLimitPtrType EndpointRateLimitArgs

func EndpointRateLimitPtr(v *EndpointRateLimitArgs) EndpointRateLimitPtrInput {
	return (*endpointRateLimitPtrType)(v)
}

func (*endpointRateLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRateLimit)(nil)).Elem()
}

func (i *endpointRateLimitPtrType) ToEndpointRateLimitPtrOutput() EndpointRateLimitPtrOutput {
	return i.ToEndpointRateLimitPtrOutputWithContext(context.Background())
}

func (i *endpointRateLimitPtrType) ToEndpointRateLimitPtrOutputWithContext(ctx context.Context) EndpointRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRateLimitPtrOutput)
}

type EndpointRateLimitOutput struct{ *pulumi.OutputState }

func (EndpointRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRateLimit)(nil)).Elem()
}

func (o EndpointRateLimitOutput) ToEndpointRateLimitOutput() EndpointRateLimitOutput {
	return o
}

func (o EndpointRateLimitOutput) ToEndpointRateLimitOutputWithContext(ctx context.Context) EndpointRateLimitOutput {
	return o
}

func (o EndpointRateLimitOutput) ToEndpointRateLimitPtrOutput() EndpointRateLimitPtrOutput {
	return o.ToEndpointRateLimitPtrOutputWithContext(context.Background())
}

func (o EndpointRateLimitOutput) ToEndpointRateLimitPtrOutputWithContext(ctx context.Context) EndpointRateLimitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointRateLimit) *EndpointRateLimit {
		return &v
	}).(EndpointRateLimitPtrOutput)
}

// Requests Per Minute，每分钟请求数。
func (o EndpointRateLimitOutput) Rpm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointRateLimit) *int { return v.Rpm }).(pulumi.IntPtrOutput)
}

// Tokens Per Minute，每分钟请求 token 数。
func (o EndpointRateLimitOutput) Tpm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointRateLimit) *int { return v.Tpm }).(pulumi.IntPtrOutput)
}

type EndpointRateLimitPtrOutput struct{ *pulumi.OutputState }

func (EndpointRateLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRateLimit)(nil)).Elem()
}

func (o EndpointRateLimitPtrOutput) ToEndpointRateLimitPtrOutput() EndpointRateLimitPtrOutput {
	return o
}

func (o EndpointRateLimitPtrOutput) ToEndpointRateLimitPtrOutputWithContext(ctx context.Context) EndpointRateLimitPtrOutput {
	return o
}

func (o EndpointRateLimitPtrOutput) Elem() EndpointRateLimitOutput {
	return o.ApplyT(func(v *EndpointRateLimit) EndpointRateLimit {
		if v != nil {
			return *v
		}
		var ret EndpointRateLimit
		return ret
	}).(EndpointRateLimitOutput)
}

// Requests Per Minute，每分钟请求数。
func (o EndpointRateLimitPtrOutput) Rpm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointRateLimit) *int {
		if v == nil {
			return nil
		}
		return v.Rpm
	}).(pulumi.IntPtrOutput)
}

// Tokens Per Minute，每分钟请求 token 数。
func (o EndpointRateLimitPtrOutput) Tpm() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointRateLimit) *int {
		if v == nil {
			return nil
		}
		return v.Tpm
	}).(pulumi.IntPtrOutput)
}

type EndpointTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// EndpointTagInput is an input type that accepts EndpointTagArgs and EndpointTagOutput values.
// You can construct a concrete instance of `EndpointTagInput` via:
//
//	EndpointTagArgs{...}
type EndpointTagInput interface {
	pulumi.Input

	ToEndpointTagOutput() EndpointTagOutput
	ToEndpointTagOutputWithContext(context.Context) EndpointTagOutput
}

type EndpointTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EndpointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointTag)(nil)).Elem()
}

func (i EndpointTagArgs) ToEndpointTagOutput() EndpointTagOutput {
	return i.ToEndpointTagOutputWithContext(context.Background())
}

func (i EndpointTagArgs) ToEndpointTagOutputWithContext(ctx context.Context) EndpointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTagOutput)
}

// EndpointTagArrayInput is an input type that accepts EndpointTagArray and EndpointTagArrayOutput values.
// You can construct a concrete instance of `EndpointTagArrayInput` via:
//
//	EndpointTagArray{ EndpointTagArgs{...} }
type EndpointTagArrayInput interface {
	pulumi.Input

	ToEndpointTagArrayOutput() EndpointTagArrayOutput
	ToEndpointTagArrayOutputWithContext(context.Context) EndpointTagArrayOutput
}

type EndpointTagArray []EndpointTagInput

func (EndpointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointTag)(nil)).Elem()
}

func (i EndpointTagArray) ToEndpointTagArrayOutput() EndpointTagArrayOutput {
	return i.ToEndpointTagArrayOutputWithContext(context.Background())
}

func (i EndpointTagArray) ToEndpointTagArrayOutputWithContext(ctx context.Context) EndpointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTagArrayOutput)
}

type EndpointTagOutput struct{ *pulumi.OutputState }

func (EndpointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointTag)(nil)).Elem()
}

func (o EndpointTagOutput) ToEndpointTagOutput() EndpointTagOutput {
	return o
}

func (o EndpointTagOutput) ToEndpointTagOutputWithContext(ctx context.Context) EndpointTagOutput {
	return o
}

// 标签键。
func (o EndpointTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o EndpointTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointTagArrayOutput struct{ *pulumi.OutputState }

func (EndpointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointTag)(nil)).Elem()
}

func (o EndpointTagArrayOutput) ToEndpointTagArrayOutput() EndpointTagArrayOutput {
	return o
}

func (o EndpointTagArrayOutput) ToEndpointTagArrayOutputWithContext(ctx context.Context) EndpointTagArrayOutput {
	return o
}

func (o EndpointTagArrayOutput) Index(i pulumi.IntInput) EndpointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointTag {
		return vs[0].([]EndpointTag)[vs[1].(int)]
	}).(EndpointTagOutput)
}

type GetEndpointCertificate struct {
	// X509私有证书过期的时间。使用秒级时间戳表示。
	NotAfter int `pulumi:"notAfter"`
	// X509私有证书开始生效的时间。使用秒级时间戳表示。
	NotBefore int `pulumi:"notBefore"`
	// 证书方。
	PcaHost string `pulumi:"pcaHost"`
	// PEM 格式的叶子证书。
	PcaInstanceCertificate string `pulumi:"pcaInstanceCertificate"`
	// 证书名称。
	PcaName string `pulumi:"pcaName"`
	// PEM 格式的根证书。
	PcaRootCaCertificate string `pulumi:"pcaRootCaCertificate"`
	// PEM 格式的中间根证书和根证书。
	PcaSubCaCertificate string `pulumi:"pcaSubCaCertificate"`
}

// GetEndpointCertificateInput is an input type that accepts GetEndpointCertificateArgs and GetEndpointCertificateOutput values.
// You can construct a concrete instance of `GetEndpointCertificateInput` via:
//
//	GetEndpointCertificateArgs{...}
type GetEndpointCertificateInput interface {
	pulumi.Input

	ToGetEndpointCertificateOutput() GetEndpointCertificateOutput
	ToGetEndpointCertificateOutputWithContext(context.Context) GetEndpointCertificateOutput
}

type GetEndpointCertificateArgs struct {
	// X509私有证书过期的时间。使用秒级时间戳表示。
	NotAfter pulumi.IntInput `pulumi:"notAfter"`
	// X509私有证书开始生效的时间。使用秒级时间戳表示。
	NotBefore pulumi.IntInput `pulumi:"notBefore"`
	// 证书方。
	PcaHost pulumi.StringInput `pulumi:"pcaHost"`
	// PEM 格式的叶子证书。
	PcaInstanceCertificate pulumi.StringInput `pulumi:"pcaInstanceCertificate"`
	// 证书名称。
	PcaName pulumi.StringInput `pulumi:"pcaName"`
	// PEM 格式的根证书。
	PcaRootCaCertificate pulumi.StringInput `pulumi:"pcaRootCaCertificate"`
	// PEM 格式的中间根证书和根证书。
	PcaSubCaCertificate pulumi.StringInput `pulumi:"pcaSubCaCertificate"`
}

func (GetEndpointCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointCertificate)(nil)).Elem()
}

func (i GetEndpointCertificateArgs) ToGetEndpointCertificateOutput() GetEndpointCertificateOutput {
	return i.ToGetEndpointCertificateOutputWithContext(context.Background())
}

func (i GetEndpointCertificateArgs) ToGetEndpointCertificateOutputWithContext(ctx context.Context) GetEndpointCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointCertificateOutput)
}

type GetEndpointCertificateOutput struct{ *pulumi.OutputState }

func (GetEndpointCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointCertificate)(nil)).Elem()
}

func (o GetEndpointCertificateOutput) ToGetEndpointCertificateOutput() GetEndpointCertificateOutput {
	return o
}

func (o GetEndpointCertificateOutput) ToGetEndpointCertificateOutputWithContext(ctx context.Context) GetEndpointCertificateOutput {
	return o
}

// X509私有证书过期的时间。使用秒级时间戳表示。
func (o GetEndpointCertificateOutput) NotAfter() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointCertificate) int { return v.NotAfter }).(pulumi.IntOutput)
}

// X509私有证书开始生效的时间。使用秒级时间戳表示。
func (o GetEndpointCertificateOutput) NotBefore() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointCertificate) int { return v.NotBefore }).(pulumi.IntOutput)
}

// 证书方。
func (o GetEndpointCertificateOutput) PcaHost() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointCertificate) string { return v.PcaHost }).(pulumi.StringOutput)
}

// PEM 格式的叶子证书。
func (o GetEndpointCertificateOutput) PcaInstanceCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointCertificate) string { return v.PcaInstanceCertificate }).(pulumi.StringOutput)
}

// 证书名称。
func (o GetEndpointCertificateOutput) PcaName() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointCertificate) string { return v.PcaName }).(pulumi.StringOutput)
}

// PEM 格式的根证书。
func (o GetEndpointCertificateOutput) PcaRootCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointCertificate) string { return v.PcaRootCaCertificate }).(pulumi.StringOutput)
}

// PEM 格式的中间根证书和根证书。
func (o GetEndpointCertificateOutput) PcaSubCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointCertificate) string { return v.PcaSubCaCertificate }).(pulumi.StringOutput)
}

type GetEndpointModelReference struct {
	// 定制模型的ID。
	CustomModelId string `pulumi:"customModelId"`
	// 基础模型。
	FoundationModel GetEndpointModelReferenceFoundationModel `pulumi:"foundationModel"`
}

// GetEndpointModelReferenceInput is an input type that accepts GetEndpointModelReferenceArgs and GetEndpointModelReferenceOutput values.
// You can construct a concrete instance of `GetEndpointModelReferenceInput` via:
//
//	GetEndpointModelReferenceArgs{...}
type GetEndpointModelReferenceInput interface {
	pulumi.Input

	ToGetEndpointModelReferenceOutput() GetEndpointModelReferenceOutput
	ToGetEndpointModelReferenceOutputWithContext(context.Context) GetEndpointModelReferenceOutput
}

type GetEndpointModelReferenceArgs struct {
	// 定制模型的ID。
	CustomModelId pulumi.StringInput `pulumi:"customModelId"`
	// 基础模型。
	FoundationModel GetEndpointModelReferenceFoundationModelInput `pulumi:"foundationModel"`
}

func (GetEndpointModelReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointModelReference)(nil)).Elem()
}

func (i GetEndpointModelReferenceArgs) ToGetEndpointModelReferenceOutput() GetEndpointModelReferenceOutput {
	return i.ToGetEndpointModelReferenceOutputWithContext(context.Background())
}

func (i GetEndpointModelReferenceArgs) ToGetEndpointModelReferenceOutputWithContext(ctx context.Context) GetEndpointModelReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointModelReferenceOutput)
}

type GetEndpointModelReferenceOutput struct{ *pulumi.OutputState }

func (GetEndpointModelReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointModelReference)(nil)).Elem()
}

func (o GetEndpointModelReferenceOutput) ToGetEndpointModelReferenceOutput() GetEndpointModelReferenceOutput {
	return o
}

func (o GetEndpointModelReferenceOutput) ToGetEndpointModelReferenceOutputWithContext(ctx context.Context) GetEndpointModelReferenceOutput {
	return o
}

// 定制模型的ID。
func (o GetEndpointModelReferenceOutput) CustomModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointModelReference) string { return v.CustomModelId }).(pulumi.StringOutput)
}

// 基础模型。
func (o GetEndpointModelReferenceOutput) FoundationModel() GetEndpointModelReferenceFoundationModelOutput {
	return o.ApplyT(func(v GetEndpointModelReference) GetEndpointModelReferenceFoundationModel { return v.FoundationModel }).(GetEndpointModelReferenceFoundationModelOutput)
}

type GetEndpointModelReferenceFoundationModel struct {
	// 基础模型版本。
	ModelVersion string `pulumi:"modelVersion"`
	// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
	Name string `pulumi:"name"`
}

// GetEndpointModelReferenceFoundationModelInput is an input type that accepts GetEndpointModelReferenceFoundationModelArgs and GetEndpointModelReferenceFoundationModelOutput values.
// You can construct a concrete instance of `GetEndpointModelReferenceFoundationModelInput` via:
//
//	GetEndpointModelReferenceFoundationModelArgs{...}
type GetEndpointModelReferenceFoundationModelInput interface {
	pulumi.Input

	ToGetEndpointModelReferenceFoundationModelOutput() GetEndpointModelReferenceFoundationModelOutput
	ToGetEndpointModelReferenceFoundationModelOutputWithContext(context.Context) GetEndpointModelReferenceFoundationModelOutput
}

type GetEndpointModelReferenceFoundationModelArgs struct {
	// 基础模型版本。
	ModelVersion pulumi.StringInput `pulumi:"modelVersion"`
	// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetEndpointModelReferenceFoundationModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointModelReferenceFoundationModel)(nil)).Elem()
}

func (i GetEndpointModelReferenceFoundationModelArgs) ToGetEndpointModelReferenceFoundationModelOutput() GetEndpointModelReferenceFoundationModelOutput {
	return i.ToGetEndpointModelReferenceFoundationModelOutputWithContext(context.Background())
}

func (i GetEndpointModelReferenceFoundationModelArgs) ToGetEndpointModelReferenceFoundationModelOutputWithContext(ctx context.Context) GetEndpointModelReferenceFoundationModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointModelReferenceFoundationModelOutput)
}

type GetEndpointModelReferenceFoundationModelOutput struct{ *pulumi.OutputState }

func (GetEndpointModelReferenceFoundationModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointModelReferenceFoundationModel)(nil)).Elem()
}

func (o GetEndpointModelReferenceFoundationModelOutput) ToGetEndpointModelReferenceFoundationModelOutput() GetEndpointModelReferenceFoundationModelOutput {
	return o
}

func (o GetEndpointModelReferenceFoundationModelOutput) ToGetEndpointModelReferenceFoundationModelOutputWithContext(ctx context.Context) GetEndpointModelReferenceFoundationModelOutput {
	return o
}

// 基础模型版本。
func (o GetEndpointModelReferenceFoundationModelOutput) ModelVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointModelReferenceFoundationModel) string { return v.ModelVersion }).(pulumi.StringOutput)
}

// 基础模型名称。请注意模型名称为小写。doubao 1.5 代模型的模型名称格式为"doubao-1-5-**"。
func (o GetEndpointModelReferenceFoundationModelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointModelReferenceFoundationModel) string { return v.Name }).(pulumi.StringOutput)
}

type GetEndpointModeration struct {
	// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
	Strategy string `pulumi:"strategy"`
}

// GetEndpointModerationInput is an input type that accepts GetEndpointModerationArgs and GetEndpointModerationOutput values.
// You can construct a concrete instance of `GetEndpointModerationInput` via:
//
//	GetEndpointModerationArgs{...}
type GetEndpointModerationInput interface {
	pulumi.Input

	ToGetEndpointModerationOutput() GetEndpointModerationOutput
	ToGetEndpointModerationOutputWithContext(context.Context) GetEndpointModerationOutput
}

type GetEndpointModerationArgs struct {
	// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
	Strategy pulumi.StringInput `pulumi:"strategy"`
}

func (GetEndpointModerationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointModeration)(nil)).Elem()
}

func (i GetEndpointModerationArgs) ToGetEndpointModerationOutput() GetEndpointModerationOutput {
	return i.ToGetEndpointModerationOutputWithContext(context.Background())
}

func (i GetEndpointModerationArgs) ToGetEndpointModerationOutputWithContext(ctx context.Context) GetEndpointModerationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointModerationOutput)
}

type GetEndpointModerationOutput struct{ *pulumi.OutputState }

func (GetEndpointModerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointModeration)(nil)).Elem()
}

func (o GetEndpointModerationOutput) ToGetEndpointModerationOutput() GetEndpointModerationOutput {
	return o
}

func (o GetEndpointModerationOutput) ToGetEndpointModerationOutputWithContext(ctx context.Context) GetEndpointModerationOutput {
	return o
}

// 内容安全护栏方案。取值:Default: 默认方案。更低延迟，广泛覆盖内容安全通用需求;Basic：基本方案（公测中）。支持在接口响应中提供命中的风险分类，暂时只包含严重违规和激进行为两类风险。注意：如果是流式接口调用，不建议此方案，会导致吐出的每个分片的长度变长，延时变高。
func (o GetEndpointModerationOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointModeration) string { return v.Strategy }).(pulumi.StringOutput)
}

type GetEndpointRateLimit struct {
	// Requests Per Minute，每分钟请求数。
	Rpm int `pulumi:"rpm"`
	// Tokens Per Minute，每分钟请求 token 数。
	Tpm int `pulumi:"tpm"`
}

// GetEndpointRateLimitInput is an input type that accepts GetEndpointRateLimitArgs and GetEndpointRateLimitOutput values.
// You can construct a concrete instance of `GetEndpointRateLimitInput` via:
//
//	GetEndpointRateLimitArgs{...}
type GetEndpointRateLimitInput interface {
	pulumi.Input

	ToGetEndpointRateLimitOutput() GetEndpointRateLimitOutput
	ToGetEndpointRateLimitOutputWithContext(context.Context) GetEndpointRateLimitOutput
}

type GetEndpointRateLimitArgs struct {
	// Requests Per Minute，每分钟请求数。
	Rpm pulumi.IntInput `pulumi:"rpm"`
	// Tokens Per Minute，每分钟请求 token 数。
	Tpm pulumi.IntInput `pulumi:"tpm"`
}

func (GetEndpointRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointRateLimit)(nil)).Elem()
}

func (i GetEndpointRateLimitArgs) ToGetEndpointRateLimitOutput() GetEndpointRateLimitOutput {
	return i.ToGetEndpointRateLimitOutputWithContext(context.Background())
}

func (i GetEndpointRateLimitArgs) ToGetEndpointRateLimitOutputWithContext(ctx context.Context) GetEndpointRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointRateLimitOutput)
}

type GetEndpointRateLimitOutput struct{ *pulumi.OutputState }

func (GetEndpointRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointRateLimit)(nil)).Elem()
}

func (o GetEndpointRateLimitOutput) ToGetEndpointRateLimitOutput() GetEndpointRateLimitOutput {
	return o
}

func (o GetEndpointRateLimitOutput) ToGetEndpointRateLimitOutputWithContext(ctx context.Context) GetEndpointRateLimitOutput {
	return o
}

// Requests Per Minute，每分钟请求数。
func (o GetEndpointRateLimitOutput) Rpm() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointRateLimit) int { return v.Rpm }).(pulumi.IntOutput)
}

// Tokens Per Minute，每分钟请求 token 数。
func (o GetEndpointRateLimitOutput) Tpm() pulumi.IntOutput {
	return o.ApplyT(func(v GetEndpointRateLimit) int { return v.Tpm }).(pulumi.IntOutput)
}

type GetEndpointTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetEndpointTagInput is an input type that accepts GetEndpointTagArgs and GetEndpointTagOutput values.
// You can construct a concrete instance of `GetEndpointTagInput` via:
//
//	GetEndpointTagArgs{...}
type GetEndpointTagInput interface {
	pulumi.Input

	ToGetEndpointTagOutput() GetEndpointTagOutput
	ToGetEndpointTagOutputWithContext(context.Context) GetEndpointTagOutput
}

type GetEndpointTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEndpointTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointTag)(nil)).Elem()
}

func (i GetEndpointTagArgs) ToGetEndpointTagOutput() GetEndpointTagOutput {
	return i.ToGetEndpointTagOutputWithContext(context.Background())
}

func (i GetEndpointTagArgs) ToGetEndpointTagOutputWithContext(ctx context.Context) GetEndpointTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointTagOutput)
}

// GetEndpointTagArrayInput is an input type that accepts GetEndpointTagArray and GetEndpointTagArrayOutput values.
// You can construct a concrete instance of `GetEndpointTagArrayInput` via:
//
//	GetEndpointTagArray{ GetEndpointTagArgs{...} }
type GetEndpointTagArrayInput interface {
	pulumi.Input

	ToGetEndpointTagArrayOutput() GetEndpointTagArrayOutput
	ToGetEndpointTagArrayOutputWithContext(context.Context) GetEndpointTagArrayOutput
}

type GetEndpointTagArray []GetEndpointTagInput

func (GetEndpointTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointTag)(nil)).Elem()
}

func (i GetEndpointTagArray) ToGetEndpointTagArrayOutput() GetEndpointTagArrayOutput {
	return i.ToGetEndpointTagArrayOutputWithContext(context.Background())
}

func (i GetEndpointTagArray) ToGetEndpointTagArrayOutputWithContext(ctx context.Context) GetEndpointTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEndpointTagArrayOutput)
}

type GetEndpointTagOutput struct{ *pulumi.OutputState }

func (GetEndpointTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointTag)(nil)).Elem()
}

func (o GetEndpointTagOutput) ToGetEndpointTagOutput() GetEndpointTagOutput {
	return o
}

func (o GetEndpointTagOutput) ToGetEndpointTagOutputWithContext(ctx context.Context) GetEndpointTagOutput {
	return o
}

// 标签键。
func (o GetEndpointTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetEndpointTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetEndpointTagArrayOutput struct{ *pulumi.OutputState }

func (GetEndpointTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEndpointTag)(nil)).Elem()
}

func (o GetEndpointTagArrayOutput) ToGetEndpointTagArrayOutput() GetEndpointTagArrayOutput {
	return o
}

func (o GetEndpointTagArrayOutput) ToGetEndpointTagArrayOutputWithContext(ctx context.Context) GetEndpointTagArrayOutput {
	return o
}

func (o GetEndpointTagArrayOutput) Index(i pulumi.IntInput) GetEndpointTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEndpointTag {
		return vs[0].([]GetEndpointTag)[vs[1].(int)]
	}).(GetEndpointTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCertificateInput)(nil)).Elem(), EndpointCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointCertificatePtrInput)(nil)).Elem(), EndpointCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointModelReferenceInput)(nil)).Elem(), EndpointModelReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointModelReferencePtrInput)(nil)).Elem(), EndpointModelReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointModelReferenceFoundationModelInput)(nil)).Elem(), EndpointModelReferenceFoundationModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointModelReferenceFoundationModelPtrInput)(nil)).Elem(), EndpointModelReferenceFoundationModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointModerationInput)(nil)).Elem(), EndpointModerationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointModerationPtrInput)(nil)).Elem(), EndpointModerationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRateLimitInput)(nil)).Elem(), EndpointRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRateLimitPtrInput)(nil)).Elem(), EndpointRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTagInput)(nil)).Elem(), EndpointTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointTagArrayInput)(nil)).Elem(), EndpointTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointCertificateInput)(nil)).Elem(), GetEndpointCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointModelReferenceInput)(nil)).Elem(), GetEndpointModelReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointModelReferenceFoundationModelInput)(nil)).Elem(), GetEndpointModelReferenceFoundationModelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointModerationInput)(nil)).Elem(), GetEndpointModerationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointRateLimitInput)(nil)).Elem(), GetEndpointRateLimitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointTagInput)(nil)).Elem(), GetEndpointTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEndpointTagArrayInput)(nil)).Elem(), GetEndpointTagArray{})
	pulumi.RegisterOutputType(EndpointCertificateOutput{})
	pulumi.RegisterOutputType(EndpointCertificatePtrOutput{})
	pulumi.RegisterOutputType(EndpointModelReferenceOutput{})
	pulumi.RegisterOutputType(EndpointModelReferencePtrOutput{})
	pulumi.RegisterOutputType(EndpointModelReferenceFoundationModelOutput{})
	pulumi.RegisterOutputType(EndpointModelReferenceFoundationModelPtrOutput{})
	pulumi.RegisterOutputType(EndpointModerationOutput{})
	pulumi.RegisterOutputType(EndpointModerationPtrOutput{})
	pulumi.RegisterOutputType(EndpointRateLimitOutput{})
	pulumi.RegisterOutputType(EndpointRateLimitPtrOutput{})
	pulumi.RegisterOutputType(EndpointTagOutput{})
	pulumi.RegisterOutputType(EndpointTagArrayOutput{})
	pulumi.RegisterOutputType(GetEndpointCertificateOutput{})
	pulumi.RegisterOutputType(GetEndpointModelReferenceOutput{})
	pulumi.RegisterOutputType(GetEndpointModelReferenceFoundationModelOutput{})
	pulumi.RegisterOutputType(GetEndpointModerationOutput{})
	pulumi.RegisterOutputType(GetEndpointRateLimitOutput{})
	pulumi.RegisterOutputType(GetEndpointTagOutput{})
	pulumi.RegisterOutputType(GetEndpointTagArrayOutput{})
}
