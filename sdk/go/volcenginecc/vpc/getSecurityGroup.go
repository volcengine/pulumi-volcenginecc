// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::VPC::SecurityGroup
func LookupSecurityGroup(ctx *pulumi.Context, args *LookupSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupSecurityGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityGroupResult
	err := ctx.Invoke("volcenginecc:vpc/getSecurityGroup:getSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityGroup.
type LookupSecurityGroupArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getSecurityGroup.
type LookupSecurityGroupResult struct {
	// 安全组创建时间。
	CreationTime string `pulumi:"creationTime"`
	// 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
	Description string `pulumi:"description"`
	// 安全组出向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。
	EgressPermissions []GetSecurityGroupEgressPermission `pulumi:"egressPermissions"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 安全组入向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。
	IngressPermissions []GetSecurityGroupIngressPermission `pulumi:"ingressPermissions"`
	// 安全组所属项目名称。不填默认项目为default。
	ProjectName string `pulumi:"projectName"`
	// 安全组ID。
	SecurityGroupId string `pulumi:"securityGroupId"`
	// 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
	SecurityGroupName string `pulumi:"securityGroupName"`
	// 安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
	ServiceManaged bool `pulumi:"serviceManaged"`
	// 安全组状态。Available为可用，Creating为创建中。
	Status string                `pulumi:"status"`
	Tags   []GetSecurityGroupTag `pulumi:"tags"`
	// 安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
	Type string `pulumi:"type"`
	// 安全组所属的VPC ID。
	VpcId string `pulumi:"vpcId"`
}

func LookupSecurityGroupOutput(ctx *pulumi.Context, args LookupSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityGroupResultOutput, error) {
			args := v.(LookupSecurityGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:vpc/getSecurityGroup:getSecurityGroup", args, LookupSecurityGroupResultOutput{}, options).(LookupSecurityGroupResultOutput), nil
		}).(LookupSecurityGroupResultOutput)
}

// A collection of arguments for invoking getSecurityGroup.
type LookupSecurityGroupOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityGroup.
type LookupSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupResult)(nil)).Elem()
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutput() LookupSecurityGroupResultOutput {
	return o
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutputWithContext(ctx context.Context) LookupSecurityGroupResultOutput {
	return o
}

// 安全组创建时间。
func (o LookupSecurityGroupResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
func (o LookupSecurityGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// 安全组出向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。
func (o LookupSecurityGroupResultOutput) EgressPermissions() GetSecurityGroupEgressPermissionArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupEgressPermission { return v.EgressPermissions }).(GetSecurityGroupEgressPermissionArrayOutput)
}

// Uniquely identifies the resource.
func (o LookupSecurityGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// 安全组入向规则描述信息。未改动的信息按照原信息返回，未填或者变动的内容视为修改，请按需填写。
func (o LookupSecurityGroupResultOutput) IngressPermissions() GetSecurityGroupIngressPermissionArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupIngressPermission { return v.IngressPermissions }).(GetSecurityGroupIngressPermissionArrayOutput)
}

// 安全组所属项目名称。不填默认项目为default。
func (o LookupSecurityGroupResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 安全组ID。
func (o LookupSecurityGroupResultOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.SecurityGroupId }).(pulumi.StringOutput)
}

// 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
func (o LookupSecurityGroupResultOutput) SecurityGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.SecurityGroupName }).(pulumi.StringOutput)
}

// 安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
func (o LookupSecurityGroupResultOutput) ServiceManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) bool { return v.ServiceManaged }).(pulumi.BoolOutput)
}

// 安全组状态。Available为可用，Creating为创建中。
func (o LookupSecurityGroupResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupSecurityGroupResultOutput) Tags() GetSecurityGroupTagArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []GetSecurityGroupTag { return v.Tags }).(GetSecurityGroupTagArrayOutput)
}

// 安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
func (o LookupSecurityGroupResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.Type }).(pulumi.StringOutput)
}

// 安全组所属的VPC ID。
func (o LookupSecurityGroupResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityGroupResultOutput{})
}
