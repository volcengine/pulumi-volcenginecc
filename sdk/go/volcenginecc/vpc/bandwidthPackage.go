// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 共享带宽包是一种支持复用和共享带宽的云资源。将单个地域内多个公网IP或IPv6公网带宽添加到一个共享带宽包实例中，共享一条带宽。
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:vpc/bandwidthPackage:BandwidthPackage example "bandwidth_package_id"
// ```
type BandwidthPackage struct {
	pulumi.CustomResourceState

	// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// 带宽包ID
	BandwidthPackageId pulumi.StringOutput `pulumi:"bandwidthPackageId"`
	// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	BandwidthPackageName pulumi.StringOutput `pulumi:"bandwidthPackageName"`
	// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
	BillingType pulumi.IntOutput `pulumi:"billingType"`
	// 计费状态
	BusinessStatus pulumi.StringOutput `pulumi:"businessStatus"`
	// 创建时间
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// 删除时间
	DeletedTime pulumi.StringOutput `pulumi:"deletedTime"`
	// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description  pulumi.StringOutput                   `pulumi:"description"`
	EipAddresses BandwidthPackageEipAddressArrayOutput `pulumi:"eipAddresses"`
	// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
	EnableDualStack pulumi.BoolOutput `pulumi:"enableDualStack"`
	// 过期时间
	ExpiredTime pulumi.StringOutput `pulumi:"expiredTime"`
	// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
	Isp pulumi.StringOutput `pulumi:"isp"`
	// 欠费时间
	OverdueTime pulumi.StringOutput `pulumi:"overdueTime"`
	// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
	Period pulumi.IntOutput `pulumi:"period"`
	// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
	PeriodUnit pulumi.IntOutput `pulumi:"periodUnit"`
	// 项目名称，不填默认加入default项目。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
	Ratio pulumi.IntOutput `pulumi:"ratio"`
	// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
	SecurityProtectionTypes pulumi.StringArrayOutput `pulumi:"securityProtectionTypes"`
	// 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
	Status pulumi.StringOutput            `pulumi:"status"`
	Tags   BandwidthPackageTagArrayOutput `pulumi:"tags"`
	// 更新时间
	UpdatedTime pulumi.StringOutput `pulumi:"updatedTime"`
}

// NewBandwidthPackage registers a new resource with the given unique name, arguments, and options.
func NewBandwidthPackage(ctx *pulumi.Context,
	name string, args *BandwidthPackageArgs, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bandwidth == nil {
		return nil, errors.New("invalid value for required argument 'Bandwidth'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BandwidthPackage
	err := ctx.RegisterResource("volcenginecc:vpc/bandwidthPackage:BandwidthPackage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBandwidthPackage gets an existing BandwidthPackage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBandwidthPackage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BandwidthPackageState, opts ...pulumi.ResourceOption) (*BandwidthPackage, error) {
	var resource BandwidthPackage
	err := ctx.ReadResource("volcenginecc:vpc/bandwidthPackage:BandwidthPackage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BandwidthPackage resources.
type bandwidthPackageState struct {
	// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
	Bandwidth *int `pulumi:"bandwidth"`
	// 带宽包ID
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
	BillingType *int `pulumi:"billingType"`
	// 计费状态
	BusinessStatus *string `pulumi:"businessStatus"`
	// 创建时间
	CreatedTime *string `pulumi:"createdTime"`
	// 删除时间
	DeletedTime *string `pulumi:"deletedTime"`
	// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description  *string                      `pulumi:"description"`
	EipAddresses []BandwidthPackageEipAddress `pulumi:"eipAddresses"`
	// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
	EnableDualStack *bool `pulumi:"enableDualStack"`
	// 过期时间
	ExpiredTime *string `pulumi:"expiredTime"`
	// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
	Isp *string `pulumi:"isp"`
	// 欠费时间
	OverdueTime *string `pulumi:"overdueTime"`
	// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
	Period *int `pulumi:"period"`
	// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
	PeriodUnit *int `pulumi:"periodUnit"`
	// 项目名称，不填默认加入default项目。
	ProjectName *string `pulumi:"projectName"`
	// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
	Protocol *string `pulumi:"protocol"`
	// 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
	Ratio *int `pulumi:"ratio"`
	// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
	SecurityProtectionTypes []string `pulumi:"securityProtectionTypes"`
	// 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
	Status *string               `pulumi:"status"`
	Tags   []BandwidthPackageTag `pulumi:"tags"`
	// 更新时间
	UpdatedTime *string `pulumi:"updatedTime"`
}

type BandwidthPackageState struct {
	// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
	Bandwidth pulumi.IntPtrInput
	// 带宽包ID
	BandwidthPackageId pulumi.StringPtrInput
	// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	BandwidthPackageName pulumi.StringPtrInput
	// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
	BillingType pulumi.IntPtrInput
	// 计费状态
	BusinessStatus pulumi.StringPtrInput
	// 创建时间
	CreatedTime pulumi.StringPtrInput
	// 删除时间
	DeletedTime pulumi.StringPtrInput
	// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description  pulumi.StringPtrInput
	EipAddresses BandwidthPackageEipAddressArrayInput
	// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
	EnableDualStack pulumi.BoolPtrInput
	// 过期时间
	ExpiredTime pulumi.StringPtrInput
	// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
	Isp pulumi.StringPtrInput
	// 欠费时间
	OverdueTime pulumi.StringPtrInput
	// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
	Period pulumi.IntPtrInput
	// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
	PeriodUnit pulumi.IntPtrInput
	// 项目名称，不填默认加入default项目。
	ProjectName pulumi.StringPtrInput
	// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
	Protocol pulumi.StringPtrInput
	// 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
	Ratio pulumi.IntPtrInput
	// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
	SecurityProtectionTypes pulumi.StringArrayInput
	// 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
	Status pulumi.StringPtrInput
	Tags   BandwidthPackageTagArrayInput
	// 更新时间
	UpdatedTime pulumi.StringPtrInput
}

func (BandwidthPackageState) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageState)(nil)).Elem()
}

type bandwidthPackageArgs struct {
	// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
	Bandwidth int `pulumi:"bandwidth"`
	// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	BandwidthPackageName *string `pulumi:"bandwidthPackageName"`
	// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
	BillingType *int `pulumi:"billingType"`
	// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description  *string                      `pulumi:"description"`
	EipAddresses []BandwidthPackageEipAddress `pulumi:"eipAddresses"`
	// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
	EnableDualStack *bool `pulumi:"enableDualStack"`
	// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
	Isp *string `pulumi:"isp"`
	// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
	Period *int `pulumi:"period"`
	// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
	PeriodUnit *int `pulumi:"periodUnit"`
	// 项目名称，不填默认加入default项目。
	ProjectName *string `pulumi:"projectName"`
	// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
	Protocol *string `pulumi:"protocol"`
	// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
	SecurityProtectionTypes []string              `pulumi:"securityProtectionTypes"`
	Tags                    []BandwidthPackageTag `pulumi:"tags"`
}

// The set of arguments for constructing a BandwidthPackage resource.
type BandwidthPackageArgs struct {
	// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
	Bandwidth pulumi.IntInput
	// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	BandwidthPackageName pulumi.StringPtrInput
	// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
	BillingType pulumi.IntPtrInput
	// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description  pulumi.StringPtrInput
	EipAddresses BandwidthPackageEipAddressArrayInput
	// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
	EnableDualStack pulumi.BoolPtrInput
	// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
	Isp pulumi.StringPtrInput
	// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
	Period pulumi.IntPtrInput
	// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
	PeriodUnit pulumi.IntPtrInput
	// 项目名称，不填默认加入default项目。
	ProjectName pulumi.StringPtrInput
	// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
	Protocol pulumi.StringPtrInput
	// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
	SecurityProtectionTypes pulumi.StringArrayInput
	Tags                    BandwidthPackageTagArrayInput
}

func (BandwidthPackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bandwidthPackageArgs)(nil)).Elem()
}

type BandwidthPackageInput interface {
	pulumi.Input

	ToBandwidthPackageOutput() BandwidthPackageOutput
	ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput
}

func (*BandwidthPackage) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPackage)(nil)).Elem()
}

func (i *BandwidthPackage) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return i.ToBandwidthPackageOutputWithContext(context.Background())
}

func (i *BandwidthPackage) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageOutput)
}

// BandwidthPackageArrayInput is an input type that accepts BandwidthPackageArray and BandwidthPackageArrayOutput values.
// You can construct a concrete instance of `BandwidthPackageArrayInput` via:
//
//	BandwidthPackageArray{ BandwidthPackageArgs{...} }
type BandwidthPackageArrayInput interface {
	pulumi.Input

	ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput
	ToBandwidthPackageArrayOutputWithContext(context.Context) BandwidthPackageArrayOutput
}

type BandwidthPackageArray []BandwidthPackageInput

func (BandwidthPackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackageArray) ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput {
	return i.ToBandwidthPackageArrayOutputWithContext(context.Background())
}

func (i BandwidthPackageArray) ToBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageArrayOutput)
}

// BandwidthPackageMapInput is an input type that accepts BandwidthPackageMap and BandwidthPackageMapOutput values.
// You can construct a concrete instance of `BandwidthPackageMapInput` via:
//
//	BandwidthPackageMap{ "key": BandwidthPackageArgs{...} }
type BandwidthPackageMapInput interface {
	pulumi.Input

	ToBandwidthPackageMapOutput() BandwidthPackageMapOutput
	ToBandwidthPackageMapOutputWithContext(context.Context) BandwidthPackageMapOutput
}

type BandwidthPackageMap map[string]BandwidthPackageInput

func (BandwidthPackageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPackage)(nil)).Elem()
}

func (i BandwidthPackageMap) ToBandwidthPackageMapOutput() BandwidthPackageMapOutput {
	return i.ToBandwidthPackageMapOutputWithContext(context.Background())
}

func (i BandwidthPackageMap) ToBandwidthPackageMapOutputWithContext(ctx context.Context) BandwidthPackageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BandwidthPackageMapOutput)
}

type BandwidthPackageOutput struct{ *pulumi.OutputState }

func (BandwidthPackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutput() BandwidthPackageOutput {
	return o
}

func (o BandwidthPackageOutput) ToBandwidthPackageOutputWithContext(ctx context.Context) BandwidthPackageOutput {
	return o
}

// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
func (o BandwidthPackageOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

// 带宽包ID
func (o BandwidthPackageOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
func (o BandwidthPackageOutput) BandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.BandwidthPackageName }).(pulumi.StringOutput)
}

// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
func (o BandwidthPackageOutput) BillingType() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntOutput { return v.BillingType }).(pulumi.IntOutput)
}

// 计费状态
func (o BandwidthPackageOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.BusinessStatus }).(pulumi.StringOutput)
}

// 创建时间
func (o BandwidthPackageOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// 删除时间
func (o BandwidthPackageOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.DeletedTime }).(pulumi.StringOutput)
}

// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
func (o BandwidthPackageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o BandwidthPackageOutput) EipAddresses() BandwidthPackageEipAddressArrayOutput {
	return o.ApplyT(func(v *BandwidthPackage) BandwidthPackageEipAddressArrayOutput { return v.EipAddresses }).(BandwidthPackageEipAddressArrayOutput)
}

// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
func (o BandwidthPackageOutput) EnableDualStack() pulumi.BoolOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.BoolOutput { return v.EnableDualStack }).(pulumi.BoolOutput)
}

// 过期时间
func (o BandwidthPackageOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.ExpiredTime }).(pulumi.StringOutput)
}

// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
func (o BandwidthPackageOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Isp }).(pulumi.StringOutput)
}

// 欠费时间
func (o BandwidthPackageOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.OverdueTime }).(pulumi.StringOutput)
}

// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
func (o BandwidthPackageOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
func (o BandwidthPackageOutput) PeriodUnit() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntOutput { return v.PeriodUnit }).(pulumi.IntOutput)
}

// 项目名称，不填默认加入default项目。
func (o BandwidthPackageOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
func (o BandwidthPackageOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
func (o BandwidthPackageOutput) Ratio() pulumi.IntOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.IntOutput { return v.Ratio }).(pulumi.IntOutput)
}

// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
func (o BandwidthPackageOutput) SecurityProtectionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringArrayOutput { return v.SecurityProtectionTypes }).(pulumi.StringArrayOutput)
}

// 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
func (o BandwidthPackageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o BandwidthPackageOutput) Tags() BandwidthPackageTagArrayOutput {
	return o.ApplyT(func(v *BandwidthPackage) BandwidthPackageTagArrayOutput { return v.Tags }).(BandwidthPackageTagArrayOutput)
}

// 更新时间
func (o BandwidthPackageOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *BandwidthPackage) pulumi.StringOutput { return v.UpdatedTime }).(pulumi.StringOutput)
}

type BandwidthPackageArrayOutput struct{ *pulumi.OutputState }

func (BandwidthPackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageArrayOutput) ToBandwidthPackageArrayOutput() BandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackageArrayOutput) ToBandwidthPackageArrayOutputWithContext(ctx context.Context) BandwidthPackageArrayOutput {
	return o
}

func (o BandwidthPackageArrayOutput) Index(i pulumi.IntInput) BandwidthPackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BandwidthPackage {
		return vs[0].([]*BandwidthPackage)[vs[1].(int)]
	}).(BandwidthPackageOutput)
}

type BandwidthPackageMapOutput struct{ *pulumi.OutputState }

func (BandwidthPackageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BandwidthPackage)(nil)).Elem()
}

func (o BandwidthPackageMapOutput) ToBandwidthPackageMapOutput() BandwidthPackageMapOutput {
	return o
}

func (o BandwidthPackageMapOutput) ToBandwidthPackageMapOutputWithContext(ctx context.Context) BandwidthPackageMapOutput {
	return o
}

func (o BandwidthPackageMapOutput) MapIndex(k pulumi.StringInput) BandwidthPackageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BandwidthPackage {
		return vs[0].(map[string]*BandwidthPackage)[vs[1].(string)]
	}).(BandwidthPackageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageInput)(nil)).Elem(), &BandwidthPackage{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageArrayInput)(nil)).Elem(), BandwidthPackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BandwidthPackageMapInput)(nil)).Elem(), BandwidthPackageMap{})
	pulumi.RegisterOutputType(BandwidthPackageOutput{})
	pulumi.RegisterOutputType(BandwidthPackageArrayOutput{})
	pulumi.RegisterOutputType(BandwidthPackageMapOutput{})
}
