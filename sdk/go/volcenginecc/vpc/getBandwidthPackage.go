// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::VPC::BandwidthPackage
func LookupBandwidthPackage(ctx *pulumi.Context, args *LookupBandwidthPackageArgs, opts ...pulumi.InvokeOption) (*LookupBandwidthPackageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBandwidthPackageResult
	err := ctx.Invoke("volcenginecc:vpc/getBandwidthPackage:getBandwidthPackage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBandwidthPackage.
type LookupBandwidthPackageArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getBandwidthPackage.
type LookupBandwidthPackageResult struct {
	// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
	Bandwidth int `pulumi:"bandwidth"`
	// 带宽包ID
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	BandwidthPackageName string `pulumi:"bandwidthPackageName"`
	// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
	BillingType int `pulumi:"billingType"`
	// 计费状态
	BusinessStatus string `pulumi:"businessStatus"`
	// 创建时间
	CreatedTime string `pulumi:"createdTime"`
	// 删除时间
	DeletedTime string `pulumi:"deletedTime"`
	// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description string `pulumi:"description"`
	// 加入共享带宽包的公网IP信息列表。必须同时满足如下条件：1、二者线路类型相同。2、二者安全防护类型相同。3、二者地域相同。4、公网IP或IPv6公网带宽为按量计费。
	EipAddresses []GetBandwidthPackageEipAddress `pulumi:"eipAddresses"`
	// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
	EnableDualStack bool `pulumi:"enableDualStack"`
	// 过期时间
	ExpiredTime string `pulumi:"expiredTime"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
	Isp string `pulumi:"isp"`
	// 欠费时间
	OverdueTime string `pulumi:"overdueTime"`
	// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
	Period int `pulumi:"period"`
	// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
	PeriodUnit int `pulumi:"periodUnit"`
	// 项目名称，不填默认加入default项目。
	ProjectName string `pulumi:"projectName"`
	// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
	Protocol string `pulumi:"protocol"`
	// 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
	Ratio int `pulumi:"ratio"`
	// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
	SecurityProtectionTypes []string `pulumi:"securityProtectionTypes"`
	// 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
	Status string `pulumi:"status"`
	// 标签列表。
	Tags []GetBandwidthPackageTag `pulumi:"tags"`
	// 更新时间
	UpdatedTime string `pulumi:"updatedTime"`
}

func LookupBandwidthPackageOutput(ctx *pulumi.Context, args LookupBandwidthPackageOutputArgs, opts ...pulumi.InvokeOption) LookupBandwidthPackageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupBandwidthPackageResultOutput, error) {
			args := v.(LookupBandwidthPackageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:vpc/getBandwidthPackage:getBandwidthPackage", args, LookupBandwidthPackageResultOutput{}, options).(LookupBandwidthPackageResultOutput), nil
		}).(LookupBandwidthPackageResultOutput)
}

// A collection of arguments for invoking getBandwidthPackage.
type LookupBandwidthPackageOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupBandwidthPackageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBandwidthPackageArgs)(nil)).Elem()
}

// A collection of values returned by getBandwidthPackage.
type LookupBandwidthPackageResultOutput struct{ *pulumi.OutputState }

func (LookupBandwidthPackageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBandwidthPackageResult)(nil)).Elem()
}

func (o LookupBandwidthPackageResultOutput) ToLookupBandwidthPackageResultOutput() LookupBandwidthPackageResultOutput {
	return o
}

func (o LookupBandwidthPackageResultOutput) ToLookupBandwidthPackageResultOutputWithContext(ctx context.Context) LookupBandwidthPackageResultOutput {
	return o
}

// 共享带宽包的带宽上限，单位：Mbps。BillingType传入1：取值范围5 ~ 5000，BillingType传入2、3、4：取值范围2 ~ 5000。
func (o LookupBandwidthPackageResultOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// 带宽包ID
func (o LookupBandwidthPackageResultOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// 带宽包名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
func (o LookupBandwidthPackageResultOutput) BandwidthPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.BandwidthPackageName }).(pulumi.StringOutput)
}

// 共享带宽包的计费方式。取值如下：1：包年包月。2 : 按带宽上限计费（默认值）。3：按主流量计费。4 : 按传统95计费（保底比例默认20%）。
func (o LookupBandwidthPackageResultOutput) BillingType() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) int { return v.BillingType }).(pulumi.IntOutput)
}

// 计费状态
func (o LookupBandwidthPackageResultOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// 创建时间
func (o LookupBandwidthPackageResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 删除时间
func (o LookupBandwidthPackageResultOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// 描述信息，长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
func (o LookupBandwidthPackageResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.Description }).(pulumi.StringOutput)
}

// 加入共享带宽包的公网IP信息列表。必须同时满足如下条件：1、二者线路类型相同。2、二者安全防护类型相同。3、二者地域相同。4、公网IP或IPv6公网带宽为按量计费。
func (o LookupBandwidthPackageResultOutput) EipAddresses() GetBandwidthPackageEipAddressArrayOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) []GetBandwidthPackageEipAddress { return v.EipAddresses }).(GetBandwidthPackageEipAddressArrayOutput)
}

// 是否启用双栈，取值如下：true：启用双栈。false：不启用双栈。
func (o LookupBandwidthPackageResultOutput) EnableDualStack() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) bool { return v.EnableDualStack }).(pulumi.BoolOutput)
}

// 过期时间
func (o LookupBandwidthPackageResultOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupBandwidthPackageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.Id }).(pulumi.StringOutput)
}

// 线路类型，默认为BGP。BGP：BGP（多线）。1、若您的账号已申请并开通了静态单线权限，则可传入如下取值：1.1、ChinaMobile：中国移动静态单线。1.2、ChinaTelecom：中国电信静态单线。1.3、ChinaUnicom：中国联通静态单线。2、若您的账号已申请并开通了BGP单线权限，则可传入SingleLine*BGP。3、若您的账号已申请并开通了精品BGP权限，则可传入Premium*BGP。4、若您的账号已申请并开通了融合BGP权限，则可传入Fusion*BGP。5、若您的账号已申请并开通了惠选型静态单线权限，则可传入如下取值：5.1、ChinaMobile*Value：中国移动惠选型静态单线。5.2、ChinaUnicom*Value：中国联通惠选型静态单线。5.3、ChinaTelecom*Value：中国电信惠选型静态单线。
func (o LookupBandwidthPackageResultOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.Isp }).(pulumi.StringOutput)
}

// 欠费时间
func (o LookupBandwidthPackageResultOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// 购买包年包月共享带宽包的时长，默认“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36。当PeriodUnit传入2，Period取值范围：1～3。
func (o LookupBandwidthPackageResultOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) int { return v.Period }).(pulumi.IntOutput)
}

// 购买包年包月共享带宽包时长的单位，取值如下：1：月（默认值）。2 ：年。
func (o LookupBandwidthPackageResultOutput) PeriodUnit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) int { return v.PeriodUnit }).(pulumi.IntOutput)
}

// 项目名称，不填默认加入default项目。
func (o LookupBandwidthPackageResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 共享带宽包的IP协议，取值如下：Dual-stack：双栈协议类型。IPv4：IPv4协议类型协议。仅BillingType传2或4时，本参数支持传入Dual-stack
func (o LookupBandwidthPackageResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// 95计费保底比例，单位%，仅95计费共享带宽包实例返回此参数。
func (o LookupBandwidthPackageResultOutput) Ratio() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) int { return v.Ratio }).(pulumi.IntOutput)
}

// 共享带宽包的的安全防护类型。AntiDDoS_Enhanced：创建增强防护类型的共享带宽包，即创建支持添加基础防护类型公网IP的共享带宽包。不填则表示基础防护类型的共享带宽包，即创建支持添加增强防护类型公网IP的共享带宽包。
func (o LookupBandwidthPackageResultOutput) SecurityProtectionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) []string { return v.SecurityProtectionTypes }).(pulumi.StringArrayOutput)
}

// 共享带宽包的状态。Creating：创建中。Available：可用。Deleting：删除中。
func (o LookupBandwidthPackageResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.Status }).(pulumi.StringOutput)
}

// 标签列表。
func (o LookupBandwidthPackageResultOutput) Tags() GetBandwidthPackageTagArrayOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) []GetBandwidthPackageTag { return v.Tags }).(GetBandwidthPackageTagArrayOutput)
}

// 更新时间
func (o LookupBandwidthPackageResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBandwidthPackageResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBandwidthPackageResultOutput{})
}
