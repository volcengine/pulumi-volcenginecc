// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::VPC::RouteTable
func LookupRouteTable(ctx *pulumi.Context, args *LookupRouteTableArgs, opts ...pulumi.InvokeOption) (*LookupRouteTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteTableResult
	err := ctx.Invoke("volcenginecc:vpc/getRouteTable:getRouteTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTable.
type LookupRouteTableArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getRouteTable.
type LookupRouteTableResult struct {
	// 路由表所属账号的ID。
	AccountId string `pulumi:"accountId"`
	// 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
	AssociateType string `pulumi:"associateType"`
	// 路由表创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 路由表关联的自定义路由条目列表。
	CustomRouteEntries []GetRouteTableCustomRouteEntry `pulumi:"customRouteEntries"`
	// 路由表描述信息。
	Description string `pulumi:"description"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 关联路由表的IPv4网关ID。
	Ipv4GatewayId string `pulumi:"ipv4GatewayId"`
	// 关联路由表的IPv6网关ID。
	Ipv6GatewayId string `pulumi:"ipv6GatewayId"`
	// 路由表所属项目的名称。
	ProjectName string `pulumi:"projectName"`
	// 路由表ID。
	RouteTableId string `pulumi:"routeTableId"`
	// 路由表名称。
	RouteTableName string `pulumi:"routeTableName"`
	// 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
	RouteTableType string `pulumi:"routeTableType"`
	// 关联的子网的ID列表。
	SubnetIds []string `pulumi:"subnetIds"`
	// 路由表关联的系统默认路由条目列表。
	SystemRouteEntries []GetRouteTableSystemRouteEntry `pulumi:"systemRouteEntries"`
	// 标签列表。
	Tags []GetRouteTableTag `pulumi:"tags"`
	// 路由表更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
	// 路由表所属VPC的ID。
	VpcId string `pulumi:"vpcId"`
	// VPC的名称。
	VpcName string `pulumi:"vpcName"`
}

func LookupRouteTableOutput(ctx *pulumi.Context, args LookupRouteTableOutputArgs, opts ...pulumi.InvokeOption) LookupRouteTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRouteTableResultOutput, error) {
			args := v.(LookupRouteTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:vpc/getRouteTable:getRouteTable", args, LookupRouteTableResultOutput{}, options).(LookupRouteTableResultOutput), nil
		}).(LookupRouteTableResultOutput)
}

// A collection of arguments for invoking getRouteTable.
type LookupRouteTableOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRouteTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteTableArgs)(nil)).Elem()
}

// A collection of values returned by getRouteTable.
type LookupRouteTableResultOutput struct{ *pulumi.OutputState }

func (LookupRouteTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteTableResult)(nil)).Elem()
}

func (o LookupRouteTableResultOutput) ToLookupRouteTableResultOutput() LookupRouteTableResultOutput {
	return o
}

func (o LookupRouteTableResultOutput) ToLookupRouteTableResultOutputWithContext(ctx context.Context) LookupRouteTableResultOutput {
	return o
}

// 路由表所属账号的ID。
func (o LookupRouteTableResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
func (o LookupRouteTableResultOutput) AssociateType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.AssociateType }).(pulumi.StringOutput)
}

// 路由表创建时间。
func (o LookupRouteTableResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 路由表关联的自定义路由条目列表。
func (o LookupRouteTableResultOutput) CustomRouteEntries() GetRouteTableCustomRouteEntryArrayOutput {
	return o.ApplyT(func(v LookupRouteTableResult) []GetRouteTableCustomRouteEntry { return v.CustomRouteEntries }).(GetRouteTableCustomRouteEntryArrayOutput)
}

// 路由表描述信息。
func (o LookupRouteTableResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.Description }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupRouteTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.Id }).(pulumi.StringOutput)
}

// 关联路由表的IPv4网关ID。
func (o LookupRouteTableResultOutput) Ipv4GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.Ipv4GatewayId }).(pulumi.StringOutput)
}

// 关联路由表的IPv6网关ID。
func (o LookupRouteTableResultOutput) Ipv6GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.Ipv6GatewayId }).(pulumi.StringOutput)
}

// 路由表所属项目的名称。
func (o LookupRouteTableResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 路由表ID。
func (o LookupRouteTableResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// 路由表名称。
func (o LookupRouteTableResultOutput) RouteTableName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.RouteTableName }).(pulumi.StringOutput)
}

// 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
func (o LookupRouteTableResultOutput) RouteTableType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.RouteTableType }).(pulumi.StringOutput)
}

// 关联的子网的ID列表。
func (o LookupRouteTableResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRouteTableResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// 路由表关联的系统默认路由条目列表。
func (o LookupRouteTableResultOutput) SystemRouteEntries() GetRouteTableSystemRouteEntryArrayOutput {
	return o.ApplyT(func(v LookupRouteTableResult) []GetRouteTableSystemRouteEntry { return v.SystemRouteEntries }).(GetRouteTableSystemRouteEntryArrayOutput)
}

// 标签列表。
func (o LookupRouteTableResultOutput) Tags() GetRouteTableTagArrayOutput {
	return o.ApplyT(func(v LookupRouteTableResult) []GetRouteTableTag { return v.Tags }).(GetRouteTableTagArrayOutput)
}

// 路由表更新时间。
func (o LookupRouteTableResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// 路由表所属VPC的ID。
func (o LookupRouteTableResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.VpcId }).(pulumi.StringOutput)
}

// VPC的名称。
func (o LookupRouteTableResultOutput) VpcName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableResult) string { return v.VpcName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteTableResultOutput{})
}
