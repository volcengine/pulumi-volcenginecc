// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 公网IP（Elastic IP Address，EIP）及其公网出口带宽，是火山引擎为云资源提供的可独立购买和持有的IP连通服务。公网IP支持直接绑定云服务器（包括ECS云服务器、EBM裸金属服务器、GPU云服务器），还支持绑定公网NAT网关、负载均衡、辅助网卡等组件，为云服务器提供公网互通能力。
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/vpc"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vpc.NewEip(ctx, "EipDemo", &vpc.EipArgs{
//				Name:               pulumi.String("EipDemo"),
//				Description:        pulumi.String("EipDemo description"),
//				Isp:                pulumi.String("BGP"),
//				BillingType:        pulumi.Int(2),
//				Bandwidth:          pulumi.Int(3),
//				Period:             pulumi.Int(5),
//				ProjectName:        pulumi.String("default"),
//				BandwidthPackageId: pulumi.String("bwp-ij5gz1lf66m874o8cth*****"),
//				Tags: vpc.EipTagArray{
//					&vpc.EipTagArgs{
//						Key:   pulumi.String("env"),
//						Value: pulumi.String("test"),
//					},
//				},
//				InstanceId:   pulumi.String("i-ye48ymyy9s5i3z4*****"),
//				InstanceType: pulumi.String("EcsInstance"),
//				DirectMode:   pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:vpc/eip:Eip example "allocation_id"
// ```
type Eip struct {
	pulumi.CustomResourceState

	// 公网IP的ID。
	AllocationId pulumi.StringOutput `pulumi:"allocationId"`
	// 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
	Bandwidth pulumi.IntOutput `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
	BandwidthPackageId pulumi.StringOutput `pulumi:"bandwidthPackageId"`
	// 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
	BillingType pulumi.IntOutput `pulumi:"billingType"`
	// 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
	BusinessStatus pulumi.StringOutput `pulumi:"businessStatus"`
	// 公网IP的创建时间。
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
	DeletedTime pulumi.StringOutput `pulumi:"deletedTime"`
	// 公网IP的描述信息。
	Description pulumi.StringOutput `pulumi:"description"`
	// 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
	DirectMode pulumi.BoolOutput `pulumi:"directMode"`
	// 公网IP地址。
	EipAddress pulumi.StringOutput `pulumi:"eipAddress"`
	// 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
	ExpiredTime pulumi.StringOutput `pulumi:"expiredTime"`
	// 当前绑定的实例ID。
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
	InstanceType pulumi.StringOutput `pulumi:"instanceType"`
	// 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// IP地址池的ID。
	IpAddressPoolId pulumi.StringOutput `pulumi:"ipAddressPoolId"`
	// 是否被封禁。true：是。false：否。
	IsBlocked pulumi.BoolOutput `pulumi:"isBlocked"`
	// 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
	Isp pulumi.StringOutput `pulumi:"isp"`
	// 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
	LockReason pulumi.StringOutput `pulumi:"lockReason"`
	// 公网IP的名称。
	Name pulumi.StringOutput `pulumi:"name"`
	// 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
	OverdueTime pulumi.StringOutput `pulumi:"overdueTime"`
	// 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
	Period pulumi.IntOutput `pulumi:"period"`
	// 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
	PeriodUnit pulumi.IntOutput `pulumi:"periodUnit"`
	// 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
	PrivateIpAddress pulumi.StringOutput `pulumi:"privateIpAddress"`
	// 公网IP所属项目的名称。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
	ReleaseWithInstance pulumi.BoolOutput `pulumi:"releaseWithInstance"`
	// 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
	RenewPeriodTimes pulumi.IntOutput `pulumi:"renewPeriodTimes"`
	// 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
	RenewType pulumi.IntOutput `pulumi:"renewType"`
	// DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
	SecurityProtectionInstanceId pulumi.IntOutput `pulumi:"securityProtectionInstanceId"`
	// 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
	SecurityProtectionTypes pulumi.StringArrayOutput `pulumi:"securityProtectionTypes"`
	// 是否由服务管理
	ServiceManaged pulumi.BoolOutput `pulumi:"serviceManaged"`
	// 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
	Status pulumi.StringOutput `pulumi:"status"`
	Tags   EipTagArrayOutput   `pulumi:"tags"`
	// 更新公网IP的时间。
	UpdatedTime pulumi.StringOutput `pulumi:"updatedTime"`
}

// NewEip registers a new resource with the given unique name, arguments, and options.
func NewEip(ctx *pulumi.Context,
	name string, args *EipArgs, opts ...pulumi.ResourceOption) (*Eip, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BillingType == nil {
		return nil, errors.New("invalid value for required argument 'BillingType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Eip
	err := ctx.RegisterResource("volcenginecc:vpc/eip:Eip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEip gets an existing Eip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipState, opts ...pulumi.ResourceOption) (*Eip, error) {
	var resource Eip
	err := ctx.ReadResource("volcenginecc:vpc/eip:Eip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Eip resources.
type eipState struct {
	// 公网IP的ID。
	AllocationId *string `pulumi:"allocationId"`
	// 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
	Bandwidth *int `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
	BillingType *int `pulumi:"billingType"`
	// 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
	BusinessStatus *string `pulumi:"businessStatus"`
	// 公网IP的创建时间。
	CreatedTime *string `pulumi:"createdTime"`
	// 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
	DeletedTime *string `pulumi:"deletedTime"`
	// 公网IP的描述信息。
	Description *string `pulumi:"description"`
	// 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
	DirectMode *bool `pulumi:"directMode"`
	// 公网IP地址。
	EipAddress *string `pulumi:"eipAddress"`
	// 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
	ExpiredTime *string `pulumi:"expiredTime"`
	// 当前绑定的实例ID。
	InstanceId *string `pulumi:"instanceId"`
	// 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
	InstanceType *string `pulumi:"instanceType"`
	// 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
	IpAddress *string `pulumi:"ipAddress"`
	// IP地址池的ID。
	IpAddressPoolId *string `pulumi:"ipAddressPoolId"`
	// 是否被封禁。true：是。false：否。
	IsBlocked *bool `pulumi:"isBlocked"`
	// 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
	Isp *string `pulumi:"isp"`
	// 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
	LockReason *string `pulumi:"lockReason"`
	// 公网IP的名称。
	Name *string `pulumi:"name"`
	// 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
	OverdueTime *string `pulumi:"overdueTime"`
	// 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
	Period *int `pulumi:"period"`
	// 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
	PeriodUnit *int `pulumi:"periodUnit"`
	// 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// 公网IP所属项目的名称。
	ProjectName *string `pulumi:"projectName"`
	// 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
	ReleaseWithInstance *bool `pulumi:"releaseWithInstance"`
	// 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
	RenewPeriodTimes *int `pulumi:"renewPeriodTimes"`
	// 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
	RenewType *int `pulumi:"renewType"`
	// DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
	SecurityProtectionInstanceId *int `pulumi:"securityProtectionInstanceId"`
	// 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
	SecurityProtectionTypes []string `pulumi:"securityProtectionTypes"`
	// 是否由服务管理
	ServiceManaged *bool `pulumi:"serviceManaged"`
	// 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
	Status *string  `pulumi:"status"`
	Tags   []EipTag `pulumi:"tags"`
	// 更新公网IP的时间。
	UpdatedTime *string `pulumi:"updatedTime"`
}

type EipState struct {
	// 公网IP的ID。
	AllocationId pulumi.StringPtrInput
	// 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
	Bandwidth pulumi.IntPtrInput
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
	BandwidthPackageId pulumi.StringPtrInput
	// 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
	BillingType pulumi.IntPtrInput
	// 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
	BusinessStatus pulumi.StringPtrInput
	// 公网IP的创建时间。
	CreatedTime pulumi.StringPtrInput
	// 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
	DeletedTime pulumi.StringPtrInput
	// 公网IP的描述信息。
	Description pulumi.StringPtrInput
	// 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
	DirectMode pulumi.BoolPtrInput
	// 公网IP地址。
	EipAddress pulumi.StringPtrInput
	// 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
	ExpiredTime pulumi.StringPtrInput
	// 当前绑定的实例ID。
	InstanceId pulumi.StringPtrInput
	// 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
	InstanceType pulumi.StringPtrInput
	// 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
	IpAddress pulumi.StringPtrInput
	// IP地址池的ID。
	IpAddressPoolId pulumi.StringPtrInput
	// 是否被封禁。true：是。false：否。
	IsBlocked pulumi.BoolPtrInput
	// 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
	Isp pulumi.StringPtrInput
	// 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
	LockReason pulumi.StringPtrInput
	// 公网IP的名称。
	Name pulumi.StringPtrInput
	// 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
	OverdueTime pulumi.StringPtrInput
	// 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
	Period pulumi.IntPtrInput
	// 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
	PeriodUnit pulumi.IntPtrInput
	// 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
	PrivateIpAddress pulumi.StringPtrInput
	// 公网IP所属项目的名称。
	ProjectName pulumi.StringPtrInput
	// 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
	ReleaseWithInstance pulumi.BoolPtrInput
	// 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
	RenewPeriodTimes pulumi.IntPtrInput
	// 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
	RenewType pulumi.IntPtrInput
	// DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
	SecurityProtectionInstanceId pulumi.IntPtrInput
	// 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
	SecurityProtectionTypes pulumi.StringArrayInput
	// 是否由服务管理
	ServiceManaged pulumi.BoolPtrInput
	// 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
	Status pulumi.StringPtrInput
	Tags   EipTagArrayInput
	// 更新公网IP的时间。
	UpdatedTime pulumi.StringPtrInput
}

func (EipState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipState)(nil)).Elem()
}

type eipArgs struct {
	// 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
	Bandwidth *int `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
	BillingType int `pulumi:"billingType"`
	// 公网IP的描述信息。
	Description *string `pulumi:"description"`
	// 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
	DirectMode *bool `pulumi:"directMode"`
	// 当前绑定的实例ID。
	InstanceId *string `pulumi:"instanceId"`
	// 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
	InstanceType *string `pulumi:"instanceType"`
	// 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
	IpAddress *string `pulumi:"ipAddress"`
	// IP地址池的ID。
	IpAddressPoolId *string `pulumi:"ipAddressPoolId"`
	// 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
	Isp *string `pulumi:"isp"`
	// 公网IP的名称。
	Name *string `pulumi:"name"`
	// 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
	Period *int `pulumi:"period"`
	// 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
	PeriodUnit *int `pulumi:"periodUnit"`
	// 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// 公网IP所属项目的名称。
	ProjectName *string `pulumi:"projectName"`
	// 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
	ReleaseWithInstance *bool `pulumi:"releaseWithInstance"`
	// 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
	RenewPeriodTimes *int `pulumi:"renewPeriodTimes"`
	// 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
	RenewType *int `pulumi:"renewType"`
	// DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
	SecurityProtectionInstanceId *int `pulumi:"securityProtectionInstanceId"`
	// 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
	SecurityProtectionTypes []string `pulumi:"securityProtectionTypes"`
	// 是否由服务管理
	ServiceManaged *bool    `pulumi:"serviceManaged"`
	Tags           []EipTag `pulumi:"tags"`
}

// The set of arguments for constructing a Eip resource.
type EipArgs struct {
	// 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
	Bandwidth pulumi.IntPtrInput
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
	BandwidthPackageId pulumi.StringPtrInput
	// 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
	BillingType pulumi.IntInput
	// 公网IP的描述信息。
	Description pulumi.StringPtrInput
	// 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
	DirectMode pulumi.BoolPtrInput
	// 当前绑定的实例ID。
	InstanceId pulumi.StringPtrInput
	// 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
	InstanceType pulumi.StringPtrInput
	// 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
	IpAddress pulumi.StringPtrInput
	// IP地址池的ID。
	IpAddressPoolId pulumi.StringPtrInput
	// 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
	Isp pulumi.StringPtrInput
	// 公网IP的名称。
	Name pulumi.StringPtrInput
	// 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
	Period pulumi.IntPtrInput
	// 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
	PeriodUnit pulumi.IntPtrInput
	// 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
	PrivateIpAddress pulumi.StringPtrInput
	// 公网IP所属项目的名称。
	ProjectName pulumi.StringPtrInput
	// 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
	ReleaseWithInstance pulumi.BoolPtrInput
	// 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
	RenewPeriodTimes pulumi.IntPtrInput
	// 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
	RenewType pulumi.IntPtrInput
	// DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
	SecurityProtectionInstanceId pulumi.IntPtrInput
	// 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
	SecurityProtectionTypes pulumi.StringArrayInput
	// 是否由服务管理
	ServiceManaged pulumi.BoolPtrInput
	Tags           EipTagArrayInput
}

func (EipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipArgs)(nil)).Elem()
}

type EipInput interface {
	pulumi.Input

	ToEipOutput() EipOutput
	ToEipOutputWithContext(ctx context.Context) EipOutput
}

func (*Eip) ElementType() reflect.Type {
	return reflect.TypeOf((**Eip)(nil)).Elem()
}

func (i *Eip) ToEipOutput() EipOutput {
	return i.ToEipOutputWithContext(context.Background())
}

func (i *Eip) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipOutput)
}

// EipArrayInput is an input type that accepts EipArray and EipArrayOutput values.
// You can construct a concrete instance of `EipArrayInput` via:
//
//	EipArray{ EipArgs{...} }
type EipArrayInput interface {
	pulumi.Input

	ToEipArrayOutput() EipArrayOutput
	ToEipArrayOutputWithContext(context.Context) EipArrayOutput
}

type EipArray []EipInput

func (EipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Eip)(nil)).Elem()
}

func (i EipArray) ToEipArrayOutput() EipArrayOutput {
	return i.ToEipArrayOutputWithContext(context.Background())
}

func (i EipArray) ToEipArrayOutputWithContext(ctx context.Context) EipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipArrayOutput)
}

// EipMapInput is an input type that accepts EipMap and EipMapOutput values.
// You can construct a concrete instance of `EipMapInput` via:
//
//	EipMap{ "key": EipArgs{...} }
type EipMapInput interface {
	pulumi.Input

	ToEipMapOutput() EipMapOutput
	ToEipMapOutputWithContext(context.Context) EipMapOutput
}

type EipMap map[string]EipInput

func (EipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Eip)(nil)).Elem()
}

func (i EipMap) ToEipMapOutput() EipMapOutput {
	return i.ToEipMapOutputWithContext(context.Background())
}

func (i EipMap) ToEipMapOutputWithContext(ctx context.Context) EipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipMapOutput)
}

type EipOutput struct{ *pulumi.OutputState }

func (EipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Eip)(nil)).Elem()
}

func (o EipOutput) ToEipOutput() EipOutput {
	return o
}

func (o EipOutput) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return o
}

// 公网IP的ID。
func (o EipOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.AllocationId }).(pulumi.StringOutput)
}

// 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
func (o EipOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.Bandwidth }).(pulumi.IntOutput)
}

// 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
func (o EipOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
func (o EipOutput) BillingType() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.BillingType }).(pulumi.IntOutput)
}

// 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
func (o EipOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.BusinessStatus }).(pulumi.StringOutput)
}

// 公网IP的创建时间。
func (o EipOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
func (o EipOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.DeletedTime }).(pulumi.StringOutput)
}

// 公网IP的描述信息。
func (o EipOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
func (o EipOutput) DirectMode() pulumi.BoolOutput {
	return o.ApplyT(func(v *Eip) pulumi.BoolOutput { return v.DirectMode }).(pulumi.BoolOutput)
}

// 公网IP地址。
func (o EipOutput) EipAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.EipAddress }).(pulumi.StringOutput)
}

// 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
func (o EipOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.ExpiredTime }).(pulumi.StringOutput)
}

// 当前绑定的实例ID。
func (o EipOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
func (o EipOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

// 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
func (o EipOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.IpAddress }).(pulumi.StringOutput)
}

// IP地址池的ID。
func (o EipOutput) IpAddressPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.IpAddressPoolId }).(pulumi.StringOutput)
}

// 是否被封禁。true：是。false：否。
func (o EipOutput) IsBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v *Eip) pulumi.BoolOutput { return v.IsBlocked }).(pulumi.BoolOutput)
}

// 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
func (o EipOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Isp }).(pulumi.StringOutput)
}

// 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
func (o EipOutput) LockReason() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.LockReason }).(pulumi.StringOutput)
}

// 公网IP的名称。
func (o EipOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
func (o EipOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.OverdueTime }).(pulumi.StringOutput)
}

// 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
func (o EipOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.Period }).(pulumi.IntOutput)
}

// 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
func (o EipOutput) PeriodUnit() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.PeriodUnit }).(pulumi.IntOutput)
}

// 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
func (o EipOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// 公网IP所属项目的名称。
func (o EipOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
func (o EipOutput) ReleaseWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v *Eip) pulumi.BoolOutput { return v.ReleaseWithInstance }).(pulumi.BoolOutput)
}

// 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
func (o EipOutput) RenewPeriodTimes() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.RenewPeriodTimes }).(pulumi.IntOutput)
}

// 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
func (o EipOutput) RenewType() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.RenewType }).(pulumi.IntOutput)
}

// DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
func (o EipOutput) SecurityProtectionInstanceId() pulumi.IntOutput {
	return o.ApplyT(func(v *Eip) pulumi.IntOutput { return v.SecurityProtectionInstanceId }).(pulumi.IntOutput)
}

// 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
func (o EipOutput) SecurityProtectionTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringArrayOutput { return v.SecurityProtectionTypes }).(pulumi.StringArrayOutput)
}

// 是否由服务管理
func (o EipOutput) ServiceManaged() pulumi.BoolOutput {
	return o.ApplyT(func(v *Eip) pulumi.BoolOutput { return v.ServiceManaged }).(pulumi.BoolOutput)
}

// 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
func (o EipOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o EipOutput) Tags() EipTagArrayOutput {
	return o.ApplyT(func(v *Eip) EipTagArrayOutput { return v.Tags }).(EipTagArrayOutput)
}

// 更新公网IP的时间。
func (o EipOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.UpdatedTime }).(pulumi.StringOutput)
}

type EipArrayOutput struct{ *pulumi.OutputState }

func (EipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Eip)(nil)).Elem()
}

func (o EipArrayOutput) ToEipArrayOutput() EipArrayOutput {
	return o
}

func (o EipArrayOutput) ToEipArrayOutputWithContext(ctx context.Context) EipArrayOutput {
	return o
}

func (o EipArrayOutput) Index(i pulumi.IntInput) EipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Eip {
		return vs[0].([]*Eip)[vs[1].(int)]
	}).(EipOutput)
}

type EipMapOutput struct{ *pulumi.OutputState }

func (EipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Eip)(nil)).Elem()
}

func (o EipMapOutput) ToEipMapOutput() EipMapOutput {
	return o
}

func (o EipMapOutput) ToEipMapOutputWithContext(ctx context.Context) EipMapOutput {
	return o
}

func (o EipMapOutput) MapIndex(k pulumi.StringInput) EipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Eip {
		return vs[0].(map[string]*Eip)[vs[1].(string)]
	}).(EipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EipInput)(nil)).Elem(), &Eip{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipArrayInput)(nil)).Elem(), EipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EipMapInput)(nil)).Elem(), EipMap{})
	pulumi.RegisterOutputType(EipOutput{})
	pulumi.RegisterOutputType(EipArrayOutput{})
	pulumi.RegisterOutputType(EipMapOutput{})
}
