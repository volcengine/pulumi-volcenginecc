// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::VPC::NetworkAcl
func LookupNetworkAcl(ctx *pulumi.Context, args *LookupNetworkAclArgs, opts ...pulumi.InvokeOption) (*LookupNetworkAclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupNetworkAclResult
	err := ctx.Invoke("volcenginecc:vpc/getNetworkAcl:getNetworkAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNetworkAcl.
type LookupNetworkAclArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getNetworkAcl.
type LookupNetworkAclResult struct {
	// 网络ACL的创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 默认出向ACL规则列表。
	DefaultEgressAclEntries []GetNetworkAclDefaultEgressAclEntry `pulumi:"defaultEgressAclEntries"`
	// 默认入向ACL规则列表。
	DefaultIngressAclEntries []GetNetworkAclDefaultIngressAclEntry `pulumi:"defaultIngressAclEntries"`
	// 网络ACL描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
	Description string `pulumi:"description"`
	// 出向ACL规则列表。
	EgressAclEntries []GetNetworkAclEgressAclEntry `pulumi:"egressAclEntries"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 入向ACL规则列表。
	IngressAclEntries []GetNetworkAclIngressAclEntry `pulumi:"ingressAclEntries"`
	// 网络ACL的ID。
	NetworkAclId string `pulumi:"networkAclId"`
	// 网络ACL名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
	NetworkAclName string `pulumi:"networkAclName"`
	// 网络ACL所属项目的名称。不填默认加入default项目。
	ProjectName string `pulumi:"projectName"`
	// 关联资源列表。
	Resources []GetNetworkAclResource `pulumi:"resources"`
	// 网络ACL的状态。Available：可用，Creating：创建中
	Status string `pulumi:"status"`
	// 标签列表。
	Tags []GetNetworkAclTag `pulumi:"tags"`
	// 网络ACL的更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
	// 网络ACL所属VPC的ID。
	VpcId string `pulumi:"vpcId"`
}

func LookupNetworkAclOutput(ctx *pulumi.Context, args LookupNetworkAclOutputArgs, opts ...pulumi.InvokeOption) LookupNetworkAclResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupNetworkAclResultOutput, error) {
			args := v.(LookupNetworkAclArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:vpc/getNetworkAcl:getNetworkAcl", args, LookupNetworkAclResultOutput{}, options).(LookupNetworkAclResultOutput), nil
		}).(LookupNetworkAclResultOutput)
}

// A collection of arguments for invoking getNetworkAcl.
type LookupNetworkAclOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupNetworkAclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkAclArgs)(nil)).Elem()
}

// A collection of values returned by getNetworkAcl.
type LookupNetworkAclResultOutput struct{ *pulumi.OutputState }

func (LookupNetworkAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupNetworkAclResult)(nil)).Elem()
}

func (o LookupNetworkAclResultOutput) ToLookupNetworkAclResultOutput() LookupNetworkAclResultOutput {
	return o
}

func (o LookupNetworkAclResultOutput) ToLookupNetworkAclResultOutputWithContext(ctx context.Context) LookupNetworkAclResultOutput {
	return o
}

// 网络ACL的创建时间。
func (o LookupNetworkAclResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 默认出向ACL规则列表。
func (o LookupNetworkAclResultOutput) DefaultEgressAclEntries() GetNetworkAclDefaultEgressAclEntryArrayOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) []GetNetworkAclDefaultEgressAclEntry { return v.DefaultEgressAclEntries }).(GetNetworkAclDefaultEgressAclEntryArrayOutput)
}

// 默认入向ACL规则列表。
func (o LookupNetworkAclResultOutput) DefaultIngressAclEntries() GetNetworkAclDefaultIngressAclEntryArrayOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) []GetNetworkAclDefaultIngressAclEntry {
		return v.DefaultIngressAclEntries
	}).(GetNetworkAclDefaultIngressAclEntryArrayOutput)
}

// 网络ACL描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
func (o LookupNetworkAclResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.Description }).(pulumi.StringOutput)
}

// 出向ACL规则列表。
func (o LookupNetworkAclResultOutput) EgressAclEntries() GetNetworkAclEgressAclEntryArrayOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) []GetNetworkAclEgressAclEntry { return v.EgressAclEntries }).(GetNetworkAclEgressAclEntryArrayOutput)
}

// Uniquely identifies the resource.
func (o LookupNetworkAclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.Id }).(pulumi.StringOutput)
}

// 入向ACL规则列表。
func (o LookupNetworkAclResultOutput) IngressAclEntries() GetNetworkAclIngressAclEntryArrayOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) []GetNetworkAclIngressAclEntry { return v.IngressAclEntries }).(GetNetworkAclIngressAclEntryArrayOutput)
}

// 网络ACL的ID。
func (o LookupNetworkAclResultOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// 网络ACL名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。
func (o LookupNetworkAclResultOutput) NetworkAclName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.NetworkAclName }).(pulumi.StringOutput)
}

// 网络ACL所属项目的名称。不填默认加入default项目。
func (o LookupNetworkAclResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 关联资源列表。
func (o LookupNetworkAclResultOutput) Resources() GetNetworkAclResourceArrayOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) []GetNetworkAclResource { return v.Resources }).(GetNetworkAclResourceArrayOutput)
}

// 网络ACL的状态。Available：可用，Creating：创建中
func (o LookupNetworkAclResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.Status }).(pulumi.StringOutput)
}

// 标签列表。
func (o LookupNetworkAclResultOutput) Tags() GetNetworkAclTagArrayOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) []GetNetworkAclTag { return v.Tags }).(GetNetworkAclTagArrayOutput)
}

// 网络ACL的更新时间。
func (o LookupNetworkAclResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// 网络ACL所属VPC的ID。
func (o LookupNetworkAclResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupNetworkAclResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupNetworkAclResultOutput{})
}
