// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::VPC::Subnet
func LookupSubnet(ctx *pulumi.Context, args *LookupSubnetArgs, opts ...pulumi.InvokeOption) (*LookupSubnetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubnetResult
	err := ctx.Invoke("volcenginecc:vpc/getSubnet:getSubnet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnet.
type LookupSubnetArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getSubnet.
type LookupSubnetResult struct {
	// 子网所属账户的ID。
	AccountId string `pulumi:"accountId"`
	// 子网中可用的IP地址数量。
	AvailableIpAddressCount int `pulumi:"availableIpAddressCount"`
	// 子网的IPv4网段。
	CidrBlock string `pulumi:"cidrBlock"`
	// 子网的创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 子网的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不能以http://或https://开头。
	Description string `pulumi:"description"`
	// 开启/关闭IPv6功能。仅当子网所属的VPC开通IPv6功能时，可配置此参数。1、true：开启。2、false：关闭。仅当子网内没有分配IPv6地址的云资源时，可配置此取值。
	EnableIpv6 bool `pulumi:"enableIpv6"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 子网IPv6网段。1、创建/修改时请输入子网IPv6网段的最后8比特位（子网的掩码固定为/64）。2、仅当EnableIpv6设置为true时，支持配置本参数。3、取值范围：0～255。掩码固定为/64。
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// 该子网是否为默认子网。1、true：默认子网，表示该子网是创建ECS实例时系统自动创建的子网。2、false：非默认子网，表示该子网是用户手动创建的。
	IsDefault bool `pulumi:"isDefault"`
	// 子网关联的网络ACL的ID。
	NetworkAclId string `pulumi:"networkAclId"`
	// 子网所在VPC实例所属项目的名称。
	ProjectName string `pulumi:"projectName"`
	// 路由表信息。
	RouteTable GetSubnetRouteTable `pulumi:"routeTable"`
	// 子网的状态。1、Pending：表示配置中。2、Available：表示可用。
	Status string `pulumi:"status"`
	// 待修改信息的子网的ID。
	SubnetId string `pulumi:"subnetId"`
	// 子网的名称，长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不能以http://或https://开头，不填默认是子网的ID。
	SubnetName string         `pulumi:"subnetName"`
	Tags       []GetSubnetTag `pulumi:"tags"`
	// 子网下可用IP总数。
	TotalIpv4Count int `pulumi:"totalIpv4Count"`
	// 子网的更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
	// 子网所属VPC的ID。
	VpcId string `pulumi:"vpcId"`
	// 要创建的子网所属的可用区ID，更多可用区信息请参见地域和可用区。
	ZoneId string `pulumi:"zoneId"`
}

func LookupSubnetOutput(ctx *pulumi.Context, args LookupSubnetOutputArgs, opts ...pulumi.InvokeOption) LookupSubnetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSubnetResultOutput, error) {
			args := v.(LookupSubnetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:vpc/getSubnet:getSubnet", args, LookupSubnetResultOutput{}, options).(LookupSubnetResultOutput), nil
		}).(LookupSubnetResultOutput)
}

// A collection of arguments for invoking getSubnet.
type LookupSubnetOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSubnetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetArgs)(nil)).Elem()
}

// A collection of values returned by getSubnet.
type LookupSubnetResultOutput struct{ *pulumi.OutputState }

func (LookupSubnetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetResult)(nil)).Elem()
}

func (o LookupSubnetResultOutput) ToLookupSubnetResultOutput() LookupSubnetResultOutput {
	return o
}

func (o LookupSubnetResultOutput) ToLookupSubnetResultOutputWithContext(ctx context.Context) LookupSubnetResultOutput {
	return o
}

// 子网所属账户的ID。
func (o LookupSubnetResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// 子网中可用的IP地址数量。
func (o LookupSubnetResultOutput) AvailableIpAddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubnetResult) int { return v.AvailableIpAddressCount }).(pulumi.IntOutput)
}

// 子网的IPv4网段。
func (o LookupSubnetResultOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// 子网的创建时间。
func (o LookupSubnetResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 子网的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不能以http://或https://开头。
func (o LookupSubnetResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.Description }).(pulumi.StringOutput)
}

// 开启/关闭IPv6功能。仅当子网所属的VPC开通IPv6功能时，可配置此参数。1、true：开启。2、false：关闭。仅当子网内没有分配IPv6地址的云资源时，可配置此取值。
func (o LookupSubnetResultOutput) EnableIpv6() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubnetResult) bool { return v.EnableIpv6 }).(pulumi.BoolOutput)
}

// Uniquely identifies the resource.
func (o LookupSubnetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.Id }).(pulumi.StringOutput)
}

// 子网IPv6网段。1、创建/修改时请输入子网IPv6网段的最后8比特位（子网的掩码固定为/64）。2、仅当EnableIpv6设置为true时，支持配置本参数。3、取值范围：0～255。掩码固定为/64。
func (o LookupSubnetResultOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// 该子网是否为默认子网。1、true：默认子网，表示该子网是创建ECS实例时系统自动创建的子网。2、false：非默认子网，表示该子网是用户手动创建的。
func (o LookupSubnetResultOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubnetResult) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// 子网关联的网络ACL的ID。
func (o LookupSubnetResultOutput) NetworkAclId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.NetworkAclId }).(pulumi.StringOutput)
}

// 子网所在VPC实例所属项目的名称。
func (o LookupSubnetResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 路由表信息。
func (o LookupSubnetResultOutput) RouteTable() GetSubnetRouteTableOutput {
	return o.ApplyT(func(v LookupSubnetResult) GetSubnetRouteTable { return v.RouteTable }).(GetSubnetRouteTableOutput)
}

// 子网的状态。1、Pending：表示配置中。2、Available：表示可用。
func (o LookupSubnetResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.Status }).(pulumi.StringOutput)
}

// 待修改信息的子网的ID。
func (o LookupSubnetResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// 子网的名称，长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不能以http://或https://开头，不填默认是子网的ID。
func (o LookupSubnetResultOutput) SubnetName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.SubnetName }).(pulumi.StringOutput)
}

func (o LookupSubnetResultOutput) Tags() GetSubnetTagArrayOutput {
	return o.ApplyT(func(v LookupSubnetResult) []GetSubnetTag { return v.Tags }).(GetSubnetTagArrayOutput)
}

// 子网下可用IP总数。
func (o LookupSubnetResultOutput) TotalIpv4Count() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubnetResult) int { return v.TotalIpv4Count }).(pulumi.IntOutput)
}

// 子网的更新时间。
func (o LookupSubnetResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// 子网所属VPC的ID。
func (o LookupSubnetResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.VpcId }).(pulumi.StringOutput)
}

// 要创建的子网所属的可用区ID，更多可用区信息请参见地域和可用区。
func (o LookupSubnetResultOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubnetResult) string { return v.ZoneId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubnetResultOutput{})
}
