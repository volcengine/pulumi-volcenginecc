// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type VpcAssociateCen struct {
	// CEN的ID。
	CenId *string `pulumi:"cenId"`
	// CEN的用户ID。
	CenOwnerId *string `pulumi:"cenOwnerId"`
	// VPC在CEN中的状态。Attaching：加载中，Attached：已加载
	CenStatus *string `pulumi:"cenStatus"`
}

// VpcAssociateCenInput is an input type that accepts VpcAssociateCenArgs and VpcAssociateCenOutput values.
// You can construct a concrete instance of `VpcAssociateCenInput` via:
//
//	VpcAssociateCenArgs{...}
type VpcAssociateCenInput interface {
	pulumi.Input

	ToVpcAssociateCenOutput() VpcAssociateCenOutput
	ToVpcAssociateCenOutputWithContext(context.Context) VpcAssociateCenOutput
}

type VpcAssociateCenArgs struct {
	// CEN的ID。
	CenId pulumi.StringPtrInput `pulumi:"cenId"`
	// CEN的用户ID。
	CenOwnerId pulumi.StringPtrInput `pulumi:"cenOwnerId"`
	// VPC在CEN中的状态。Attaching：加载中，Attached：已加载
	CenStatus pulumi.StringPtrInput `pulumi:"cenStatus"`
}

func (VpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociateCen)(nil)).Elem()
}

func (i VpcAssociateCenArgs) ToVpcAssociateCenOutput() VpcAssociateCenOutput {
	return i.ToVpcAssociateCenOutputWithContext(context.Background())
}

func (i VpcAssociateCenArgs) ToVpcAssociateCenOutputWithContext(ctx context.Context) VpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAssociateCenOutput)
}

// VpcAssociateCenArrayInput is an input type that accepts VpcAssociateCenArray and VpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `VpcAssociateCenArrayInput` via:
//
//	VpcAssociateCenArray{ VpcAssociateCenArgs{...} }
type VpcAssociateCenArrayInput interface {
	pulumi.Input

	ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput
	ToVpcAssociateCenArrayOutputWithContext(context.Context) VpcAssociateCenArrayOutput
}

type VpcAssociateCenArray []VpcAssociateCenInput

func (VpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAssociateCen)(nil)).Elem()
}

func (i VpcAssociateCenArray) ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput {
	return i.ToVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i VpcAssociateCenArray) ToVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAssociateCenArrayOutput)
}

type VpcAssociateCenOutput struct{ *pulumi.OutputState }

func (VpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAssociateCen)(nil)).Elem()
}

func (o VpcAssociateCenOutput) ToVpcAssociateCenOutput() VpcAssociateCenOutput {
	return o
}

func (o VpcAssociateCenOutput) ToVpcAssociateCenOutputWithContext(ctx context.Context) VpcAssociateCenOutput {
	return o
}

// CEN的ID。
func (o VpcAssociateCenOutput) CenId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenId }).(pulumi.StringPtrOutput)
}

// CEN的用户ID。
func (o VpcAssociateCenOutput) CenOwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenOwnerId }).(pulumi.StringPtrOutput)
}

// VPC在CEN中的状态。Attaching：加载中，Attached：已加载
func (o VpcAssociateCenOutput) CenStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAssociateCen) *string { return v.CenStatus }).(pulumi.StringPtrOutput)
}

type VpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (VpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAssociateCen)(nil)).Elem()
}

func (o VpcAssociateCenArrayOutput) ToVpcAssociateCenArrayOutput() VpcAssociateCenArrayOutput {
	return o
}

func (o VpcAssociateCenArrayOutput) ToVpcAssociateCenArrayOutputWithContext(ctx context.Context) VpcAssociateCenArrayOutput {
	return o
}

func (o VpcAssociateCenArrayOutput) Index(i pulumi.IntInput) VpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAssociateCen {
		return vs[0].([]VpcAssociateCen)[vs[1].(int)]
	}).(VpcAssociateCenOutput)
}

type VpcTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// VpcTagInput is an input type that accepts VpcTagArgs and VpcTagOutput values.
// You can construct a concrete instance of `VpcTagInput` via:
//
//	VpcTagArgs{...}
type VpcTagInput interface {
	pulumi.Input

	ToVpcTagOutput() VpcTagOutput
	ToVpcTagOutputWithContext(context.Context) VpcTagOutput
}

type VpcTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (VpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcTag)(nil)).Elem()
}

func (i VpcTagArgs) ToVpcTagOutput() VpcTagOutput {
	return i.ToVpcTagOutputWithContext(context.Background())
}

func (i VpcTagArgs) ToVpcTagOutputWithContext(ctx context.Context) VpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcTagOutput)
}

// VpcTagArrayInput is an input type that accepts VpcTagArray and VpcTagArrayOutput values.
// You can construct a concrete instance of `VpcTagArrayInput` via:
//
//	VpcTagArray{ VpcTagArgs{...} }
type VpcTagArrayInput interface {
	pulumi.Input

	ToVpcTagArrayOutput() VpcTagArrayOutput
	ToVpcTagArrayOutputWithContext(context.Context) VpcTagArrayOutput
}

type VpcTagArray []VpcTagInput

func (VpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcTag)(nil)).Elem()
}

func (i VpcTagArray) ToVpcTagArrayOutput() VpcTagArrayOutput {
	return i.ToVpcTagArrayOutputWithContext(context.Background())
}

func (i VpcTagArray) ToVpcTagArrayOutputWithContext(ctx context.Context) VpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcTagArrayOutput)
}

type VpcTagOutput struct{ *pulumi.OutputState }

func (VpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcTag)(nil)).Elem()
}

func (o VpcTagOutput) ToVpcTagOutput() VpcTagOutput {
	return o
}

func (o VpcTagOutput) ToVpcTagOutputWithContext(ctx context.Context) VpcTagOutput {
	return o
}

// 标签键。
func (o VpcTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o VpcTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type VpcTagArrayOutput struct{ *pulumi.OutputState }

func (VpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcTag)(nil)).Elem()
}

func (o VpcTagArrayOutput) ToVpcTagArrayOutput() VpcTagArrayOutput {
	return o
}

func (o VpcTagArrayOutput) ToVpcTagArrayOutputWithContext(ctx context.Context) VpcTagArrayOutput {
	return o
}

func (o VpcTagArrayOutput) Index(i pulumi.IntInput) VpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcTag {
		return vs[0].([]VpcTag)[vs[1].(int)]
	}).(VpcTagOutput)
}

type GetVpcAssociateCen struct {
	// CEN的ID。
	CenId string `pulumi:"cenId"`
	// CEN的用户ID。
	CenOwnerId string `pulumi:"cenOwnerId"`
	// VPC在CEN中的状态。Attaching：加载中，Attached：已加载
	CenStatus string `pulumi:"cenStatus"`
}

// GetVpcAssociateCenInput is an input type that accepts GetVpcAssociateCenArgs and GetVpcAssociateCenOutput values.
// You can construct a concrete instance of `GetVpcAssociateCenInput` via:
//
//	GetVpcAssociateCenArgs{...}
type GetVpcAssociateCenInput interface {
	pulumi.Input

	ToGetVpcAssociateCenOutput() GetVpcAssociateCenOutput
	ToGetVpcAssociateCenOutputWithContext(context.Context) GetVpcAssociateCenOutput
}

type GetVpcAssociateCenArgs struct {
	// CEN的ID。
	CenId pulumi.StringInput `pulumi:"cenId"`
	// CEN的用户ID。
	CenOwnerId pulumi.StringInput `pulumi:"cenOwnerId"`
	// VPC在CEN中的状态。Attaching：加载中，Attached：已加载
	CenStatus pulumi.StringInput `pulumi:"cenStatus"`
}

func (GetVpcAssociateCenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAssociateCen)(nil)).Elem()
}

func (i GetVpcAssociateCenArgs) ToGetVpcAssociateCenOutput() GetVpcAssociateCenOutput {
	return i.ToGetVpcAssociateCenOutputWithContext(context.Background())
}

func (i GetVpcAssociateCenArgs) ToGetVpcAssociateCenOutputWithContext(ctx context.Context) GetVpcAssociateCenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAssociateCenOutput)
}

// GetVpcAssociateCenArrayInput is an input type that accepts GetVpcAssociateCenArray and GetVpcAssociateCenArrayOutput values.
// You can construct a concrete instance of `GetVpcAssociateCenArrayInput` via:
//
//	GetVpcAssociateCenArray{ GetVpcAssociateCenArgs{...} }
type GetVpcAssociateCenArrayInput interface {
	pulumi.Input

	ToGetVpcAssociateCenArrayOutput() GetVpcAssociateCenArrayOutput
	ToGetVpcAssociateCenArrayOutputWithContext(context.Context) GetVpcAssociateCenArrayOutput
}

type GetVpcAssociateCenArray []GetVpcAssociateCenInput

func (GetVpcAssociateCenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAssociateCen)(nil)).Elem()
}

func (i GetVpcAssociateCenArray) ToGetVpcAssociateCenArrayOutput() GetVpcAssociateCenArrayOutput {
	return i.ToGetVpcAssociateCenArrayOutputWithContext(context.Background())
}

func (i GetVpcAssociateCenArray) ToGetVpcAssociateCenArrayOutputWithContext(ctx context.Context) GetVpcAssociateCenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcAssociateCenArrayOutput)
}

type GetVpcAssociateCenOutput struct{ *pulumi.OutputState }

func (GetVpcAssociateCenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcAssociateCen)(nil)).Elem()
}

func (o GetVpcAssociateCenOutput) ToGetVpcAssociateCenOutput() GetVpcAssociateCenOutput {
	return o
}

func (o GetVpcAssociateCenOutput) ToGetVpcAssociateCenOutputWithContext(ctx context.Context) GetVpcAssociateCenOutput {
	return o
}

// CEN的ID。
func (o GetVpcAssociateCenOutput) CenId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAssociateCen) string { return v.CenId }).(pulumi.StringOutput)
}

// CEN的用户ID。
func (o GetVpcAssociateCenOutput) CenOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAssociateCen) string { return v.CenOwnerId }).(pulumi.StringOutput)
}

// VPC在CEN中的状态。Attaching：加载中，Attached：已加载
func (o GetVpcAssociateCenOutput) CenStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcAssociateCen) string { return v.CenStatus }).(pulumi.StringOutput)
}

type GetVpcAssociateCenArrayOutput struct{ *pulumi.OutputState }

func (GetVpcAssociateCenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcAssociateCen)(nil)).Elem()
}

func (o GetVpcAssociateCenArrayOutput) ToGetVpcAssociateCenArrayOutput() GetVpcAssociateCenArrayOutput {
	return o
}

func (o GetVpcAssociateCenArrayOutput) ToGetVpcAssociateCenArrayOutputWithContext(ctx context.Context) GetVpcAssociateCenArrayOutput {
	return o
}

func (o GetVpcAssociateCenArrayOutput) Index(i pulumi.IntInput) GetVpcAssociateCenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcAssociateCen {
		return vs[0].([]GetVpcAssociateCen)[vs[1].(int)]
	}).(GetVpcAssociateCenOutput)
}

type GetVpcTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetVpcTagInput is an input type that accepts GetVpcTagArgs and GetVpcTagOutput values.
// You can construct a concrete instance of `GetVpcTagInput` via:
//
//	GetVpcTagArgs{...}
type GetVpcTagInput interface {
	pulumi.Input

	ToGetVpcTagOutput() GetVpcTagOutput
	ToGetVpcTagOutputWithContext(context.Context) GetVpcTagOutput
}

type GetVpcTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetVpcTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcTag)(nil)).Elem()
}

func (i GetVpcTagArgs) ToGetVpcTagOutput() GetVpcTagOutput {
	return i.ToGetVpcTagOutputWithContext(context.Background())
}

func (i GetVpcTagArgs) ToGetVpcTagOutputWithContext(ctx context.Context) GetVpcTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcTagOutput)
}

// GetVpcTagArrayInput is an input type that accepts GetVpcTagArray and GetVpcTagArrayOutput values.
// You can construct a concrete instance of `GetVpcTagArrayInput` via:
//
//	GetVpcTagArray{ GetVpcTagArgs{...} }
type GetVpcTagArrayInput interface {
	pulumi.Input

	ToGetVpcTagArrayOutput() GetVpcTagArrayOutput
	ToGetVpcTagArrayOutputWithContext(context.Context) GetVpcTagArrayOutput
}

type GetVpcTagArray []GetVpcTagInput

func (GetVpcTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcTag)(nil)).Elem()
}

func (i GetVpcTagArray) ToGetVpcTagArrayOutput() GetVpcTagArrayOutput {
	return i.ToGetVpcTagArrayOutputWithContext(context.Background())
}

func (i GetVpcTagArray) ToGetVpcTagArrayOutputWithContext(ctx context.Context) GetVpcTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcTagArrayOutput)
}

type GetVpcTagOutput struct{ *pulumi.OutputState }

func (GetVpcTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcTag)(nil)).Elem()
}

func (o GetVpcTagOutput) ToGetVpcTagOutput() GetVpcTagOutput {
	return o
}

func (o GetVpcTagOutput) ToGetVpcTagOutputWithContext(ctx context.Context) GetVpcTagOutput {
	return o
}

// 标签键。
func (o GetVpcTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetVpcTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetVpcTagArrayOutput struct{ *pulumi.OutputState }

func (GetVpcTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcTag)(nil)).Elem()
}

func (o GetVpcTagArrayOutput) ToGetVpcTagArrayOutput() GetVpcTagArrayOutput {
	return o
}

func (o GetVpcTagArrayOutput) ToGetVpcTagArrayOutputWithContext(ctx context.Context) GetVpcTagArrayOutput {
	return o
}

func (o GetVpcTagArrayOutput) Index(i pulumi.IntInput) GetVpcTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcTag {
		return vs[0].([]GetVpcTag)[vs[1].(int)]
	}).(GetVpcTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAssociateCenInput)(nil)).Elem(), VpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAssociateCenArrayInput)(nil)).Elem(), VpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcTagInput)(nil)).Elem(), VpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcTagArrayInput)(nil)).Elem(), VpcTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAssociateCenInput)(nil)).Elem(), GetVpcAssociateCenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcAssociateCenArrayInput)(nil)).Elem(), GetVpcAssociateCenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcTagInput)(nil)).Elem(), GetVpcTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcTagArrayInput)(nil)).Elem(), GetVpcTagArray{})
	pulumi.RegisterOutputType(VpcAssociateCenOutput{})
	pulumi.RegisterOutputType(VpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(VpcTagOutput{})
	pulumi.RegisterOutputType(VpcTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpcAssociateCenOutput{})
	pulumi.RegisterOutputType(GetVpcAssociateCenArrayOutput{})
	pulumi.RegisterOutputType(GetVpcTagOutput{})
	pulumi.RegisterOutputType(GetVpcTagArrayOutput{})
}
