// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Plural Data Source schema for Volcengine::VPC::Subnet
func GetSubnets(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetSubnetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubnetsResult
	err := ctx.Invoke("volcenginecc:vpc/getSubnets:getSubnets", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getSubnets.
type GetSubnetsResult struct {
	// Uniquely identifies the data source.
	Id string `pulumi:"id"`
	// Set of Resource Identifiers.
	Ids []string `pulumi:"ids"`
}

func GetSubnetsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetSubnetsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetSubnetsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("volcenginecc:vpc/getSubnets:getSubnets", nil, GetSubnetsResultOutput{}, options).(GetSubnetsResultOutput), nil
	}).(GetSubnetsResultOutput)
}

// A collection of values returned by getSubnets.
type GetSubnetsResultOutput struct{ *pulumi.OutputState }

func (GetSubnetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetsResult)(nil)).Elem()
}

func (o GetSubnetsResultOutput) ToGetSubnetsResultOutput() GetSubnetsResultOutput {
	return o
}

func (o GetSubnetsResultOutput) ToGetSubnetsResultOutputWithContext(ctx context.Context) GetSubnetsResultOutput {
	return o
}

// Uniquely identifies the data source.
func (o GetSubnetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set of Resource Identifiers.
func (o GetSubnetsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubnetsResultOutput{})
}
