// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

// The Access Key for Volcengine Provider. It must be provided, but it can also be sourced from the `VOLCENGINE_ACCESS_KEY`
// environment variable
func GetAccessKey(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "volcenginecc:accessKey")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "VOLCENGINE_ACCESS_KEY"); d != nil {
		value = d.(string)
	}
	return value
}

// An `assumeRole` block (documented below). Only one `assumeRole` block may be in the configuration.
func GetAssumeRole(ctx *pulumi.Context) string {
	return config.Get(ctx, "volcenginecc:assumeRole")
}

// CUSTOMER HEADERS for Volcengine Provider. The customerHeaders field uses commas (,) to separate multiple headers, and
// colons (:) to separate each header key from its corresponding value.
func GetCustomerHeaders(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "volcenginecc:customerHeaders")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "VOLCENGINE_CUSTOMER_HEADERS"); d != nil {
		value = d.(string)
	}
	return value
}

// Disable SSL for Volcengine Provider
func GetDisableSsl(ctx *pulumi.Context) bool {
	v, err := config.TryBool(ctx, "volcenginecc:disableSsl")
	if err == nil {
		return v
	}
	var value bool
	if d := internal.GetEnvOrDefault(nil, internal.ParseEnvBool, "VOLCENGINE_DISABLE_SSL"); d != nil {
		value = d.(bool)
	}
	return value
}

// An `endpoints` block (documented below). Only one `endpoints` block may be in the configuration.
func GetEndpoints(ctx *pulumi.Context) string {
	return config.Get(ctx, "volcenginecc:endpoints")
}

// PROXY URL for Volcengine Provider
func GetProxyUrl(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "volcenginecc:proxyUrl")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "VOLCENGINE_PROXY_URL"); d != nil {
		value = d.(string)
	}
	return value
}

// The Region for Volcengine Provider. It must be provided, but it can also be sourced from the `VOLCENGINE_REGION`
// environment variable
func GetRegion(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "volcenginecc:region")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "VOLCENGINE_REGION"); d != nil {
		value = d.(string)
	}
	return value
}

// he Secret Key for Volcengine Provider. It must be provided, but it can also be sourced from the `VOLCENGINE_SECRET_KEY`
// environment variable
func GetSecretKey(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "volcenginecc:secretKey")
	if err == nil {
		return v
	}
	var value string
	if d := internal.GetEnvOrDefault(nil, nil, "VOLCENGINE_SECRET_KEY"); d != nil {
		value = d.(string)
	}
	return value
}
