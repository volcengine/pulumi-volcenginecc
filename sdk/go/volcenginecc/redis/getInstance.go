// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::Redis::Instance
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("volcenginecc:redis/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
	AllowListIds []string `pulumi:"allowListIds"`
	// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
	AutoRenew bool `pulumi:"autoRenew"`
	// 为变更前创建的全量备份设置备份名称。
	BackupPointName string `pulumi:"backupPointName"`
	// 实例的容量信息。
	Capacity GetInstanceCapacity `pulumi:"capacity"`
	// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
	ChargeType string `pulumi:"chargeType"`
	// 设置节点所属的可用区列表。
	ConfigureNodes []GetInstanceConfigureNode `pulumi:"configureNodes"`
	// 是否在变更前创建备份。
	CreateBackup bool `pulumi:"createBackup"`
	// 实例的创建时间。
	CreateTime string `pulumi:"createTime"`
	// 实例的数据存储形态。该参数仅对企业版（即ServiceType为Enterprise）实例有意义；社区版（即ServiceType为Basic）实例不涉及数据存储形态，DataLayout取值固定为RAM。若该参数留空，表示不使用数据存储形态进行筛选。
	DataLayout string `pulumi:"dataLayout"`
	// 开启或关闭实例删除保护功能。
	DeletionProtection string `pulumi:"deletionProtection"`
	// 数据库版本号。
	EngineVersion string `pulumi:"engineVersion"`
	// 实例到期时间。
	ExpiredTime string `pulumi:"expiredTime"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// Redis 实例的类型。取值范围如下：PrimarySecondary：主备实例；Standalone：单节点实例。若该参数留空，表示不使用实例类型条件进行筛选。关于实例类型的更多信息，请参见产品架构。
	InstanceClass string `pulumi:"instanceClass"`
	// 实例 ID。
	InstanceId string `pulumi:"instanceId"`
	// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
	InstanceName string `pulumi:"instanceName"`
	// 实例中所有 Shard 分片的详情列表。
	InstanceShards []GetInstanceInstanceShard `pulumi:"instanceShards"`
	// 实例的可维护时间段，格式为HH:mm-HH:mm（UTC+8）。
	MaintenanceTime string `pulumi:"maintenanceTime"`
	// 实例当前单分片最大连接数。每分片的默认连接数为10000，您也可以根据业务需要调用ModifyDBInstanceMaxConn接口修改单分片的最大连接数。
	MaxConnections int `pulumi:"maxConnections"`
	// 设置实例的可用区部署方案。
	MultiAz string `pulumi:"multiAz"`
	// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
	NoAuthMode string `pulumi:"noAuthMode"`
	// Proxy 和 Server 节点 ID 列表。
	NodeIds []string `pulumi:"nodeIds"`
	// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
	NodeNumber int `pulumi:"nodeNumber"`
	// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
	ParameterGroupId string `pulumi:"parameterGroupId"`
	// 设置默认数据库 default 账号的密码。
	Password string `pulumi:"password"`
	// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
	Port int `pulumi:"port"`
	// 实例私网连接地址的域名。
	PrivateAddress string `pulumi:"privateAddress"`
	// 实例所属的项目。
	ProjectName string `pulumi:"projectName"`
	// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
	PurchaseMonths int `pulumi:"purchaseMonths"`
	// 设置是否保留额外带宽
	ReserveAdditionalBandwidth bool `pulumi:"reserveAdditionalBandwidth"`
	// 实例的服务类型
	ServiceType string `pulumi:"serviceType"`
	// 实例中每个分片的内存容量。单位：MiB。
	ShardCapacity int `pulumi:"shardCapacity"`
	// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
	ShardNumber int `pulumi:"shardNumber"`
	// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
	ShardedCluster int `pulumi:"shardedCluster"`
	// 实例的服务类型，取值范围如下：Basic（默认值）：社区版；Enterprise：企业版。
	Status string `pulumi:"status"`
	// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
	SubnetId string `pulumi:"subnetId"`
	// 设置实例的标签列表。
	Tags []GetInstanceTag `pulumi:"tags"`
	// 实例私网连接地址所对应的 IPv6 地址。仅当实例使用了 IPv6 地址时才会返回该参数。
	ViPv6 string `pulumi:"viPv6"`
	// 实例私网连接地址所对应的 IPv4 地址。
	Vip string `pulumi:"vip"`
	// 连接地址信息。
	VisitAddrs []GetInstanceVisitAddr `pulumi:"visitAddrs"`
	// 开启或关闭免密访问功能。取值范围如下：open：开启免密访问；close：关闭免密访问。参数取值不区分大小写。
	VpcAuthMode string `pulumi:"vpcAuthMode"`
	// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
	VpcId string `pulumi:"vpcId"`
	// 实例所在的可用区列表。
	ZoneIds []string `pulumi:"zoneIds"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceResultOutput, error) {
			args := v.(LookupInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:redis/getInstance:getInstance", args, LookupInstanceResultOutput{}, options).(LookupInstanceResultOutput), nil
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
func (o LookupInstanceResultOutput) AllowListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.AllowListIds }).(pulumi.StringArrayOutput)
}

// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
func (o LookupInstanceResultOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.AutoRenew }).(pulumi.BoolOutput)
}

// 为变更前创建的全量备份设置备份名称。
func (o LookupInstanceResultOutput) BackupPointName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.BackupPointName }).(pulumi.StringOutput)
}

// 实例的容量信息。
func (o LookupInstanceResultOutput) Capacity() GetInstanceCapacityOutput {
	return o.ApplyT(func(v LookupInstanceResult) GetInstanceCapacity { return v.Capacity }).(GetInstanceCapacityOutput)
}

// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
func (o LookupInstanceResultOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ChargeType }).(pulumi.StringOutput)
}

// 设置节点所属的可用区列表。
func (o LookupInstanceResultOutput) ConfigureNodes() GetInstanceConfigureNodeArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceConfigureNode { return v.ConfigureNodes }).(GetInstanceConfigureNodeArrayOutput)
}

// 是否在变更前创建备份。
func (o LookupInstanceResultOutput) CreateBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.CreateBackup }).(pulumi.BoolOutput)
}

// 实例的创建时间。
func (o LookupInstanceResultOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.CreateTime }).(pulumi.StringOutput)
}

// 实例的数据存储形态。该参数仅对企业版（即ServiceType为Enterprise）实例有意义；社区版（即ServiceType为Basic）实例不涉及数据存储形态，DataLayout取值固定为RAM。若该参数留空，表示不使用数据存储形态进行筛选。
func (o LookupInstanceResultOutput) DataLayout() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.DataLayout }).(pulumi.StringOutput)
}

// 开启或关闭实例删除保护功能。
func (o LookupInstanceResultOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.DeletionProtection }).(pulumi.StringOutput)
}

// 数据库版本号。
func (o LookupInstanceResultOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// 实例到期时间。
func (o LookupInstanceResultOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Redis 实例的类型。取值范围如下：PrimarySecondary：主备实例；Standalone：单节点实例。若该参数留空，表示不使用实例类型条件进行筛选。关于实例类型的更多信息，请参见产品架构。
func (o LookupInstanceResultOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceClass }).(pulumi.StringOutput)
}

// 实例 ID。
func (o LookupInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
func (o LookupInstanceResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

// 实例中所有 Shard 分片的详情列表。
func (o LookupInstanceResultOutput) InstanceShards() GetInstanceInstanceShardArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceInstanceShard { return v.InstanceShards }).(GetInstanceInstanceShardArrayOutput)
}

// 实例的可维护时间段，格式为HH:mm-HH:mm（UTC+8）。
func (o LookupInstanceResultOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// 实例当前单分片最大连接数。每分片的默认连接数为10000，您也可以根据业务需要调用ModifyDBInstanceMaxConn接口修改单分片的最大连接数。
func (o LookupInstanceResultOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.MaxConnections }).(pulumi.IntOutput)
}

// 设置实例的可用区部署方案。
func (o LookupInstanceResultOutput) MultiAz() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.MultiAz }).(pulumi.StringOutput)
}

// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
func (o LookupInstanceResultOutput) NoAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.NoAuthMode }).(pulumi.StringOutput)
}

// Proxy 和 Server 节点 ID 列表。
func (o LookupInstanceResultOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
func (o LookupInstanceResultOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.NodeNumber }).(pulumi.IntOutput)
}

// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
func (o LookupInstanceResultOutput) ParameterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ParameterGroupId }).(pulumi.StringOutput)
}

// 设置默认数据库 default 账号的密码。
func (o LookupInstanceResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Password }).(pulumi.StringOutput)
}

// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
func (o LookupInstanceResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.Port }).(pulumi.IntOutput)
}

// 实例私网连接地址的域名。
func (o LookupInstanceResultOutput) PrivateAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.PrivateAddress }).(pulumi.StringOutput)
}

// 实例所属的项目。
func (o LookupInstanceResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
func (o LookupInstanceResultOutput) PurchaseMonths() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.PurchaseMonths }).(pulumi.IntOutput)
}

// 设置是否保留额外带宽
func (o LookupInstanceResultOutput) ReserveAdditionalBandwidth() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupInstanceResult) bool { return v.ReserveAdditionalBandwidth }).(pulumi.BoolOutput)
}

// 实例的服务类型
func (o LookupInstanceResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

// 实例中每个分片的内存容量。单位：MiB。
func (o LookupInstanceResultOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.ShardCapacity }).(pulumi.IntOutput)
}

// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
func (o LookupInstanceResultOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.ShardNumber }).(pulumi.IntOutput)
}

// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
func (o LookupInstanceResultOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v LookupInstanceResult) int { return v.ShardedCluster }).(pulumi.IntOutput)
}

// 实例的服务类型，取值范围如下：Basic（默认值）：社区版；Enterprise：企业版。
func (o LookupInstanceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Status }).(pulumi.StringOutput)
}

// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
func (o LookupInstanceResultOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.SubnetId }).(pulumi.StringOutput)
}

// 设置实例的标签列表。
func (o LookupInstanceResultOutput) Tags() GetInstanceTagArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceTag { return v.Tags }).(GetInstanceTagArrayOutput)
}

// 实例私网连接地址所对应的 IPv6 地址。仅当实例使用了 IPv6 地址时才会返回该参数。
func (o LookupInstanceResultOutput) ViPv6() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ViPv6 }).(pulumi.StringOutput)
}

// 实例私网连接地址所对应的 IPv4 地址。
func (o LookupInstanceResultOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Vip }).(pulumi.StringOutput)
}

// 连接地址信息。
func (o LookupInstanceResultOutput) VisitAddrs() GetInstanceVisitAddrArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceVisitAddr { return v.VisitAddrs }).(GetInstanceVisitAddrArrayOutput)
}

// 开启或关闭免密访问功能。取值范围如下：open：开启免密访问；close：关闭免密访问。参数取值不区分大小写。
func (o LookupInstanceResultOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
func (o LookupInstanceResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.VpcId }).(pulumi.StringOutput)
}

// 实例所在的可用区列表。
func (o LookupInstanceResultOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []string { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
