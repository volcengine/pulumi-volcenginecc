// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 缓存数据库 Redis 版的基本单位是实例。实例是独立的、虚拟化的数据库运行环境，是多个数据节点与代理节点的集合，数据节点上运行 Redis 引擎。
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/redis"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redis.NewInstance(ctx, "RedisInstanceDemo", &redis.InstanceArgs{
//				InstanceName:       pulumi.String("RedisInstance"),
//				ShardedCluster:     pulumi.Int(1),
//				Password:           pulumi.String("********"),
//				NodeNumber:         pulumi.Int(2),
//				ShardCapacity:      pulumi.Int(512),
//				ShardNumber:        pulumi.Int(2),
//				EngineVersion:      pulumi.String("5.0"),
//				VpcId:              pulumi.String("vpc-13f8xxxx"),
//				SubnetId:           pulumi.String("vpc_subnet-xxxx"),
//				DeletionProtection: pulumi.String("disabled"),
//				ChargeType:         pulumi.String("PostPaid"),
//				Port:               pulumi.Int(6381),
//				ProjectName:        pulumi.String("default"),
//				Tags: redis.InstanceTagArray{
//					&redis.InstanceTagArgs{
//						Key:   pulumi.String("env"),
//						Value: pulumi.String("test"),
//					},
//				},
//				MultiAz: pulumi.String("enabled"),
//				ConfigureNodes: redis.InstanceConfigureNodeArray{
//					&redis.InstanceConfigureNodeArgs{
//						Az: pulumi.String("cn-beijing-a"),
//					},
//					&redis.InstanceConfigureNodeArgs{
//						Az: pulumi.String("cn-beijing-b"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:redis/instance:Instance example "instance_id"
// ```
type Instance struct {
	pulumi.CustomResourceState

	// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
	AllowListIds pulumi.StringArrayOutput `pulumi:"allowListIds"`
	// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
	AutoRenew pulumi.BoolOutput `pulumi:"autoRenew"`
	// 为变更前创建的全量备份设置备份名称。
	BackupPointName pulumi.StringOutput `pulumi:"backupPointName"`
	// 实例的容量信息。
	Capacity InstanceCapacityOutput `pulumi:"capacity"`
	// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
	ChargeType     pulumi.StringOutput              `pulumi:"chargeType"`
	ConfigureNodes InstanceConfigureNodeArrayOutput `pulumi:"configureNodes"`
	// 是否在变更前创建备份。
	CreateBackup pulumi.BoolOutput `pulumi:"createBackup"`
	// 实例的创建时间。
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// 实例的数据存储形态。该参数仅对企业版（即ServiceType为Enterprise）实例有意义；社区版（即ServiceType为Basic）实例不涉及数据存储形态，DataLayout取值固定为RAM。若该参数留空，表示不使用数据存储形态进行筛选。
	DataLayout pulumi.StringOutput `pulumi:"dataLayout"`
	// 开启或关闭实例删除保护功能。
	DeletionProtection pulumi.StringOutput `pulumi:"deletionProtection"`
	// 数据库版本号。
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// 实例到期时间。
	ExpiredTime pulumi.StringOutput `pulumi:"expiredTime"`
	// Redis 实例的类型。取值范围如下：PrimarySecondary：主备实例；Standalone：单节点实例。若该参数留空，表示不使用实例类型条件进行筛选。关于实例类型的更多信息，请参见产品架构。
	InstanceClass pulumi.StringOutput `pulumi:"instanceClass"`
	// 实例 ID。
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
	InstanceName   pulumi.StringOutput              `pulumi:"instanceName"`
	InstanceShards InstanceInstanceShardArrayOutput `pulumi:"instanceShards"`
	// 实例的可维护时间段，格式为HH:mm-HH:mm（UTC+8）。
	MaintenanceTime pulumi.StringOutput `pulumi:"maintenanceTime"`
	// 实例当前单分片最大连接数。每分片的默认连接数为10000，您也可以根据业务需要调用ModifyDBInstanceMaxConn接口修改单分片的最大连接数。
	MaxConnections pulumi.IntOutput `pulumi:"maxConnections"`
	// 设置实例的可用区部署方案。
	MultiAz pulumi.StringOutput `pulumi:"multiAz"`
	// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
	NoAuthMode pulumi.StringOutput `pulumi:"noAuthMode"`
	// Proxy 和 Server 节点 ID 列表。
	NodeIds pulumi.StringArrayOutput `pulumi:"nodeIds"`
	// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
	NodeNumber pulumi.IntOutput `pulumi:"nodeNumber"`
	// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
	ParameterGroupId pulumi.StringOutput `pulumi:"parameterGroupId"`
	// 设置默认数据库 default 账号的密码。
	Password pulumi.StringOutput `pulumi:"password"`
	// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
	Port pulumi.IntOutput `pulumi:"port"`
	// 实例私网连接地址的域名。
	PrivateAddress pulumi.StringOutput `pulumi:"privateAddress"`
	// 实例所属的项目。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
	PurchaseMonths pulumi.IntOutput `pulumi:"purchaseMonths"`
	// 设置是否保留额外带宽
	ReserveAdditionalBandwidth pulumi.BoolOutput `pulumi:"reserveAdditionalBandwidth"`
	// 实例的服务类型
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// 实例中每个分片的内存容量。单位：MiB。
	ShardCapacity pulumi.IntOutput `pulumi:"shardCapacity"`
	// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
	ShardNumber pulumi.IntOutput `pulumi:"shardNumber"`
	// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
	ShardedCluster pulumi.IntOutput `pulumi:"shardedCluster"`
	// 实例的服务类型，取值范围如下：Basic（默认值）：社区版；Enterprise：企业版。
	Status pulumi.StringOutput `pulumi:"status"`
	// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
	SubnetId pulumi.StringOutput    `pulumi:"subnetId"`
	Tags     InstanceTagArrayOutput `pulumi:"tags"`
	// 实例私网连接地址所对应的 IPv6 地址。仅当实例使用了 IPv6 地址时才会返回该参数。
	ViPv6 pulumi.StringOutput `pulumi:"viPv6"`
	// 实例私网连接地址所对应的 IPv4 地址。
	Vip        pulumi.StringOutput          `pulumi:"vip"`
	VisitAddrs InstanceVisitAddrArrayOutput `pulumi:"visitAddrs"`
	// 开启或关闭免密访问功能。取值范围如下：open：开启免密访问；close：关闭免密访问。参数取值不区分大小写。
	VpcAuthMode pulumi.StringOutput `pulumi:"vpcAuthMode"`
	// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
	// 实例所在的可用区列表。
	ZoneIds pulumi.StringArrayOutput `pulumi:"zoneIds"`
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOption) (*Instance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigureNodes == nil {
		return nil, errors.New("invalid value for required argument 'ConfigureNodes'")
	}
	if args.EngineVersion == nil {
		return nil, errors.New("invalid value for required argument 'EngineVersion'")
	}
	if args.MultiAz == nil {
		return nil, errors.New("invalid value for required argument 'MultiAz'")
	}
	if args.NodeNumber == nil {
		return nil, errors.New("invalid value for required argument 'NodeNumber'")
	}
	if args.ShardCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ShardCapacity'")
	}
	if args.ShardedCluster == nil {
		return nil, errors.New("invalid value for required argument 'ShardedCluster'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Instance
	err := ctx.RegisterResource("volcenginecc:redis/instance:Instance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceState, opts ...pulumi.ResourceOption) (*Instance, error) {
	var resource Instance
	err := ctx.ReadResource("volcenginecc:redis/instance:Instance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Instance resources.
type instanceState struct {
	// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
	AllowListIds []string `pulumi:"allowListIds"`
	// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
	AutoRenew *bool `pulumi:"autoRenew"`
	// 为变更前创建的全量备份设置备份名称。
	BackupPointName *string `pulumi:"backupPointName"`
	// 实例的容量信息。
	Capacity *InstanceCapacity `pulumi:"capacity"`
	// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
	ChargeType     *string                 `pulumi:"chargeType"`
	ConfigureNodes []InstanceConfigureNode `pulumi:"configureNodes"`
	// 是否在变更前创建备份。
	CreateBackup *bool `pulumi:"createBackup"`
	// 实例的创建时间。
	CreateTime *string `pulumi:"createTime"`
	// 实例的数据存储形态。该参数仅对企业版（即ServiceType为Enterprise）实例有意义；社区版（即ServiceType为Basic）实例不涉及数据存储形态，DataLayout取值固定为RAM。若该参数留空，表示不使用数据存储形态进行筛选。
	DataLayout *string `pulumi:"dataLayout"`
	// 开启或关闭实例删除保护功能。
	DeletionProtection *string `pulumi:"deletionProtection"`
	// 数据库版本号。
	EngineVersion *string `pulumi:"engineVersion"`
	// 实例到期时间。
	ExpiredTime *string `pulumi:"expiredTime"`
	// Redis 实例的类型。取值范围如下：PrimarySecondary：主备实例；Standalone：单节点实例。若该参数留空，表示不使用实例类型条件进行筛选。关于实例类型的更多信息，请参见产品架构。
	InstanceClass *string `pulumi:"instanceClass"`
	// 实例 ID。
	InstanceId *string `pulumi:"instanceId"`
	// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
	InstanceName   *string                 `pulumi:"instanceName"`
	InstanceShards []InstanceInstanceShard `pulumi:"instanceShards"`
	// 实例的可维护时间段，格式为HH:mm-HH:mm（UTC+8）。
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// 实例当前单分片最大连接数。每分片的默认连接数为10000，您也可以根据业务需要调用ModifyDBInstanceMaxConn接口修改单分片的最大连接数。
	MaxConnections *int `pulumi:"maxConnections"`
	// 设置实例的可用区部署方案。
	MultiAz *string `pulumi:"multiAz"`
	// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
	NoAuthMode *string `pulumi:"noAuthMode"`
	// Proxy 和 Server 节点 ID 列表。
	NodeIds []string `pulumi:"nodeIds"`
	// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
	NodeNumber *int `pulumi:"nodeNumber"`
	// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
	ParameterGroupId *string `pulumi:"parameterGroupId"`
	// 设置默认数据库 default 账号的密码。
	Password *string `pulumi:"password"`
	// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
	Port *int `pulumi:"port"`
	// 实例私网连接地址的域名。
	PrivateAddress *string `pulumi:"privateAddress"`
	// 实例所属的项目。
	ProjectName *string `pulumi:"projectName"`
	// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
	PurchaseMonths *int `pulumi:"purchaseMonths"`
	// 设置是否保留额外带宽
	ReserveAdditionalBandwidth *bool `pulumi:"reserveAdditionalBandwidth"`
	// 实例的服务类型
	ServiceType *string `pulumi:"serviceType"`
	// 实例中每个分片的内存容量。单位：MiB。
	ShardCapacity *int `pulumi:"shardCapacity"`
	// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
	ShardNumber *int `pulumi:"shardNumber"`
	// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
	ShardedCluster *int `pulumi:"shardedCluster"`
	// 实例的服务类型，取值范围如下：Basic（默认值）：社区版；Enterprise：企业版。
	Status *string `pulumi:"status"`
	// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
	SubnetId *string       `pulumi:"subnetId"`
	Tags     []InstanceTag `pulumi:"tags"`
	// 实例私网连接地址所对应的 IPv6 地址。仅当实例使用了 IPv6 地址时才会返回该参数。
	ViPv6 *string `pulumi:"viPv6"`
	// 实例私网连接地址所对应的 IPv4 地址。
	Vip        *string             `pulumi:"vip"`
	VisitAddrs []InstanceVisitAddr `pulumi:"visitAddrs"`
	// 开启或关闭免密访问功能。取值范围如下：open：开启免密访问；close：关闭免密访问。参数取值不区分大小写。
	VpcAuthMode *string `pulumi:"vpcAuthMode"`
	// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
	VpcId *string `pulumi:"vpcId"`
	// 实例所在的可用区列表。
	ZoneIds []string `pulumi:"zoneIds"`
}

type InstanceState struct {
	// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
	AllowListIds pulumi.StringArrayInput
	// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
	AutoRenew pulumi.BoolPtrInput
	// 为变更前创建的全量备份设置备份名称。
	BackupPointName pulumi.StringPtrInput
	// 实例的容量信息。
	Capacity InstanceCapacityPtrInput
	// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
	ChargeType     pulumi.StringPtrInput
	ConfigureNodes InstanceConfigureNodeArrayInput
	// 是否在变更前创建备份。
	CreateBackup pulumi.BoolPtrInput
	// 实例的创建时间。
	CreateTime pulumi.StringPtrInput
	// 实例的数据存储形态。该参数仅对企业版（即ServiceType为Enterprise）实例有意义；社区版（即ServiceType为Basic）实例不涉及数据存储形态，DataLayout取值固定为RAM。若该参数留空，表示不使用数据存储形态进行筛选。
	DataLayout pulumi.StringPtrInput
	// 开启或关闭实例删除保护功能。
	DeletionProtection pulumi.StringPtrInput
	// 数据库版本号。
	EngineVersion pulumi.StringPtrInput
	// 实例到期时间。
	ExpiredTime pulumi.StringPtrInput
	// Redis 实例的类型。取值范围如下：PrimarySecondary：主备实例；Standalone：单节点实例。若该参数留空，表示不使用实例类型条件进行筛选。关于实例类型的更多信息，请参见产品架构。
	InstanceClass pulumi.StringPtrInput
	// 实例 ID。
	InstanceId pulumi.StringPtrInput
	// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
	InstanceName   pulumi.StringPtrInput
	InstanceShards InstanceInstanceShardArrayInput
	// 实例的可维护时间段，格式为HH:mm-HH:mm（UTC+8）。
	MaintenanceTime pulumi.StringPtrInput
	// 实例当前单分片最大连接数。每分片的默认连接数为10000，您也可以根据业务需要调用ModifyDBInstanceMaxConn接口修改单分片的最大连接数。
	MaxConnections pulumi.IntPtrInput
	// 设置实例的可用区部署方案。
	MultiAz pulumi.StringPtrInput
	// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
	NoAuthMode pulumi.StringPtrInput
	// Proxy 和 Server 节点 ID 列表。
	NodeIds pulumi.StringArrayInput
	// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
	NodeNumber pulumi.IntPtrInput
	// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
	ParameterGroupId pulumi.StringPtrInput
	// 设置默认数据库 default 账号的密码。
	Password pulumi.StringPtrInput
	// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
	Port pulumi.IntPtrInput
	// 实例私网连接地址的域名。
	PrivateAddress pulumi.StringPtrInput
	// 实例所属的项目。
	ProjectName pulumi.StringPtrInput
	// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
	PurchaseMonths pulumi.IntPtrInput
	// 设置是否保留额外带宽
	ReserveAdditionalBandwidth pulumi.BoolPtrInput
	// 实例的服务类型
	ServiceType pulumi.StringPtrInput
	// 实例中每个分片的内存容量。单位：MiB。
	ShardCapacity pulumi.IntPtrInput
	// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
	ShardNumber pulumi.IntPtrInput
	// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
	ShardedCluster pulumi.IntPtrInput
	// 实例的服务类型，取值范围如下：Basic（默认值）：社区版；Enterprise：企业版。
	Status pulumi.StringPtrInput
	// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
	SubnetId pulumi.StringPtrInput
	Tags     InstanceTagArrayInput
	// 实例私网连接地址所对应的 IPv6 地址。仅当实例使用了 IPv6 地址时才会返回该参数。
	ViPv6 pulumi.StringPtrInput
	// 实例私网连接地址所对应的 IPv4 地址。
	Vip        pulumi.StringPtrInput
	VisitAddrs InstanceVisitAddrArrayInput
	// 开启或关闭免密访问功能。取值范围如下：open：开启免密访问；close：关闭免密访问。参数取值不区分大小写。
	VpcAuthMode pulumi.StringPtrInput
	// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
	VpcId pulumi.StringPtrInput
	// 实例所在的可用区列表。
	ZoneIds pulumi.StringArrayInput
}

func (InstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceState)(nil)).Elem()
}

type instanceArgs struct {
	// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
	AllowListIds []string `pulumi:"allowListIds"`
	// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
	AutoRenew *bool `pulumi:"autoRenew"`
	// 为变更前创建的全量备份设置备份名称。
	BackupPointName *string `pulumi:"backupPointName"`
	// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
	ChargeType     *string                 `pulumi:"chargeType"`
	ConfigureNodes []InstanceConfigureNode `pulumi:"configureNodes"`
	// 是否在变更前创建备份。
	CreateBackup *bool `pulumi:"createBackup"`
	// 开启或关闭实例删除保护功能。
	DeletionProtection *string `pulumi:"deletionProtection"`
	// 数据库版本号。
	EngineVersion string `pulumi:"engineVersion"`
	// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
	InstanceName *string `pulumi:"instanceName"`
	// 设置实例的可用区部署方案。
	MultiAz string `pulumi:"multiAz"`
	// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
	NoAuthMode *string `pulumi:"noAuthMode"`
	// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
	NodeNumber int `pulumi:"nodeNumber"`
	// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
	ParameterGroupId *string `pulumi:"parameterGroupId"`
	// 设置默认数据库 default 账号的密码。
	Password *string `pulumi:"password"`
	// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
	Port *int `pulumi:"port"`
	// 实例所属的项目。
	ProjectName *string `pulumi:"projectName"`
	// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
	PurchaseMonths *int `pulumi:"purchaseMonths"`
	// 设置是否保留额外带宽
	ReserveAdditionalBandwidth *bool `pulumi:"reserveAdditionalBandwidth"`
	// 实例中每个分片的内存容量。单位：MiB。
	ShardCapacity int `pulumi:"shardCapacity"`
	// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
	ShardNumber *int `pulumi:"shardNumber"`
	// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
	ShardedCluster int `pulumi:"shardedCluster"`
	// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
	SubnetId string        `pulumi:"subnetId"`
	Tags     []InstanceTag `pulumi:"tags"`
	// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
	AllowListIds pulumi.StringArrayInput
	// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
	AutoRenew pulumi.BoolPtrInput
	// 为变更前创建的全量备份设置备份名称。
	BackupPointName pulumi.StringPtrInput
	// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
	ChargeType     pulumi.StringPtrInput
	ConfigureNodes InstanceConfigureNodeArrayInput
	// 是否在变更前创建备份。
	CreateBackup pulumi.BoolPtrInput
	// 开启或关闭实例删除保护功能。
	DeletionProtection pulumi.StringPtrInput
	// 数据库版本号。
	EngineVersion pulumi.StringInput
	// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
	InstanceName pulumi.StringPtrInput
	// 设置实例的可用区部署方案。
	MultiAz pulumi.StringInput
	// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
	NoAuthMode pulumi.StringPtrInput
	// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
	NodeNumber pulumi.IntInput
	// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
	ParameterGroupId pulumi.StringPtrInput
	// 设置默认数据库 default 账号的密码。
	Password pulumi.StringPtrInput
	// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
	Port pulumi.IntPtrInput
	// 实例所属的项目。
	ProjectName pulumi.StringPtrInput
	// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
	PurchaseMonths pulumi.IntPtrInput
	// 设置是否保留额外带宽
	ReserveAdditionalBandwidth pulumi.BoolPtrInput
	// 实例中每个分片的内存容量。单位：MiB。
	ShardCapacity pulumi.IntInput
	// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
	ShardNumber pulumi.IntPtrInput
	// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
	ShardedCluster pulumi.IntInput
	// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
	SubnetId pulumi.StringInput
	Tags     InstanceTagArrayInput
	// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
	VpcId pulumi.StringInput
}

func (InstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceArgs)(nil)).Elem()
}

type InstanceInput interface {
	pulumi.Input

	ToInstanceOutput() InstanceOutput
	ToInstanceOutputWithContext(ctx context.Context) InstanceOutput
}

func (*Instance) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (i *Instance) ToInstanceOutput() InstanceOutput {
	return i.ToInstanceOutputWithContext(context.Background())
}

func (i *Instance) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOutput)
}

// InstanceArrayInput is an input type that accepts InstanceArray and InstanceArrayOutput values.
// You can construct a concrete instance of `InstanceArrayInput` via:
//
//	InstanceArray{ InstanceArgs{...} }
type InstanceArrayInput interface {
	pulumi.Input

	ToInstanceArrayOutput() InstanceArrayOutput
	ToInstanceArrayOutputWithContext(context.Context) InstanceArrayOutput
}

type InstanceArray []InstanceInput

func (InstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (i InstanceArray) ToInstanceArrayOutput() InstanceArrayOutput {
	return i.ToInstanceArrayOutputWithContext(context.Background())
}

func (i InstanceArray) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceArrayOutput)
}

// InstanceMapInput is an input type that accepts InstanceMap and InstanceMapOutput values.
// You can construct a concrete instance of `InstanceMapInput` via:
//
//	InstanceMap{ "key": InstanceArgs{...} }
type InstanceMapInput interface {
	pulumi.Input

	ToInstanceMapOutput() InstanceMapOutput
	ToInstanceMapOutputWithContext(context.Context) InstanceMapOutput
}

type InstanceMap map[string]InstanceInput

func (InstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (i InstanceMap) ToInstanceMapOutput() InstanceMapOutput {
	return i.ToInstanceMapOutputWithContext(context.Background())
}

func (i InstanceMap) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMapOutput)
}

type InstanceOutput struct{ *pulumi.OutputState }

func (InstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Instance)(nil)).Elem()
}

func (o InstanceOutput) ToInstanceOutput() InstanceOutput {
	return o
}

func (o InstanceOutput) ToInstanceOutputWithContext(ctx context.Context) InstanceOutput {
	return o
}

// 白名单 ID 列表。若该参数留空，新建实例默认不加入任何白名单。您可以调用 DescribeAllowLists 接口查询当前账号下指定地域内的所有 IP 白名单信息，包括白名单 ID 信息。每个实例最多支持绑定 100 个白名单，每次可最多批量绑定 100 个白名单。每个实例最多支持绑定 1000 个 IP 地址或 CIDR 格式的 IP 地址段。
func (o InstanceOutput) AllowListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.AllowListIds }).(pulumi.StringArrayOutput)
}

// 是否开启自动续费。取值范围如下：false（默认值）：不开启。true：开启。
func (o InstanceOutput) AutoRenew() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.AutoRenew }).(pulumi.BoolOutput)
}

// 为变更前创建的全量备份设置备份名称。
func (o InstanceOutput) BackupPointName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.BackupPointName }).(pulumi.StringOutput)
}

// 实例的容量信息。
func (o InstanceOutput) Capacity() InstanceCapacityOutput {
	return o.ApplyT(func(v *Instance) InstanceCapacityOutput { return v.Capacity }).(InstanceCapacityOutput)
}

// 实例计费类型。取值范围如下：PrePaid：包年包月（也称预付费）。PostPaid：按量计费（也称后付费）。
func (o InstanceOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ChargeType }).(pulumi.StringOutput)
}

func (o InstanceOutput) ConfigureNodes() InstanceConfigureNodeArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceConfigureNodeArrayOutput { return v.ConfigureNodes }).(InstanceConfigureNodeArrayOutput)
}

// 是否在变更前创建备份。
func (o InstanceOutput) CreateBackup() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.CreateBackup }).(pulumi.BoolOutput)
}

// 实例的创建时间。
func (o InstanceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// 实例的数据存储形态。该参数仅对企业版（即ServiceType为Enterprise）实例有意义；社区版（即ServiceType为Basic）实例不涉及数据存储形态，DataLayout取值固定为RAM。若该参数留空，表示不使用数据存储形态进行筛选。
func (o InstanceOutput) DataLayout() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DataLayout }).(pulumi.StringOutput)
}

// 开启或关闭实例删除保护功能。
func (o InstanceOutput) DeletionProtection() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.DeletionProtection }).(pulumi.StringOutput)
}

// 数据库版本号。
func (o InstanceOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// 实例到期时间。
func (o InstanceOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ExpiredTime }).(pulumi.StringOutput)
}

// Redis 实例的类型。取值范围如下：PrimarySecondary：主备实例；Standalone：单节点实例。若该参数留空，表示不使用实例类型条件进行筛选。关于实例类型的更多信息，请参见产品架构。
func (o InstanceOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceClass }).(pulumi.StringOutput)
}

// 实例 ID。
func (o InstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// 实例名称。命名规则：不能以数字、中划线（-）开头；只能包含中文、字母、数字、下划线（_）和中划线（-）；长度需要在1~128个字符内。
func (o InstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

func (o InstanceOutput) InstanceShards() InstanceInstanceShardArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceInstanceShardArrayOutput { return v.InstanceShards }).(InstanceInstanceShardArrayOutput)
}

// 实例的可维护时间段，格式为HH:mm-HH:mm（UTC+8）。
func (o InstanceOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// 实例当前单分片最大连接数。每分片的默认连接数为10000，您也可以根据业务需要调用ModifyDBInstanceMaxConn接口修改单分片的最大连接数。
func (o InstanceOutput) MaxConnections() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.MaxConnections }).(pulumi.IntOutput)
}

// 设置实例的可用区部署方案。
func (o InstanceOutput) MultiAz() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.MultiAz }).(pulumi.StringOutput)
}

// 为新建实例开启或关闭免密访问功能。取值范围如下：open：开启免密访问。close（默认值）：关闭免密访问。
func (o InstanceOutput) NoAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.NoAuthMode }).(pulumi.StringOutput)
}

// Proxy 和 Server 节点 ID 列表。
func (o InstanceOutput) NodeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.NodeIds }).(pulumi.StringArrayOutput)
}

// 每个分片中的节点数。取值范围为1~6。每个账号在每个地域下默认最多可创建4个256MiB规格的节点，若需要调整配额上限为10个，请参见账号配额。取值为1时表示创建单节点实例；取值大于1时表示创建主备实例。关于两种类型实例的功能特性差异详情，请参见功能特性差异。
func (o InstanceOutput) NodeNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.NodeNumber }).(pulumi.IntOutput)
}

// 需要应用到新实例的参数模板。缓存数据库 Redis 版为每个数据库版本都创建了一份默认的系统参数模板，模板中包含了该版本支持设置的所有参数和默认参数值。若该参数留空，默认会根据您设置的数据库版本（即 EngineVersion）为新建实例选择并应用对应版本的系统参数模板。您可以调用 DescribeParameterGroups 接口查询当前账号和地域下的所有参数模板的基本信息，包括参数模板 ID。
func (o InstanceOutput) ParameterGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ParameterGroupId }).(pulumi.StringOutput)
}

// 设置默认数据库 default 账号的密码。
func (o InstanceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// 自定义私网连接地址的端口号。取值范围：1024~65535。若该参数留空，私网连接地址默认使用6379端口。实例创建成功后，还可以修改私网地址的端口号，修改方法请参见修改端口号。
func (o InstanceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

// 实例私网连接地址的域名。
func (o InstanceOutput) PrivateAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.PrivateAddress }).(pulumi.StringOutput)
}

// 实例所属的项目。
func (o InstanceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 购买时长，单位：月。取值范围如下：按月购买：1，2，3，4，5，6，7，8，9。按年购买：12，24，36。当ChargeType为PrePaid时，该参数必填。
func (o InstanceOutput) PurchaseMonths() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.PurchaseMonths }).(pulumi.IntOutput)
}

// 设置是否保留额外带宽
func (o InstanceOutput) ReserveAdditionalBandwidth() pulumi.BoolOutput {
	return o.ApplyT(func(v *Instance) pulumi.BoolOutput { return v.ReserveAdditionalBandwidth }).(pulumi.BoolOutput)
}

// 实例的服务类型
func (o InstanceOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

// 实例中每个分片的内存容量。单位：MiB。
func (o InstanceOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ShardCapacity }).(pulumi.IntOutput)
}

// 实例中的分片数量。取值范围为 2~256。仅当 ShardedCluster 取值为 1（即启用分片集群）时，需要指定该参数。
func (o InstanceOutput) ShardNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ShardNumber }).(pulumi.IntOutput)
}

// 是否启用分片集群。取值范围如下：0：不启用。1：启用。
func (o InstanceOutput) ShardedCluster() pulumi.IntOutput {
	return o.ApplyT(func(v *Instance) pulumi.IntOutput { return v.ShardedCluster }).(pulumi.IntOutput)
}

// 实例的服务类型，取值范围如下：Basic（默认值）：社区版；Enterprise：企业版。
func (o InstanceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// 设置实例的子网ID。子网具有可用区属性，必须选择目标私有网络中与实例属于同一可用区下的子网。子网是私有网络内的IP地址块私有网络中的所有云资源都必须部署在子网内，子网为云资源分配私网IP地址，您可以调用CreateSubnet接口创建子网。您可以调用DescribeSubnets接口查询指定可用区内的所有子网列表信息，包括子网ID。
func (o InstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o InstanceOutput) Tags() InstanceTagArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceTagArrayOutput { return v.Tags }).(InstanceTagArrayOutput)
}

// 实例私网连接地址所对应的 IPv6 地址。仅当实例使用了 IPv6 地址时才会返回该参数。
func (o InstanceOutput) ViPv6() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.ViPv6 }).(pulumi.StringOutput)
}

// 实例私网连接地址所对应的 IPv4 地址。
func (o InstanceOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.Vip }).(pulumi.StringOutput)
}

func (o InstanceOutput) VisitAddrs() InstanceVisitAddrArrayOutput {
	return o.ApplyT(func(v *Instance) InstanceVisitAddrArrayOutput { return v.VisitAddrs }).(InstanceVisitAddrArrayOutput)
}

// 开启或关闭免密访问功能。取值范围如下：open：开启免密访问；close：关闭免密访问。参数取值不区分大小写。
func (o InstanceOutput) VpcAuthMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcAuthMode }).(pulumi.StringOutput)
}

// 设置实例的私有网络ID。建议Redis实例与需要连接的ECS实例在同一私有网络，否则它们无法通过内网互通来实现最佳性能。您可以调用CreateVpc接口创建私有网络。您可以调用DescribeVpcs接口查询符合指定条件的私有网络信息，包括私有网络ID。
func (o InstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

// 实例所在的可用区列表。
func (o InstanceOutput) ZoneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Instance) pulumi.StringArrayOutput { return v.ZoneIds }).(pulumi.StringArrayOutput)
}

type InstanceArrayOutput struct{ *pulumi.OutputState }

func (InstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Instance)(nil)).Elem()
}

func (o InstanceArrayOutput) ToInstanceArrayOutput() InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) ToInstanceArrayOutputWithContext(ctx context.Context) InstanceArrayOutput {
	return o
}

func (o InstanceArrayOutput) Index(i pulumi.IntInput) InstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].([]*Instance)[vs[1].(int)]
	}).(InstanceOutput)
}

type InstanceMapOutput struct{ *pulumi.OutputState }

func (InstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Instance)(nil)).Elem()
}

func (o InstanceMapOutput) ToInstanceMapOutput() InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) ToInstanceMapOutputWithContext(ctx context.Context) InstanceMapOutput {
	return o
}

func (o InstanceMapOutput) MapIndex(k pulumi.StringInput) InstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Instance {
		return vs[0].(map[string]*Instance)[vs[1].(string)]
	}).(InstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceInput)(nil)).Elem(), &Instance{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceArrayInput)(nil)).Elem(), InstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMapInput)(nil)).Elem(), InstanceMap{})
	pulumi.RegisterOutputType(InstanceOutput{})
	pulumi.RegisterOutputType(InstanceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMapOutput{})
}
