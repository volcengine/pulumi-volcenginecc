// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transitrouter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::TransitRouter::TransitRouterRouteEntry
func LookupTransitRouterRouteEntry(ctx *pulumi.Context, args *LookupTransitRouterRouteEntryArgs, opts ...pulumi.InvokeOption) (*LookupTransitRouterRouteEntryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitRouterRouteEntryResult
	err := ctx.Invoke("volcenginecc:transitrouter/getTransitRouterRouteEntry:getTransitRouterRouteEntry", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTransitRouterRouteEntry.
type LookupTransitRouterRouteEntryArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getTransitRouterRouteEntry.
type LookupTransitRouterRouteEntryResult struct {
	// 路由条目的AS路径。
	AsPaths []string `pulumi:"asPaths"`
	// 路由条目的创建时间。
	CreationTime string `pulumi:"creationTime"`
	// TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
	Description string `pulumi:"description"`
	// 路由条目的目标网段。
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 路由条目的状态。Available：可用。Creating：创建中。Pending：配置中。Deleting：删除中。Conflicted：未生效。
	Status string `pulumi:"status"`
	// TR路由条目的ID。
	TransitRouterRouteEntryId string `pulumi:"transitRouterRouteEntryId"`
	// 路由条目的名称。
	TransitRouterRouteEntryName string `pulumi:"transitRouterRouteEntryName"`
	// 路由条目的下一跳ID。
	TransitRouterRouteEntryNextHopId string `pulumi:"transitRouterRouteEntryNextHopId"`
	// 路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。
	TransitRouterRouteEntryNextHopType string `pulumi:"transitRouterRouteEntryNextHopType"`
	// 路由条目的类型。Static：静态路由。Propagated：自动学习路由。
	TransitRouterRouteEntryType string `pulumi:"transitRouterRouteEntryType"`
	// 中转路由器实例关联的路由表的ID。
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// 路由条目的更新时间。
	UpdateTime string `pulumi:"updateTime"`
}

func LookupTransitRouterRouteEntryOutput(ctx *pulumi.Context, args LookupTransitRouterRouteEntryOutputArgs, opts ...pulumi.InvokeOption) LookupTransitRouterRouteEntryResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTransitRouterRouteEntryResultOutput, error) {
			args := v.(LookupTransitRouterRouteEntryArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:transitrouter/getTransitRouterRouteEntry:getTransitRouterRouteEntry", args, LookupTransitRouterRouteEntryResultOutput{}, options).(LookupTransitRouterRouteEntryResultOutput), nil
		}).(LookupTransitRouterRouteEntryResultOutput)
}

// A collection of arguments for invoking getTransitRouterRouteEntry.
type LookupTransitRouterRouteEntryOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransitRouterRouteEntryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitRouterRouteEntryArgs)(nil)).Elem()
}

// A collection of values returned by getTransitRouterRouteEntry.
type LookupTransitRouterRouteEntryResultOutput struct{ *pulumi.OutputState }

func (LookupTransitRouterRouteEntryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitRouterRouteEntryResult)(nil)).Elem()
}

func (o LookupTransitRouterRouteEntryResultOutput) ToLookupTransitRouterRouteEntryResultOutput() LookupTransitRouterRouteEntryResultOutput {
	return o
}

func (o LookupTransitRouterRouteEntryResultOutput) ToLookupTransitRouterRouteEntryResultOutputWithContext(ctx context.Context) LookupTransitRouterRouteEntryResultOutput {
	return o
}

// 路由条目的AS路径。
func (o LookupTransitRouterRouteEntryResultOutput) AsPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) []string { return v.AsPaths }).(pulumi.StringArrayOutput)
}

// 路由条目的创建时间。
func (o LookupTransitRouterRouteEntryResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
func (o LookupTransitRouterRouteEntryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.Description }).(pulumi.StringOutput)
}

// 路由条目的目标网段。
func (o LookupTransitRouterRouteEntryResultOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupTransitRouterRouteEntryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.Id }).(pulumi.StringOutput)
}

// 路由条目的状态。Available：可用。Creating：创建中。Pending：配置中。Deleting：删除中。Conflicted：未生效。
func (o LookupTransitRouterRouteEntryResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.Status }).(pulumi.StringOutput)
}

// TR路由条目的ID。
func (o LookupTransitRouterRouteEntryResultOutput) TransitRouterRouteEntryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.TransitRouterRouteEntryId }).(pulumi.StringOutput)
}

// 路由条目的名称。
func (o LookupTransitRouterRouteEntryResultOutput) TransitRouterRouteEntryName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.TransitRouterRouteEntryName }).(pulumi.StringOutput)
}

// 路由条目的下一跳ID。
func (o LookupTransitRouterRouteEntryResultOutput) TransitRouterRouteEntryNextHopId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.TransitRouterRouteEntryNextHopId }).(pulumi.StringOutput)
}

// 路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。
func (o LookupTransitRouterRouteEntryResultOutput) TransitRouterRouteEntryNextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.TransitRouterRouteEntryNextHopType }).(pulumi.StringOutput)
}

// 路由条目的类型。Static：静态路由。Propagated：自动学习路由。
func (o LookupTransitRouterRouteEntryResultOutput) TransitRouterRouteEntryType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.TransitRouterRouteEntryType }).(pulumi.StringOutput)
}

// 中转路由器实例关联的路由表的ID。
func (o LookupTransitRouterRouteEntryResultOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// 路由条目的更新时间。
func (o LookupTransitRouterRouteEntryResultOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTransitRouterRouteEntryResult) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitRouterRouteEntryResultOutput{})
}
