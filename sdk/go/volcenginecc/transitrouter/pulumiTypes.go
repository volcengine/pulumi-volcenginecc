// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transitrouter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type TransitRouterAttachment struct {
	// 网络实例连接所属的账号ID。
	AccountId *string `pulumi:"accountId"`
	// 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
	AutoPublishRouteEnabled *bool `pulumi:"autoPublishRouteEnabled"`
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus *string `pulumi:"businessStatus"`
	// 网络实例连接的创建时间。
	CreationTime *string `pulumi:"creationTime"`
	// 网络实例连接的删除时间。
	DeletedTime *string `pulumi:"deletedTime"`
	// 网络实例连接的描述信息。
	Description *string `pulumi:"description"`
	// 是否开启IPv6功能。true：是。false：否。
	Ipv6Enabled *bool `pulumi:"ipv6Enabled"`
	// 网络实例连接的欠费关停时间。
	OverdueTime *string `pulumi:"overdueTime"`
	// 网络实例的ID。
	ResourceId *string `pulumi:"resourceId"`
	// 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
	ResourceType *string `pulumi:"resourceType"`
	// 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status *string                      `pulumi:"status"`
	Tags   []TransitRouterAttachmentTag `pulumi:"tags"`
	// 网络实例连接的ID。
	TransitRouterAttachmentId *string `pulumi:"transitRouterAttachmentId"`
	// 网络实例连接的名称。
	TransitRouterAttachmentName *string `pulumi:"transitRouterAttachmentName"`
	// 跨地域连接关联的转发策略的ID。
	TransitRouterForwardPolicyTableId *string `pulumi:"transitRouterForwardPolicyTableId"`
	// 中转路由器实例的ID。
	TransitRouterId *string `pulumi:"transitRouterId"`
	// 网络实例连接关联转发的路由表ID。
	TransitRouterRouteTableId *string `pulumi:"transitRouterRouteTableId"`
	// 跨地域连接关联的流标记策略的ID。
	TransitRouterTrafficQosMarkingPolicyId *string `pulumi:"transitRouterTrafficQosMarkingPolicyId"`
	// 跨地域连接关联的流队列策略的ID。
	TransitRouterTrafficQosQueuePolicyId *string `pulumi:"transitRouterTrafficQosQueuePolicyId"`
	// 网络实例连接的最近操作时间。
	UpdateTime *string `pulumi:"updateTime"`
}

// TransitRouterAttachmentInput is an input type that accepts TransitRouterAttachmentArgs and TransitRouterAttachmentOutput values.
// You can construct a concrete instance of `TransitRouterAttachmentInput` via:
//
//	TransitRouterAttachmentArgs{...}
type TransitRouterAttachmentInput interface {
	pulumi.Input

	ToTransitRouterAttachmentOutput() TransitRouterAttachmentOutput
	ToTransitRouterAttachmentOutputWithContext(context.Context) TransitRouterAttachmentOutput
}

type TransitRouterAttachmentArgs struct {
	// 网络实例连接所属的账号ID。
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
	AutoPublishRouteEnabled pulumi.BoolPtrInput `pulumi:"autoPublishRouteEnabled"`
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus pulumi.StringPtrInput `pulumi:"businessStatus"`
	// 网络实例连接的创建时间。
	CreationTime pulumi.StringPtrInput `pulumi:"creationTime"`
	// 网络实例连接的删除时间。
	DeletedTime pulumi.StringPtrInput `pulumi:"deletedTime"`
	// 网络实例连接的描述信息。
	Description pulumi.StringPtrInput `pulumi:"description"`
	// 是否开启IPv6功能。true：是。false：否。
	Ipv6Enabled pulumi.BoolPtrInput `pulumi:"ipv6Enabled"`
	// 网络实例连接的欠费关停时间。
	OverdueTime pulumi.StringPtrInput `pulumi:"overdueTime"`
	// 网络实例的ID。
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status pulumi.StringPtrInput                `pulumi:"status"`
	Tags   TransitRouterAttachmentTagArrayInput `pulumi:"tags"`
	// 网络实例连接的ID。
	TransitRouterAttachmentId pulumi.StringPtrInput `pulumi:"transitRouterAttachmentId"`
	// 网络实例连接的名称。
	TransitRouterAttachmentName pulumi.StringPtrInput `pulumi:"transitRouterAttachmentName"`
	// 跨地域连接关联的转发策略的ID。
	TransitRouterForwardPolicyTableId pulumi.StringPtrInput `pulumi:"transitRouterForwardPolicyTableId"`
	// 中转路由器实例的ID。
	TransitRouterId pulumi.StringPtrInput `pulumi:"transitRouterId"`
	// 网络实例连接关联转发的路由表ID。
	TransitRouterRouteTableId pulumi.StringPtrInput `pulumi:"transitRouterRouteTableId"`
	// 跨地域连接关联的流标记策略的ID。
	TransitRouterTrafficQosMarkingPolicyId pulumi.StringPtrInput `pulumi:"transitRouterTrafficQosMarkingPolicyId"`
	// 跨地域连接关联的流队列策略的ID。
	TransitRouterTrafficQosQueuePolicyId pulumi.StringPtrInput `pulumi:"transitRouterTrafficQosQueuePolicyId"`
	// 网络实例连接的最近操作时间。
	UpdateTime pulumi.StringPtrInput `pulumi:"updateTime"`
}

func (TransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterAttachment)(nil)).Elem()
}

func (i TransitRouterAttachmentArgs) ToTransitRouterAttachmentOutput() TransitRouterAttachmentOutput {
	return i.ToTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i TransitRouterAttachmentArgs) ToTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterAttachmentOutput)
}

// TransitRouterAttachmentArrayInput is an input type that accepts TransitRouterAttachmentArray and TransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `TransitRouterAttachmentArrayInput` via:
//
//	TransitRouterAttachmentArray{ TransitRouterAttachmentArgs{...} }
type TransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToTransitRouterAttachmentArrayOutput() TransitRouterAttachmentArrayOutput
	ToTransitRouterAttachmentArrayOutputWithContext(context.Context) TransitRouterAttachmentArrayOutput
}

type TransitRouterAttachmentArray []TransitRouterAttachmentInput

func (TransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterAttachment)(nil)).Elem()
}

func (i TransitRouterAttachmentArray) ToTransitRouterAttachmentArrayOutput() TransitRouterAttachmentArrayOutput {
	return i.ToTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i TransitRouterAttachmentArray) ToTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterAttachmentArrayOutput)
}

type TransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (TransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterAttachment)(nil)).Elem()
}

func (o TransitRouterAttachmentOutput) ToTransitRouterAttachmentOutput() TransitRouterAttachmentOutput {
	return o
}

func (o TransitRouterAttachmentOutput) ToTransitRouterAttachmentOutputWithContext(ctx context.Context) TransitRouterAttachmentOutput {
	return o
}

// 网络实例连接所属的账号ID。
func (o TransitRouterAttachmentOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
func (o TransitRouterAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *bool { return v.AutoPublishRouteEnabled }).(pulumi.BoolPtrOutput)
}

// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
func (o TransitRouterAttachmentOutput) BusinessStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.BusinessStatus }).(pulumi.StringPtrOutput)
}

// 网络实例连接的创建时间。
func (o TransitRouterAttachmentOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// 网络实例连接的删除时间。
func (o TransitRouterAttachmentOutput) DeletedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.DeletedTime }).(pulumi.StringPtrOutput)
}

// 网络实例连接的描述信息。
func (o TransitRouterAttachmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// 是否开启IPv6功能。true：是。false：否。
func (o TransitRouterAttachmentOutput) Ipv6Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *bool { return v.Ipv6Enabled }).(pulumi.BoolPtrOutput)
}

// 网络实例连接的欠费关停时间。
func (o TransitRouterAttachmentOutput) OverdueTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.OverdueTime }).(pulumi.StringPtrOutput)
}

// 网络实例的ID。
func (o TransitRouterAttachmentOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
func (o TransitRouterAttachmentOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
func (o TransitRouterAttachmentOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o TransitRouterAttachmentOutput) Tags() TransitRouterAttachmentTagArrayOutput {
	return o.ApplyT(func(v TransitRouterAttachment) []TransitRouterAttachmentTag { return v.Tags }).(TransitRouterAttachmentTagArrayOutput)
}

// 网络实例连接的ID。
func (o TransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterAttachmentId }).(pulumi.StringPtrOutput)
}

// 网络实例连接的名称。
func (o TransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterAttachmentName }).(pulumi.StringPtrOutput)
}

// 跨地域连接关联的转发策略的ID。
func (o TransitRouterAttachmentOutput) TransitRouterForwardPolicyTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterForwardPolicyTableId }).(pulumi.StringPtrOutput)
}

// 中转路由器实例的ID。
func (o TransitRouterAttachmentOutput) TransitRouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterId }).(pulumi.StringPtrOutput)
}

// 网络实例连接关联转发的路由表ID。
func (o TransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterRouteTableId }).(pulumi.StringPtrOutput)
}

// 跨地域连接关联的流标记策略的ID。
func (o TransitRouterAttachmentOutput) TransitRouterTrafficQosMarkingPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterTrafficQosMarkingPolicyId }).(pulumi.StringPtrOutput)
}

// 跨地域连接关联的流队列策略的ID。
func (o TransitRouterAttachmentOutput) TransitRouterTrafficQosQueuePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.TransitRouterTrafficQosQueuePolicyId }).(pulumi.StringPtrOutput)
}

// 网络实例连接的最近操作时间。
func (o TransitRouterAttachmentOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachment) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

type TransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterAttachment)(nil)).Elem()
}

func (o TransitRouterAttachmentArrayOutput) ToTransitRouterAttachmentArrayOutput() TransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRouterAttachmentArrayOutput) ToTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) TransitRouterAttachmentArrayOutput {
	return o
}

func (o TransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) TransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterAttachment {
		return vs[0].([]TransitRouterAttachment)[vs[1].(int)]
	}).(TransitRouterAttachmentOutput)
}

type TransitRouterAttachmentTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// TransitRouterAttachmentTagInput is an input type that accepts TransitRouterAttachmentTagArgs and TransitRouterAttachmentTagOutput values.
// You can construct a concrete instance of `TransitRouterAttachmentTagInput` via:
//
//	TransitRouterAttachmentTagArgs{...}
type TransitRouterAttachmentTagInput interface {
	pulumi.Input

	ToTransitRouterAttachmentTagOutput() TransitRouterAttachmentTagOutput
	ToTransitRouterAttachmentTagOutputWithContext(context.Context) TransitRouterAttachmentTagOutput
}

type TransitRouterAttachmentTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TransitRouterAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterAttachmentTag)(nil)).Elem()
}

func (i TransitRouterAttachmentTagArgs) ToTransitRouterAttachmentTagOutput() TransitRouterAttachmentTagOutput {
	return i.ToTransitRouterAttachmentTagOutputWithContext(context.Background())
}

func (i TransitRouterAttachmentTagArgs) ToTransitRouterAttachmentTagOutputWithContext(ctx context.Context) TransitRouterAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterAttachmentTagOutput)
}

// TransitRouterAttachmentTagArrayInput is an input type that accepts TransitRouterAttachmentTagArray and TransitRouterAttachmentTagArrayOutput values.
// You can construct a concrete instance of `TransitRouterAttachmentTagArrayInput` via:
//
//	TransitRouterAttachmentTagArray{ TransitRouterAttachmentTagArgs{...} }
type TransitRouterAttachmentTagArrayInput interface {
	pulumi.Input

	ToTransitRouterAttachmentTagArrayOutput() TransitRouterAttachmentTagArrayOutput
	ToTransitRouterAttachmentTagArrayOutputWithContext(context.Context) TransitRouterAttachmentTagArrayOutput
}

type TransitRouterAttachmentTagArray []TransitRouterAttachmentTagInput

func (TransitRouterAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterAttachmentTag)(nil)).Elem()
}

func (i TransitRouterAttachmentTagArray) ToTransitRouterAttachmentTagArrayOutput() TransitRouterAttachmentTagArrayOutput {
	return i.ToTransitRouterAttachmentTagArrayOutputWithContext(context.Background())
}

func (i TransitRouterAttachmentTagArray) ToTransitRouterAttachmentTagArrayOutputWithContext(ctx context.Context) TransitRouterAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterAttachmentTagArrayOutput)
}

type TransitRouterAttachmentTagOutput struct{ *pulumi.OutputState }

func (TransitRouterAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterAttachmentTag)(nil)).Elem()
}

func (o TransitRouterAttachmentTagOutput) ToTransitRouterAttachmentTagOutput() TransitRouterAttachmentTagOutput {
	return o
}

func (o TransitRouterAttachmentTagOutput) ToTransitRouterAttachmentTagOutputWithContext(ctx context.Context) TransitRouterAttachmentTagOutput {
	return o
}

// 标签键。
func (o TransitRouterAttachmentTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachmentTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o TransitRouterAttachmentTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterAttachmentTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TransitRouterAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterAttachmentTag)(nil)).Elem()
}

func (o TransitRouterAttachmentTagArrayOutput) ToTransitRouterAttachmentTagArrayOutput() TransitRouterAttachmentTagArrayOutput {
	return o
}

func (o TransitRouterAttachmentTagArrayOutput) ToTransitRouterAttachmentTagArrayOutputWithContext(ctx context.Context) TransitRouterAttachmentTagArrayOutput {
	return o
}

func (o TransitRouterAttachmentTagArrayOutput) Index(i pulumi.IntInput) TransitRouterAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterAttachmentTag {
		return vs[0].([]TransitRouterAttachmentTag)[vs[1].(int)]
	}).(TransitRouterAttachmentTagOutput)
}

type TransitRouterRouteTableTag struct {
	// 标签键
	Key *string `pulumi:"key"`
	// 标签值
	Value *string `pulumi:"value"`
}

// TransitRouterRouteTableTagInput is an input type that accepts TransitRouterRouteTableTagArgs and TransitRouterRouteTableTagOutput values.
// You can construct a concrete instance of `TransitRouterRouteTableTagInput` via:
//
//	TransitRouterRouteTableTagArgs{...}
type TransitRouterRouteTableTagInput interface {
	pulumi.Input

	ToTransitRouterRouteTableTagOutput() TransitRouterRouteTableTagOutput
	ToTransitRouterRouteTableTagOutputWithContext(context.Context) TransitRouterRouteTableTagOutput
}

type TransitRouterRouteTableTagArgs struct {
	// 标签键
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TransitRouterRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterRouteTableTag)(nil)).Elem()
}

func (i TransitRouterRouteTableTagArgs) ToTransitRouterRouteTableTagOutput() TransitRouterRouteTableTagOutput {
	return i.ToTransitRouterRouteTableTagOutputWithContext(context.Background())
}

func (i TransitRouterRouteTableTagArgs) ToTransitRouterRouteTableTagOutputWithContext(ctx context.Context) TransitRouterRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterRouteTableTagOutput)
}

// TransitRouterRouteTableTagArrayInput is an input type that accepts TransitRouterRouteTableTagArray and TransitRouterRouteTableTagArrayOutput values.
// You can construct a concrete instance of `TransitRouterRouteTableTagArrayInput` via:
//
//	TransitRouterRouteTableTagArray{ TransitRouterRouteTableTagArgs{...} }
type TransitRouterRouteTableTagArrayInput interface {
	pulumi.Input

	ToTransitRouterRouteTableTagArrayOutput() TransitRouterRouteTableTagArrayOutput
	ToTransitRouterRouteTableTagArrayOutputWithContext(context.Context) TransitRouterRouteTableTagArrayOutput
}

type TransitRouterRouteTableTagArray []TransitRouterRouteTableTagInput

func (TransitRouterRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterRouteTableTag)(nil)).Elem()
}

func (i TransitRouterRouteTableTagArray) ToTransitRouterRouteTableTagArrayOutput() TransitRouterRouteTableTagArrayOutput {
	return i.ToTransitRouterRouteTableTagArrayOutputWithContext(context.Background())
}

func (i TransitRouterRouteTableTagArray) ToTransitRouterRouteTableTagArrayOutputWithContext(ctx context.Context) TransitRouterRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterRouteTableTagArrayOutput)
}

type TransitRouterRouteTableTagOutput struct{ *pulumi.OutputState }

func (TransitRouterRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterRouteTableTag)(nil)).Elem()
}

func (o TransitRouterRouteTableTagOutput) ToTransitRouterRouteTableTagOutput() TransitRouterRouteTableTagOutput {
	return o
}

func (o TransitRouterRouteTableTagOutput) ToTransitRouterRouteTableTagOutputWithContext(ctx context.Context) TransitRouterRouteTableTagOutput {
	return o
}

// 标签键
func (o TransitRouterRouteTableTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterRouteTableTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值
func (o TransitRouterRouteTableTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterRouteTableTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TransitRouterRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterRouteTableTag)(nil)).Elem()
}

func (o TransitRouterRouteTableTagArrayOutput) ToTransitRouterRouteTableTagArrayOutput() TransitRouterRouteTableTagArrayOutput {
	return o
}

func (o TransitRouterRouteTableTagArrayOutput) ToTransitRouterRouteTableTagArrayOutputWithContext(ctx context.Context) TransitRouterRouteTableTagArrayOutput {
	return o
}

func (o TransitRouterRouteTableTagArrayOutput) Index(i pulumi.IntInput) TransitRouterRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterRouteTableTag {
		return vs[0].([]TransitRouterRouteTableTag)[vs[1].(int)]
	}).(TransitRouterRouteTableTagOutput)
}

type TransitRouterTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// TransitRouterTagInput is an input type that accepts TransitRouterTagArgs and TransitRouterTagOutput values.
// You can construct a concrete instance of `TransitRouterTagInput` via:
//
//	TransitRouterTagArgs{...}
type TransitRouterTagInput interface {
	pulumi.Input

	ToTransitRouterTagOutput() TransitRouterTagOutput
	ToTransitRouterTagOutputWithContext(context.Context) TransitRouterTagOutput
}

type TransitRouterTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (TransitRouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTag)(nil)).Elem()
}

func (i TransitRouterTagArgs) ToTransitRouterTagOutput() TransitRouterTagOutput {
	return i.ToTransitRouterTagOutputWithContext(context.Background())
}

func (i TransitRouterTagArgs) ToTransitRouterTagOutputWithContext(ctx context.Context) TransitRouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTagOutput)
}

// TransitRouterTagArrayInput is an input type that accepts TransitRouterTagArray and TransitRouterTagArrayOutput values.
// You can construct a concrete instance of `TransitRouterTagArrayInput` via:
//
//	TransitRouterTagArray{ TransitRouterTagArgs{...} }
type TransitRouterTagArrayInput interface {
	pulumi.Input

	ToTransitRouterTagArrayOutput() TransitRouterTagArrayOutput
	ToTransitRouterTagArrayOutputWithContext(context.Context) TransitRouterTagArrayOutput
}

type TransitRouterTagArray []TransitRouterTagInput

func (TransitRouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTag)(nil)).Elem()
}

func (i TransitRouterTagArray) ToTransitRouterTagArrayOutput() TransitRouterTagArrayOutput {
	return i.ToTransitRouterTagArrayOutputWithContext(context.Background())
}

func (i TransitRouterTagArray) ToTransitRouterTagArrayOutputWithContext(ctx context.Context) TransitRouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterTagArrayOutput)
}

type TransitRouterTagOutput struct{ *pulumi.OutputState }

func (TransitRouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitRouterTag)(nil)).Elem()
}

func (o TransitRouterTagOutput) ToTransitRouterTagOutput() TransitRouterTagOutput {
	return o
}

func (o TransitRouterTagOutput) ToTransitRouterTagOutputWithContext(ctx context.Context) TransitRouterTagOutput {
	return o
}

// 标签键。
func (o TransitRouterTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o TransitRouterTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitRouterTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type TransitRouterTagArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitRouterTag)(nil)).Elem()
}

func (o TransitRouterTagArrayOutput) ToTransitRouterTagArrayOutput() TransitRouterTagArrayOutput {
	return o
}

func (o TransitRouterTagArrayOutput) ToTransitRouterTagArrayOutputWithContext(ctx context.Context) TransitRouterTagArrayOutput {
	return o
}

func (o TransitRouterTagArrayOutput) Index(i pulumi.IntInput) TransitRouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitRouterTag {
		return vs[0].([]TransitRouterTag)[vs[1].(int)]
	}).(TransitRouterTagOutput)
}

type GetTransitRouterAttachment struct {
	// 网络实例连接所属的账号ID。
	AccountId string `pulumi:"accountId"`
	// 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
	AutoPublishRouteEnabled bool `pulumi:"autoPublishRouteEnabled"`
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus string `pulumi:"businessStatus"`
	// 网络实例连接的创建时间。
	CreationTime string `pulumi:"creationTime"`
	// 网络实例连接的删除时间。
	DeletedTime string `pulumi:"deletedTime"`
	// 网络实例连接的描述信息。
	Description string `pulumi:"description"`
	// 是否开启IPv6功能。true：是。false：否。
	Ipv6Enabled bool `pulumi:"ipv6Enabled"`
	// 网络实例连接的欠费关停时间。
	OverdueTime string `pulumi:"overdueTime"`
	// 网络实例的ID。
	ResourceId string `pulumi:"resourceId"`
	// 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
	ResourceType string `pulumi:"resourceType"`
	// 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status string `pulumi:"status"`
	// 网络实例连接的标签信息
	Tags []GetTransitRouterAttachmentTag `pulumi:"tags"`
	// 网络实例连接的ID。
	TransitRouterAttachmentId string `pulumi:"transitRouterAttachmentId"`
	// 网络实例连接的名称。
	TransitRouterAttachmentName string `pulumi:"transitRouterAttachmentName"`
	// 跨地域连接关联的转发策略的ID。
	TransitRouterForwardPolicyTableId string `pulumi:"transitRouterForwardPolicyTableId"`
	// 中转路由器实例的ID。
	TransitRouterId string `pulumi:"transitRouterId"`
	// 网络实例连接关联转发的路由表ID。
	TransitRouterRouteTableId string `pulumi:"transitRouterRouteTableId"`
	// 跨地域连接关联的流标记策略的ID。
	TransitRouterTrafficQosMarkingPolicyId string `pulumi:"transitRouterTrafficQosMarkingPolicyId"`
	// 跨地域连接关联的流队列策略的ID。
	TransitRouterTrafficQosQueuePolicyId string `pulumi:"transitRouterTrafficQosQueuePolicyId"`
	// 网络实例连接的最近操作时间。
	UpdateTime string `pulumi:"updateTime"`
}

// GetTransitRouterAttachmentInput is an input type that accepts GetTransitRouterAttachmentArgs and GetTransitRouterAttachmentOutput values.
// You can construct a concrete instance of `GetTransitRouterAttachmentInput` via:
//
//	GetTransitRouterAttachmentArgs{...}
type GetTransitRouterAttachmentInput interface {
	pulumi.Input

	ToGetTransitRouterAttachmentOutput() GetTransitRouterAttachmentOutput
	ToGetTransitRouterAttachmentOutputWithContext(context.Context) GetTransitRouterAttachmentOutput
}

type GetTransitRouterAttachmentArgs struct {
	// 网络实例连接所属的账号ID。
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
	AutoPublishRouteEnabled pulumi.BoolInput `pulumi:"autoPublishRouteEnabled"`
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus pulumi.StringInput `pulumi:"businessStatus"`
	// 网络实例连接的创建时间。
	CreationTime pulumi.StringInput `pulumi:"creationTime"`
	// 网络实例连接的删除时间。
	DeletedTime pulumi.StringInput `pulumi:"deletedTime"`
	// 网络实例连接的描述信息。
	Description pulumi.StringInput `pulumi:"description"`
	// 是否开启IPv6功能。true：是。false：否。
	Ipv6Enabled pulumi.BoolInput `pulumi:"ipv6Enabled"`
	// 网络实例连接的欠费关停时间。
	OverdueTime pulumi.StringInput `pulumi:"overdueTime"`
	// 网络实例的ID。
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
	// 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status pulumi.StringInput `pulumi:"status"`
	// 网络实例连接的标签信息
	Tags GetTransitRouterAttachmentTagArrayInput `pulumi:"tags"`
	// 网络实例连接的ID。
	TransitRouterAttachmentId pulumi.StringInput `pulumi:"transitRouterAttachmentId"`
	// 网络实例连接的名称。
	TransitRouterAttachmentName pulumi.StringInput `pulumi:"transitRouterAttachmentName"`
	// 跨地域连接关联的转发策略的ID。
	TransitRouterForwardPolicyTableId pulumi.StringInput `pulumi:"transitRouterForwardPolicyTableId"`
	// 中转路由器实例的ID。
	TransitRouterId pulumi.StringInput `pulumi:"transitRouterId"`
	// 网络实例连接关联转发的路由表ID。
	TransitRouterRouteTableId pulumi.StringInput `pulumi:"transitRouterRouteTableId"`
	// 跨地域连接关联的流标记策略的ID。
	TransitRouterTrafficQosMarkingPolicyId pulumi.StringInput `pulumi:"transitRouterTrafficQosMarkingPolicyId"`
	// 跨地域连接关联的流队列策略的ID。
	TransitRouterTrafficQosQueuePolicyId pulumi.StringInput `pulumi:"transitRouterTrafficQosQueuePolicyId"`
	// 网络实例连接的最近操作时间。
	UpdateTime pulumi.StringInput `pulumi:"updateTime"`
}

func (GetTransitRouterAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterAttachment)(nil)).Elem()
}

func (i GetTransitRouterAttachmentArgs) ToGetTransitRouterAttachmentOutput() GetTransitRouterAttachmentOutput {
	return i.ToGetTransitRouterAttachmentOutputWithContext(context.Background())
}

func (i GetTransitRouterAttachmentArgs) ToGetTransitRouterAttachmentOutputWithContext(ctx context.Context) GetTransitRouterAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterAttachmentOutput)
}

// GetTransitRouterAttachmentArrayInput is an input type that accepts GetTransitRouterAttachmentArray and GetTransitRouterAttachmentArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterAttachmentArrayInput` via:
//
//	GetTransitRouterAttachmentArray{ GetTransitRouterAttachmentArgs{...} }
type GetTransitRouterAttachmentArrayInput interface {
	pulumi.Input

	ToGetTransitRouterAttachmentArrayOutput() GetTransitRouterAttachmentArrayOutput
	ToGetTransitRouterAttachmentArrayOutputWithContext(context.Context) GetTransitRouterAttachmentArrayOutput
}

type GetTransitRouterAttachmentArray []GetTransitRouterAttachmentInput

func (GetTransitRouterAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterAttachment)(nil)).Elem()
}

func (i GetTransitRouterAttachmentArray) ToGetTransitRouterAttachmentArrayOutput() GetTransitRouterAttachmentArrayOutput {
	return i.ToGetTransitRouterAttachmentArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterAttachmentArray) ToGetTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterAttachmentArrayOutput)
}

type GetTransitRouterAttachmentOutput struct{ *pulumi.OutputState }

func (GetTransitRouterAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterAttachment)(nil)).Elem()
}

func (o GetTransitRouterAttachmentOutput) ToGetTransitRouterAttachmentOutput() GetTransitRouterAttachmentOutput {
	return o
}

func (o GetTransitRouterAttachmentOutput) ToGetTransitRouterAttachmentOutputWithContext(ctx context.Context) GetTransitRouterAttachmentOutput {
	return o
}

// 网络实例连接所属的账号ID。
func (o GetTransitRouterAttachmentOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.AccountId }).(pulumi.StringOutput)
}

// 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
func (o GetTransitRouterAttachmentOutput) AutoPublishRouteEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) bool { return v.AutoPublishRouteEnabled }).(pulumi.BoolOutput)
}

// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
func (o GetTransitRouterAttachmentOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.BusinessStatus }).(pulumi.StringOutput)
}

// 网络实例连接的创建时间。
func (o GetTransitRouterAttachmentOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.CreationTime }).(pulumi.StringOutput)
}

// 网络实例连接的删除时间。
func (o GetTransitRouterAttachmentOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.DeletedTime }).(pulumi.StringOutput)
}

// 网络实例连接的描述信息。
func (o GetTransitRouterAttachmentOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.Description }).(pulumi.StringOutput)
}

// 是否开启IPv6功能。true：是。false：否。
func (o GetTransitRouterAttachmentOutput) Ipv6Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) bool { return v.Ipv6Enabled }).(pulumi.BoolOutput)
}

// 网络实例连接的欠费关停时间。
func (o GetTransitRouterAttachmentOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.OverdueTime }).(pulumi.StringOutput)
}

// 网络实例的ID。
func (o GetTransitRouterAttachmentOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.ResourceId }).(pulumi.StringOutput)
}

// 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
func (o GetTransitRouterAttachmentOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.ResourceType }).(pulumi.StringOutput)
}

// 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
func (o GetTransitRouterAttachmentOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.Status }).(pulumi.StringOutput)
}

// 网络实例连接的标签信息
func (o GetTransitRouterAttachmentOutput) Tags() GetTransitRouterAttachmentTagArrayOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) []GetTransitRouterAttachmentTag { return v.Tags }).(GetTransitRouterAttachmentTagArrayOutput)
}

// 网络实例连接的ID。
func (o GetTransitRouterAttachmentOutput) TransitRouterAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterAttachmentId }).(pulumi.StringOutput)
}

// 网络实例连接的名称。
func (o GetTransitRouterAttachmentOutput) TransitRouterAttachmentName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterAttachmentName }).(pulumi.StringOutput)
}

// 跨地域连接关联的转发策略的ID。
func (o GetTransitRouterAttachmentOutput) TransitRouterForwardPolicyTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterForwardPolicyTableId }).(pulumi.StringOutput)
}

// 中转路由器实例的ID。
func (o GetTransitRouterAttachmentOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterId }).(pulumi.StringOutput)
}

// 网络实例连接关联转发的路由表ID。
func (o GetTransitRouterAttachmentOutput) TransitRouterRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterRouteTableId }).(pulumi.StringOutput)
}

// 跨地域连接关联的流标记策略的ID。
func (o GetTransitRouterAttachmentOutput) TransitRouterTrafficQosMarkingPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterTrafficQosMarkingPolicyId }).(pulumi.StringOutput)
}

// 跨地域连接关联的流队列策略的ID。
func (o GetTransitRouterAttachmentOutput) TransitRouterTrafficQosQueuePolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.TransitRouterTrafficQosQueuePolicyId }).(pulumi.StringOutput)
}

// 网络实例连接的最近操作时间。
func (o GetTransitRouterAttachmentOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachment) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetTransitRouterAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterAttachment)(nil)).Elem()
}

func (o GetTransitRouterAttachmentArrayOutput) ToGetTransitRouterAttachmentArrayOutput() GetTransitRouterAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterAttachmentArrayOutput) ToGetTransitRouterAttachmentArrayOutputWithContext(ctx context.Context) GetTransitRouterAttachmentArrayOutput {
	return o
}

func (o GetTransitRouterAttachmentArrayOutput) Index(i pulumi.IntInput) GetTransitRouterAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterAttachment {
		return vs[0].([]GetTransitRouterAttachment)[vs[1].(int)]
	}).(GetTransitRouterAttachmentOutput)
}

type GetTransitRouterAttachmentTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetTransitRouterAttachmentTagInput is an input type that accepts GetTransitRouterAttachmentTagArgs and GetTransitRouterAttachmentTagOutput values.
// You can construct a concrete instance of `GetTransitRouterAttachmentTagInput` via:
//
//	GetTransitRouterAttachmentTagArgs{...}
type GetTransitRouterAttachmentTagInput interface {
	pulumi.Input

	ToGetTransitRouterAttachmentTagOutput() GetTransitRouterAttachmentTagOutput
	ToGetTransitRouterAttachmentTagOutputWithContext(context.Context) GetTransitRouterAttachmentTagOutput
}

type GetTransitRouterAttachmentTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTransitRouterAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterAttachmentTag)(nil)).Elem()
}

func (i GetTransitRouterAttachmentTagArgs) ToGetTransitRouterAttachmentTagOutput() GetTransitRouterAttachmentTagOutput {
	return i.ToGetTransitRouterAttachmentTagOutputWithContext(context.Background())
}

func (i GetTransitRouterAttachmentTagArgs) ToGetTransitRouterAttachmentTagOutputWithContext(ctx context.Context) GetTransitRouterAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterAttachmentTagOutput)
}

// GetTransitRouterAttachmentTagArrayInput is an input type that accepts GetTransitRouterAttachmentTagArray and GetTransitRouterAttachmentTagArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterAttachmentTagArrayInput` via:
//
//	GetTransitRouterAttachmentTagArray{ GetTransitRouterAttachmentTagArgs{...} }
type GetTransitRouterAttachmentTagArrayInput interface {
	pulumi.Input

	ToGetTransitRouterAttachmentTagArrayOutput() GetTransitRouterAttachmentTagArrayOutput
	ToGetTransitRouterAttachmentTagArrayOutputWithContext(context.Context) GetTransitRouterAttachmentTagArrayOutput
}

type GetTransitRouterAttachmentTagArray []GetTransitRouterAttachmentTagInput

func (GetTransitRouterAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterAttachmentTag)(nil)).Elem()
}

func (i GetTransitRouterAttachmentTagArray) ToGetTransitRouterAttachmentTagArrayOutput() GetTransitRouterAttachmentTagArrayOutput {
	return i.ToGetTransitRouterAttachmentTagArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterAttachmentTagArray) ToGetTransitRouterAttachmentTagArrayOutputWithContext(ctx context.Context) GetTransitRouterAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterAttachmentTagArrayOutput)
}

type GetTransitRouterAttachmentTagOutput struct{ *pulumi.OutputState }

func (GetTransitRouterAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterAttachmentTag)(nil)).Elem()
}

func (o GetTransitRouterAttachmentTagOutput) ToGetTransitRouterAttachmentTagOutput() GetTransitRouterAttachmentTagOutput {
	return o
}

func (o GetTransitRouterAttachmentTagOutput) ToGetTransitRouterAttachmentTagOutputWithContext(ctx context.Context) GetTransitRouterAttachmentTagOutput {
	return o
}

// 标签键。
func (o GetTransitRouterAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetTransitRouterAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTransitRouterAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterAttachmentTag)(nil)).Elem()
}

func (o GetTransitRouterAttachmentTagArrayOutput) ToGetTransitRouterAttachmentTagArrayOutput() GetTransitRouterAttachmentTagArrayOutput {
	return o
}

func (o GetTransitRouterAttachmentTagArrayOutput) ToGetTransitRouterAttachmentTagArrayOutputWithContext(ctx context.Context) GetTransitRouterAttachmentTagArrayOutput {
	return o
}

func (o GetTransitRouterAttachmentTagArrayOutput) Index(i pulumi.IntInput) GetTransitRouterAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterAttachmentTag {
		return vs[0].([]GetTransitRouterAttachmentTag)[vs[1].(int)]
	}).(GetTransitRouterAttachmentTagOutput)
}

type GetTransitRouterRouteTableTag struct {
	// 标签键
	Key string `pulumi:"key"`
	// 标签值
	Value string `pulumi:"value"`
}

// GetTransitRouterRouteTableTagInput is an input type that accepts GetTransitRouterRouteTableTagArgs and GetTransitRouterRouteTableTagOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTableTagInput` via:
//
//	GetTransitRouterRouteTableTagArgs{...}
type GetTransitRouterRouteTableTagInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTableTagOutput() GetTransitRouterRouteTableTagOutput
	ToGetTransitRouterRouteTableTagOutputWithContext(context.Context) GetTransitRouterRouteTableTagOutput
}

type GetTransitRouterRouteTableTagArgs struct {
	// 标签键
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTransitRouterRouteTableTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTableTag)(nil)).Elem()
}

func (i GetTransitRouterRouteTableTagArgs) ToGetTransitRouterRouteTableTagOutput() GetTransitRouterRouteTableTagOutput {
	return i.ToGetTransitRouterRouteTableTagOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTableTagArgs) ToGetTransitRouterRouteTableTagOutputWithContext(ctx context.Context) GetTransitRouterRouteTableTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTableTagOutput)
}

// GetTransitRouterRouteTableTagArrayInput is an input type that accepts GetTransitRouterRouteTableTagArray and GetTransitRouterRouteTableTagArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterRouteTableTagArrayInput` via:
//
//	GetTransitRouterRouteTableTagArray{ GetTransitRouterRouteTableTagArgs{...} }
type GetTransitRouterRouteTableTagArrayInput interface {
	pulumi.Input

	ToGetTransitRouterRouteTableTagArrayOutput() GetTransitRouterRouteTableTagArrayOutput
	ToGetTransitRouterRouteTableTagArrayOutputWithContext(context.Context) GetTransitRouterRouteTableTagArrayOutput
}

type GetTransitRouterRouteTableTagArray []GetTransitRouterRouteTableTagInput

func (GetTransitRouterRouteTableTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTableTag)(nil)).Elem()
}

func (i GetTransitRouterRouteTableTagArray) ToGetTransitRouterRouteTableTagArrayOutput() GetTransitRouterRouteTableTagArrayOutput {
	return i.ToGetTransitRouterRouteTableTagArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterRouteTableTagArray) ToGetTransitRouterRouteTableTagArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTableTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterRouteTableTagArrayOutput)
}

type GetTransitRouterRouteTableTagOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTableTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterRouteTableTag)(nil)).Elem()
}

func (o GetTransitRouterRouteTableTagOutput) ToGetTransitRouterRouteTableTagOutput() GetTransitRouterRouteTableTagOutput {
	return o
}

func (o GetTransitRouterRouteTableTagOutput) ToGetTransitRouterRouteTableTagOutputWithContext(ctx context.Context) GetTransitRouterRouteTableTagOutput {
	return o
}

// 标签键
func (o GetTransitRouterRouteTableTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值
func (o GetTransitRouterRouteTableTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterRouteTableTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTransitRouterRouteTableTagArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterRouteTableTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterRouteTableTag)(nil)).Elem()
}

func (o GetTransitRouterRouteTableTagArrayOutput) ToGetTransitRouterRouteTableTagArrayOutput() GetTransitRouterRouteTableTagArrayOutput {
	return o
}

func (o GetTransitRouterRouteTableTagArrayOutput) ToGetTransitRouterRouteTableTagArrayOutputWithContext(ctx context.Context) GetTransitRouterRouteTableTagArrayOutput {
	return o
}

func (o GetTransitRouterRouteTableTagArrayOutput) Index(i pulumi.IntInput) GetTransitRouterRouteTableTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterRouteTableTag {
		return vs[0].([]GetTransitRouterRouteTableTag)[vs[1].(int)]
	}).(GetTransitRouterRouteTableTagOutput)
}

type GetTransitRouterTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetTransitRouterTagInput is an input type that accepts GetTransitRouterTagArgs and GetTransitRouterTagOutput values.
// You can construct a concrete instance of `GetTransitRouterTagInput` via:
//
//	GetTransitRouterTagArgs{...}
type GetTransitRouterTagInput interface {
	pulumi.Input

	ToGetTransitRouterTagOutput() GetTransitRouterTagOutput
	ToGetTransitRouterTagOutputWithContext(context.Context) GetTransitRouterTagOutput
}

type GetTransitRouterTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTransitRouterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterTag)(nil)).Elem()
}

func (i GetTransitRouterTagArgs) ToGetTransitRouterTagOutput() GetTransitRouterTagOutput {
	return i.ToGetTransitRouterTagOutputWithContext(context.Background())
}

func (i GetTransitRouterTagArgs) ToGetTransitRouterTagOutputWithContext(ctx context.Context) GetTransitRouterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterTagOutput)
}

// GetTransitRouterTagArrayInput is an input type that accepts GetTransitRouterTagArray and GetTransitRouterTagArrayOutput values.
// You can construct a concrete instance of `GetTransitRouterTagArrayInput` via:
//
//	GetTransitRouterTagArray{ GetTransitRouterTagArgs{...} }
type GetTransitRouterTagArrayInput interface {
	pulumi.Input

	ToGetTransitRouterTagArrayOutput() GetTransitRouterTagArrayOutput
	ToGetTransitRouterTagArrayOutputWithContext(context.Context) GetTransitRouterTagArrayOutput
}

type GetTransitRouterTagArray []GetTransitRouterTagInput

func (GetTransitRouterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterTag)(nil)).Elem()
}

func (i GetTransitRouterTagArray) ToGetTransitRouterTagArrayOutput() GetTransitRouterTagArrayOutput {
	return i.ToGetTransitRouterTagArrayOutputWithContext(context.Background())
}

func (i GetTransitRouterTagArray) ToGetTransitRouterTagArrayOutputWithContext(ctx context.Context) GetTransitRouterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTransitRouterTagArrayOutput)
}

type GetTransitRouterTagOutput struct{ *pulumi.OutputState }

func (GetTransitRouterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTransitRouterTag)(nil)).Elem()
}

func (o GetTransitRouterTagOutput) ToGetTransitRouterTagOutput() GetTransitRouterTagOutput {
	return o
}

func (o GetTransitRouterTagOutput) ToGetTransitRouterTagOutputWithContext(ctx context.Context) GetTransitRouterTagOutput {
	return o
}

// 标签键。
func (o GetTransitRouterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetTransitRouterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTransitRouterTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetTransitRouterTagArrayOutput struct{ *pulumi.OutputState }

func (GetTransitRouterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTransitRouterTag)(nil)).Elem()
}

func (o GetTransitRouterTagArrayOutput) ToGetTransitRouterTagArrayOutput() GetTransitRouterTagArrayOutput {
	return o
}

func (o GetTransitRouterTagArrayOutput) ToGetTransitRouterTagArrayOutputWithContext(ctx context.Context) GetTransitRouterTagArrayOutput {
	return o
}

func (o GetTransitRouterTagArrayOutput) Index(i pulumi.IntInput) GetTransitRouterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTransitRouterTag {
		return vs[0].([]GetTransitRouterTag)[vs[1].(int)]
	}).(GetTransitRouterTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterAttachmentInput)(nil)).Elem(), TransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterAttachmentArrayInput)(nil)).Elem(), TransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterAttachmentTagInput)(nil)).Elem(), TransitRouterAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterAttachmentTagArrayInput)(nil)).Elem(), TransitRouterAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterRouteTableTagInput)(nil)).Elem(), TransitRouterRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterRouteTableTagArrayInput)(nil)).Elem(), TransitRouterRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTagInput)(nil)).Elem(), TransitRouterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterTagArrayInput)(nil)).Elem(), TransitRouterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterAttachmentInput)(nil)).Elem(), GetTransitRouterAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterAttachmentArrayInput)(nil)).Elem(), GetTransitRouterAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterAttachmentTagInput)(nil)).Elem(), GetTransitRouterAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterAttachmentTagArrayInput)(nil)).Elem(), GetTransitRouterAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTableTagInput)(nil)).Elem(), GetTransitRouterRouteTableTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterRouteTableTagArrayInput)(nil)).Elem(), GetTransitRouterRouteTableTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterTagInput)(nil)).Elem(), GetTransitRouterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTransitRouterTagArrayInput)(nil)).Elem(), GetTransitRouterTagArray{})
	pulumi.RegisterOutputType(TransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(TransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterAttachmentTagOutput{})
	pulumi.RegisterOutputType(TransitRouterAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterRouteTableTagOutput{})
	pulumi.RegisterOutputType(TransitRouterRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterTagOutput{})
	pulumi.RegisterOutputType(TransitRouterTagArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterAttachmentOutput{})
	pulumi.RegisterOutputType(GetTransitRouterAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterAttachmentTagOutput{})
	pulumi.RegisterOutputType(GetTransitRouterAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTableTagOutput{})
	pulumi.RegisterOutputType(GetTransitRouterRouteTableTagArrayOutput{})
	pulumi.RegisterOutputType(GetTransitRouterTagOutput{})
	pulumi.RegisterOutputType(GetTransitRouterTagArrayOutput{})
}
