// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package transitrouter

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 中转路由器服务的运行载体。接受来自网络实例的流量，并根据关联转发路由表进行转发。
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/transitrouter"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := transitrouter.NewTransitRouter(ctx, "TransitRouterDemo", &transitrouter.TransitRouterArgs{
//				TransitRouterName: pulumi.String("TransitRouterDemo"),
//				Asn:               pulumi.Int(4200001111),
//				Description:       pulumi.String("TransitRouterDemo"),
//				ProjectName:       pulumi.String("default"),
//				Tags: transitrouter.TransitRouterTagArray{
//					&transitrouter.TransitRouterTagArgs{
//						Key:   pulumi.String("env"),
//						Value: pulumi.String("test"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:transitrouter/transitRouter:TransitRouter example "transit_router_id"
// ```
type TransitRouter struct {
	pulumi.CustomResourceState

	// 网络实例连接所属的账号ID。
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
	Asn         pulumi.IntOutput                   `pulumi:"asn"`
	Attachments TransitRouterAttachmentArrayOutput `pulumi:"attachments"`
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus pulumi.StringOutput `pulumi:"businessStatus"`
	// 网络实例连接的创建时间。
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// 网络实例连接的删除时间。
	DeletedTime pulumi.StringOutput `pulumi:"deletedTime"`
	// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
	Description pulumi.StringOutput `pulumi:"description"`
	// 实例共享的状态。Accepted：已接受。Initial：待接受。
	GrantStatus pulumi.StringOutput `pulumi:"grantStatus"`
	// 中转路由器实例的欠费关停时间。
	OverdueTime pulumi.StringOutput `pulumi:"overdueTime"`
	// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status pulumi.StringOutput         `pulumi:"status"`
	Tags   TransitRouterTagArrayOutput `pulumi:"tags"`
	// 中转路由器实例的ID。
	TransitRouterId pulumi.StringOutput `pulumi:"transitRouterId"`
	// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
	TransitRouterName pulumi.StringOutput `pulumi:"transitRouterName"`
	// 中转路由器实例的最近操作时间。
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewTransitRouter registers a new resource with the given unique name, arguments, and options.
func NewTransitRouter(ctx *pulumi.Context,
	name string, args *TransitRouterArgs, opts ...pulumi.ResourceOption) (*TransitRouter, error) {
	if args == nil {
		args = &TransitRouterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitRouter
	err := ctx.RegisterResource("volcenginecc:transitrouter/transitRouter:TransitRouter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitRouter gets an existing TransitRouter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitRouter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitRouterState, opts ...pulumi.ResourceOption) (*TransitRouter, error) {
	var resource TransitRouter
	err := ctx.ReadResource("volcenginecc:transitrouter/transitRouter:TransitRouter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitRouter resources.
type transitRouterState struct {
	// 网络实例连接所属的账号ID。
	AccountId *string `pulumi:"accountId"`
	// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
	Asn         *int                      `pulumi:"asn"`
	Attachments []TransitRouterAttachment `pulumi:"attachments"`
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus *string `pulumi:"businessStatus"`
	// 网络实例连接的创建时间。
	CreationTime *string `pulumi:"creationTime"`
	// 网络实例连接的删除时间。
	DeletedTime *string `pulumi:"deletedTime"`
	// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
	Description *string `pulumi:"description"`
	// 实例共享的状态。Accepted：已接受。Initial：待接受。
	GrantStatus *string `pulumi:"grantStatus"`
	// 中转路由器实例的欠费关停时间。
	OverdueTime *string `pulumi:"overdueTime"`
	// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
	ProjectName *string `pulumi:"projectName"`
	// 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status *string            `pulumi:"status"`
	Tags   []TransitRouterTag `pulumi:"tags"`
	// 中转路由器实例的ID。
	TransitRouterId *string `pulumi:"transitRouterId"`
	// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
	TransitRouterName *string `pulumi:"transitRouterName"`
	// 中转路由器实例的最近操作时间。
	UpdateTime *string `pulumi:"updateTime"`
}

type TransitRouterState struct {
	// 网络实例连接所属的账号ID。
	AccountId pulumi.StringPtrInput
	// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
	Asn         pulumi.IntPtrInput
	Attachments TransitRouterAttachmentArrayInput
	// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
	BusinessStatus pulumi.StringPtrInput
	// 网络实例连接的创建时间。
	CreationTime pulumi.StringPtrInput
	// 网络实例连接的删除时间。
	DeletedTime pulumi.StringPtrInput
	// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
	Description pulumi.StringPtrInput
	// 实例共享的状态。Accepted：已接受。Initial：待接受。
	GrantStatus pulumi.StringPtrInput
	// 中转路由器实例的欠费关停时间。
	OverdueTime pulumi.StringPtrInput
	// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
	ProjectName pulumi.StringPtrInput
	// 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
	Status pulumi.StringPtrInput
	Tags   TransitRouterTagArrayInput
	// 中转路由器实例的ID。
	TransitRouterId pulumi.StringPtrInput
	// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
	TransitRouterName pulumi.StringPtrInput
	// 中转路由器实例的最近操作时间。
	UpdateTime pulumi.StringPtrInput
}

func (TransitRouterState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterState)(nil)).Elem()
}

type transitRouterArgs struct {
	// 网络实例连接所属的账号ID。
	AccountId *string `pulumi:"accountId"`
	// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
	Asn *int `pulumi:"asn"`
	// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
	Description *string `pulumi:"description"`
	// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
	ProjectName *string            `pulumi:"projectName"`
	Tags        []TransitRouterTag `pulumi:"tags"`
	// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
	TransitRouterName *string `pulumi:"transitRouterName"`
}

// The set of arguments for constructing a TransitRouter resource.
type TransitRouterArgs struct {
	// 网络实例连接所属的账号ID。
	AccountId pulumi.StringPtrInput
	// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
	Asn pulumi.IntPtrInput
	// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
	Description pulumi.StringPtrInput
	// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
	ProjectName pulumi.StringPtrInput
	Tags        TransitRouterTagArrayInput
	// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
	TransitRouterName pulumi.StringPtrInput
}

func (TransitRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitRouterArgs)(nil)).Elem()
}

type TransitRouterInput interface {
	pulumi.Input

	ToTransitRouterOutput() TransitRouterOutput
	ToTransitRouterOutputWithContext(ctx context.Context) TransitRouterOutput
}

func (*TransitRouter) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouter)(nil)).Elem()
}

func (i *TransitRouter) ToTransitRouterOutput() TransitRouterOutput {
	return i.ToTransitRouterOutputWithContext(context.Background())
}

func (i *TransitRouter) ToTransitRouterOutputWithContext(ctx context.Context) TransitRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterOutput)
}

// TransitRouterArrayInput is an input type that accepts TransitRouterArray and TransitRouterArrayOutput values.
// You can construct a concrete instance of `TransitRouterArrayInput` via:
//
//	TransitRouterArray{ TransitRouterArgs{...} }
type TransitRouterArrayInput interface {
	pulumi.Input

	ToTransitRouterArrayOutput() TransitRouterArrayOutput
	ToTransitRouterArrayOutputWithContext(context.Context) TransitRouterArrayOutput
}

type TransitRouterArray []TransitRouterInput

func (TransitRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouter)(nil)).Elem()
}

func (i TransitRouterArray) ToTransitRouterArrayOutput() TransitRouterArrayOutput {
	return i.ToTransitRouterArrayOutputWithContext(context.Background())
}

func (i TransitRouterArray) ToTransitRouterArrayOutputWithContext(ctx context.Context) TransitRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterArrayOutput)
}

// TransitRouterMapInput is an input type that accepts TransitRouterMap and TransitRouterMapOutput values.
// You can construct a concrete instance of `TransitRouterMapInput` via:
//
//	TransitRouterMap{ "key": TransitRouterArgs{...} }
type TransitRouterMapInput interface {
	pulumi.Input

	ToTransitRouterMapOutput() TransitRouterMapOutput
	ToTransitRouterMapOutputWithContext(context.Context) TransitRouterMapOutput
}

type TransitRouterMap map[string]TransitRouterInput

func (TransitRouterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouter)(nil)).Elem()
}

func (i TransitRouterMap) ToTransitRouterMapOutput() TransitRouterMapOutput {
	return i.ToTransitRouterMapOutputWithContext(context.Background())
}

func (i TransitRouterMap) ToTransitRouterMapOutputWithContext(ctx context.Context) TransitRouterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitRouterMapOutput)
}

type TransitRouterOutput struct{ *pulumi.OutputState }

func (TransitRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitRouter)(nil)).Elem()
}

func (o TransitRouterOutput) ToTransitRouterOutput() TransitRouterOutput {
	return o
}

func (o TransitRouterOutput) ToTransitRouterOutputWithContext(ctx context.Context) TransitRouterOutput {
	return o
}

// 网络实例连接所属的账号ID。
func (o TransitRouterOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
func (o TransitRouterOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.IntOutput { return v.Asn }).(pulumi.IntOutput)
}

func (o TransitRouterOutput) Attachments() TransitRouterAttachmentArrayOutput {
	return o.ApplyT(func(v *TransitRouter) TransitRouterAttachmentArrayOutput { return v.Attachments }).(TransitRouterAttachmentArrayOutput)
}

// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
func (o TransitRouterOutput) BusinessStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.BusinessStatus }).(pulumi.StringOutput)
}

// 网络实例连接的创建时间。
func (o TransitRouterOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// 网络实例连接的删除时间。
func (o TransitRouterOutput) DeletedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.DeletedTime }).(pulumi.StringOutput)
}

// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
func (o TransitRouterOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// 实例共享的状态。Accepted：已接受。Initial：待接受。
func (o TransitRouterOutput) GrantStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.GrantStatus }).(pulumi.StringOutput)
}

// 中转路由器实例的欠费关停时间。
func (o TransitRouterOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.OverdueTime }).(pulumi.StringOutput)
}

// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
func (o TransitRouterOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
func (o TransitRouterOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o TransitRouterOutput) Tags() TransitRouterTagArrayOutput {
	return o.ApplyT(func(v *TransitRouter) TransitRouterTagArrayOutput { return v.Tags }).(TransitRouterTagArrayOutput)
}

// 中转路由器实例的ID。
func (o TransitRouterOutput) TransitRouterId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.TransitRouterId }).(pulumi.StringOutput)
}

// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
func (o TransitRouterOutput) TransitRouterName() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.TransitRouterName }).(pulumi.StringOutput)
}

// 中转路由器实例的最近操作时间。
func (o TransitRouterOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitRouter) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

type TransitRouterArrayOutput struct{ *pulumi.OutputState }

func (TransitRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TransitRouter)(nil)).Elem()
}

func (o TransitRouterArrayOutput) ToTransitRouterArrayOutput() TransitRouterArrayOutput {
	return o
}

func (o TransitRouterArrayOutput) ToTransitRouterArrayOutputWithContext(ctx context.Context) TransitRouterArrayOutput {
	return o
}

func (o TransitRouterArrayOutput) Index(i pulumi.IntInput) TransitRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TransitRouter {
		return vs[0].([]*TransitRouter)[vs[1].(int)]
	}).(TransitRouterOutput)
}

type TransitRouterMapOutput struct{ *pulumi.OutputState }

func (TransitRouterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TransitRouter)(nil)).Elem()
}

func (o TransitRouterMapOutput) ToTransitRouterMapOutput() TransitRouterMapOutput {
	return o
}

func (o TransitRouterMapOutput) ToTransitRouterMapOutputWithContext(ctx context.Context) TransitRouterMapOutput {
	return o
}

func (o TransitRouterMapOutput) MapIndex(k pulumi.StringInput) TransitRouterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TransitRouter {
		return vs[0].(map[string]*TransitRouter)[vs[1].(string)]
	}).(TransitRouterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterInput)(nil)).Elem(), &TransitRouter{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterArrayInput)(nil)).Elem(), TransitRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitRouterMapInput)(nil)).Elem(), TransitRouterMap{})
	pulumi.RegisterOutputType(TransitRouterOutput{})
	pulumi.RegisterOutputType(TransitRouterArrayOutput{})
	pulumi.RegisterOutputType(TransitRouterMapOutput{})
}
