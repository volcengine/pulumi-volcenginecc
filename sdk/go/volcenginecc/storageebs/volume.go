// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package storageebs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 云盘是高可用、高可靠、高性能、弹性扩展的块存储设备，可以作为云服务器和弹性容器服务的可扩展硬盘使用。
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/storageebs"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := storageebs.NewVolume(ctx, "VolumeDemo", &storageebs.VolumeArgs{
//				VolumeName: pulumi.String("EBS-VolumeDemo"),
//				VolumeType: pulumi.String("ESSD_PL0"),
//				Size:       pulumi.Float64(10),
//				ZoneId:     pulumi.String("cn-beijing-x"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:storageebs/volume:Volume example "volume_id"
// ```
type Volume struct {
	pulumi.CustomResourceState

	// 自动快照策略ID。
	AutoSnapshotPolicyId pulumi.StringOutput `pulumi:"autoSnapshotPolicyId"`
	// 自动快照策略名称。
	AutoSnapshotPolicyName pulumi.StringOutput `pulumi:"autoSnapshotPolicyName"`
	// 基本性能。
	BaselinePerformance VolumeBaselinePerformanceOutput `pulumi:"baselinePerformance"`
	// 云盘创建时间。
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
	DeleteWithInstance pulumi.BoolOutput `pulumi:"deleteWithInstance"`
	// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
	Description pulumi.StringOutput `pulumi:"description"`
	// 设备名称
	DeviceName pulumi.StringOutput `pulumi:"deviceName"`
	// 具体错误
	ErrorDetail pulumi.StringOutput `pulumi:"errorDetail"`
	// 包年包月到期时间。
	ExpiredTime pulumi.StringOutput `pulumi:"expiredTime"`
	// 额外性能。
	ExtraPerformance VolumeExtraPerformanceOutput `pulumi:"extraPerformance"`
	// 云盘中的镜像ID。
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// 创建云盘的同时挂载的ECS实例ID。
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
	Kind pulumi.StringOutput `pulumi:"kind"`
	// 云盘欠费回收时间。
	OverdueReclaimTime pulumi.StringOutput `pulumi:"overdueReclaimTime"`
	// 云盘欠费关停时间。
	OverdueTime pulumi.StringOutput `pulumi:"overdueTime"`
	// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
	PayType pulumi.StringOutput `pulumi:"payType"`
	// 云盘所要加入的Project（项目）名称。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
	RenewType pulumi.Float64Output `pulumi:"renewType"`
	// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
	Size pulumi.Float64Output `pulumi:"size"`
	// 快照计数
	SnapshotCount pulumi.Float64Output `pulumi:"snapshotCount"`
	// 源快照。
	SourceSnapshotId pulumi.StringOutput `pulumi:"sourceSnapshotId"`
	// 云盘状态
	Status pulumi.StringOutput  `pulumi:"status"`
	Tags   VolumeTagArrayOutput `pulumi:"tags"`
	// 总性能。
	TotalPerformance VolumeTotalPerformanceOutput `pulumi:"totalPerformance"`
	// 交易状态 0：创建中 1：运行中 2：创建失败
	TradeStatus pulumi.Float64Output `pulumi:"tradeStatus"`
	// 云盘更新时间。
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// 云盘id。
	VolumeId pulumi.StringOutput `pulumi:"volumeId"`
	// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
	VolumeName pulumi.StringOutput `pulumi:"volumeName"`
	// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
	VolumeType pulumi.StringOutput `pulumi:"volumeType"`
	// 可用区ID。
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewVolume registers a new resource with the given unique name, arguments, and options.
func NewVolume(ctx *pulumi.Context,
	name string, args *VolumeArgs, opts ...pulumi.ResourceOption) (*Volume, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Size == nil {
		return nil, errors.New("invalid value for required argument 'Size'")
	}
	if args.VolumeName == nil {
		return nil, errors.New("invalid value for required argument 'VolumeName'")
	}
	if args.VolumeType == nil {
		return nil, errors.New("invalid value for required argument 'VolumeType'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Volume
	err := ctx.RegisterResource("volcenginecc:storageebs/volume:Volume", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVolume gets an existing Volume resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVolume(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VolumeState, opts ...pulumi.ResourceOption) (*Volume, error) {
	var resource Volume
	err := ctx.ReadResource("volcenginecc:storageebs/volume:Volume", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Volume resources.
type volumeState struct {
	// 自动快照策略ID。
	AutoSnapshotPolicyId *string `pulumi:"autoSnapshotPolicyId"`
	// 自动快照策略名称。
	AutoSnapshotPolicyName *string `pulumi:"autoSnapshotPolicyName"`
	// 基本性能。
	BaselinePerformance *VolumeBaselinePerformance `pulumi:"baselinePerformance"`
	// 云盘创建时间。
	CreatedAt *string `pulumi:"createdAt"`
	// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
	Description *string `pulumi:"description"`
	// 设备名称
	DeviceName *string `pulumi:"deviceName"`
	// 具体错误
	ErrorDetail *string `pulumi:"errorDetail"`
	// 包年包月到期时间。
	ExpiredTime *string `pulumi:"expiredTime"`
	// 额外性能。
	ExtraPerformance *VolumeExtraPerformance `pulumi:"extraPerformance"`
	// 云盘中的镜像ID。
	ImageId *string `pulumi:"imageId"`
	// 创建云盘的同时挂载的ECS实例ID。
	InstanceId *string `pulumi:"instanceId"`
	// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
	Kind *string `pulumi:"kind"`
	// 云盘欠费回收时间。
	OverdueReclaimTime *string `pulumi:"overdueReclaimTime"`
	// 云盘欠费关停时间。
	OverdueTime *string `pulumi:"overdueTime"`
	// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
	PayType *string `pulumi:"payType"`
	// 云盘所要加入的Project（项目）名称。
	ProjectName *string `pulumi:"projectName"`
	// 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
	RenewType *float64 `pulumi:"renewType"`
	// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
	Size *float64 `pulumi:"size"`
	// 快照计数
	SnapshotCount *float64 `pulumi:"snapshotCount"`
	// 源快照。
	SourceSnapshotId *string `pulumi:"sourceSnapshotId"`
	// 云盘状态
	Status *string     `pulumi:"status"`
	Tags   []VolumeTag `pulumi:"tags"`
	// 总性能。
	TotalPerformance *VolumeTotalPerformance `pulumi:"totalPerformance"`
	// 交易状态 0：创建中 1：运行中 2：创建失败
	TradeStatus *float64 `pulumi:"tradeStatus"`
	// 云盘更新时间。
	UpdatedAt *string `pulumi:"updatedAt"`
	// 云盘id。
	VolumeId *string `pulumi:"volumeId"`
	// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
	VolumeName *string `pulumi:"volumeName"`
	// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
	VolumeType *string `pulumi:"volumeType"`
	// 可用区ID。
	ZoneId *string `pulumi:"zoneId"`
}

type VolumeState struct {
	// 自动快照策略ID。
	AutoSnapshotPolicyId pulumi.StringPtrInput
	// 自动快照策略名称。
	AutoSnapshotPolicyName pulumi.StringPtrInput
	// 基本性能。
	BaselinePerformance VolumeBaselinePerformancePtrInput
	// 云盘创建时间。
	CreatedAt pulumi.StringPtrInput
	// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
	DeleteWithInstance pulumi.BoolPtrInput
	// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
	Description pulumi.StringPtrInput
	// 设备名称
	DeviceName pulumi.StringPtrInput
	// 具体错误
	ErrorDetail pulumi.StringPtrInput
	// 包年包月到期时间。
	ExpiredTime pulumi.StringPtrInput
	// 额外性能。
	ExtraPerformance VolumeExtraPerformancePtrInput
	// 云盘中的镜像ID。
	ImageId pulumi.StringPtrInput
	// 创建云盘的同时挂载的ECS实例ID。
	InstanceId pulumi.StringPtrInput
	// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
	Kind pulumi.StringPtrInput
	// 云盘欠费回收时间。
	OverdueReclaimTime pulumi.StringPtrInput
	// 云盘欠费关停时间。
	OverdueTime pulumi.StringPtrInput
	// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
	PayType pulumi.StringPtrInput
	// 云盘所要加入的Project（项目）名称。
	ProjectName pulumi.StringPtrInput
	// 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
	RenewType pulumi.Float64PtrInput
	// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
	Size pulumi.Float64PtrInput
	// 快照计数
	SnapshotCount pulumi.Float64PtrInput
	// 源快照。
	SourceSnapshotId pulumi.StringPtrInput
	// 云盘状态
	Status pulumi.StringPtrInput
	Tags   VolumeTagArrayInput
	// 总性能。
	TotalPerformance VolumeTotalPerformancePtrInput
	// 交易状态 0：创建中 1：运行中 2：创建失败
	TradeStatus pulumi.Float64PtrInput
	// 云盘更新时间。
	UpdatedAt pulumi.StringPtrInput
	// 云盘id。
	VolumeId pulumi.StringPtrInput
	// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
	VolumeName pulumi.StringPtrInput
	// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
	VolumeType pulumi.StringPtrInput
	// 可用区ID。
	ZoneId pulumi.StringPtrInput
}

func (VolumeState) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeState)(nil)).Elem()
}

type volumeArgs struct {
	// 自动快照策略ID。
	AutoSnapshotPolicyId *string `pulumi:"autoSnapshotPolicyId"`
	// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
	Description *string `pulumi:"description"`
	// 额外性能。
	ExtraPerformance *VolumeExtraPerformance `pulumi:"extraPerformance"`
	// 创建云盘的同时挂载的ECS实例ID。
	InstanceId *string `pulumi:"instanceId"`
	// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
	Kind *string `pulumi:"kind"`
	// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
	PayType *string `pulumi:"payType"`
	// 云盘所要加入的Project（项目）名称。
	ProjectName *string `pulumi:"projectName"`
	// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
	Size float64 `pulumi:"size"`
	// 源快照。
	SourceSnapshotId *string     `pulumi:"sourceSnapshotId"`
	Tags             []VolumeTag `pulumi:"tags"`
	// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
	VolumeName string `pulumi:"volumeName"`
	// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
	VolumeType string `pulumi:"volumeType"`
	// 可用区ID。
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a Volume resource.
type VolumeArgs struct {
	// 自动快照策略ID。
	AutoSnapshotPolicyId pulumi.StringPtrInput
	// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
	DeleteWithInstance pulumi.BoolPtrInput
	// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
	Description pulumi.StringPtrInput
	// 额外性能。
	ExtraPerformance VolumeExtraPerformancePtrInput
	// 创建云盘的同时挂载的ECS实例ID。
	InstanceId pulumi.StringPtrInput
	// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
	Kind pulumi.StringPtrInput
	// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
	PayType pulumi.StringPtrInput
	// 云盘所要加入的Project（项目）名称。
	ProjectName pulumi.StringPtrInput
	// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
	Size pulumi.Float64Input
	// 源快照。
	SourceSnapshotId pulumi.StringPtrInput
	Tags             VolumeTagArrayInput
	// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
	VolumeName pulumi.StringInput
	// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
	VolumeType pulumi.StringInput
	// 可用区ID。
	ZoneId pulumi.StringInput
}

func (VolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*volumeArgs)(nil)).Elem()
}

type VolumeInput interface {
	pulumi.Input

	ToVolumeOutput() VolumeOutput
	ToVolumeOutputWithContext(ctx context.Context) VolumeOutput
}

func (*Volume) ElementType() reflect.Type {
	return reflect.TypeOf((**Volume)(nil)).Elem()
}

func (i *Volume) ToVolumeOutput() VolumeOutput {
	return i.ToVolumeOutputWithContext(context.Background())
}

func (i *Volume) ToVolumeOutputWithContext(ctx context.Context) VolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeOutput)
}

// VolumeArrayInput is an input type that accepts VolumeArray and VolumeArrayOutput values.
// You can construct a concrete instance of `VolumeArrayInput` via:
//
//	VolumeArray{ VolumeArgs{...} }
type VolumeArrayInput interface {
	pulumi.Input

	ToVolumeArrayOutput() VolumeArrayOutput
	ToVolumeArrayOutputWithContext(context.Context) VolumeArrayOutput
}

type VolumeArray []VolumeInput

func (VolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Volume)(nil)).Elem()
}

func (i VolumeArray) ToVolumeArrayOutput() VolumeArrayOutput {
	return i.ToVolumeArrayOutputWithContext(context.Background())
}

func (i VolumeArray) ToVolumeArrayOutputWithContext(ctx context.Context) VolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeArrayOutput)
}

// VolumeMapInput is an input type that accepts VolumeMap and VolumeMapOutput values.
// You can construct a concrete instance of `VolumeMapInput` via:
//
//	VolumeMap{ "key": VolumeArgs{...} }
type VolumeMapInput interface {
	pulumi.Input

	ToVolumeMapOutput() VolumeMapOutput
	ToVolumeMapOutputWithContext(context.Context) VolumeMapOutput
}

type VolumeMap map[string]VolumeInput

func (VolumeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Volume)(nil)).Elem()
}

func (i VolumeMap) ToVolumeMapOutput() VolumeMapOutput {
	return i.ToVolumeMapOutputWithContext(context.Background())
}

func (i VolumeMap) ToVolumeMapOutputWithContext(ctx context.Context) VolumeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VolumeMapOutput)
}

type VolumeOutput struct{ *pulumi.OutputState }

func (VolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Volume)(nil)).Elem()
}

func (o VolumeOutput) ToVolumeOutput() VolumeOutput {
	return o
}

func (o VolumeOutput) ToVolumeOutputWithContext(ctx context.Context) VolumeOutput {
	return o
}

// 自动快照策略ID。
func (o VolumeOutput) AutoSnapshotPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.AutoSnapshotPolicyId }).(pulumi.StringOutput)
}

// 自动快照策略名称。
func (o VolumeOutput) AutoSnapshotPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.AutoSnapshotPolicyName }).(pulumi.StringOutput)
}

// 基本性能。
func (o VolumeOutput) BaselinePerformance() VolumeBaselinePerformanceOutput {
	return o.ApplyT(func(v *Volume) VolumeBaselinePerformanceOutput { return v.BaselinePerformance }).(VolumeBaselinePerformanceOutput)
}

// 云盘创建时间。
func (o VolumeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
func (o VolumeOutput) DeleteWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v *Volume) pulumi.BoolOutput { return v.DeleteWithInstance }).(pulumi.BoolOutput)
}

// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
func (o VolumeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// 设备名称
func (o VolumeOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.DeviceName }).(pulumi.StringOutput)
}

// 具体错误
func (o VolumeOutput) ErrorDetail() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.ErrorDetail }).(pulumi.StringOutput)
}

// 包年包月到期时间。
func (o VolumeOutput) ExpiredTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.ExpiredTime }).(pulumi.StringOutput)
}

// 额外性能。
func (o VolumeOutput) ExtraPerformance() VolumeExtraPerformanceOutput {
	return o.ApplyT(func(v *Volume) VolumeExtraPerformanceOutput { return v.ExtraPerformance }).(VolumeExtraPerformanceOutput)
}

// 云盘中的镜像ID。
func (o VolumeOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// 创建云盘的同时挂载的ECS实例ID。
func (o VolumeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
func (o VolumeOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// 云盘欠费回收时间。
func (o VolumeOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// 云盘欠费关停时间。
func (o VolumeOutput) OverdueTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.OverdueTime }).(pulumi.StringOutput)
}

// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
func (o VolumeOutput) PayType() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.PayType }).(pulumi.StringOutput)
}

// 云盘所要加入的Project（项目）名称。
func (o VolumeOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
func (o VolumeOutput) RenewType() pulumi.Float64Output {
	return o.ApplyT(func(v *Volume) pulumi.Float64Output { return v.RenewType }).(pulumi.Float64Output)
}

// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
func (o VolumeOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v *Volume) pulumi.Float64Output { return v.Size }).(pulumi.Float64Output)
}

// 快照计数
func (o VolumeOutput) SnapshotCount() pulumi.Float64Output {
	return o.ApplyT(func(v *Volume) pulumi.Float64Output { return v.SnapshotCount }).(pulumi.Float64Output)
}

// 源快照。
func (o VolumeOutput) SourceSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.SourceSnapshotId }).(pulumi.StringOutput)
}

// 云盘状态
func (o VolumeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o VolumeOutput) Tags() VolumeTagArrayOutput {
	return o.ApplyT(func(v *Volume) VolumeTagArrayOutput { return v.Tags }).(VolumeTagArrayOutput)
}

// 总性能。
func (o VolumeOutput) TotalPerformance() VolumeTotalPerformanceOutput {
	return o.ApplyT(func(v *Volume) VolumeTotalPerformanceOutput { return v.TotalPerformance }).(VolumeTotalPerformanceOutput)
}

// 交易状态 0：创建中 1：运行中 2：创建失败
func (o VolumeOutput) TradeStatus() pulumi.Float64Output {
	return o.ApplyT(func(v *Volume) pulumi.Float64Output { return v.TradeStatus }).(pulumi.Float64Output)
}

// 云盘更新时间。
func (o VolumeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// 云盘id。
func (o VolumeOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.VolumeId }).(pulumi.StringOutput)
}

// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
func (o VolumeOutput) VolumeName() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.VolumeName }).(pulumi.StringOutput)
}

// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
func (o VolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.VolumeType }).(pulumi.StringOutput)
}

// 可用区ID。
func (o VolumeOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Volume) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type VolumeArrayOutput struct{ *pulumi.OutputState }

func (VolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Volume)(nil)).Elem()
}

func (o VolumeArrayOutput) ToVolumeArrayOutput() VolumeArrayOutput {
	return o
}

func (o VolumeArrayOutput) ToVolumeArrayOutputWithContext(ctx context.Context) VolumeArrayOutput {
	return o
}

func (o VolumeArrayOutput) Index(i pulumi.IntInput) VolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Volume {
		return vs[0].([]*Volume)[vs[1].(int)]
	}).(VolumeOutput)
}

type VolumeMapOutput struct{ *pulumi.OutputState }

func (VolumeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Volume)(nil)).Elem()
}

func (o VolumeMapOutput) ToVolumeMapOutput() VolumeMapOutput {
	return o
}

func (o VolumeMapOutput) ToVolumeMapOutputWithContext(ctx context.Context) VolumeMapOutput {
	return o
}

func (o VolumeMapOutput) MapIndex(k pulumi.StringInput) VolumeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Volume {
		return vs[0].(map[string]*Volume)[vs[1].(string)]
	}).(VolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeInput)(nil)).Elem(), &Volume{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeArrayInput)(nil)).Elem(), VolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeMapInput)(nil)).Elem(), VolumeMap{})
	pulumi.RegisterOutputType(VolumeOutput{})
	pulumi.RegisterOutputType(VolumeArrayOutput{})
	pulumi.RegisterOutputType(VolumeMapOutput{})
}
