// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type UpstreamSourceIngressSettings struct {
	// 是否启用所有Ingress类。
	EnableAllIngressClasses *bool `pulumi:"enableAllIngressClasses"`
	// 是否全部命名空间。
	EnableAllNamespaces *bool `pulumi:"enableAllNamespaces"`
	// 是否开启。
	EnableIngress *bool `pulumi:"enableIngress"`
	// 是否监听IngressClass为空的资源。
	EnableIngressWithoutIngressClass *bool `pulumi:"enableIngressWithoutIngressClass"`
	// 指定IngressClass。
	IngressClasses []string `pulumi:"ingressClasses"`
	// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
	UpdateStatus *bool `pulumi:"updateStatus"`
	// 指定命名空间。
	WatchNamespaces []string `pulumi:"watchNamespaces"`
}

// UpstreamSourceIngressSettingsInput is an input type that accepts UpstreamSourceIngressSettingsArgs and UpstreamSourceIngressSettingsOutput values.
// You can construct a concrete instance of `UpstreamSourceIngressSettingsInput` via:
//
//	UpstreamSourceIngressSettingsArgs{...}
type UpstreamSourceIngressSettingsInput interface {
	pulumi.Input

	ToUpstreamSourceIngressSettingsOutput() UpstreamSourceIngressSettingsOutput
	ToUpstreamSourceIngressSettingsOutputWithContext(context.Context) UpstreamSourceIngressSettingsOutput
}

type UpstreamSourceIngressSettingsArgs struct {
	// 是否启用所有Ingress类。
	EnableAllIngressClasses pulumi.BoolPtrInput `pulumi:"enableAllIngressClasses"`
	// 是否全部命名空间。
	EnableAllNamespaces pulumi.BoolPtrInput `pulumi:"enableAllNamespaces"`
	// 是否开启。
	EnableIngress pulumi.BoolPtrInput `pulumi:"enableIngress"`
	// 是否监听IngressClass为空的资源。
	EnableIngressWithoutIngressClass pulumi.BoolPtrInput `pulumi:"enableIngressWithoutIngressClass"`
	// 指定IngressClass。
	IngressClasses pulumi.StringArrayInput `pulumi:"ingressClasses"`
	// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
	UpdateStatus pulumi.BoolPtrInput `pulumi:"updateStatus"`
	// 指定命名空间。
	WatchNamespaces pulumi.StringArrayInput `pulumi:"watchNamespaces"`
}

func (UpstreamSourceIngressSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceIngressSettings)(nil)).Elem()
}

func (i UpstreamSourceIngressSettingsArgs) ToUpstreamSourceIngressSettingsOutput() UpstreamSourceIngressSettingsOutput {
	return i.ToUpstreamSourceIngressSettingsOutputWithContext(context.Background())
}

func (i UpstreamSourceIngressSettingsArgs) ToUpstreamSourceIngressSettingsOutputWithContext(ctx context.Context) UpstreamSourceIngressSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceIngressSettingsOutput)
}

func (i UpstreamSourceIngressSettingsArgs) ToUpstreamSourceIngressSettingsPtrOutput() UpstreamSourceIngressSettingsPtrOutput {
	return i.ToUpstreamSourceIngressSettingsPtrOutputWithContext(context.Background())
}

func (i UpstreamSourceIngressSettingsArgs) ToUpstreamSourceIngressSettingsPtrOutputWithContext(ctx context.Context) UpstreamSourceIngressSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceIngressSettingsOutput).ToUpstreamSourceIngressSettingsPtrOutputWithContext(ctx)
}

// UpstreamSourceIngressSettingsPtrInput is an input type that accepts UpstreamSourceIngressSettingsArgs, UpstreamSourceIngressSettingsPtr and UpstreamSourceIngressSettingsPtrOutput values.
// You can construct a concrete instance of `UpstreamSourceIngressSettingsPtrInput` via:
//
//	        UpstreamSourceIngressSettingsArgs{...}
//
//	or:
//
//	        nil
type UpstreamSourceIngressSettingsPtrInput interface {
	pulumi.Input

	ToUpstreamSourceIngressSettingsPtrOutput() UpstreamSourceIngressSettingsPtrOutput
	ToUpstreamSourceIngressSettingsPtrOutputWithContext(context.Context) UpstreamSourceIngressSettingsPtrOutput
}

type upstreamSourceIngressSettingsPtrType UpstreamSourceIngressSettingsArgs

func UpstreamSourceIngressSettingsPtr(v *UpstreamSourceIngressSettingsArgs) UpstreamSourceIngressSettingsPtrInput {
	return (*upstreamSourceIngressSettingsPtrType)(v)
}

func (*upstreamSourceIngressSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceIngressSettings)(nil)).Elem()
}

func (i *upstreamSourceIngressSettingsPtrType) ToUpstreamSourceIngressSettingsPtrOutput() UpstreamSourceIngressSettingsPtrOutput {
	return i.ToUpstreamSourceIngressSettingsPtrOutputWithContext(context.Background())
}

func (i *upstreamSourceIngressSettingsPtrType) ToUpstreamSourceIngressSettingsPtrOutputWithContext(ctx context.Context) UpstreamSourceIngressSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceIngressSettingsPtrOutput)
}

type UpstreamSourceIngressSettingsOutput struct{ *pulumi.OutputState }

func (UpstreamSourceIngressSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceIngressSettings)(nil)).Elem()
}

func (o UpstreamSourceIngressSettingsOutput) ToUpstreamSourceIngressSettingsOutput() UpstreamSourceIngressSettingsOutput {
	return o
}

func (o UpstreamSourceIngressSettingsOutput) ToUpstreamSourceIngressSettingsOutputWithContext(ctx context.Context) UpstreamSourceIngressSettingsOutput {
	return o
}

func (o UpstreamSourceIngressSettingsOutput) ToUpstreamSourceIngressSettingsPtrOutput() UpstreamSourceIngressSettingsPtrOutput {
	return o.ToUpstreamSourceIngressSettingsPtrOutputWithContext(context.Background())
}

func (o UpstreamSourceIngressSettingsOutput) ToUpstreamSourceIngressSettingsPtrOutputWithContext(ctx context.Context) UpstreamSourceIngressSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamSourceIngressSettings) *UpstreamSourceIngressSettings {
		return &v
	}).(UpstreamSourceIngressSettingsPtrOutput)
}

// 是否启用所有Ingress类。
func (o UpstreamSourceIngressSettingsOutput) EnableAllIngressClasses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) *bool { return v.EnableAllIngressClasses }).(pulumi.BoolPtrOutput)
}

// 是否全部命名空间。
func (o UpstreamSourceIngressSettingsOutput) EnableAllNamespaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) *bool { return v.EnableAllNamespaces }).(pulumi.BoolPtrOutput)
}

// 是否开启。
func (o UpstreamSourceIngressSettingsOutput) EnableIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) *bool { return v.EnableIngress }).(pulumi.BoolPtrOutput)
}

// 是否监听IngressClass为空的资源。
func (o UpstreamSourceIngressSettingsOutput) EnableIngressWithoutIngressClass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) *bool { return v.EnableIngressWithoutIngressClass }).(pulumi.BoolPtrOutput)
}

// 指定IngressClass。
func (o UpstreamSourceIngressSettingsOutput) IngressClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) []string { return v.IngressClasses }).(pulumi.StringArrayOutput)
}

// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
func (o UpstreamSourceIngressSettingsOutput) UpdateStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) *bool { return v.UpdateStatus }).(pulumi.BoolPtrOutput)
}

// 指定命名空间。
func (o UpstreamSourceIngressSettingsOutput) WatchNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UpstreamSourceIngressSettings) []string { return v.WatchNamespaces }).(pulumi.StringArrayOutput)
}

type UpstreamSourceIngressSettingsPtrOutput struct{ *pulumi.OutputState }

func (UpstreamSourceIngressSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceIngressSettings)(nil)).Elem()
}

func (o UpstreamSourceIngressSettingsPtrOutput) ToUpstreamSourceIngressSettingsPtrOutput() UpstreamSourceIngressSettingsPtrOutput {
	return o
}

func (o UpstreamSourceIngressSettingsPtrOutput) ToUpstreamSourceIngressSettingsPtrOutputWithContext(ctx context.Context) UpstreamSourceIngressSettingsPtrOutput {
	return o
}

func (o UpstreamSourceIngressSettingsPtrOutput) Elem() UpstreamSourceIngressSettingsOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) UpstreamSourceIngressSettings {
		if v != nil {
			return *v
		}
		var ret UpstreamSourceIngressSettings
		return ret
	}).(UpstreamSourceIngressSettingsOutput)
}

// 是否启用所有Ingress类。
func (o UpstreamSourceIngressSettingsPtrOutput) EnableAllIngressClasses() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAllIngressClasses
	}).(pulumi.BoolPtrOutput)
}

// 是否全部命名空间。
func (o UpstreamSourceIngressSettingsPtrOutput) EnableAllNamespaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAllNamespaces
	}).(pulumi.BoolPtrOutput)
}

// 是否开启。
func (o UpstreamSourceIngressSettingsPtrOutput) EnableIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIngress
	}).(pulumi.BoolPtrOutput)
}

// 是否监听IngressClass为空的资源。
func (o UpstreamSourceIngressSettingsPtrOutput) EnableIngressWithoutIngressClass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIngressWithoutIngressClass
	}).(pulumi.BoolPtrOutput)
}

// 指定IngressClass。
func (o UpstreamSourceIngressSettingsPtrOutput) IngressClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) []string {
		if v == nil {
			return nil
		}
		return v.IngressClasses
	}).(pulumi.StringArrayOutput)
}

// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
func (o UpstreamSourceIngressSettingsPtrOutput) UpdateStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateStatus
	}).(pulumi.BoolPtrOutput)
}

// 指定命名空间。
func (o UpstreamSourceIngressSettingsPtrOutput) WatchNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UpstreamSourceIngressSettings) []string {
		if v == nil {
			return nil
		}
		return v.WatchNamespaces
	}).(pulumi.StringArrayOutput)
}

type UpstreamSourceSourceSpec struct {
	// 容器集群来源。
	K8SSource *UpstreamSourceSourceSpecK8SSource `pulumi:"k8SSource"`
	// 注册中心来源。
	NacosSource *UpstreamSourceSourceSpecNacosSource `pulumi:"nacosSource"`
}

// UpstreamSourceSourceSpecInput is an input type that accepts UpstreamSourceSourceSpecArgs and UpstreamSourceSourceSpecOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecInput` via:
//
//	UpstreamSourceSourceSpecArgs{...}
type UpstreamSourceSourceSpecInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecOutput() UpstreamSourceSourceSpecOutput
	ToUpstreamSourceSourceSpecOutputWithContext(context.Context) UpstreamSourceSourceSpecOutput
}

type UpstreamSourceSourceSpecArgs struct {
	// 容器集群来源。
	K8SSource UpstreamSourceSourceSpecK8SSourcePtrInput `pulumi:"k8SSource"`
	// 注册中心来源。
	NacosSource UpstreamSourceSourceSpecNacosSourcePtrInput `pulumi:"nacosSource"`
}

func (UpstreamSourceSourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpec)(nil)).Elem()
}

func (i UpstreamSourceSourceSpecArgs) ToUpstreamSourceSourceSpecOutput() UpstreamSourceSourceSpecOutput {
	return i.ToUpstreamSourceSourceSpecOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecArgs) ToUpstreamSourceSourceSpecOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecOutput)
}

func (i UpstreamSourceSourceSpecArgs) ToUpstreamSourceSourceSpecPtrOutput() UpstreamSourceSourceSpecPtrOutput {
	return i.ToUpstreamSourceSourceSpecPtrOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecArgs) ToUpstreamSourceSourceSpecPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecOutput).ToUpstreamSourceSourceSpecPtrOutputWithContext(ctx)
}

// UpstreamSourceSourceSpecPtrInput is an input type that accepts UpstreamSourceSourceSpecArgs, UpstreamSourceSourceSpecPtr and UpstreamSourceSourceSpecPtrOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecPtrInput` via:
//
//	        UpstreamSourceSourceSpecArgs{...}
//
//	or:
//
//	        nil
type UpstreamSourceSourceSpecPtrInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecPtrOutput() UpstreamSourceSourceSpecPtrOutput
	ToUpstreamSourceSourceSpecPtrOutputWithContext(context.Context) UpstreamSourceSourceSpecPtrOutput
}

type upstreamSourceSourceSpecPtrType UpstreamSourceSourceSpecArgs

func UpstreamSourceSourceSpecPtr(v *UpstreamSourceSourceSpecArgs) UpstreamSourceSourceSpecPtrInput {
	return (*upstreamSourceSourceSpecPtrType)(v)
}

func (*upstreamSourceSourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpec)(nil)).Elem()
}

func (i *upstreamSourceSourceSpecPtrType) ToUpstreamSourceSourceSpecPtrOutput() UpstreamSourceSourceSpecPtrOutput {
	return i.ToUpstreamSourceSourceSpecPtrOutputWithContext(context.Background())
}

func (i *upstreamSourceSourceSpecPtrType) ToUpstreamSourceSourceSpecPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecPtrOutput)
}

type UpstreamSourceSourceSpecOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpec)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecOutput) ToUpstreamSourceSourceSpecOutput() UpstreamSourceSourceSpecOutput {
	return o
}

func (o UpstreamSourceSourceSpecOutput) ToUpstreamSourceSourceSpecOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecOutput {
	return o
}

func (o UpstreamSourceSourceSpecOutput) ToUpstreamSourceSourceSpecPtrOutput() UpstreamSourceSourceSpecPtrOutput {
	return o.ToUpstreamSourceSourceSpecPtrOutputWithContext(context.Background())
}

func (o UpstreamSourceSourceSpecOutput) ToUpstreamSourceSourceSpecPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamSourceSourceSpec) *UpstreamSourceSourceSpec {
		return &v
	}).(UpstreamSourceSourceSpecPtrOutput)
}

// 容器集群来源。
func (o UpstreamSourceSourceSpecOutput) K8SSource() UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpec) *UpstreamSourceSourceSpecK8SSource { return v.K8SSource }).(UpstreamSourceSourceSpecK8SSourcePtrOutput)
}

// 注册中心来源。
func (o UpstreamSourceSourceSpecOutput) NacosSource() UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpec) *UpstreamSourceSourceSpecNacosSource { return v.NacosSource }).(UpstreamSourceSourceSpecNacosSourcePtrOutput)
}

type UpstreamSourceSourceSpecPtrOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpec)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecPtrOutput) ToUpstreamSourceSourceSpecPtrOutput() UpstreamSourceSourceSpecPtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecPtrOutput) ToUpstreamSourceSourceSpecPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecPtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecPtrOutput) Elem() UpstreamSourceSourceSpecOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpec) UpstreamSourceSourceSpec {
		if v != nil {
			return *v
		}
		var ret UpstreamSourceSourceSpec
		return ret
	}).(UpstreamSourceSourceSpecOutput)
}

// 容器集群来源。
func (o UpstreamSourceSourceSpecPtrOutput) K8SSource() UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpec) *UpstreamSourceSourceSpecK8SSource {
		if v == nil {
			return nil
		}
		return v.K8SSource
	}).(UpstreamSourceSourceSpecK8SSourcePtrOutput)
}

// 注册中心来源。
func (o UpstreamSourceSourceSpecPtrOutput) NacosSource() UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpec) *UpstreamSourceSourceSpecNacosSource {
		if v == nil {
			return nil
		}
		return v.NacosSource
	}).(UpstreamSourceSourceSpecNacosSourcePtrOutput)
}

type UpstreamSourceSourceSpecK8SSource struct {
	// 集群ID。
	ClusterId *string `pulumi:"clusterId"`
	// 集群类型。
	ClusterType *string `pulumi:"clusterType"`
}

// UpstreamSourceSourceSpecK8SSourceInput is an input type that accepts UpstreamSourceSourceSpecK8SSourceArgs and UpstreamSourceSourceSpecK8SSourceOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecK8SSourceInput` via:
//
//	UpstreamSourceSourceSpecK8SSourceArgs{...}
type UpstreamSourceSourceSpecK8SSourceInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecK8SSourceOutput() UpstreamSourceSourceSpecK8SSourceOutput
	ToUpstreamSourceSourceSpecK8SSourceOutputWithContext(context.Context) UpstreamSourceSourceSpecK8SSourceOutput
}

type UpstreamSourceSourceSpecK8SSourceArgs struct {
	// 集群ID。
	ClusterId pulumi.StringPtrInput `pulumi:"clusterId"`
	// 集群类型。
	ClusterType pulumi.StringPtrInput `pulumi:"clusterType"`
}

func (UpstreamSourceSourceSpecK8SSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecK8SSource)(nil)).Elem()
}

func (i UpstreamSourceSourceSpecK8SSourceArgs) ToUpstreamSourceSourceSpecK8SSourceOutput() UpstreamSourceSourceSpecK8SSourceOutput {
	return i.ToUpstreamSourceSourceSpecK8SSourceOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecK8SSourceArgs) ToUpstreamSourceSourceSpecK8SSourceOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecK8SSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecK8SSourceOutput)
}

func (i UpstreamSourceSourceSpecK8SSourceArgs) ToUpstreamSourceSourceSpecK8SSourcePtrOutput() UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return i.ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecK8SSourceArgs) ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecK8SSourceOutput).ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(ctx)
}

// UpstreamSourceSourceSpecK8SSourcePtrInput is an input type that accepts UpstreamSourceSourceSpecK8SSourceArgs, UpstreamSourceSourceSpecK8SSourcePtr and UpstreamSourceSourceSpecK8SSourcePtrOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecK8SSourcePtrInput` via:
//
//	        UpstreamSourceSourceSpecK8SSourceArgs{...}
//
//	or:
//
//	        nil
type UpstreamSourceSourceSpecK8SSourcePtrInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecK8SSourcePtrOutput() UpstreamSourceSourceSpecK8SSourcePtrOutput
	ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(context.Context) UpstreamSourceSourceSpecK8SSourcePtrOutput
}

type upstreamSourceSourceSpecK8SSourcePtrType UpstreamSourceSourceSpecK8SSourceArgs

func UpstreamSourceSourceSpecK8SSourcePtr(v *UpstreamSourceSourceSpecK8SSourceArgs) UpstreamSourceSourceSpecK8SSourcePtrInput {
	return (*upstreamSourceSourceSpecK8SSourcePtrType)(v)
}

func (*upstreamSourceSourceSpecK8SSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecK8SSource)(nil)).Elem()
}

func (i *upstreamSourceSourceSpecK8SSourcePtrType) ToUpstreamSourceSourceSpecK8SSourcePtrOutput() UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return i.ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(context.Background())
}

func (i *upstreamSourceSourceSpecK8SSourcePtrType) ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecK8SSourcePtrOutput)
}

type UpstreamSourceSourceSpecK8SSourceOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecK8SSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecK8SSource)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecK8SSourceOutput) ToUpstreamSourceSourceSpecK8SSourceOutput() UpstreamSourceSourceSpecK8SSourceOutput {
	return o
}

func (o UpstreamSourceSourceSpecK8SSourceOutput) ToUpstreamSourceSourceSpecK8SSourceOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecK8SSourceOutput {
	return o
}

func (o UpstreamSourceSourceSpecK8SSourceOutput) ToUpstreamSourceSourceSpecK8SSourcePtrOutput() UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return o.ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(context.Background())
}

func (o UpstreamSourceSourceSpecK8SSourceOutput) ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamSourceSourceSpecK8SSource) *UpstreamSourceSourceSpecK8SSource {
		return &v
	}).(UpstreamSourceSourceSpecK8SSourcePtrOutput)
}

// 集群ID。
func (o UpstreamSourceSourceSpecK8SSourceOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecK8SSource) *string { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// 集群类型。
func (o UpstreamSourceSourceSpecK8SSourceOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecK8SSource) *string { return v.ClusterType }).(pulumi.StringPtrOutput)
}

type UpstreamSourceSourceSpecK8SSourcePtrOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecK8SSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecK8SSource)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecK8SSourcePtrOutput) ToUpstreamSourceSourceSpecK8SSourcePtrOutput() UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecK8SSourcePtrOutput) ToUpstreamSourceSourceSpecK8SSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecK8SSourcePtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecK8SSourcePtrOutput) Elem() UpstreamSourceSourceSpecK8SSourceOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecK8SSource) UpstreamSourceSourceSpecK8SSource {
		if v != nil {
			return *v
		}
		var ret UpstreamSourceSourceSpecK8SSource
		return ret
	}).(UpstreamSourceSourceSpecK8SSourceOutput)
}

// 集群ID。
func (o UpstreamSourceSourceSpecK8SSourcePtrOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecK8SSource) *string {
		if v == nil {
			return nil
		}
		return v.ClusterId
	}).(pulumi.StringPtrOutput)
}

// 集群类型。
func (o UpstreamSourceSourceSpecK8SSourcePtrOutput) ClusterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecK8SSource) *string {
		if v == nil {
			return nil
		}
		return v.ClusterType
	}).(pulumi.StringPtrOutput)
}

type UpstreamSourceSourceSpecNacosSource struct {
	// 认证配置。
	AuthConfig *UpstreamSourceSourceSpecNacosSourceAuthConfig `pulumi:"authConfig"`
	// Nacos ID。
	NacosId *string `pulumi:"nacosId"`
	// Nacos名称。
	NacosName *string `pulumi:"nacosName"`
}

// UpstreamSourceSourceSpecNacosSourceInput is an input type that accepts UpstreamSourceSourceSpecNacosSourceArgs and UpstreamSourceSourceSpecNacosSourceOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecNacosSourceInput` via:
//
//	UpstreamSourceSourceSpecNacosSourceArgs{...}
type UpstreamSourceSourceSpecNacosSourceInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecNacosSourceOutput() UpstreamSourceSourceSpecNacosSourceOutput
	ToUpstreamSourceSourceSpecNacosSourceOutputWithContext(context.Context) UpstreamSourceSourceSpecNacosSourceOutput
}

type UpstreamSourceSourceSpecNacosSourceArgs struct {
	// 认证配置。
	AuthConfig UpstreamSourceSourceSpecNacosSourceAuthConfigPtrInput `pulumi:"authConfig"`
	// Nacos ID。
	NacosId pulumi.StringPtrInput `pulumi:"nacosId"`
	// Nacos名称。
	NacosName pulumi.StringPtrInput `pulumi:"nacosName"`
}

func (UpstreamSourceSourceSpecNacosSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecNacosSource)(nil)).Elem()
}

func (i UpstreamSourceSourceSpecNacosSourceArgs) ToUpstreamSourceSourceSpecNacosSourceOutput() UpstreamSourceSourceSpecNacosSourceOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecNacosSourceArgs) ToUpstreamSourceSourceSpecNacosSourceOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceOutput)
}

func (i UpstreamSourceSourceSpecNacosSourceArgs) ToUpstreamSourceSourceSpecNacosSourcePtrOutput() UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecNacosSourceArgs) ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceOutput).ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(ctx)
}

// UpstreamSourceSourceSpecNacosSourcePtrInput is an input type that accepts UpstreamSourceSourceSpecNacosSourceArgs, UpstreamSourceSourceSpecNacosSourcePtr and UpstreamSourceSourceSpecNacosSourcePtrOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecNacosSourcePtrInput` via:
//
//	        UpstreamSourceSourceSpecNacosSourceArgs{...}
//
//	or:
//
//	        nil
type UpstreamSourceSourceSpecNacosSourcePtrInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecNacosSourcePtrOutput() UpstreamSourceSourceSpecNacosSourcePtrOutput
	ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(context.Context) UpstreamSourceSourceSpecNacosSourcePtrOutput
}

type upstreamSourceSourceSpecNacosSourcePtrType UpstreamSourceSourceSpecNacosSourceArgs

func UpstreamSourceSourceSpecNacosSourcePtr(v *UpstreamSourceSourceSpecNacosSourceArgs) UpstreamSourceSourceSpecNacosSourcePtrInput {
	return (*upstreamSourceSourceSpecNacosSourcePtrType)(v)
}

func (*upstreamSourceSourceSpecNacosSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecNacosSource)(nil)).Elem()
}

func (i *upstreamSourceSourceSpecNacosSourcePtrType) ToUpstreamSourceSourceSpecNacosSourcePtrOutput() UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(context.Background())
}

func (i *upstreamSourceSourceSpecNacosSourcePtrType) ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourcePtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecNacosSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecNacosSource)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecNacosSourceOutput) ToUpstreamSourceSourceSpecNacosSourceOutput() UpstreamSourceSourceSpecNacosSourceOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceOutput) ToUpstreamSourceSourceSpecNacosSourceOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceOutput) ToUpstreamSourceSourceSpecNacosSourcePtrOutput() UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return o.ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(context.Background())
}

func (o UpstreamSourceSourceSpecNacosSourceOutput) ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamSourceSourceSpecNacosSource) *UpstreamSourceSourceSpecNacosSource {
		return &v
	}).(UpstreamSourceSourceSpecNacosSourcePtrOutput)
}

// 认证配置。
func (o UpstreamSourceSourceSpecNacosSourceOutput) AuthConfig() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecNacosSource) *UpstreamSourceSourceSpecNacosSourceAuthConfig {
		return v.AuthConfig
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput)
}

// Nacos ID。
func (o UpstreamSourceSourceSpecNacosSourceOutput) NacosId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecNacosSource) *string { return v.NacosId }).(pulumi.StringPtrOutput)
}

// Nacos名称。
func (o UpstreamSourceSourceSpecNacosSourceOutput) NacosName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecNacosSource) *string { return v.NacosName }).(pulumi.StringPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourcePtrOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecNacosSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecNacosSource)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecNacosSourcePtrOutput) ToUpstreamSourceSourceSpecNacosSourcePtrOutput() UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourcePtrOutput) ToUpstreamSourceSourceSpecNacosSourcePtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourcePtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourcePtrOutput) Elem() UpstreamSourceSourceSpecNacosSourceOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSource) UpstreamSourceSourceSpecNacosSource {
		if v != nil {
			return *v
		}
		var ret UpstreamSourceSourceSpecNacosSource
		return ret
	}).(UpstreamSourceSourceSpecNacosSourceOutput)
}

// 认证配置。
func (o UpstreamSourceSourceSpecNacosSourcePtrOutput) AuthConfig() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSource) *UpstreamSourceSourceSpecNacosSourceAuthConfig {
		if v == nil {
			return nil
		}
		return v.AuthConfig
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput)
}

// Nacos ID。
func (o UpstreamSourceSourceSpecNacosSourcePtrOutput) NacosId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSource) *string {
		if v == nil {
			return nil
		}
		return v.NacosId
	}).(pulumi.StringPtrOutput)
}

// Nacos名称。
func (o UpstreamSourceSourceSpecNacosSourcePtrOutput) NacosName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSource) *string {
		if v == nil {
			return nil
		}
		return v.NacosName
	}).(pulumi.StringPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceAuthConfig struct {
	// Basic认证。
	Basic *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic `pulumi:"basic"`
}

// UpstreamSourceSourceSpecNacosSourceAuthConfigInput is an input type that accepts UpstreamSourceSourceSpecNacosSourceAuthConfigArgs and UpstreamSourceSourceSpecNacosSourceAuthConfigOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecNacosSourceAuthConfigInput` via:
//
//	UpstreamSourceSourceSpecNacosSourceAuthConfigArgs{...}
type UpstreamSourceSourceSpecNacosSourceAuthConfigInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigOutput
	ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigOutput
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigArgs struct {
	// Basic认证。
	Basic UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrInput `pulumi:"basic"`
}

func (UpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfig)(nil)).Elem()
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceAuthConfigOutput)
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceAuthConfigOutput).ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(ctx)
}

// UpstreamSourceSourceSpecNacosSourceAuthConfigPtrInput is an input type that accepts UpstreamSourceSourceSpecNacosSourceAuthConfigArgs, UpstreamSourceSourceSpecNacosSourceAuthConfigPtr and UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecNacosSourceAuthConfigPtrInput` via:
//
//	        UpstreamSourceSourceSpecNacosSourceAuthConfigArgs{...}
//
//	or:
//
//	        nil
type UpstreamSourceSourceSpecNacosSourceAuthConfigPtrInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput
	ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput
}

type upstreamSourceSourceSpecNacosSourceAuthConfigPtrType UpstreamSourceSourceSpecNacosSourceAuthConfigArgs

func UpstreamSourceSourceSpecNacosSourceAuthConfigPtr(v *UpstreamSourceSourceSpecNacosSourceAuthConfigArgs) UpstreamSourceSourceSpecNacosSourceAuthConfigPtrInput {
	return (*upstreamSourceSourceSpecNacosSourceAuthConfigPtrType)(v)
}

func (*upstreamSourceSourceSpecNacosSourceAuthConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecNacosSourceAuthConfig)(nil)).Elem()
}

func (i *upstreamSourceSourceSpecNacosSourceAuthConfigPtrType) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(context.Background())
}

func (i *upstreamSourceSourceSpecNacosSourceAuthConfigPtrType) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfig)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return o.ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(context.Background())
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamSourceSourceSpecNacosSourceAuthConfig) *UpstreamSourceSourceSpecNacosSourceAuthConfig {
		return &v
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput)
}

// Basic认证。
func (o UpstreamSourceSourceSpecNacosSourceAuthConfigOutput) Basic() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecNacosSourceAuthConfig) *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic {
		return v.Basic
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecNacosSourceAuthConfig)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput) Elem() UpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSourceAuthConfig) UpstreamSourceSourceSpecNacosSourceAuthConfig {
		if v != nil {
			return *v
		}
		var ret UpstreamSourceSourceSpecNacosSourceAuthConfig
		return ret
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigOutput)
}

// Basic认证。
func (o UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput) Basic() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSourceAuthConfig) *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic {
		if v == nil {
			return nil
		}
		return v.Basic
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigBasic struct {
	// 密码。
	Password *string `pulumi:"password"`
	// 用户名。
	Username *string `pulumi:"username"`
}

// UpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput is an input type that accepts UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs and UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput` via:
//
//	UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{...}
type UpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput
	ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs struct {
	// 密码。
	Password pulumi.StringPtrInput `pulumi:"password"`
	// 用户名。
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfigBasic)(nil)).Elem()
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput)
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(context.Background())
}

func (i UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput).ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(ctx)
}

// UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrInput is an input type that accepts UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs, UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtr and UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput values.
// You can construct a concrete instance of `UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrInput` via:
//
//	        UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{...}
//
//	or:
//
//	        nil
type UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrInput interface {
	pulumi.Input

	ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput
	ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput
}

type upstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrType UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs

func UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtr(v *UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrInput {
	return (*upstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrType)(v)
}

func (*upstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecNacosSourceAuthConfigBasic)(nil)).Elem()
}

func (i *upstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrType) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return i.ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(context.Background())
}

func (i *upstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrType) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfigBasic)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return o.ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(context.Background())
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpstreamSourceSourceSpecNacosSourceAuthConfigBasic) *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic {
		return &v
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput)
}

// 密码。
func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecNacosSourceAuthConfigBasic) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// 用户名。
func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UpstreamSourceSourceSpecNacosSourceAuthConfigBasic) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput struct{ *pulumi.OutputState }

func (UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpstreamSourceSourceSpecNacosSourceAuthConfigBasic)(nil)).Elem()
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput) ToUpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutputWithContext(ctx context.Context) UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput {
	return o
}

func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput) Elem() UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic) UpstreamSourceSourceSpecNacosSourceAuthConfigBasic {
		if v != nil {
			return *v
		}
		var ret UpstreamSourceSourceSpecNacosSourceAuthConfigBasic
		return ret
	}).(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput)
}

// 密码。
func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// 用户名。
func (o UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpstreamSourceSourceSpecNacosSourceAuthConfigBasic) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type GetUpstreamSourceIngressSettings struct {
	// 是否启用所有Ingress类。
	EnableAllIngressClasses bool `pulumi:"enableAllIngressClasses"`
	// 是否全部命名空间。
	EnableAllNamespaces bool `pulumi:"enableAllNamespaces"`
	// 是否开启。
	EnableIngress bool `pulumi:"enableIngress"`
	// 是否监听IngressClass为空的资源。
	EnableIngressWithoutIngressClass bool `pulumi:"enableIngressWithoutIngressClass"`
	// 指定IngressClass。
	IngressClasses []string `pulumi:"ingressClasses"`
	// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
	UpdateStatus bool `pulumi:"updateStatus"`
	// 指定命名空间。
	WatchNamespaces []string `pulumi:"watchNamespaces"`
}

// GetUpstreamSourceIngressSettingsInput is an input type that accepts GetUpstreamSourceIngressSettingsArgs and GetUpstreamSourceIngressSettingsOutput values.
// You can construct a concrete instance of `GetUpstreamSourceIngressSettingsInput` via:
//
//	GetUpstreamSourceIngressSettingsArgs{...}
type GetUpstreamSourceIngressSettingsInput interface {
	pulumi.Input

	ToGetUpstreamSourceIngressSettingsOutput() GetUpstreamSourceIngressSettingsOutput
	ToGetUpstreamSourceIngressSettingsOutputWithContext(context.Context) GetUpstreamSourceIngressSettingsOutput
}

type GetUpstreamSourceIngressSettingsArgs struct {
	// 是否启用所有Ingress类。
	EnableAllIngressClasses pulumi.BoolInput `pulumi:"enableAllIngressClasses"`
	// 是否全部命名空间。
	EnableAllNamespaces pulumi.BoolInput `pulumi:"enableAllNamespaces"`
	// 是否开启。
	EnableIngress pulumi.BoolInput `pulumi:"enableIngress"`
	// 是否监听IngressClass为空的资源。
	EnableIngressWithoutIngressClass pulumi.BoolInput `pulumi:"enableIngressWithoutIngressClass"`
	// 指定IngressClass。
	IngressClasses pulumi.StringArrayInput `pulumi:"ingressClasses"`
	// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
	UpdateStatus pulumi.BoolInput `pulumi:"updateStatus"`
	// 指定命名空间。
	WatchNamespaces pulumi.StringArrayInput `pulumi:"watchNamespaces"`
}

func (GetUpstreamSourceIngressSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceIngressSettings)(nil)).Elem()
}

func (i GetUpstreamSourceIngressSettingsArgs) ToGetUpstreamSourceIngressSettingsOutput() GetUpstreamSourceIngressSettingsOutput {
	return i.ToGetUpstreamSourceIngressSettingsOutputWithContext(context.Background())
}

func (i GetUpstreamSourceIngressSettingsArgs) ToGetUpstreamSourceIngressSettingsOutputWithContext(ctx context.Context) GetUpstreamSourceIngressSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUpstreamSourceIngressSettingsOutput)
}

type GetUpstreamSourceIngressSettingsOutput struct{ *pulumi.OutputState }

func (GetUpstreamSourceIngressSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceIngressSettings)(nil)).Elem()
}

func (o GetUpstreamSourceIngressSettingsOutput) ToGetUpstreamSourceIngressSettingsOutput() GetUpstreamSourceIngressSettingsOutput {
	return o
}

func (o GetUpstreamSourceIngressSettingsOutput) ToGetUpstreamSourceIngressSettingsOutputWithContext(ctx context.Context) GetUpstreamSourceIngressSettingsOutput {
	return o
}

// 是否启用所有Ingress类。
func (o GetUpstreamSourceIngressSettingsOutput) EnableAllIngressClasses() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) bool { return v.EnableAllIngressClasses }).(pulumi.BoolOutput)
}

// 是否全部命名空间。
func (o GetUpstreamSourceIngressSettingsOutput) EnableAllNamespaces() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) bool { return v.EnableAllNamespaces }).(pulumi.BoolOutput)
}

// 是否开启。
func (o GetUpstreamSourceIngressSettingsOutput) EnableIngress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) bool { return v.EnableIngress }).(pulumi.BoolOutput)
}

// 是否监听IngressClass为空的资源。
func (o GetUpstreamSourceIngressSettingsOutput) EnableIngressWithoutIngressClass() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) bool { return v.EnableIngressWithoutIngressClass }).(pulumi.BoolOutput)
}

// 指定IngressClass。
func (o GetUpstreamSourceIngressSettingsOutput) IngressClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) []string { return v.IngressClasses }).(pulumi.StringArrayOutput)
}

// 流量入口切换。开启后，当前集群Ingress中Status的IP地址会被修改为当前网关的IP地址。
func (o GetUpstreamSourceIngressSettingsOutput) UpdateStatus() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) bool { return v.UpdateStatus }).(pulumi.BoolOutput)
}

// 指定命名空间。
func (o GetUpstreamSourceIngressSettingsOutput) WatchNamespaces() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetUpstreamSourceIngressSettings) []string { return v.WatchNamespaces }).(pulumi.StringArrayOutput)
}

type GetUpstreamSourceSourceSpec struct {
	// 容器集群来源。
	K8SSource GetUpstreamSourceSourceSpecK8SSource `pulumi:"k8SSource"`
	// 注册中心来源。
	NacosSource GetUpstreamSourceSourceSpecNacosSource `pulumi:"nacosSource"`
}

// GetUpstreamSourceSourceSpecInput is an input type that accepts GetUpstreamSourceSourceSpecArgs and GetUpstreamSourceSourceSpecOutput values.
// You can construct a concrete instance of `GetUpstreamSourceSourceSpecInput` via:
//
//	GetUpstreamSourceSourceSpecArgs{...}
type GetUpstreamSourceSourceSpecInput interface {
	pulumi.Input

	ToGetUpstreamSourceSourceSpecOutput() GetUpstreamSourceSourceSpecOutput
	ToGetUpstreamSourceSourceSpecOutputWithContext(context.Context) GetUpstreamSourceSourceSpecOutput
}

type GetUpstreamSourceSourceSpecArgs struct {
	// 容器集群来源。
	K8SSource GetUpstreamSourceSourceSpecK8SSourceInput `pulumi:"k8SSource"`
	// 注册中心来源。
	NacosSource GetUpstreamSourceSourceSpecNacosSourceInput `pulumi:"nacosSource"`
}

func (GetUpstreamSourceSourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpec)(nil)).Elem()
}

func (i GetUpstreamSourceSourceSpecArgs) ToGetUpstreamSourceSourceSpecOutput() GetUpstreamSourceSourceSpecOutput {
	return i.ToGetUpstreamSourceSourceSpecOutputWithContext(context.Background())
}

func (i GetUpstreamSourceSourceSpecArgs) ToGetUpstreamSourceSourceSpecOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUpstreamSourceSourceSpecOutput)
}

type GetUpstreamSourceSourceSpecOutput struct{ *pulumi.OutputState }

func (GetUpstreamSourceSourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpec)(nil)).Elem()
}

func (o GetUpstreamSourceSourceSpecOutput) ToGetUpstreamSourceSourceSpecOutput() GetUpstreamSourceSourceSpecOutput {
	return o
}

func (o GetUpstreamSourceSourceSpecOutput) ToGetUpstreamSourceSourceSpecOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecOutput {
	return o
}

// 容器集群来源。
func (o GetUpstreamSourceSourceSpecOutput) K8SSource() GetUpstreamSourceSourceSpecK8SSourceOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpec) GetUpstreamSourceSourceSpecK8SSource { return v.K8SSource }).(GetUpstreamSourceSourceSpecK8SSourceOutput)
}

// 注册中心来源。
func (o GetUpstreamSourceSourceSpecOutput) NacosSource() GetUpstreamSourceSourceSpecNacosSourceOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpec) GetUpstreamSourceSourceSpecNacosSource { return v.NacosSource }).(GetUpstreamSourceSourceSpecNacosSourceOutput)
}

type GetUpstreamSourceSourceSpecK8SSource struct {
	// 集群ID。
	ClusterId string `pulumi:"clusterId"`
	// 集群类型。
	ClusterType string `pulumi:"clusterType"`
}

// GetUpstreamSourceSourceSpecK8SSourceInput is an input type that accepts GetUpstreamSourceSourceSpecK8SSourceArgs and GetUpstreamSourceSourceSpecK8SSourceOutput values.
// You can construct a concrete instance of `GetUpstreamSourceSourceSpecK8SSourceInput` via:
//
//	GetUpstreamSourceSourceSpecK8SSourceArgs{...}
type GetUpstreamSourceSourceSpecK8SSourceInput interface {
	pulumi.Input

	ToGetUpstreamSourceSourceSpecK8SSourceOutput() GetUpstreamSourceSourceSpecK8SSourceOutput
	ToGetUpstreamSourceSourceSpecK8SSourceOutputWithContext(context.Context) GetUpstreamSourceSourceSpecK8SSourceOutput
}

type GetUpstreamSourceSourceSpecK8SSourceArgs struct {
	// 集群ID。
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// 集群类型。
	ClusterType pulumi.StringInput `pulumi:"clusterType"`
}

func (GetUpstreamSourceSourceSpecK8SSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecK8SSource)(nil)).Elem()
}

func (i GetUpstreamSourceSourceSpecK8SSourceArgs) ToGetUpstreamSourceSourceSpecK8SSourceOutput() GetUpstreamSourceSourceSpecK8SSourceOutput {
	return i.ToGetUpstreamSourceSourceSpecK8SSourceOutputWithContext(context.Background())
}

func (i GetUpstreamSourceSourceSpecK8SSourceArgs) ToGetUpstreamSourceSourceSpecK8SSourceOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecK8SSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUpstreamSourceSourceSpecK8SSourceOutput)
}

type GetUpstreamSourceSourceSpecK8SSourceOutput struct{ *pulumi.OutputState }

func (GetUpstreamSourceSourceSpecK8SSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecK8SSource)(nil)).Elem()
}

func (o GetUpstreamSourceSourceSpecK8SSourceOutput) ToGetUpstreamSourceSourceSpecK8SSourceOutput() GetUpstreamSourceSourceSpecK8SSourceOutput {
	return o
}

func (o GetUpstreamSourceSourceSpecK8SSourceOutput) ToGetUpstreamSourceSourceSpecK8SSourceOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecK8SSourceOutput {
	return o
}

// 集群ID。
func (o GetUpstreamSourceSourceSpecK8SSourceOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecK8SSource) string { return v.ClusterId }).(pulumi.StringOutput)
}

// 集群类型。
func (o GetUpstreamSourceSourceSpecK8SSourceOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecK8SSource) string { return v.ClusterType }).(pulumi.StringOutput)
}

type GetUpstreamSourceSourceSpecNacosSource struct {
	// 认证配置。
	AuthConfig GetUpstreamSourceSourceSpecNacosSourceAuthConfig `pulumi:"authConfig"`
	// Nacos ID。
	NacosId string `pulumi:"nacosId"`
	// Nacos名称。
	NacosName string `pulumi:"nacosName"`
}

// GetUpstreamSourceSourceSpecNacosSourceInput is an input type that accepts GetUpstreamSourceSourceSpecNacosSourceArgs and GetUpstreamSourceSourceSpecNacosSourceOutput values.
// You can construct a concrete instance of `GetUpstreamSourceSourceSpecNacosSourceInput` via:
//
//	GetUpstreamSourceSourceSpecNacosSourceArgs{...}
type GetUpstreamSourceSourceSpecNacosSourceInput interface {
	pulumi.Input

	ToGetUpstreamSourceSourceSpecNacosSourceOutput() GetUpstreamSourceSourceSpecNacosSourceOutput
	ToGetUpstreamSourceSourceSpecNacosSourceOutputWithContext(context.Context) GetUpstreamSourceSourceSpecNacosSourceOutput
}

type GetUpstreamSourceSourceSpecNacosSourceArgs struct {
	// 认证配置。
	AuthConfig GetUpstreamSourceSourceSpecNacosSourceAuthConfigInput `pulumi:"authConfig"`
	// Nacos ID。
	NacosId pulumi.StringInput `pulumi:"nacosId"`
	// Nacos名称。
	NacosName pulumi.StringInput `pulumi:"nacosName"`
}

func (GetUpstreamSourceSourceSpecNacosSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSource)(nil)).Elem()
}

func (i GetUpstreamSourceSourceSpecNacosSourceArgs) ToGetUpstreamSourceSourceSpecNacosSourceOutput() GetUpstreamSourceSourceSpecNacosSourceOutput {
	return i.ToGetUpstreamSourceSourceSpecNacosSourceOutputWithContext(context.Background())
}

func (i GetUpstreamSourceSourceSpecNacosSourceArgs) ToGetUpstreamSourceSourceSpecNacosSourceOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecNacosSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUpstreamSourceSourceSpecNacosSourceOutput)
}

type GetUpstreamSourceSourceSpecNacosSourceOutput struct{ *pulumi.OutputState }

func (GetUpstreamSourceSourceSpecNacosSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSource)(nil)).Elem()
}

func (o GetUpstreamSourceSourceSpecNacosSourceOutput) ToGetUpstreamSourceSourceSpecNacosSourceOutput() GetUpstreamSourceSourceSpecNacosSourceOutput {
	return o
}

func (o GetUpstreamSourceSourceSpecNacosSourceOutput) ToGetUpstreamSourceSourceSpecNacosSourceOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecNacosSourceOutput {
	return o
}

// 认证配置。
func (o GetUpstreamSourceSourceSpecNacosSourceOutput) AuthConfig() GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecNacosSource) GetUpstreamSourceSourceSpecNacosSourceAuthConfig {
		return v.AuthConfig
	}).(GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput)
}

// Nacos ID。
func (o GetUpstreamSourceSourceSpecNacosSourceOutput) NacosId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecNacosSource) string { return v.NacosId }).(pulumi.StringOutput)
}

// Nacos名称。
func (o GetUpstreamSourceSourceSpecNacosSourceOutput) NacosName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecNacosSource) string { return v.NacosName }).(pulumi.StringOutput)
}

type GetUpstreamSourceSourceSpecNacosSourceAuthConfig struct {
	// Basic认证。
	Basic GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic `pulumi:"basic"`
}

// GetUpstreamSourceSourceSpecNacosSourceAuthConfigInput is an input type that accepts GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs and GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput values.
// You can construct a concrete instance of `GetUpstreamSourceSourceSpecNacosSourceAuthConfigInput` via:
//
//	GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs{...}
type GetUpstreamSourceSourceSpecNacosSourceAuthConfigInput interface {
	pulumi.Input

	ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput() GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput
	ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(context.Context) GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput
}

type GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs struct {
	// Basic认证。
	Basic GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput `pulumi:"basic"`
}

func (GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceAuthConfig)(nil)).Elem()
}

func (i GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput() GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return i.ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(context.Background())
}

func (i GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput)
}

type GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput struct{ *pulumi.OutputState }

func (GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceAuthConfig)(nil)).Elem()
}

func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput() GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return o
}

func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput {
	return o
}

// Basic认证。
func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput) Basic() GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecNacosSourceAuthConfig) GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic {
		return v.Basic
	}).(GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput)
}

type GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic struct {
	// 密码。
	Password string `pulumi:"password"`
	// 用户名。
	Username string `pulumi:"username"`
}

// GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput is an input type that accepts GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs and GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput values.
// You can construct a concrete instance of `GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput` via:
//
//	GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{...}
type GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput interface {
	pulumi.Input

	ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput() GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput
	ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(context.Context) GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput
}

type GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs struct {
	// 密码。
	Password pulumi.StringInput `pulumi:"password"`
	// 用户名。
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic)(nil)).Elem()
}

func (i GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput() GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return i.ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(context.Background())
}

func (i GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput)
}

type GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput struct{ *pulumi.OutputState }

func (GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic)(nil)).Elem()
}

func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput() GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return o
}

func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) ToGetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutputWithContext(ctx context.Context) GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput {
	return o
}

// 密码。
func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic) string { return v.Password }).(pulumi.StringOutput)
}

// 用户名。
func (o GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasic) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceIngressSettingsInput)(nil)).Elem(), UpstreamSourceIngressSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceIngressSettingsPtrInput)(nil)).Elem(), UpstreamSourceIngressSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecInput)(nil)).Elem(), UpstreamSourceSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecPtrInput)(nil)).Elem(), UpstreamSourceSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecK8SSourceInput)(nil)).Elem(), UpstreamSourceSourceSpecK8SSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecK8SSourcePtrInput)(nil)).Elem(), UpstreamSourceSourceSpecK8SSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceInput)(nil)).Elem(), UpstreamSourceSourceSpecNacosSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourcePtrInput)(nil)).Elem(), UpstreamSourceSourceSpecNacosSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfigInput)(nil)).Elem(), UpstreamSourceSourceSpecNacosSourceAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfigPtrInput)(nil)).Elem(), UpstreamSourceSourceSpecNacosSourceAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput)(nil)).Elem(), UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrInput)(nil)).Elem(), UpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUpstreamSourceIngressSettingsInput)(nil)).Elem(), GetUpstreamSourceIngressSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUpstreamSourceSourceSpecInput)(nil)).Elem(), GetUpstreamSourceSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUpstreamSourceSourceSpecK8SSourceInput)(nil)).Elem(), GetUpstreamSourceSourceSpecK8SSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceInput)(nil)).Elem(), GetUpstreamSourceSourceSpecNacosSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceAuthConfigInput)(nil)).Elem(), GetUpstreamSourceSourceSpecNacosSourceAuthConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicInput)(nil)).Elem(), GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicArgs{})
	pulumi.RegisterOutputType(UpstreamSourceIngressSettingsOutput{})
	pulumi.RegisterOutputType(UpstreamSourceIngressSettingsPtrOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecPtrOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecK8SSourceOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecK8SSourcePtrOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecNacosSourceOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecNacosSourcePtrOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecNacosSourceAuthConfigOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecNacosSourceAuthConfigPtrOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput{})
	pulumi.RegisterOutputType(UpstreamSourceSourceSpecNacosSourceAuthConfigBasicPtrOutput{})
	pulumi.RegisterOutputType(GetUpstreamSourceIngressSettingsOutput{})
	pulumi.RegisterOutputType(GetUpstreamSourceSourceSpecOutput{})
	pulumi.RegisterOutputType(GetUpstreamSourceSourceSpecK8SSourceOutput{})
	pulumi.RegisterOutputType(GetUpstreamSourceSourceSpecNacosSourceOutput{})
	pulumi.RegisterOutputType(GetUpstreamSourceSourceSpecNacosSourceAuthConfigOutput{})
	pulumi.RegisterOutputType(GetUpstreamSourceSourceSpecNacosSourceAuthConfigBasicOutput{})
}
