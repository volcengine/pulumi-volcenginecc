// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::ECS::Keypair
func LookupKeypair(ctx *pulumi.Context, args *LookupKeypairArgs, opts ...pulumi.InvokeOption) (*LookupKeypairResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKeypairResult
	err := ctx.Invoke("volcenginecc:ecs/getKeypair:getKeypair", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeypair.
type LookupKeypairArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getKeypair.
type LookupKeypairResult struct {
	// 密钥对创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 密钥对的描述，默认值为空字符串。必须以字母或中文开头。只能包含中文、字母、数字、点“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”长度限制在255个字符以内。
	Description string `pulumi:"description"`
	// 密钥对的指纹。根据RFC4716定义的公钥指纹格式，采用MD5信息摘要算法。
	FingerPrint string `pulumi:"fingerPrint"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 操作的实例ID。
	InstanceIds []string `pulumi:"instanceIds"`
	// 密钥对唯一ID。
	KeyPairId string `pulumi:"keyPairId"`
	// 密钥对名称。不可与已有名称重复。长度限制在 2～64 个字符之间。允许使用点号“.”分隔字符成多段，每段允许使用大小写字母、数字或连字符“-”。不能以“-”和“.”开头或结尾，不能连续使用“-”或者“.”。
	KeyPairName string `pulumi:"keyPairName"`
	// 密钥对私钥信息。
	PrivateKey string `pulumi:"privateKey"`
	// 资源所属项目，一个资源只能归属于一个项目。只能包含字母、数字、下划线“_”、点“.”和中划线“-”。长度限制在64个字符以内。
	ProjectName string `pulumi:"projectName"`
	// 密钥对的公钥信息。
	PublicKey string `pulumi:"publicKey"`
	// 密钥对的标签。
	Tags []GetKeypairTag `pulumi:"tags"`
	// 密钥对更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
}

func LookupKeypairOutput(ctx *pulumi.Context, args LookupKeypairOutputArgs, opts ...pulumi.InvokeOption) LookupKeypairResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKeypairResultOutput, error) {
			args := v.(LookupKeypairArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:ecs/getKeypair:getKeypair", args, LookupKeypairResultOutput{}, options).(LookupKeypairResultOutput), nil
		}).(LookupKeypairResultOutput)
}

// A collection of arguments for invoking getKeypair.
type LookupKeypairOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupKeypairOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeypairArgs)(nil)).Elem()
}

// A collection of values returned by getKeypair.
type LookupKeypairResultOutput struct{ *pulumi.OutputState }

func (LookupKeypairResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeypairResult)(nil)).Elem()
}

func (o LookupKeypairResultOutput) ToLookupKeypairResultOutput() LookupKeypairResultOutput {
	return o
}

func (o LookupKeypairResultOutput) ToLookupKeypairResultOutputWithContext(ctx context.Context) LookupKeypairResultOutput {
	return o
}

// 密钥对创建时间。
func (o LookupKeypairResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 密钥对的描述，默认值为空字符串。必须以字母或中文开头。只能包含中文、字母、数字、点“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”长度限制在255个字符以内。
func (o LookupKeypairResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.Description }).(pulumi.StringOutput)
}

// 密钥对的指纹。根据RFC4716定义的公钥指纹格式，采用MD5信息摘要算法。
func (o LookupKeypairResultOutput) FingerPrint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.FingerPrint }).(pulumi.StringOutput)
}

// Uniquely identifies the resource.
func (o LookupKeypairResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.Id }).(pulumi.StringOutput)
}

// 操作的实例ID。
func (o LookupKeypairResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKeypairResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

// 密钥对唯一ID。
func (o LookupKeypairResultOutput) KeyPairId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.KeyPairId }).(pulumi.StringOutput)
}

// 密钥对名称。不可与已有名称重复。长度限制在 2～64 个字符之间。允许使用点号“.”分隔字符成多段，每段允许使用大小写字母、数字或连字符“-”。不能以“-”和“.”开头或结尾，不能连续使用“-”或者“.”。
func (o LookupKeypairResultOutput) KeyPairName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.KeyPairName }).(pulumi.StringOutput)
}

// 密钥对私钥信息。
func (o LookupKeypairResultOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.PrivateKey }).(pulumi.StringOutput)
}

// 资源所属项目，一个资源只能归属于一个项目。只能包含字母、数字、下划线“_”、点“.”和中划线“-”。长度限制在64个字符以内。
func (o LookupKeypairResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 密钥对的公钥信息。
func (o LookupKeypairResultOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.PublicKey }).(pulumi.StringOutput)
}

// 密钥对的标签。
func (o LookupKeypairResultOutput) Tags() GetKeypairTagArrayOutput {
	return o.ApplyT(func(v LookupKeypairResult) []GetKeypairTag { return v.Tags }).(GetKeypairTagArrayOutput)
}

// 密钥对更新时间。
func (o LookupKeypairResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKeypairResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeypairResultOutput{})
}
