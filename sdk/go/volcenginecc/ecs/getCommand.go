// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::ECS::Command
func LookupCommand(ctx *pulumi.Context, args *LookupCommandArgs, opts ...pulumi.InvokeOption) (*LookupCommandResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCommandResult
	err := ctx.Invoke("volcenginecc:ecs/getCommand:getCommand", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCommand.
type LookupCommandArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getCommand.
type LookupCommandResult struct {
	// 命令内容。请根据ContentEncoding参数传入相应命令内容。命令内容不能超过16KB。
	CommandContent string `pulumi:"commandContent"`
	// 自定义命令ID。
	CommandId string `pulumi:"commandId"`
	// 命令内容是否经过Base64编码处理。Base64（默认）：经过Base64编码处理。PlainText： 未进行编码处理。
	ContentEncoding string `pulumi:"contentEncoding"`
	// 创建时间。
	CreatedTime string `pulumi:"createdTime"`
	// 命令描述，默认为空字符串。字符长度0~256。不限制特殊字符。
	Description string `pulumi:"description"`
	// 创建的命令是否使用自定义参数。false：默认，表示不使用自定义参数。true：表示使用自定义参数。
	EnableParameter bool `pulumi:"enableParameter"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 命令被调用次数。
	InvocationTimes int `pulumi:"invocationTimes"`
	// 命令名称。字符长度1~32。不限制特殊字符。
	Name string `pulumi:"name"`
	// 自定义参数定义信息。
	ParameterDefinitions []GetCommandParameterDefinition `pulumi:"parameterDefinitions"`
	// 资源所属项目，一个资源只能归属于一个项目。
	ProjectName string `pulumi:"projectName"`
	// 命令的提供方。
	ProviderName string `pulumi:"providerName"`
	// 标签键值对。
	Tags []GetCommandTag `pulumi:"tags"`
	// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。取值范围：30~86400。默认值：60。
	Timeout int `pulumi:"timeout"`
	// 命令的类型。Shell：表示创建一个在Linux实例中运行的Shell脚本。Python：表示创建一个Python脚本。Bat：表示创建一个Bat脚本。PowerShell：表示创建一个PowerShell脚本。
	Type string `pulumi:"type"`
	// 更新时间。
	UpdatedTime string `pulumi:"updatedTime"`
	// 执行命令时的用户名。
	Username string `pulumi:"username"`
	// 创建的命令在ECS实例中运行的目录。
	WorkingDir string `pulumi:"workingDir"`
}

func LookupCommandOutput(ctx *pulumi.Context, args LookupCommandOutputArgs, opts ...pulumi.InvokeOption) LookupCommandResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCommandResultOutput, error) {
			args := v.(LookupCommandArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:ecs/getCommand:getCommand", args, LookupCommandResultOutput{}, options).(LookupCommandResultOutput), nil
		}).(LookupCommandResultOutput)
}

// A collection of arguments for invoking getCommand.
type LookupCommandOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupCommandOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommandArgs)(nil)).Elem()
}

// A collection of values returned by getCommand.
type LookupCommandResultOutput struct{ *pulumi.OutputState }

func (LookupCommandResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCommandResult)(nil)).Elem()
}

func (o LookupCommandResultOutput) ToLookupCommandResultOutput() LookupCommandResultOutput {
	return o
}

func (o LookupCommandResultOutput) ToLookupCommandResultOutputWithContext(ctx context.Context) LookupCommandResultOutput {
	return o
}

// 命令内容。请根据ContentEncoding参数传入相应命令内容。命令内容不能超过16KB。
func (o LookupCommandResultOutput) CommandContent() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.CommandContent }).(pulumi.StringOutput)
}

// 自定义命令ID。
func (o LookupCommandResultOutput) CommandId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.CommandId }).(pulumi.StringOutput)
}

// 命令内容是否经过Base64编码处理。Base64（默认）：经过Base64编码处理。PlainText： 未进行编码处理。
func (o LookupCommandResultOutput) ContentEncoding() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.ContentEncoding }).(pulumi.StringOutput)
}

// 创建时间。
func (o LookupCommandResultOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.CreatedTime }).(pulumi.StringOutput)
}

// 命令描述，默认为空字符串。字符长度0~256。不限制特殊字符。
func (o LookupCommandResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.Description }).(pulumi.StringOutput)
}

// 创建的命令是否使用自定义参数。false：默认，表示不使用自定义参数。true：表示使用自定义参数。
func (o LookupCommandResultOutput) EnableParameter() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupCommandResult) bool { return v.EnableParameter }).(pulumi.BoolOutput)
}

// Uniquely identifies the resource.
func (o LookupCommandResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.Id }).(pulumi.StringOutput)
}

// 命令被调用次数。
func (o LookupCommandResultOutput) InvocationTimes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCommandResult) int { return v.InvocationTimes }).(pulumi.IntOutput)
}

// 命令名称。字符长度1~32。不限制特殊字符。
func (o LookupCommandResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.Name }).(pulumi.StringOutput)
}

// 自定义参数定义信息。
func (o LookupCommandResultOutput) ParameterDefinitions() GetCommandParameterDefinitionArrayOutput {
	return o.ApplyT(func(v LookupCommandResult) []GetCommandParameterDefinition { return v.ParameterDefinitions }).(GetCommandParameterDefinitionArrayOutput)
}

// 资源所属项目，一个资源只能归属于一个项目。
func (o LookupCommandResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 命令的提供方。
func (o LookupCommandResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// 标签键值对。
func (o LookupCommandResultOutput) Tags() GetCommandTagArrayOutput {
	return o.ApplyT(func(v LookupCommandResult) []GetCommandTag { return v.Tags }).(GetCommandTagArrayOutput)
}

// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。取值范围：30~86400。默认值：60。
func (o LookupCommandResultOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v LookupCommandResult) int { return v.Timeout }).(pulumi.IntOutput)
}

// 命令的类型。Shell：表示创建一个在Linux实例中运行的Shell脚本。Python：表示创建一个Python脚本。Bat：表示创建一个Bat脚本。PowerShell：表示创建一个PowerShell脚本。
func (o LookupCommandResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.Type }).(pulumi.StringOutput)
}

// 更新时间。
func (o LookupCommandResultOutput) UpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.UpdatedTime }).(pulumi.StringOutput)
}

// 执行命令时的用户名。
func (o LookupCommandResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.Username }).(pulumi.StringOutput)
}

// 创建的命令在ECS实例中运行的目录。
func (o LookupCommandResultOutput) WorkingDir() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCommandResult) string { return v.WorkingDir }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCommandResultOutput{})
}
