// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// Data Source schema for Volcengine::ECS::Image
func LookupImage(ctx *pulumi.Context, args *LookupImageArgs, opts ...pulumi.InvokeOption) (*LookupImageResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupImageResult
	err := ctx.Invoke("volcenginecc:ecs/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type LookupImageArgs struct {
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getImage.
type LookupImageResult struct {
	// 镜像的架构类型。可以选择amd64（x86计算）、arm64（ARM计算）类型。
	Architecture string `pulumi:"architecture"`
	// 镜像的启动模式。可以选择BIOS、UEFI类型。
	BootMode string `pulumi:"bootMode"`
	// 镜像创建时间
	CreatedAt string `pulumi:"createdAt"`
	// 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
	Description string `pulumi:"description"`
	// 镜像的检测结果。
	DetectionResults GetImageDetectionResults `pulumi:"detectionResults"`
	// Uniquely identifies the resource.
	Id string `pulumi:"id"`
	// 镜像ID。
	ImageId string `pulumi:"imageId"`
	// 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
	ImageName string `pulumi:"imageName"`
	// 镜像所属的账号ID。
	ImageOwnerId string `pulumi:"imageOwnerId"`
	// 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
	InstanceId string `pulumi:"instanceId"`
	// 镜像中是否安装了云助手Agent。
	IsInstallRunCommandAgent bool `pulumi:"isInstallRunCommandAgent"`
	// 公共镜像是否长期维护。
	IsLts bool `pulumi:"isLts"`
	// 镜像是否支持Cloud-init。
	IsSupportCloudInit bool `pulumi:"isSupportCloudInit"`
	// 镜像的内核版本。
	Kernel string `pulumi:"kernel"`
	// 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
	LicenseType string `pulumi:"licenseType"`
	// 镜像操作系统的名称。
	OsName string `pulumi:"osName"`
	// 操作系统类型。
	OsType string `pulumi:"osType"`
	// 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
	Platform string `pulumi:"platform"`
	// 镜像的发行版本。
	PlatformVersion string `pulumi:"platformVersion"`
	// 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
	ProjectName string `pulumi:"projectName"`
	// 镜像共享的账户
	SharePermissions []string `pulumi:"sharePermissions"`
	// 镜像共享状态。HasShared：自定义镜像已被共享给其他用户。当自定义镜像未被共享或使用公共镜像时，ShareStatus返回为空。
	ShareStatus string `pulumi:"shareStatus"`
	// 镜像大小，单位为GiB。
	Size int `pulumi:"size"`
	// 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
	SnapshotGroupId string `pulumi:"snapshotGroupId"`
	// 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
	SnapshotId string `pulumi:"snapshotId"`
	// 镜像关联快照的信息。
	Snapshots []GetImageSnapshot `pulumi:"snapshots"`
	// 镜像的状态。
	Status string `pulumi:"status"`
	// 镜像绑定的标签列表。
	Tags []GetImageTag `pulumi:"tags"`
	// 镜像更新时间
	UpdatedAt string `pulumi:"updatedAt"`
	// 镜像大小，单位为Byte。
	VirtualSize float64 `pulumi:"virtualSize"`
	// 镜像的可见性。public：公共镜像。private：私有镜像。shared：共享镜像。
	Visibility string `pulumi:"visibility"`
}

func LookupImageOutput(ctx *pulumi.Context, args LookupImageOutputArgs, opts ...pulumi.InvokeOption) LookupImageResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupImageResultOutput, error) {
			args := v.(LookupImageArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("volcenginecc:ecs/getImage:getImage", args, LookupImageResultOutput{}, options).(LookupImageResultOutput), nil
		}).(LookupImageResultOutput)
}

// A collection of arguments for invoking getImage.
type LookupImageOutputArgs struct {
	// Uniquely identifies the resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageArgs)(nil)).Elem()
}

// A collection of values returned by getImage.
type LookupImageResultOutput struct{ *pulumi.OutputState }

func (LookupImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupImageResult)(nil)).Elem()
}

func (o LookupImageResultOutput) ToLookupImageResultOutput() LookupImageResultOutput {
	return o
}

func (o LookupImageResultOutput) ToLookupImageResultOutputWithContext(ctx context.Context) LookupImageResultOutput {
	return o
}

// 镜像的架构类型。可以选择amd64（x86计算）、arm64（ARM计算）类型。
func (o LookupImageResultOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Architecture }).(pulumi.StringOutput)
}

// 镜像的启动模式。可以选择BIOS、UEFI类型。
func (o LookupImageResultOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.BootMode }).(pulumi.StringOutput)
}

// 镜像创建时间
func (o LookupImageResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
func (o LookupImageResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Description }).(pulumi.StringOutput)
}

// 镜像的检测结果。
func (o LookupImageResultOutput) DetectionResults() GetImageDetectionResultsOutput {
	return o.ApplyT(func(v LookupImageResult) GetImageDetectionResults { return v.DetectionResults }).(GetImageDetectionResultsOutput)
}

// Uniquely identifies the resource.
func (o LookupImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Id }).(pulumi.StringOutput)
}

// 镜像ID。
func (o LookupImageResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ImageId }).(pulumi.StringOutput)
}

// 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
func (o LookupImageResultOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ImageName }).(pulumi.StringOutput)
}

// 镜像所属的账号ID。
func (o LookupImageResultOutput) ImageOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ImageOwnerId }).(pulumi.StringOutput)
}

// 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
func (o LookupImageResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// 镜像中是否安装了云助手Agent。
func (o LookupImageResultOutput) IsInstallRunCommandAgent() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupImageResult) bool { return v.IsInstallRunCommandAgent }).(pulumi.BoolOutput)
}

// 公共镜像是否长期维护。
func (o LookupImageResultOutput) IsLts() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupImageResult) bool { return v.IsLts }).(pulumi.BoolOutput)
}

// 镜像是否支持Cloud-init。
func (o LookupImageResultOutput) IsSupportCloudInit() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupImageResult) bool { return v.IsSupportCloudInit }).(pulumi.BoolOutput)
}

// 镜像的内核版本。
func (o LookupImageResultOutput) Kernel() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Kernel }).(pulumi.StringOutput)
}

// 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
func (o LookupImageResultOutput) LicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.LicenseType }).(pulumi.StringOutput)
}

// 镜像操作系统的名称。
func (o LookupImageResultOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.OsName }).(pulumi.StringOutput)
}

// 操作系统类型。
func (o LookupImageResultOutput) OsType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.OsType }).(pulumi.StringOutput)
}

// 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
func (o LookupImageResultOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Platform }).(pulumi.StringOutput)
}

// 镜像的发行版本。
func (o LookupImageResultOutput) PlatformVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.PlatformVersion }).(pulumi.StringOutput)
}

// 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
func (o LookupImageResultOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ProjectName }).(pulumi.StringOutput)
}

// 镜像共享的账户
func (o LookupImageResultOutput) SharePermissions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []string { return v.SharePermissions }).(pulumi.StringArrayOutput)
}

// 镜像共享状态。HasShared：自定义镜像已被共享给其他用户。当自定义镜像未被共享或使用公共镜像时，ShareStatus返回为空。
func (o LookupImageResultOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.ShareStatus }).(pulumi.StringOutput)
}

// 镜像大小，单位为GiB。
func (o LookupImageResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupImageResult) int { return v.Size }).(pulumi.IntOutput)
}

// 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
func (o LookupImageResultOutput) SnapshotGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.SnapshotGroupId }).(pulumi.StringOutput)
}

// 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
func (o LookupImageResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// 镜像关联快照的信息。
func (o LookupImageResultOutput) Snapshots() GetImageSnapshotArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageSnapshot { return v.Snapshots }).(GetImageSnapshotArrayOutput)
}

// 镜像的状态。
func (o LookupImageResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Status }).(pulumi.StringOutput)
}

// 镜像绑定的标签列表。
func (o LookupImageResultOutput) Tags() GetImageTagArrayOutput {
	return o.ApplyT(func(v LookupImageResult) []GetImageTag { return v.Tags }).(GetImageTagArrayOutput)
}

// 镜像更新时间
func (o LookupImageResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// 镜像大小，单位为Byte。
func (o LookupImageResultOutput) VirtualSize() pulumi.Float64Output {
	return o.ApplyT(func(v LookupImageResult) float64 { return v.VirtualSize }).(pulumi.Float64Output)
}

// 镜像的可见性。public：公共镜像。private：私有镜像。shared：共享镜像。
func (o LookupImageResultOutput) Visibility() pulumi.StringOutput {
	return o.ApplyT(func(v LookupImageResult) string { return v.Visibility }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupImageResultOutput{})
}
