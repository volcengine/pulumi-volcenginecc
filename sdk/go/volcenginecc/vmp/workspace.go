// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmp

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 工作区（Workspace）是 VMP 服务中采集数据和规则的抽象整合，为用户提供物理隔离或逻辑隔离的 Prometheus 能力。在 VMP 服务中可创建不同的工作区，不同工作区中的数据彼此隔离。
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/vmp"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmp.NewWorkspace(ctx, "WorkspaceDemo", &vmp.WorkspaceArgs{
//				Username:                pulumi.String("WorkspaceDemo"),
//				Password:                pulumi.String("***********"),
//				Name:                    pulumi.String("WorkspaceDemo"),
//				Description:             pulumi.String("WorkspaceDemo"),
//				DeleteProtectionEnabled: pulumi.Bool(false),
//				InstanceTypeId:          pulumi.String("vmp.standard.xxx"),
//				ProjectName:             pulumi.String("default"),
//				Tags: vmp.WorkspaceTagArray{
//					&vmp.WorkspaceTagArgs{
//						Key:   pulumi.String("env"),
//						Value: pulumi.String("test"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:vmp/workspace:Workspace example "workspace_id"
// ```
type Workspace struct {
	pulumi.CustomResourceState

	// 工作区创建时间，RFC3339 格式。
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// 是否开启工作区删除保护,true：开启，false：关闭。
	DeleteProtectionEnabled pulumi.BoolOutput `pulumi:"deleteProtectionEnabled"`
	// 工作区描述信息，字符串形式，长度限制为 0～200。
	Description pulumi.StringOutput `pulumi:"description"`
	// 工作区规格详情。
	InstanceType WorkspaceInstanceTypeOutput `pulumi:"instanceType"`
	// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
	InstanceTypeId pulumi.StringOutput `pulumi:"instanceTypeId"`
	// 工作区名称，字符串形式，长度限制为 1～100。
	Name pulumi.StringOutput `pulumi:"name"`
	// 工作区预期欠费回收时间，RFC3339 格式。
	OverdueReclaimTime pulumi.StringOutput `pulumi:"overdueReclaimTime"`
	// 工作区 BasicAuth 密码。
	Password pulumi.StringOutput `pulumi:"password"`
	// 项目名称。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 工作区 Push Gateway URL 地址。
	PrometheusPushIntranetEndpoint pulumi.StringOutput `pulumi:"prometheusPushIntranetEndpoint"`
	// 工作区 Query URL 地址。
	PrometheusQueryIntranetEndpoint pulumi.StringOutput `pulumi:"prometheusQueryIntranetEndpoint"`
	// 工作区 RemoteWrite URL 地址。
	PrometheusWriteIntranetEndpoint pulumi.StringOutput `pulumi:"prometheusWriteIntranetEndpoint"`
	// 工作区配额详情。
	Quota WorkspaceQuotaOutput `pulumi:"quota"`
	// 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
	Status pulumi.StringOutput     `pulumi:"status"`
	Tags   WorkspaceTagArrayOutput `pulumi:"tags"`
	// 工作区用量。
	Usage WorkspaceUsageOutput `pulumi:"usage"`
	// 工作区 BasicAuth 用户名。
	Username pulumi.StringOutput `pulumi:"username"`
	// 工作区Id。
	WorkspaceId pulumi.StringOutput `pulumi:"workspaceId"`
}

// NewWorkspace registers a new resource with the given unique name, arguments, and options.
func NewWorkspace(ctx *pulumi.Context,
	name string, args *WorkspaceArgs, opts ...pulumi.ResourceOption) (*Workspace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceTypeId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceTypeId'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Workspace
	err := ctx.RegisterResource("volcenginecc:vmp/workspace:Workspace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWorkspace gets an existing Workspace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWorkspace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WorkspaceState, opts ...pulumi.ResourceOption) (*Workspace, error) {
	var resource Workspace
	err := ctx.ReadResource("volcenginecc:vmp/workspace:Workspace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Workspace resources.
type workspaceState struct {
	// 工作区创建时间，RFC3339 格式。
	CreateTime *string `pulumi:"createTime"`
	// 是否开启工作区删除保护,true：开启，false：关闭。
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// 工作区描述信息，字符串形式，长度限制为 0～200。
	Description *string `pulumi:"description"`
	// 工作区规格详情。
	InstanceType *WorkspaceInstanceType `pulumi:"instanceType"`
	// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
	InstanceTypeId *string `pulumi:"instanceTypeId"`
	// 工作区名称，字符串形式，长度限制为 1～100。
	Name *string `pulumi:"name"`
	// 工作区预期欠费回收时间，RFC3339 格式。
	OverdueReclaimTime *string `pulumi:"overdueReclaimTime"`
	// 工作区 BasicAuth 密码。
	Password *string `pulumi:"password"`
	// 项目名称。
	ProjectName *string `pulumi:"projectName"`
	// 工作区 Push Gateway URL 地址。
	PrometheusPushIntranetEndpoint *string `pulumi:"prometheusPushIntranetEndpoint"`
	// 工作区 Query URL 地址。
	PrometheusQueryIntranetEndpoint *string `pulumi:"prometheusQueryIntranetEndpoint"`
	// 工作区 RemoteWrite URL 地址。
	PrometheusWriteIntranetEndpoint *string `pulumi:"prometheusWriteIntranetEndpoint"`
	// 工作区配额详情。
	Quota *WorkspaceQuota `pulumi:"quota"`
	// 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
	Status *string        `pulumi:"status"`
	Tags   []WorkspaceTag `pulumi:"tags"`
	// 工作区用量。
	Usage *WorkspaceUsage `pulumi:"usage"`
	// 工作区 BasicAuth 用户名。
	Username *string `pulumi:"username"`
	// 工作区Id。
	WorkspaceId *string `pulumi:"workspaceId"`
}

type WorkspaceState struct {
	// 工作区创建时间，RFC3339 格式。
	CreateTime pulumi.StringPtrInput
	// 是否开启工作区删除保护,true：开启，false：关闭。
	DeleteProtectionEnabled pulumi.BoolPtrInput
	// 工作区描述信息，字符串形式，长度限制为 0～200。
	Description pulumi.StringPtrInput
	// 工作区规格详情。
	InstanceType WorkspaceInstanceTypePtrInput
	// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
	InstanceTypeId pulumi.StringPtrInput
	// 工作区名称，字符串形式，长度限制为 1～100。
	Name pulumi.StringPtrInput
	// 工作区预期欠费回收时间，RFC3339 格式。
	OverdueReclaimTime pulumi.StringPtrInput
	// 工作区 BasicAuth 密码。
	Password pulumi.StringPtrInput
	// 项目名称。
	ProjectName pulumi.StringPtrInput
	// 工作区 Push Gateway URL 地址。
	PrometheusPushIntranetEndpoint pulumi.StringPtrInput
	// 工作区 Query URL 地址。
	PrometheusQueryIntranetEndpoint pulumi.StringPtrInput
	// 工作区 RemoteWrite URL 地址。
	PrometheusWriteIntranetEndpoint pulumi.StringPtrInput
	// 工作区配额详情。
	Quota WorkspaceQuotaPtrInput
	// 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
	Status pulumi.StringPtrInput
	Tags   WorkspaceTagArrayInput
	// 工作区用量。
	Usage WorkspaceUsagePtrInput
	// 工作区 BasicAuth 用户名。
	Username pulumi.StringPtrInput
	// 工作区Id。
	WorkspaceId pulumi.StringPtrInput
}

func (WorkspaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceState)(nil)).Elem()
}

type workspaceArgs struct {
	// 是否开启工作区删除保护,true：开启，false：关闭。
	DeleteProtectionEnabled *bool `pulumi:"deleteProtectionEnabled"`
	// 工作区描述信息，字符串形式，长度限制为 0～200。
	Description *string `pulumi:"description"`
	// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
	InstanceTypeId string `pulumi:"instanceTypeId"`
	// 工作区名称，字符串形式，长度限制为 1～100。
	Name string `pulumi:"name"`
	// 工作区 BasicAuth 密码。
	Password *string `pulumi:"password"`
	// 项目名称。
	ProjectName *string        `pulumi:"projectName"`
	Tags        []WorkspaceTag `pulumi:"tags"`
	// 工作区 BasicAuth 用户名。
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a Workspace resource.
type WorkspaceArgs struct {
	// 是否开启工作区删除保护,true：开启，false：关闭。
	DeleteProtectionEnabled pulumi.BoolPtrInput
	// 工作区描述信息，字符串形式，长度限制为 0～200。
	Description pulumi.StringPtrInput
	// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
	InstanceTypeId pulumi.StringInput
	// 工作区名称，字符串形式，长度限制为 1～100。
	Name pulumi.StringInput
	// 工作区 BasicAuth 密码。
	Password pulumi.StringPtrInput
	// 项目名称。
	ProjectName pulumi.StringPtrInput
	Tags        WorkspaceTagArrayInput
	// 工作区 BasicAuth 用户名。
	Username pulumi.StringPtrInput
}

func (WorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*workspaceArgs)(nil)).Elem()
}

type WorkspaceInput interface {
	pulumi.Input

	ToWorkspaceOutput() WorkspaceOutput
	ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput
}

func (*Workspace) ElementType() reflect.Type {
	return reflect.TypeOf((**Workspace)(nil)).Elem()
}

func (i *Workspace) ToWorkspaceOutput() WorkspaceOutput {
	return i.ToWorkspaceOutputWithContext(context.Background())
}

func (i *Workspace) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceOutput)
}

// WorkspaceArrayInput is an input type that accepts WorkspaceArray and WorkspaceArrayOutput values.
// You can construct a concrete instance of `WorkspaceArrayInput` via:
//
//	WorkspaceArray{ WorkspaceArgs{...} }
type WorkspaceArrayInput interface {
	pulumi.Input

	ToWorkspaceArrayOutput() WorkspaceArrayOutput
	ToWorkspaceArrayOutputWithContext(context.Context) WorkspaceArrayOutput
}

type WorkspaceArray []WorkspaceInput

func (WorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workspace)(nil)).Elem()
}

func (i WorkspaceArray) ToWorkspaceArrayOutput() WorkspaceArrayOutput {
	return i.ToWorkspaceArrayOutputWithContext(context.Background())
}

func (i WorkspaceArray) ToWorkspaceArrayOutputWithContext(ctx context.Context) WorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceArrayOutput)
}

// WorkspaceMapInput is an input type that accepts WorkspaceMap and WorkspaceMapOutput values.
// You can construct a concrete instance of `WorkspaceMapInput` via:
//
//	WorkspaceMap{ "key": WorkspaceArgs{...} }
type WorkspaceMapInput interface {
	pulumi.Input

	ToWorkspaceMapOutput() WorkspaceMapOutput
	ToWorkspaceMapOutputWithContext(context.Context) WorkspaceMapOutput
}

type WorkspaceMap map[string]WorkspaceInput

func (WorkspaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workspace)(nil)).Elem()
}

func (i WorkspaceMap) ToWorkspaceMapOutput() WorkspaceMapOutput {
	return i.ToWorkspaceMapOutputWithContext(context.Background())
}

func (i WorkspaceMap) ToWorkspaceMapOutputWithContext(ctx context.Context) WorkspaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceMapOutput)
}

type WorkspaceOutput struct{ *pulumi.OutputState }

func (WorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Workspace)(nil)).Elem()
}

func (o WorkspaceOutput) ToWorkspaceOutput() WorkspaceOutput {
	return o
}

func (o WorkspaceOutput) ToWorkspaceOutputWithContext(ctx context.Context) WorkspaceOutput {
	return o
}

// 工作区创建时间，RFC3339 格式。
func (o WorkspaceOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// 是否开启工作区删除保护,true：开启，false：关闭。
func (o WorkspaceOutput) DeleteProtectionEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Workspace) pulumi.BoolOutput { return v.DeleteProtectionEnabled }).(pulumi.BoolOutput)
}

// 工作区描述信息，字符串形式，长度限制为 0～200。
func (o WorkspaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// 工作区规格详情。
func (o WorkspaceOutput) InstanceType() WorkspaceInstanceTypeOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceInstanceTypeOutput { return v.InstanceType }).(WorkspaceInstanceTypeOutput)
}

// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
func (o WorkspaceOutput) InstanceTypeId() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.InstanceTypeId }).(pulumi.StringOutput)
}

// 工作区名称，字符串形式，长度限制为 1～100。
func (o WorkspaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// 工作区预期欠费回收时间，RFC3339 格式。
func (o WorkspaceOutput) OverdueReclaimTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.OverdueReclaimTime }).(pulumi.StringOutput)
}

// 工作区 BasicAuth 密码。
func (o WorkspaceOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// 项目名称。
func (o WorkspaceOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 工作区 Push Gateway URL 地址。
func (o WorkspaceOutput) PrometheusPushIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.PrometheusPushIntranetEndpoint }).(pulumi.StringOutput)
}

// 工作区 Query URL 地址。
func (o WorkspaceOutput) PrometheusQueryIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.PrometheusQueryIntranetEndpoint }).(pulumi.StringOutput)
}

// 工作区 RemoteWrite URL 地址。
func (o WorkspaceOutput) PrometheusWriteIntranetEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.PrometheusWriteIntranetEndpoint }).(pulumi.StringOutput)
}

// 工作区配额详情。
func (o WorkspaceOutput) Quota() WorkspaceQuotaOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceQuotaOutput { return v.Quota }).(WorkspaceQuotaOutput)
}

// 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
func (o WorkspaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o WorkspaceOutput) Tags() WorkspaceTagArrayOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceTagArrayOutput { return v.Tags }).(WorkspaceTagArrayOutput)
}

// 工作区用量。
func (o WorkspaceOutput) Usage() WorkspaceUsageOutput {
	return o.ApplyT(func(v *Workspace) WorkspaceUsageOutput { return v.Usage }).(WorkspaceUsageOutput)
}

// 工作区 BasicAuth 用户名。
func (o WorkspaceOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// 工作区Id。
func (o WorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Workspace) pulumi.StringOutput { return v.WorkspaceId }).(pulumi.StringOutput)
}

type WorkspaceArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Workspace)(nil)).Elem()
}

func (o WorkspaceArrayOutput) ToWorkspaceArrayOutput() WorkspaceArrayOutput {
	return o
}

func (o WorkspaceArrayOutput) ToWorkspaceArrayOutputWithContext(ctx context.Context) WorkspaceArrayOutput {
	return o
}

func (o WorkspaceArrayOutput) Index(i pulumi.IntInput) WorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Workspace {
		return vs[0].([]*Workspace)[vs[1].(int)]
	}).(WorkspaceOutput)
}

type WorkspaceMapOutput struct{ *pulumi.OutputState }

func (WorkspaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Workspace)(nil)).Elem()
}

func (o WorkspaceMapOutput) ToWorkspaceMapOutput() WorkspaceMapOutput {
	return o
}

func (o WorkspaceMapOutput) ToWorkspaceMapOutputWithContext(ctx context.Context) WorkspaceMapOutput {
	return o
}

func (o WorkspaceMapOutput) MapIndex(k pulumi.StringInput) WorkspaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Workspace {
		return vs[0].(map[string]*Workspace)[vs[1].(string)]
	}).(WorkspaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceInput)(nil)).Elem(), &Workspace{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceArrayInput)(nil)).Elem(), WorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkspaceMapInput)(nil)).Elem(), WorkspaceMap{})
	pulumi.RegisterOutputType(WorkspaceOutput{})
	pulumi.RegisterOutputType(WorkspaceArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceMapOutput{})
}
