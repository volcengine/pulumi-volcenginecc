// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type ScalingConfigurationEip struct {
	// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
	Bandwidth *int `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
	BandwidthPackageId *string `pulumi:"bandwidthPackageId"`
	// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
	BillingType *string `pulumi:"billingType"`
	// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
	Isp *string `pulumi:"isp"`
}

// ScalingConfigurationEipInput is an input type that accepts ScalingConfigurationEipArgs and ScalingConfigurationEipOutput values.
// You can construct a concrete instance of `ScalingConfigurationEipInput` via:
//
//	ScalingConfigurationEipArgs{...}
type ScalingConfigurationEipInput interface {
	pulumi.Input

	ToScalingConfigurationEipOutput() ScalingConfigurationEipOutput
	ToScalingConfigurationEipOutputWithContext(context.Context) ScalingConfigurationEipOutput
}

type ScalingConfigurationEipArgs struct {
	// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
	Bandwidth pulumi.IntPtrInput `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
	BandwidthPackageId pulumi.StringPtrInput `pulumi:"bandwidthPackageId"`
	// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
	BillingType pulumi.StringPtrInput `pulumi:"billingType"`
	// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
	Isp pulumi.StringPtrInput `pulumi:"isp"`
}

func (ScalingConfigurationEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationEip)(nil)).Elem()
}

func (i ScalingConfigurationEipArgs) ToScalingConfigurationEipOutput() ScalingConfigurationEipOutput {
	return i.ToScalingConfigurationEipOutputWithContext(context.Background())
}

func (i ScalingConfigurationEipArgs) ToScalingConfigurationEipOutputWithContext(ctx context.Context) ScalingConfigurationEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationEipOutput)
}

func (i ScalingConfigurationEipArgs) ToScalingConfigurationEipPtrOutput() ScalingConfigurationEipPtrOutput {
	return i.ToScalingConfigurationEipPtrOutputWithContext(context.Background())
}

func (i ScalingConfigurationEipArgs) ToScalingConfigurationEipPtrOutputWithContext(ctx context.Context) ScalingConfigurationEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationEipOutput).ToScalingConfigurationEipPtrOutputWithContext(ctx)
}

// ScalingConfigurationEipPtrInput is an input type that accepts ScalingConfigurationEipArgs, ScalingConfigurationEipPtr and ScalingConfigurationEipPtrOutput values.
// You can construct a concrete instance of `ScalingConfigurationEipPtrInput` via:
//
//	        ScalingConfigurationEipArgs{...}
//
//	or:
//
//	        nil
type ScalingConfigurationEipPtrInput interface {
	pulumi.Input

	ToScalingConfigurationEipPtrOutput() ScalingConfigurationEipPtrOutput
	ToScalingConfigurationEipPtrOutputWithContext(context.Context) ScalingConfigurationEipPtrOutput
}

type scalingConfigurationEipPtrType ScalingConfigurationEipArgs

func ScalingConfigurationEipPtr(v *ScalingConfigurationEipArgs) ScalingConfigurationEipPtrInput {
	return (*scalingConfigurationEipPtrType)(v)
}

func (*scalingConfigurationEipPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfigurationEip)(nil)).Elem()
}

func (i *scalingConfigurationEipPtrType) ToScalingConfigurationEipPtrOutput() ScalingConfigurationEipPtrOutput {
	return i.ToScalingConfigurationEipPtrOutputWithContext(context.Background())
}

func (i *scalingConfigurationEipPtrType) ToScalingConfigurationEipPtrOutputWithContext(ctx context.Context) ScalingConfigurationEipPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationEipPtrOutput)
}

type ScalingConfigurationEipOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationEip)(nil)).Elem()
}

func (o ScalingConfigurationEipOutput) ToScalingConfigurationEipOutput() ScalingConfigurationEipOutput {
	return o
}

func (o ScalingConfigurationEipOutput) ToScalingConfigurationEipOutputWithContext(ctx context.Context) ScalingConfigurationEipOutput {
	return o
}

func (o ScalingConfigurationEipOutput) ToScalingConfigurationEipPtrOutput() ScalingConfigurationEipPtrOutput {
	return o.ToScalingConfigurationEipPtrOutputWithContext(context.Background())
}

func (o ScalingConfigurationEipOutput) ToScalingConfigurationEipPtrOutputWithContext(ctx context.Context) ScalingConfigurationEipPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScalingConfigurationEip) *ScalingConfigurationEip {
		return &v
	}).(ScalingConfigurationEipPtrOutput)
}

// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
func (o ScalingConfigurationEipOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationEip) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
func (o ScalingConfigurationEipOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationEip) *string { return v.BandwidthPackageId }).(pulumi.StringPtrOutput)
}

// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
func (o ScalingConfigurationEipOutput) BillingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationEip) *string { return v.BillingType }).(pulumi.StringPtrOutput)
}

// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
func (o ScalingConfigurationEipOutput) Isp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationEip) *string { return v.Isp }).(pulumi.StringPtrOutput)
}

type ScalingConfigurationEipPtrOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationEipPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfigurationEip)(nil)).Elem()
}

func (o ScalingConfigurationEipPtrOutput) ToScalingConfigurationEipPtrOutput() ScalingConfigurationEipPtrOutput {
	return o
}

func (o ScalingConfigurationEipPtrOutput) ToScalingConfigurationEipPtrOutputWithContext(ctx context.Context) ScalingConfigurationEipPtrOutput {
	return o
}

func (o ScalingConfigurationEipPtrOutput) Elem() ScalingConfigurationEipOutput {
	return o.ApplyT(func(v *ScalingConfigurationEip) ScalingConfigurationEip {
		if v != nil {
			return *v
		}
		var ret ScalingConfigurationEip
		return ret
	}).(ScalingConfigurationEipOutput)
}

// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
func (o ScalingConfigurationEipPtrOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationEip) *int {
		if v == nil {
			return nil
		}
		return v.Bandwidth
	}).(pulumi.IntPtrOutput)
}

// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
func (o ScalingConfigurationEipPtrOutput) BandwidthPackageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationEip) *string {
		if v == nil {
			return nil
		}
		return v.BandwidthPackageId
	}).(pulumi.StringPtrOutput)
}

// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
func (o ScalingConfigurationEipPtrOutput) BillingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationEip) *string {
		if v == nil {
			return nil
		}
		return v.BillingType
	}).(pulumi.StringPtrOutput)
}

// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
func (o ScalingConfigurationEipPtrOutput) Isp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScalingConfigurationEip) *string {
		if v == nil {
			return nil
		}
		return v.Isp
	}).(pulumi.StringPtrOutput)
}

type ScalingConfigurationInstanceTypeOverride struct {
	// 指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。
	InstanceType *string `pulumi:"instanceType"`
	// 指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。
	PriceLimit *float64 `pulumi:"priceLimit"`
}

// ScalingConfigurationInstanceTypeOverrideInput is an input type that accepts ScalingConfigurationInstanceTypeOverrideArgs and ScalingConfigurationInstanceTypeOverrideOutput values.
// You can construct a concrete instance of `ScalingConfigurationInstanceTypeOverrideInput` via:
//
//	ScalingConfigurationInstanceTypeOverrideArgs{...}
type ScalingConfigurationInstanceTypeOverrideInput interface {
	pulumi.Input

	ToScalingConfigurationInstanceTypeOverrideOutput() ScalingConfigurationInstanceTypeOverrideOutput
	ToScalingConfigurationInstanceTypeOverrideOutputWithContext(context.Context) ScalingConfigurationInstanceTypeOverrideOutput
}

type ScalingConfigurationInstanceTypeOverrideArgs struct {
	// 指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// 指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。
	PriceLimit pulumi.Float64PtrInput `pulumi:"priceLimit"`
}

func (ScalingConfigurationInstanceTypeOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (i ScalingConfigurationInstanceTypeOverrideArgs) ToScalingConfigurationInstanceTypeOverrideOutput() ScalingConfigurationInstanceTypeOverrideOutput {
	return i.ToScalingConfigurationInstanceTypeOverrideOutputWithContext(context.Background())
}

func (i ScalingConfigurationInstanceTypeOverrideArgs) ToScalingConfigurationInstanceTypeOverrideOutputWithContext(ctx context.Context) ScalingConfigurationInstanceTypeOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationInstanceTypeOverrideOutput)
}

// ScalingConfigurationInstanceTypeOverrideArrayInput is an input type that accepts ScalingConfigurationInstanceTypeOverrideArray and ScalingConfigurationInstanceTypeOverrideArrayOutput values.
// You can construct a concrete instance of `ScalingConfigurationInstanceTypeOverrideArrayInput` via:
//
//	ScalingConfigurationInstanceTypeOverrideArray{ ScalingConfigurationInstanceTypeOverrideArgs{...} }
type ScalingConfigurationInstanceTypeOverrideArrayInput interface {
	pulumi.Input

	ToScalingConfigurationInstanceTypeOverrideArrayOutput() ScalingConfigurationInstanceTypeOverrideArrayOutput
	ToScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(context.Context) ScalingConfigurationInstanceTypeOverrideArrayOutput
}

type ScalingConfigurationInstanceTypeOverrideArray []ScalingConfigurationInstanceTypeOverrideInput

func (ScalingConfigurationInstanceTypeOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (i ScalingConfigurationInstanceTypeOverrideArray) ToScalingConfigurationInstanceTypeOverrideArrayOutput() ScalingConfigurationInstanceTypeOverrideArrayOutput {
	return i.ToScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(context.Background())
}

func (i ScalingConfigurationInstanceTypeOverrideArray) ToScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(ctx context.Context) ScalingConfigurationInstanceTypeOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationInstanceTypeOverrideArrayOutput)
}

type ScalingConfigurationInstanceTypeOverrideOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationInstanceTypeOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (o ScalingConfigurationInstanceTypeOverrideOutput) ToScalingConfigurationInstanceTypeOverrideOutput() ScalingConfigurationInstanceTypeOverrideOutput {
	return o
}

func (o ScalingConfigurationInstanceTypeOverrideOutput) ToScalingConfigurationInstanceTypeOverrideOutputWithContext(ctx context.Context) ScalingConfigurationInstanceTypeOverrideOutput {
	return o
}

// 指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。
func (o ScalingConfigurationInstanceTypeOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationInstanceTypeOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// 指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。
func (o ScalingConfigurationInstanceTypeOverrideOutput) PriceLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScalingConfigurationInstanceTypeOverride) *float64 { return v.PriceLimit }).(pulumi.Float64PtrOutput)
}

type ScalingConfigurationInstanceTypeOverrideArrayOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationInstanceTypeOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (o ScalingConfigurationInstanceTypeOverrideArrayOutput) ToScalingConfigurationInstanceTypeOverrideArrayOutput() ScalingConfigurationInstanceTypeOverrideArrayOutput {
	return o
}

func (o ScalingConfigurationInstanceTypeOverrideArrayOutput) ToScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(ctx context.Context) ScalingConfigurationInstanceTypeOverrideArrayOutput {
	return o
}

func (o ScalingConfigurationInstanceTypeOverrideArrayOutput) Index(i pulumi.IntInput) ScalingConfigurationInstanceTypeOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingConfigurationInstanceTypeOverride {
		return vs[0].([]ScalingConfigurationInstanceTypeOverride)[vs[1].(int)]
	}).(ScalingConfigurationInstanceTypeOverrideOutput)
}

type ScalingConfigurationTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// ScalingConfigurationTagInput is an input type that accepts ScalingConfigurationTagArgs and ScalingConfigurationTagOutput values.
// You can construct a concrete instance of `ScalingConfigurationTagInput` via:
//
//	ScalingConfigurationTagArgs{...}
type ScalingConfigurationTagInput interface {
	pulumi.Input

	ToScalingConfigurationTagOutput() ScalingConfigurationTagOutput
	ToScalingConfigurationTagOutputWithContext(context.Context) ScalingConfigurationTagOutput
}

type ScalingConfigurationTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ScalingConfigurationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationTag)(nil)).Elem()
}

func (i ScalingConfigurationTagArgs) ToScalingConfigurationTagOutput() ScalingConfigurationTagOutput {
	return i.ToScalingConfigurationTagOutputWithContext(context.Background())
}

func (i ScalingConfigurationTagArgs) ToScalingConfigurationTagOutputWithContext(ctx context.Context) ScalingConfigurationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationTagOutput)
}

// ScalingConfigurationTagArrayInput is an input type that accepts ScalingConfigurationTagArray and ScalingConfigurationTagArrayOutput values.
// You can construct a concrete instance of `ScalingConfigurationTagArrayInput` via:
//
//	ScalingConfigurationTagArray{ ScalingConfigurationTagArgs{...} }
type ScalingConfigurationTagArrayInput interface {
	pulumi.Input

	ToScalingConfigurationTagArrayOutput() ScalingConfigurationTagArrayOutput
	ToScalingConfigurationTagArrayOutputWithContext(context.Context) ScalingConfigurationTagArrayOutput
}

type ScalingConfigurationTagArray []ScalingConfigurationTagInput

func (ScalingConfigurationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingConfigurationTag)(nil)).Elem()
}

func (i ScalingConfigurationTagArray) ToScalingConfigurationTagArrayOutput() ScalingConfigurationTagArrayOutput {
	return i.ToScalingConfigurationTagArrayOutputWithContext(context.Background())
}

func (i ScalingConfigurationTagArray) ToScalingConfigurationTagArrayOutputWithContext(ctx context.Context) ScalingConfigurationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationTagArrayOutput)
}

type ScalingConfigurationTagOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationTag)(nil)).Elem()
}

func (o ScalingConfigurationTagOutput) ToScalingConfigurationTagOutput() ScalingConfigurationTagOutput {
	return o
}

func (o ScalingConfigurationTagOutput) ToScalingConfigurationTagOutputWithContext(ctx context.Context) ScalingConfigurationTagOutput {
	return o
}

// 标签键。
func (o ScalingConfigurationTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o ScalingConfigurationTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScalingConfigurationTagArrayOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingConfigurationTag)(nil)).Elem()
}

func (o ScalingConfigurationTagArrayOutput) ToScalingConfigurationTagArrayOutput() ScalingConfigurationTagArrayOutput {
	return o
}

func (o ScalingConfigurationTagArrayOutput) ToScalingConfigurationTagArrayOutputWithContext(ctx context.Context) ScalingConfigurationTagArrayOutput {
	return o
}

func (o ScalingConfigurationTagArrayOutput) Index(i pulumi.IntInput) ScalingConfigurationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingConfigurationTag {
		return vs[0].([]ScalingConfigurationTag)[vs[1].(int)]
	}).(ScalingConfigurationTagOutput)
}

type ScalingConfigurationVolume struct {
	// 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
	DeleteWithInstance *bool `pulumi:"deleteWithInstance"`
	// 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。
	Size *int `pulumi:"size"`
	// 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&分隔。
	VolumeType *string `pulumi:"volumeType"`
}

// ScalingConfigurationVolumeInput is an input type that accepts ScalingConfigurationVolumeArgs and ScalingConfigurationVolumeOutput values.
// You can construct a concrete instance of `ScalingConfigurationVolumeInput` via:
//
//	ScalingConfigurationVolumeArgs{...}
type ScalingConfigurationVolumeInput interface {
	pulumi.Input

	ToScalingConfigurationVolumeOutput() ScalingConfigurationVolumeOutput
	ToScalingConfigurationVolumeOutputWithContext(context.Context) ScalingConfigurationVolumeOutput
}

type ScalingConfigurationVolumeArgs struct {
	// 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
	DeleteWithInstance pulumi.BoolPtrInput `pulumi:"deleteWithInstance"`
	// 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。
	Size pulumi.IntPtrInput `pulumi:"size"`
	// 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&分隔。
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (ScalingConfigurationVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationVolume)(nil)).Elem()
}

func (i ScalingConfigurationVolumeArgs) ToScalingConfigurationVolumeOutput() ScalingConfigurationVolumeOutput {
	return i.ToScalingConfigurationVolumeOutputWithContext(context.Background())
}

func (i ScalingConfigurationVolumeArgs) ToScalingConfigurationVolumeOutputWithContext(ctx context.Context) ScalingConfigurationVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationVolumeOutput)
}

// ScalingConfigurationVolumeArrayInput is an input type that accepts ScalingConfigurationVolumeArray and ScalingConfigurationVolumeArrayOutput values.
// You can construct a concrete instance of `ScalingConfigurationVolumeArrayInput` via:
//
//	ScalingConfigurationVolumeArray{ ScalingConfigurationVolumeArgs{...} }
type ScalingConfigurationVolumeArrayInput interface {
	pulumi.Input

	ToScalingConfigurationVolumeArrayOutput() ScalingConfigurationVolumeArrayOutput
	ToScalingConfigurationVolumeArrayOutputWithContext(context.Context) ScalingConfigurationVolumeArrayOutput
}

type ScalingConfigurationVolumeArray []ScalingConfigurationVolumeInput

func (ScalingConfigurationVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingConfigurationVolume)(nil)).Elem()
}

func (i ScalingConfigurationVolumeArray) ToScalingConfigurationVolumeArrayOutput() ScalingConfigurationVolumeArrayOutput {
	return i.ToScalingConfigurationVolumeArrayOutputWithContext(context.Background())
}

func (i ScalingConfigurationVolumeArray) ToScalingConfigurationVolumeArrayOutputWithContext(ctx context.Context) ScalingConfigurationVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationVolumeArrayOutput)
}

type ScalingConfigurationVolumeOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScalingConfigurationVolume)(nil)).Elem()
}

func (o ScalingConfigurationVolumeOutput) ToScalingConfigurationVolumeOutput() ScalingConfigurationVolumeOutput {
	return o
}

func (o ScalingConfigurationVolumeOutput) ToScalingConfigurationVolumeOutputWithContext(ctx context.Context) ScalingConfigurationVolumeOutput {
	return o
}

// 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
func (o ScalingConfigurationVolumeOutput) DeleteWithInstance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationVolume) *bool { return v.DeleteWithInstance }).(pulumi.BoolPtrOutput)
}

// 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。
func (o ScalingConfigurationVolumeOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationVolume) *int { return v.Size }).(pulumi.IntPtrOutput)
}

// 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&分隔。
func (o ScalingConfigurationVolumeOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScalingConfigurationVolume) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type ScalingConfigurationVolumeArrayOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScalingConfigurationVolume)(nil)).Elem()
}

func (o ScalingConfigurationVolumeArrayOutput) ToScalingConfigurationVolumeArrayOutput() ScalingConfigurationVolumeArrayOutput {
	return o
}

func (o ScalingConfigurationVolumeArrayOutput) ToScalingConfigurationVolumeArrayOutputWithContext(ctx context.Context) ScalingConfigurationVolumeArrayOutput {
	return o
}

func (o ScalingConfigurationVolumeArrayOutput) Index(i pulumi.IntInput) ScalingConfigurationVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScalingConfigurationVolume {
		return vs[0].([]ScalingConfigurationVolume)[vs[1].(int)]
	}).(ScalingConfigurationVolumeOutput)
}

type GetScalingConfigurationEip struct {
	// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
	Bandwidth int `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
	BandwidthPackageId string `pulumi:"bandwidthPackageId"`
	// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
	BillingType string `pulumi:"billingType"`
	// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
	Isp string `pulumi:"isp"`
}

// GetScalingConfigurationEipInput is an input type that accepts GetScalingConfigurationEipArgs and GetScalingConfigurationEipOutput values.
// You can construct a concrete instance of `GetScalingConfigurationEipInput` via:
//
//	GetScalingConfigurationEipArgs{...}
type GetScalingConfigurationEipInput interface {
	pulumi.Input

	ToGetScalingConfigurationEipOutput() GetScalingConfigurationEipOutput
	ToGetScalingConfigurationEipOutputWithContext(context.Context) GetScalingConfigurationEipOutput
}

type GetScalingConfigurationEipArgs struct {
	// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
	Bandwidth pulumi.IntInput `pulumi:"bandwidth"`
	// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
	BandwidthPackageId pulumi.StringInput `pulumi:"bandwidthPackageId"`
	// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
	BillingType pulumi.StringInput `pulumi:"billingType"`
	// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
	Isp pulumi.StringInput `pulumi:"isp"`
}

func (GetScalingConfigurationEipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationEip)(nil)).Elem()
}

func (i GetScalingConfigurationEipArgs) ToGetScalingConfigurationEipOutput() GetScalingConfigurationEipOutput {
	return i.ToGetScalingConfigurationEipOutputWithContext(context.Background())
}

func (i GetScalingConfigurationEipArgs) ToGetScalingConfigurationEipOutputWithContext(ctx context.Context) GetScalingConfigurationEipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationEipOutput)
}

type GetScalingConfigurationEipOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationEipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationEip)(nil)).Elem()
}

func (o GetScalingConfigurationEipOutput) ToGetScalingConfigurationEipOutput() GetScalingConfigurationEipOutput {
	return o
}

func (o GetScalingConfigurationEipOutput) ToGetScalingConfigurationEipOutputWithContext(ctx context.Context) GetScalingConfigurationEipOutput {
	return o
}

// 公网IP的带宽峰值，默认为1，单位：Mbps。取值：当Eip.BillingType取值为PostPaidByBandwidth时，取值为1 ～ 500。当Eip.BillingType取值为PostPaidByTraffic时，取值为1 ～ 200。
func (o GetScalingConfigurationEipOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetScalingConfigurationEip) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// 共享带宽包的ID，表示将公网IP加入到共享带宽包。 您可以调用 DescribeBandwidthPackages 接口，查询共享带宽包的ID。 公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的线路类型相同。共享带宽包为IPv4类型。
func (o GetScalingConfigurationEipOutput) BandwidthPackageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationEip) string { return v.BandwidthPackageId }).(pulumi.StringOutput)
}

// 公网IP的计费类型，取值：PostPaidByBandwidth（默认）：按量计费-按带宽上限计费。PostPaidByTraffic：按量计费-按实际流量计费。
func (o GetScalingConfigurationEipOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationEip) string { return v.BillingType }).(pulumi.StringOutput)
}

// 线路类型，取值：BGP（默认）：BGP线路。若您的账号已申请使用静态单线，ISP还可以传入ChinaMobile（表示中国移动）、ChinaTelecom（表示中国电信）、ChinaUnicom（表示中国联通）。
func (o GetScalingConfigurationEipOutput) Isp() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationEip) string { return v.Isp }).(pulumi.StringOutput)
}

type GetScalingConfigurationInstanceTypeOverride struct {
	// 指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。
	InstanceType string `pulumi:"instanceType"`
	// 指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。
	PriceLimit float64 `pulumi:"priceLimit"`
}

// GetScalingConfigurationInstanceTypeOverrideInput is an input type that accepts GetScalingConfigurationInstanceTypeOverrideArgs and GetScalingConfigurationInstanceTypeOverrideOutput values.
// You can construct a concrete instance of `GetScalingConfigurationInstanceTypeOverrideInput` via:
//
//	GetScalingConfigurationInstanceTypeOverrideArgs{...}
type GetScalingConfigurationInstanceTypeOverrideInput interface {
	pulumi.Input

	ToGetScalingConfigurationInstanceTypeOverrideOutput() GetScalingConfigurationInstanceTypeOverrideOutput
	ToGetScalingConfigurationInstanceTypeOverrideOutputWithContext(context.Context) GetScalingConfigurationInstanceTypeOverrideOutput
}

type GetScalingConfigurationInstanceTypeOverrideArgs struct {
	// 指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// 指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。
	PriceLimit pulumi.Float64Input `pulumi:"priceLimit"`
}

func (GetScalingConfigurationInstanceTypeOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (i GetScalingConfigurationInstanceTypeOverrideArgs) ToGetScalingConfigurationInstanceTypeOverrideOutput() GetScalingConfigurationInstanceTypeOverrideOutput {
	return i.ToGetScalingConfigurationInstanceTypeOverrideOutputWithContext(context.Background())
}

func (i GetScalingConfigurationInstanceTypeOverrideArgs) ToGetScalingConfigurationInstanceTypeOverrideOutputWithContext(ctx context.Context) GetScalingConfigurationInstanceTypeOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationInstanceTypeOverrideOutput)
}

// GetScalingConfigurationInstanceTypeOverrideArrayInput is an input type that accepts GetScalingConfigurationInstanceTypeOverrideArray and GetScalingConfigurationInstanceTypeOverrideArrayOutput values.
// You can construct a concrete instance of `GetScalingConfigurationInstanceTypeOverrideArrayInput` via:
//
//	GetScalingConfigurationInstanceTypeOverrideArray{ GetScalingConfigurationInstanceTypeOverrideArgs{...} }
type GetScalingConfigurationInstanceTypeOverrideArrayInput interface {
	pulumi.Input

	ToGetScalingConfigurationInstanceTypeOverrideArrayOutput() GetScalingConfigurationInstanceTypeOverrideArrayOutput
	ToGetScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(context.Context) GetScalingConfigurationInstanceTypeOverrideArrayOutput
}

type GetScalingConfigurationInstanceTypeOverrideArray []GetScalingConfigurationInstanceTypeOverrideInput

func (GetScalingConfigurationInstanceTypeOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (i GetScalingConfigurationInstanceTypeOverrideArray) ToGetScalingConfigurationInstanceTypeOverrideArrayOutput() GetScalingConfigurationInstanceTypeOverrideArrayOutput {
	return i.ToGetScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(context.Background())
}

func (i GetScalingConfigurationInstanceTypeOverrideArray) ToGetScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(ctx context.Context) GetScalingConfigurationInstanceTypeOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationInstanceTypeOverrideArrayOutput)
}

type GetScalingConfigurationInstanceTypeOverrideOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationInstanceTypeOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (o GetScalingConfigurationInstanceTypeOverrideOutput) ToGetScalingConfigurationInstanceTypeOverrideOutput() GetScalingConfigurationInstanceTypeOverrideOutput {
	return o
}

func (o GetScalingConfigurationInstanceTypeOverrideOutput) ToGetScalingConfigurationInstanceTypeOverrideOutputWithContext(ctx context.Context) GetScalingConfigurationInstanceTypeOverrideOutput {
	return o
}

// 指定抢占式实例的规格。参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - InstanceType：表示抢占式实例的规格。多个规格之间用&分隔。
func (o GetScalingConfigurationInstanceTypeOverrideOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationInstanceTypeOverride) string { return v.InstanceType }).(pulumi.StringOutput)
}

// 指定抢占式实例规格每小时的最高价格参数 - N：表示实例规格的序号，取值为1 ～ 10。取值 - PriceLimit：表示抢占式实例规格每小时的最高价格。取值：大于0，且最大不超过3位小数。多个价格之间用&分隔。
func (o GetScalingConfigurationInstanceTypeOverrideOutput) PriceLimit() pulumi.Float64Output {
	return o.ApplyT(func(v GetScalingConfigurationInstanceTypeOverride) float64 { return v.PriceLimit }).(pulumi.Float64Output)
}

type GetScalingConfigurationInstanceTypeOverrideArrayOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationInstanceTypeOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScalingConfigurationInstanceTypeOverride)(nil)).Elem()
}

func (o GetScalingConfigurationInstanceTypeOverrideArrayOutput) ToGetScalingConfigurationInstanceTypeOverrideArrayOutput() GetScalingConfigurationInstanceTypeOverrideArrayOutput {
	return o
}

func (o GetScalingConfigurationInstanceTypeOverrideArrayOutput) ToGetScalingConfigurationInstanceTypeOverrideArrayOutputWithContext(ctx context.Context) GetScalingConfigurationInstanceTypeOverrideArrayOutput {
	return o
}

func (o GetScalingConfigurationInstanceTypeOverrideArrayOutput) Index(i pulumi.IntInput) GetScalingConfigurationInstanceTypeOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScalingConfigurationInstanceTypeOverride {
		return vs[0].([]GetScalingConfigurationInstanceTypeOverride)[vs[1].(int)]
	}).(GetScalingConfigurationInstanceTypeOverrideOutput)
}

type GetScalingConfigurationTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetScalingConfigurationTagInput is an input type that accepts GetScalingConfigurationTagArgs and GetScalingConfigurationTagOutput values.
// You can construct a concrete instance of `GetScalingConfigurationTagInput` via:
//
//	GetScalingConfigurationTagArgs{...}
type GetScalingConfigurationTagInput interface {
	pulumi.Input

	ToGetScalingConfigurationTagOutput() GetScalingConfigurationTagOutput
	ToGetScalingConfigurationTagOutputWithContext(context.Context) GetScalingConfigurationTagOutput
}

type GetScalingConfigurationTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetScalingConfigurationTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationTag)(nil)).Elem()
}

func (i GetScalingConfigurationTagArgs) ToGetScalingConfigurationTagOutput() GetScalingConfigurationTagOutput {
	return i.ToGetScalingConfigurationTagOutputWithContext(context.Background())
}

func (i GetScalingConfigurationTagArgs) ToGetScalingConfigurationTagOutputWithContext(ctx context.Context) GetScalingConfigurationTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationTagOutput)
}

// GetScalingConfigurationTagArrayInput is an input type that accepts GetScalingConfigurationTagArray and GetScalingConfigurationTagArrayOutput values.
// You can construct a concrete instance of `GetScalingConfigurationTagArrayInput` via:
//
//	GetScalingConfigurationTagArray{ GetScalingConfigurationTagArgs{...} }
type GetScalingConfigurationTagArrayInput interface {
	pulumi.Input

	ToGetScalingConfigurationTagArrayOutput() GetScalingConfigurationTagArrayOutput
	ToGetScalingConfigurationTagArrayOutputWithContext(context.Context) GetScalingConfigurationTagArrayOutput
}

type GetScalingConfigurationTagArray []GetScalingConfigurationTagInput

func (GetScalingConfigurationTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScalingConfigurationTag)(nil)).Elem()
}

func (i GetScalingConfigurationTagArray) ToGetScalingConfigurationTagArrayOutput() GetScalingConfigurationTagArrayOutput {
	return i.ToGetScalingConfigurationTagArrayOutputWithContext(context.Background())
}

func (i GetScalingConfigurationTagArray) ToGetScalingConfigurationTagArrayOutputWithContext(ctx context.Context) GetScalingConfigurationTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationTagArrayOutput)
}

type GetScalingConfigurationTagOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationTag)(nil)).Elem()
}

func (o GetScalingConfigurationTagOutput) ToGetScalingConfigurationTagOutput() GetScalingConfigurationTagOutput {
	return o
}

func (o GetScalingConfigurationTagOutput) ToGetScalingConfigurationTagOutputWithContext(ctx context.Context) GetScalingConfigurationTagOutput {
	return o
}

// 标签键。
func (o GetScalingConfigurationTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetScalingConfigurationTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetScalingConfigurationTagArrayOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScalingConfigurationTag)(nil)).Elem()
}

func (o GetScalingConfigurationTagArrayOutput) ToGetScalingConfigurationTagArrayOutput() GetScalingConfigurationTagArrayOutput {
	return o
}

func (o GetScalingConfigurationTagArrayOutput) ToGetScalingConfigurationTagArrayOutputWithContext(ctx context.Context) GetScalingConfigurationTagArrayOutput {
	return o
}

func (o GetScalingConfigurationTagArrayOutput) Index(i pulumi.IntInput) GetScalingConfigurationTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScalingConfigurationTag {
		return vs[0].([]GetScalingConfigurationTag)[vs[1].(int)]
	}).(GetScalingConfigurationTagOutput)
}

type GetScalingConfigurationVolume struct {
	// 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
	DeleteWithInstance bool `pulumi:"deleteWithInstance"`
	// 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。
	Size int `pulumi:"size"`
	// 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&分隔。
	VolumeType string `pulumi:"volumeType"`
}

// GetScalingConfigurationVolumeInput is an input type that accepts GetScalingConfigurationVolumeArgs and GetScalingConfigurationVolumeOutput values.
// You can construct a concrete instance of `GetScalingConfigurationVolumeInput` via:
//
//	GetScalingConfigurationVolumeArgs{...}
type GetScalingConfigurationVolumeInput interface {
	pulumi.Input

	ToGetScalingConfigurationVolumeOutput() GetScalingConfigurationVolumeOutput
	ToGetScalingConfigurationVolumeOutputWithContext(context.Context) GetScalingConfigurationVolumeOutput
}

type GetScalingConfigurationVolumeArgs struct {
	// 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
	DeleteWithInstance pulumi.BoolInput `pulumi:"deleteWithInstance"`
	// 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。
	Size pulumi.IntInput `pulumi:"size"`
	// 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&分隔。
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetScalingConfigurationVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationVolume)(nil)).Elem()
}

func (i GetScalingConfigurationVolumeArgs) ToGetScalingConfigurationVolumeOutput() GetScalingConfigurationVolumeOutput {
	return i.ToGetScalingConfigurationVolumeOutputWithContext(context.Background())
}

func (i GetScalingConfigurationVolumeArgs) ToGetScalingConfigurationVolumeOutputWithContext(ctx context.Context) GetScalingConfigurationVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationVolumeOutput)
}

// GetScalingConfigurationVolumeArrayInput is an input type that accepts GetScalingConfigurationVolumeArray and GetScalingConfigurationVolumeArrayOutput values.
// You can construct a concrete instance of `GetScalingConfigurationVolumeArrayInput` via:
//
//	GetScalingConfigurationVolumeArray{ GetScalingConfigurationVolumeArgs{...} }
type GetScalingConfigurationVolumeArrayInput interface {
	pulumi.Input

	ToGetScalingConfigurationVolumeArrayOutput() GetScalingConfigurationVolumeArrayOutput
	ToGetScalingConfigurationVolumeArrayOutputWithContext(context.Context) GetScalingConfigurationVolumeArrayOutput
}

type GetScalingConfigurationVolumeArray []GetScalingConfigurationVolumeInput

func (GetScalingConfigurationVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScalingConfigurationVolume)(nil)).Elem()
}

func (i GetScalingConfigurationVolumeArray) ToGetScalingConfigurationVolumeArrayOutput() GetScalingConfigurationVolumeArrayOutput {
	return i.ToGetScalingConfigurationVolumeArrayOutputWithContext(context.Background())
}

func (i GetScalingConfigurationVolumeArray) ToGetScalingConfigurationVolumeArrayOutputWithContext(ctx context.Context) GetScalingConfigurationVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetScalingConfigurationVolumeArrayOutput)
}

type GetScalingConfigurationVolumeOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScalingConfigurationVolume)(nil)).Elem()
}

func (o GetScalingConfigurationVolumeOutput) ToGetScalingConfigurationVolumeOutput() GetScalingConfigurationVolumeOutput {
	return o
}

func (o GetScalingConfigurationVolumeOutput) ToGetScalingConfigurationVolumeOutputWithContext(ctx context.Context) GetScalingConfigurationVolumeOutput {
	return o
}

// 云盘是否随实例释放：参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 - 15。参数 - DeleteWithInstance：云盘是否随实例释放。true（默认值）：云盘随实例释放。false：云盘不随实例释放。取值为false时对系统盘无效，系统盘默认随实例释放，不允许保留。
func (o GetScalingConfigurationVolumeOutput) DeleteWithInstance() pulumi.BoolOutput {
	return o.ApplyT(func(v GetScalingConfigurationVolume) bool { return v.DeleteWithInstance }).(pulumi.BoolOutput)
}

// 云盘的容量，单位为GiB。参数 - N：表示云盘的序号，序号为“1”表示系统盘；序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。取值 - Size：表述第N个云盘的容量，单位为GiB。系统盘取值范围：10 - 500。数据盘取值范围：10 - 8192。多个云盘之间用&分隔。
func (o GetScalingConfigurationVolumeOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetScalingConfigurationVolume) int { return v.Size }).(pulumi.IntOutput)
}

// 云盘的类型：参数 - N：表示云盘的序号，序号为“1”表示系统盘，序号为“2”或大于“2”表示数据盘。取值：1 ～ 15。参数 - VolumeType：表示第N个云盘的类型，取值：ESSD*FlexPL：极速型SSDFlexPL。ESSD*PL0：极速型SSD PL0。多个云盘之间用&分隔。
func (o GetScalingConfigurationVolumeOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetScalingConfigurationVolume) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetScalingConfigurationVolumeArrayOutput struct{ *pulumi.OutputState }

func (GetScalingConfigurationVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetScalingConfigurationVolume)(nil)).Elem()
}

func (o GetScalingConfigurationVolumeArrayOutput) ToGetScalingConfigurationVolumeArrayOutput() GetScalingConfigurationVolumeArrayOutput {
	return o
}

func (o GetScalingConfigurationVolumeArrayOutput) ToGetScalingConfigurationVolumeArrayOutputWithContext(ctx context.Context) GetScalingConfigurationVolumeArrayOutput {
	return o
}

func (o GetScalingConfigurationVolumeArrayOutput) Index(i pulumi.IntInput) GetScalingConfigurationVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetScalingConfigurationVolume {
		return vs[0].([]GetScalingConfigurationVolume)[vs[1].(int)]
	}).(GetScalingConfigurationVolumeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationEipInput)(nil)).Elem(), ScalingConfigurationEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationEipPtrInput)(nil)).Elem(), ScalingConfigurationEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationInstanceTypeOverrideInput)(nil)).Elem(), ScalingConfigurationInstanceTypeOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationInstanceTypeOverrideArrayInput)(nil)).Elem(), ScalingConfigurationInstanceTypeOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationTagInput)(nil)).Elem(), ScalingConfigurationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationTagArrayInput)(nil)).Elem(), ScalingConfigurationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationVolumeInput)(nil)).Elem(), ScalingConfigurationVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationVolumeArrayInput)(nil)).Elem(), ScalingConfigurationVolumeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationEipInput)(nil)).Elem(), GetScalingConfigurationEipArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationInstanceTypeOverrideInput)(nil)).Elem(), GetScalingConfigurationInstanceTypeOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationInstanceTypeOverrideArrayInput)(nil)).Elem(), GetScalingConfigurationInstanceTypeOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationTagInput)(nil)).Elem(), GetScalingConfigurationTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationTagArrayInput)(nil)).Elem(), GetScalingConfigurationTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationVolumeInput)(nil)).Elem(), GetScalingConfigurationVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetScalingConfigurationVolumeArrayInput)(nil)).Elem(), GetScalingConfigurationVolumeArray{})
	pulumi.RegisterOutputType(ScalingConfigurationEipOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationEipPtrOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationInstanceTypeOverrideOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationInstanceTypeOverrideArrayOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationTagOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationTagArrayOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationVolumeOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationVolumeArrayOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationEipOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationInstanceTypeOverrideOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationInstanceTypeOverrideArrayOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationTagOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationTagArrayOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationVolumeOutput{})
	pulumi.RegisterOutputType(GetScalingConfigurationVolumeArrayOutput{})
}
