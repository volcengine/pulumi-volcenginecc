// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 用于定义伸缩组中的实例配置，包括计算、内存、网络、存储、安全等，伸缩组扩容时，会按照此处的配置来源创建新实例。
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:autoscaling/scalingConfiguration:ScalingConfiguration example "scaling_configuration_id"
// ```
type ScalingConfiguration struct {
	pulumi.CustomResourceState

	// 资源创建时间(UTC时间)
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// 公网IP。
	Eip ScalingConfigurationEipOutput `pulumi:"eip"`
	// 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
	HostName pulumi.StringOutput `pulumi:"hostName"`
	// 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
	HpcClusterId pulumi.StringOutput `pulumi:"hpcClusterId"`
	// 镜像ID，伸缩组自动创建实例时使用的镜像资源。
	ImageId pulumi.StringOutput `pulumi:"imageId"`
	// 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
	InstanceChargeType pulumi.StringOutput `pulumi:"instanceChargeType"`
	// 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
	InstanceDescription pulumi.StringOutput `pulumi:"instanceDescription"`
	// 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
	InstanceName          pulumi.StringOutput                                 `pulumi:"instanceName"`
	InstanceTypeOverrides ScalingConfigurationInstanceTypeOverrideArrayOutput `pulumi:"instanceTypeOverrides"`
	// 实例的计算规格列表。
	InstanceTypes pulumi.StringArrayOutput `pulumi:"instanceTypes"`
	// 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
	Ipv6AddressCount pulumi.IntOutput `pulumi:"ipv6AddressCount"`
	// KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
	KeyPairName pulumi.StringOutput `pulumi:"keyPairName"`
	// 生命周期状态。取值：Active（活跃）/InActive（非活跃）
	LifecycleState pulumi.StringOutput `pulumi:"lifecycleState"`
	// 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头
	Password pulumi.StringOutput `pulumi:"password"`
	// 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
	// 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
	// 长度限制在64个字符以内。
	ProjectName pulumi.StringOutput `pulumi:"projectName"`
	// 伸缩配置ID。
	ScalingConfigurationId pulumi.StringOutput `pulumi:"scalingConfigurationId"`
	// 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
	ScalingConfigurationName pulumi.StringOutput `pulumi:"scalingConfigurationName"`
	// 伸缩配置所属的伸缩组ID。
	ScalingGroupId pulumi.StringOutput `pulumi:"scalingGroupId"`
	// 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
	SecurityEnhancementStrategy pulumi.StringOutput `pulumi:"securityEnhancementStrategy"`
	// 实例主网卡关联的安全组ID。
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
	SpotStrategy pulumi.StringOutput                `pulumi:"spotStrategy"`
	Tags         ScalingConfigurationTagArrayOutput `pulumi:"tags"`
	// 资源更新时间(UTC时间)
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
	UserData pulumi.StringOutput                   `pulumi:"userData"`
	Volumes  ScalingConfigurationVolumeArrayOutput `pulumi:"volumes"`
	// 伸缩配置可用区ID。
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewScalingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewScalingConfiguration(ctx *pulumi.Context,
	name string, args *ScalingConfigurationArgs, opts ...pulumi.ResourceOption) (*ScalingConfiguration, error) {
	if args == nil {
		args = &ScalingConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScalingConfiguration
	err := ctx.RegisterResource("volcenginecc:autoscaling/scalingConfiguration:ScalingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScalingConfiguration gets an existing ScalingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScalingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScalingConfigurationState, opts ...pulumi.ResourceOption) (*ScalingConfiguration, error) {
	var resource ScalingConfiguration
	err := ctx.ReadResource("volcenginecc:autoscaling/scalingConfiguration:ScalingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScalingConfiguration resources.
type scalingConfigurationState struct {
	// 资源创建时间(UTC时间)
	CreatedAt *string `pulumi:"createdAt"`
	// 公网IP。
	Eip *ScalingConfigurationEip `pulumi:"eip"`
	// 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
	HostName *string `pulumi:"hostName"`
	// 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// 镜像ID，伸缩组自动创建实例时使用的镜像资源。
	ImageId *string `pulumi:"imageId"`
	// 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
	InstanceChargeType *string `pulumi:"instanceChargeType"`
	// 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
	InstanceDescription *string `pulumi:"instanceDescription"`
	// 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
	InstanceName          *string                                    `pulumi:"instanceName"`
	InstanceTypeOverrides []ScalingConfigurationInstanceTypeOverride `pulumi:"instanceTypeOverrides"`
	// 实例的计算规格列表。
	InstanceTypes []string `pulumi:"instanceTypes"`
	// 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
	KeyPairName *string `pulumi:"keyPairName"`
	// 生命周期状态。取值：Active（活跃）/InActive（非活跃）
	LifecycleState *string `pulumi:"lifecycleState"`
	// 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头
	Password *string `pulumi:"password"`
	// 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
	// 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
	// 长度限制在64个字符以内。
	ProjectName *string `pulumi:"projectName"`
	// 伸缩配置ID。
	ScalingConfigurationId *string `pulumi:"scalingConfigurationId"`
	// 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
	ScalingConfigurationName *string `pulumi:"scalingConfigurationName"`
	// 伸缩配置所属的伸缩组ID。
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
	SecurityEnhancementStrategy *string `pulumi:"securityEnhancementStrategy"`
	// 实例主网卡关联的安全组ID。
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
	SpotStrategy *string                   `pulumi:"spotStrategy"`
	Tags         []ScalingConfigurationTag `pulumi:"tags"`
	// 资源更新时间(UTC时间)
	UpdatedAt *string `pulumi:"updatedAt"`
	// 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
	UserData *string                      `pulumi:"userData"`
	Volumes  []ScalingConfigurationVolume `pulumi:"volumes"`
	// 伸缩配置可用区ID。
	ZoneId *string `pulumi:"zoneId"`
}

type ScalingConfigurationState struct {
	// 资源创建时间(UTC时间)
	CreatedAt pulumi.StringPtrInput
	// 公网IP。
	Eip ScalingConfigurationEipPtrInput
	// 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
	HostName pulumi.StringPtrInput
	// 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
	HpcClusterId pulumi.StringPtrInput
	// 镜像ID，伸缩组自动创建实例时使用的镜像资源。
	ImageId pulumi.StringPtrInput
	// 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
	InstanceChargeType pulumi.StringPtrInput
	// 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
	InstanceDescription pulumi.StringPtrInput
	// 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
	InstanceName          pulumi.StringPtrInput
	InstanceTypeOverrides ScalingConfigurationInstanceTypeOverrideArrayInput
	// 实例的计算规格列表。
	InstanceTypes pulumi.StringArrayInput
	// 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
	Ipv6AddressCount pulumi.IntPtrInput
	// KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
	KeyPairName pulumi.StringPtrInput
	// 生命周期状态。取值：Active（活跃）/InActive（非活跃）
	LifecycleState pulumi.StringPtrInput
	// 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头
	Password pulumi.StringPtrInput
	// 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
	// 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
	// 长度限制在64个字符以内。
	ProjectName pulumi.StringPtrInput
	// 伸缩配置ID。
	ScalingConfigurationId pulumi.StringPtrInput
	// 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
	ScalingConfigurationName pulumi.StringPtrInput
	// 伸缩配置所属的伸缩组ID。
	ScalingGroupId pulumi.StringPtrInput
	// 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
	SecurityEnhancementStrategy pulumi.StringPtrInput
	// 实例主网卡关联的安全组ID。
	SecurityGroupIds pulumi.StringArrayInput
	// 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
	SpotStrategy pulumi.StringPtrInput
	Tags         ScalingConfigurationTagArrayInput
	// 资源更新时间(UTC时间)
	UpdatedAt pulumi.StringPtrInput
	// 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
	UserData pulumi.StringPtrInput
	Volumes  ScalingConfigurationVolumeArrayInput
	// 伸缩配置可用区ID。
	ZoneId pulumi.StringPtrInput
}

func (ScalingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingConfigurationState)(nil)).Elem()
}

type scalingConfigurationArgs struct {
	// 公网IP。
	Eip *ScalingConfigurationEip `pulumi:"eip"`
	// 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
	HostName *string `pulumi:"hostName"`
	// 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
	HpcClusterId *string `pulumi:"hpcClusterId"`
	// 镜像ID，伸缩组自动创建实例时使用的镜像资源。
	ImageId *string `pulumi:"imageId"`
	// 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
	InstanceDescription *string `pulumi:"instanceDescription"`
	// 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
	InstanceName          *string                                    `pulumi:"instanceName"`
	InstanceTypeOverrides []ScalingConfigurationInstanceTypeOverride `pulumi:"instanceTypeOverrides"`
	// 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
	KeyPairName *string `pulumi:"keyPairName"`
	// 生命周期状态。取值：Active（活跃）/InActive（非活跃）
	LifecycleState *string `pulumi:"lifecycleState"`
	// 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头
	Password *string `pulumi:"password"`
	// 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
	// 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
	// 长度限制在64个字符以内。
	ProjectName *string `pulumi:"projectName"`
	// 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
	ScalingConfigurationName *string `pulumi:"scalingConfigurationName"`
	// 伸缩配置所属的伸缩组ID。
	ScalingGroupId *string `pulumi:"scalingGroupId"`
	// 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
	SecurityEnhancementStrategy *string `pulumi:"securityEnhancementStrategy"`
	// 实例主网卡关联的安全组ID。
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
	SpotStrategy *string                   `pulumi:"spotStrategy"`
	Tags         []ScalingConfigurationTag `pulumi:"tags"`
	// 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
	UserData *string                      `pulumi:"userData"`
	Volumes  []ScalingConfigurationVolume `pulumi:"volumes"`
	// 伸缩配置可用区ID。
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a ScalingConfiguration resource.
type ScalingConfigurationArgs struct {
	// 公网IP。
	Eip ScalingConfigurationEipPtrInput
	// 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
	HostName pulumi.StringPtrInput
	// 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
	HpcClusterId pulumi.StringPtrInput
	// 镜像ID，伸缩组自动创建实例时使用的镜像资源。
	ImageId pulumi.StringPtrInput
	// 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
	InstanceDescription pulumi.StringPtrInput
	// 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
	InstanceName          pulumi.StringPtrInput
	InstanceTypeOverrides ScalingConfigurationInstanceTypeOverrideArrayInput
	// 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
	Ipv6AddressCount pulumi.IntPtrInput
	// KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
	KeyPairName pulumi.StringPtrInput
	// 生命周期状态。取值：Active（活跃）/InActive（非活跃）
	LifecycleState pulumi.StringPtrInput
	// 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头
	Password pulumi.StringPtrInput
	// 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
	// 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
	// 长度限制在64个字符以内。
	ProjectName pulumi.StringPtrInput
	// 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
	ScalingConfigurationName pulumi.StringPtrInput
	// 伸缩配置所属的伸缩组ID。
	ScalingGroupId pulumi.StringPtrInput
	// 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
	SecurityEnhancementStrategy pulumi.StringPtrInput
	// 实例主网卡关联的安全组ID。
	SecurityGroupIds pulumi.StringArrayInput
	// 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
	SpotStrategy pulumi.StringPtrInput
	Tags         ScalingConfigurationTagArrayInput
	// 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
	UserData pulumi.StringPtrInput
	Volumes  ScalingConfigurationVolumeArrayInput
	// 伸缩配置可用区ID。
	ZoneId pulumi.StringPtrInput
}

func (ScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scalingConfigurationArgs)(nil)).Elem()
}

type ScalingConfigurationInput interface {
	pulumi.Input

	ToScalingConfigurationOutput() ScalingConfigurationOutput
	ToScalingConfigurationOutputWithContext(ctx context.Context) ScalingConfigurationOutput
}

func (*ScalingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfiguration)(nil)).Elem()
}

func (i *ScalingConfiguration) ToScalingConfigurationOutput() ScalingConfigurationOutput {
	return i.ToScalingConfigurationOutputWithContext(context.Background())
}

func (i *ScalingConfiguration) ToScalingConfigurationOutputWithContext(ctx context.Context) ScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationOutput)
}

// ScalingConfigurationArrayInput is an input type that accepts ScalingConfigurationArray and ScalingConfigurationArrayOutput values.
// You can construct a concrete instance of `ScalingConfigurationArrayInput` via:
//
//	ScalingConfigurationArray{ ScalingConfigurationArgs{...} }
type ScalingConfigurationArrayInput interface {
	pulumi.Input

	ToScalingConfigurationArrayOutput() ScalingConfigurationArrayOutput
	ToScalingConfigurationArrayOutputWithContext(context.Context) ScalingConfigurationArrayOutput
}

type ScalingConfigurationArray []ScalingConfigurationInput

func (ScalingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingConfiguration)(nil)).Elem()
}

func (i ScalingConfigurationArray) ToScalingConfigurationArrayOutput() ScalingConfigurationArrayOutput {
	return i.ToScalingConfigurationArrayOutputWithContext(context.Background())
}

func (i ScalingConfigurationArray) ToScalingConfigurationArrayOutputWithContext(ctx context.Context) ScalingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationArrayOutput)
}

// ScalingConfigurationMapInput is an input type that accepts ScalingConfigurationMap and ScalingConfigurationMapOutput values.
// You can construct a concrete instance of `ScalingConfigurationMapInput` via:
//
//	ScalingConfigurationMap{ "key": ScalingConfigurationArgs{...} }
type ScalingConfigurationMapInput interface {
	pulumi.Input

	ToScalingConfigurationMapOutput() ScalingConfigurationMapOutput
	ToScalingConfigurationMapOutputWithContext(context.Context) ScalingConfigurationMapOutput
}

type ScalingConfigurationMap map[string]ScalingConfigurationInput

func (ScalingConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingConfiguration)(nil)).Elem()
}

func (i ScalingConfigurationMap) ToScalingConfigurationMapOutput() ScalingConfigurationMapOutput {
	return i.ToScalingConfigurationMapOutputWithContext(context.Background())
}

func (i ScalingConfigurationMap) ToScalingConfigurationMapOutputWithContext(ctx context.Context) ScalingConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScalingConfigurationMapOutput)
}

type ScalingConfigurationOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScalingConfiguration)(nil)).Elem()
}

func (o ScalingConfigurationOutput) ToScalingConfigurationOutput() ScalingConfigurationOutput {
	return o
}

func (o ScalingConfigurationOutput) ToScalingConfigurationOutputWithContext(ctx context.Context) ScalingConfigurationOutput {
	return o
}

// 资源创建时间(UTC时间)
func (o ScalingConfigurationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// 公网IP。
func (o ScalingConfigurationOutput) Eip() ScalingConfigurationEipOutput {
	return o.ApplyT(func(v *ScalingConfiguration) ScalingConfigurationEipOutput { return v.Eip }).(ScalingConfigurationEipOutput)
}

// 实例的主机名。取值：Linux实例允许使用点号分隔字符成多段，每段中允许使用字母、数字或中划线“-”。不能以点号“.”或中划线“-”开头或结尾，且不能连续使用点号“.”或中划线“-”。Linux系统的主机名长度限制为2～63个字符。Windows实例允许使用字母、数字或中划线“-”，不能完全是数字。不能以中划线“-”开头或结尾，且不能连续使用中划线“-”。Windows系统的主机名长度限制在2～15个字符。如不填，则遵循以下规则自动生成：结构：iv- + 初始主机名，例如iv-3tigy72q3u3vj0******。已创建实例保持原主机名生成逻辑，不随实例重启发生变化。初始主机名生成逻辑：Linux：提取实例IDi-之后的全部字符。Windows：提取实例IDi-之后的后12位字符。
func (o ScalingConfigurationOutput) HostName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.HostName }).(pulumi.StringOutput)
}

// 实例所属的高性能计算集群的ID。仅当InstanceTypes.N指定为“高性能计算GPU型”时有效。
func (o ScalingConfigurationOutput) HpcClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.HpcClusterId }).(pulumi.StringOutput)
}

// 镜像ID，伸缩组自动创建实例时使用的镜像资源。
func (o ScalingConfigurationOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.ImageId }).(pulumi.StringOutput)
}

// 实例计费类型。取值：PrePaid（包年包月）/PostPaid（按量付费）
func (o ScalingConfigurationOutput) InstanceChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.InstanceChargeType }).(pulumi.StringOutput)
}

// 实例的描述，取值：不能以数字、中划线开头。只能包含中文、字母、数字、下划线和中划线。长度限制在0 ~ 255之间。不填默认为空字符串。
func (o ScalingConfigurationOutput) InstanceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.InstanceDescription }).(pulumi.StringOutput)
}

// 实例的名称，取值：以字母或中文开头。只能包含中文、字母、数字、下划线“_”、中划线“-”和点号“.”。长度限制为1～128个字符。
func (o ScalingConfigurationOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

func (o ScalingConfigurationOutput) InstanceTypeOverrides() ScalingConfigurationInstanceTypeOverrideArrayOutput {
	return o.ApplyT(func(v *ScalingConfiguration) ScalingConfigurationInstanceTypeOverrideArrayOutput {
		return v.InstanceTypeOverrides
	}).(ScalingConfigurationInstanceTypeOverrideArrayOutput)
}

// 实例的计算规格列表。
func (o ScalingConfigurationOutput) InstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringArrayOutput { return v.InstanceTypes }).(pulumi.StringArrayOutput)
}

// 是否为实例网卡分配IPv6地址。取值：0：不分配IPv6地址。1：分配IPv6地址，系统自动为您分配IPv6网段。
func (o ScalingConfigurationOutput) Ipv6AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.IntOutput { return v.Ipv6AddressCount }).(pulumi.IntOutput)
}

// KeyPairName string 可选 示例值：kp-test-123，使用“SSH密钥对”登录实例时，请输入密钥对的名称。如果同时设置了KeyPairName和Password，则仅生效KeyPairName。
func (o ScalingConfigurationOutput) KeyPairName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.KeyPairName }).(pulumi.StringOutput)
}

// 生命周期状态。取值：Active（活跃）/InActive（非活跃）
func (o ScalingConfigurationOutput) LifecycleState() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.LifecycleState }).(pulumi.StringOutput)
}

// 使用“密码”方式登录实例时，请设置root登录密码：长度限制在8～30之间，密码只能由大写字母、小写字母、数字和特殊字符组成，且必须包含至少三项，特殊字符可以使用：`~!#$%^&*()_-+= |，不能以“/”和“$6$”开头
func (o ScalingConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// 伸缩配置创建的实例所属项目，默认为空。一个资源只能归属于一个项目。
// 只能包含字母、数字、下划线“_”、点“.”和中划线“-”。
// 长度限制在64个字符以内。
func (o ScalingConfigurationOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.ProjectName }).(pulumi.StringOutput)
}

// 伸缩配置ID。
func (o ScalingConfigurationOutput) ScalingConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.ScalingConfigurationId }).(pulumi.StringOutput)
}

// 伸缩配置的名称，在同一地域下同一伸缩组内伸缩配置名称唯一。取值:只能以中文、字母开头。只能包含中文、字母、数字、下划线和中划线。长度限制为1 ~ 128个字符。暂不支持特殊字符。
func (o ScalingConfigurationOutput) ScalingConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.ScalingConfigurationName }).(pulumi.StringOutput)
}

// 伸缩配置所属的伸缩组ID。
func (o ScalingConfigurationOutput) ScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.ScalingGroupId }).(pulumi.StringOutput)
}

// 是否开启安全加固，取值：Active：开启安全加固，仅对公共镜像生效。InActive：关闭安全加固，对所有镜像生效。
func (o ScalingConfigurationOutput) SecurityEnhancementStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.SecurityEnhancementStrategy }).(pulumi.StringOutput)
}

// 实例主网卡关联的安全组ID。
func (o ScalingConfigurationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// 实例的抢占策略。取值：NoSpot（默认）：表示创建正常按量付费实例。SpotAsPriceGo：表示系统自动出价，跟随当前市场实际价格的抢占式实例。SpotWithPriceLimit：表示需要设置出价上限的抢占式实例。
func (o ScalingConfigurationOutput) SpotStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.SpotStrategy }).(pulumi.StringOutput)
}

func (o ScalingConfigurationOutput) Tags() ScalingConfigurationTagArrayOutput {
	return o.ApplyT(func(v *ScalingConfiguration) ScalingConfigurationTagArrayOutput { return v.Tags }).(ScalingConfigurationTagArrayOutput)
}

// 资源更新时间(UTC时间)
func (o ScalingConfigurationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// 实例自定义数据。设置的自定义数据必须经过Base64编码，且Base64编码前的自定义数据大小不能超过16KB。不填则默认为空。
func (o ScalingConfigurationOutput) UserData() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.UserData }).(pulumi.StringOutput)
}

func (o ScalingConfigurationOutput) Volumes() ScalingConfigurationVolumeArrayOutput {
	return o.ApplyT(func(v *ScalingConfiguration) ScalingConfigurationVolumeArrayOutput { return v.Volumes }).(ScalingConfigurationVolumeArrayOutput)
}

// 伸缩配置可用区ID。
func (o ScalingConfigurationOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScalingConfiguration) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type ScalingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScalingConfiguration)(nil)).Elem()
}

func (o ScalingConfigurationArrayOutput) ToScalingConfigurationArrayOutput() ScalingConfigurationArrayOutput {
	return o
}

func (o ScalingConfigurationArrayOutput) ToScalingConfigurationArrayOutputWithContext(ctx context.Context) ScalingConfigurationArrayOutput {
	return o
}

func (o ScalingConfigurationArrayOutput) Index(i pulumi.IntInput) ScalingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScalingConfiguration {
		return vs[0].([]*ScalingConfiguration)[vs[1].(int)]
	}).(ScalingConfigurationOutput)
}

type ScalingConfigurationMapOutput struct{ *pulumi.OutputState }

func (ScalingConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScalingConfiguration)(nil)).Elem()
}

func (o ScalingConfigurationMapOutput) ToScalingConfigurationMapOutput() ScalingConfigurationMapOutput {
	return o
}

func (o ScalingConfigurationMapOutput) ToScalingConfigurationMapOutputWithContext(ctx context.Context) ScalingConfigurationMapOutput {
	return o
}

func (o ScalingConfigurationMapOutput) MapIndex(k pulumi.StringInput) ScalingConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScalingConfiguration {
		return vs[0].(map[string]*ScalingConfiguration)[vs[1].(string)]
	}).(ScalingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationInput)(nil)).Elem(), &ScalingConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationArrayInput)(nil)).Elem(), ScalingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScalingConfigurationMapInput)(nil)).Elem(), ScalingConfigurationMap{})
	pulumi.RegisterOutputType(ScalingConfigurationOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ScalingConfigurationMapOutput{})
}
