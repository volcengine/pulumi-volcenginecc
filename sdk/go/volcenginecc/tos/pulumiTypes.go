// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tos

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type BucketAcl struct {
	// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
	BucketAclDelivered *bool            `pulumi:"bucketAclDelivered"`
	Grants             []BucketAclGrant `pulumi:"grants"`
	// 对象所有者。
	Owner *BucketAclOwner `pulumi:"owner"`
}

// BucketAclInput is an input type that accepts BucketAclArgs and BucketAclOutput values.
// You can construct a concrete instance of `BucketAclInput` via:
//
//	BucketAclArgs{...}
type BucketAclInput interface {
	pulumi.Input

	ToBucketAclOutput() BucketAclOutput
	ToBucketAclOutputWithContext(context.Context) BucketAclOutput
}

type BucketAclArgs struct {
	// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
	BucketAclDelivered pulumi.BoolPtrInput      `pulumi:"bucketAclDelivered"`
	Grants             BucketAclGrantArrayInput `pulumi:"grants"`
	// 对象所有者。
	Owner BucketAclOwnerPtrInput `pulumi:"owner"`
}

func (BucketAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAcl)(nil)).Elem()
}

func (i BucketAclArgs) ToBucketAclOutput() BucketAclOutput {
	return i.ToBucketAclOutputWithContext(context.Background())
}

func (i BucketAclArgs) ToBucketAclOutputWithContext(ctx context.Context) BucketAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclOutput)
}

func (i BucketAclArgs) ToBucketAclPtrOutput() BucketAclPtrOutput {
	return i.ToBucketAclPtrOutputWithContext(context.Background())
}

func (i BucketAclArgs) ToBucketAclPtrOutputWithContext(ctx context.Context) BucketAclPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclOutput).ToBucketAclPtrOutputWithContext(ctx)
}

// BucketAclPtrInput is an input type that accepts BucketAclArgs, BucketAclPtr and BucketAclPtrOutput values.
// You can construct a concrete instance of `BucketAclPtrInput` via:
//
//	        BucketAclArgs{...}
//
//	or:
//
//	        nil
type BucketAclPtrInput interface {
	pulumi.Input

	ToBucketAclPtrOutput() BucketAclPtrOutput
	ToBucketAclPtrOutputWithContext(context.Context) BucketAclPtrOutput
}

type bucketAclPtrType BucketAclArgs

func BucketAclPtr(v *BucketAclArgs) BucketAclPtrInput {
	return (*bucketAclPtrType)(v)
}

func (*bucketAclPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAcl)(nil)).Elem()
}

func (i *bucketAclPtrType) ToBucketAclPtrOutput() BucketAclPtrOutput {
	return i.ToBucketAclPtrOutputWithContext(context.Background())
}

func (i *bucketAclPtrType) ToBucketAclPtrOutputWithContext(ctx context.Context) BucketAclPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclPtrOutput)
}

type BucketAclOutput struct{ *pulumi.OutputState }

func (BucketAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAcl)(nil)).Elem()
}

func (o BucketAclOutput) ToBucketAclOutput() BucketAclOutput {
	return o
}

func (o BucketAclOutput) ToBucketAclOutputWithContext(ctx context.Context) BucketAclOutput {
	return o
}

func (o BucketAclOutput) ToBucketAclPtrOutput() BucketAclPtrOutput {
	return o.ToBucketAclPtrOutputWithContext(context.Background())
}

func (o BucketAclOutput) ToBucketAclPtrOutputWithContext(ctx context.Context) BucketAclPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAcl) *BucketAcl {
		return &v
	}).(BucketAclPtrOutput)
}

// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
func (o BucketAclOutput) BucketAclDelivered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketAcl) *bool { return v.BucketAclDelivered }).(pulumi.BoolPtrOutput)
}

func (o BucketAclOutput) Grants() BucketAclGrantArrayOutput {
	return o.ApplyT(func(v BucketAcl) []BucketAclGrant { return v.Grants }).(BucketAclGrantArrayOutput)
}

// 对象所有者。
func (o BucketAclOutput) Owner() BucketAclOwnerPtrOutput {
	return o.ApplyT(func(v BucketAcl) *BucketAclOwner { return v.Owner }).(BucketAclOwnerPtrOutput)
}

type BucketAclPtrOutput struct{ *pulumi.OutputState }

func (BucketAclPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAcl)(nil)).Elem()
}

func (o BucketAclPtrOutput) ToBucketAclPtrOutput() BucketAclPtrOutput {
	return o
}

func (o BucketAclPtrOutput) ToBucketAclPtrOutputWithContext(ctx context.Context) BucketAclPtrOutput {
	return o
}

func (o BucketAclPtrOutput) Elem() BucketAclOutput {
	return o.ApplyT(func(v *BucketAcl) BucketAcl {
		if v != nil {
			return *v
		}
		var ret BucketAcl
		return ret
	}).(BucketAclOutput)
}

// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
func (o BucketAclPtrOutput) BucketAclDelivered() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketAcl) *bool {
		if v == nil {
			return nil
		}
		return v.BucketAclDelivered
	}).(pulumi.BoolPtrOutput)
}

func (o BucketAclPtrOutput) Grants() BucketAclGrantArrayOutput {
	return o.ApplyT(func(v *BucketAcl) []BucketAclGrant {
		if v == nil {
			return nil
		}
		return v.Grants
	}).(BucketAclGrantArrayOutput)
}

// 对象所有者。
func (o BucketAclPtrOutput) Owner() BucketAclOwnerPtrOutput {
	return o.ApplyT(func(v *BucketAcl) *BucketAclOwner {
		if v == nil {
			return nil
		}
		return v.Owner
	}).(BucketAclOwnerPtrOutput)
}

type BucketAclGrant struct {
	// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
	Acl *string `pulumi:"acl"`
	// 授予指定用户所有权限。
	GrantFullControl *string `pulumi:"grantFullControl"`
	// 授予指定用户读权限。
	GrantRead *string `pulumi:"grantRead"`
	// 授予指定用户查看桶 ACL 的权限。
	GrantReadAcp *string `pulumi:"grantReadAcp"`
	// 授予指定用户写权限。
	GrantWrite *string `pulumi:"grantWrite"`
	// 授予指定用户修改和删除桶 ACL 的权限。
	GrantWriteAcp *string `pulumi:"grantWriteAcp"`
}

// BucketAclGrantInput is an input type that accepts BucketAclGrantArgs and BucketAclGrantOutput values.
// You can construct a concrete instance of `BucketAclGrantInput` via:
//
//	BucketAclGrantArgs{...}
type BucketAclGrantInput interface {
	pulumi.Input

	ToBucketAclGrantOutput() BucketAclGrantOutput
	ToBucketAclGrantOutputWithContext(context.Context) BucketAclGrantOutput
}

type BucketAclGrantArgs struct {
	// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
	Acl pulumi.StringPtrInput `pulumi:"acl"`
	// 授予指定用户所有权限。
	GrantFullControl pulumi.StringPtrInput `pulumi:"grantFullControl"`
	// 授予指定用户读权限。
	GrantRead pulumi.StringPtrInput `pulumi:"grantRead"`
	// 授予指定用户查看桶 ACL 的权限。
	GrantReadAcp pulumi.StringPtrInput `pulumi:"grantReadAcp"`
	// 授予指定用户写权限。
	GrantWrite pulumi.StringPtrInput `pulumi:"grantWrite"`
	// 授予指定用户修改和删除桶 ACL 的权限。
	GrantWriteAcp pulumi.StringPtrInput `pulumi:"grantWriteAcp"`
}

func (BucketAclGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclGrant)(nil)).Elem()
}

func (i BucketAclGrantArgs) ToBucketAclGrantOutput() BucketAclGrantOutput {
	return i.ToBucketAclGrantOutputWithContext(context.Background())
}

func (i BucketAclGrantArgs) ToBucketAclGrantOutputWithContext(ctx context.Context) BucketAclGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclGrantOutput)
}

func (i BucketAclGrantArgs) ToBucketAclGrantPtrOutput() BucketAclGrantPtrOutput {
	return i.ToBucketAclGrantPtrOutputWithContext(context.Background())
}

func (i BucketAclGrantArgs) ToBucketAclGrantPtrOutputWithContext(ctx context.Context) BucketAclGrantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclGrantOutput).ToBucketAclGrantPtrOutputWithContext(ctx)
}

// BucketAclGrantPtrInput is an input type that accepts BucketAclGrantArgs, BucketAclGrantPtr and BucketAclGrantPtrOutput values.
// You can construct a concrete instance of `BucketAclGrantPtrInput` via:
//
//	        BucketAclGrantArgs{...}
//
//	or:
//
//	        nil
type BucketAclGrantPtrInput interface {
	pulumi.Input

	ToBucketAclGrantPtrOutput() BucketAclGrantPtrOutput
	ToBucketAclGrantPtrOutputWithContext(context.Context) BucketAclGrantPtrOutput
}

type bucketAclGrantPtrType BucketAclGrantArgs

func BucketAclGrantPtr(v *BucketAclGrantArgs) BucketAclGrantPtrInput {
	return (*bucketAclGrantPtrType)(v)
}

func (*bucketAclGrantPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAclGrant)(nil)).Elem()
}

func (i *bucketAclGrantPtrType) ToBucketAclGrantPtrOutput() BucketAclGrantPtrOutput {
	return i.ToBucketAclGrantPtrOutputWithContext(context.Background())
}

func (i *bucketAclGrantPtrType) ToBucketAclGrantPtrOutputWithContext(ctx context.Context) BucketAclGrantPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclGrantPtrOutput)
}

// BucketAclGrantArrayInput is an input type that accepts BucketAclGrantArray and BucketAclGrantArrayOutput values.
// You can construct a concrete instance of `BucketAclGrantArrayInput` via:
//
//	BucketAclGrantArray{ BucketAclGrantArgs{...} }
type BucketAclGrantArrayInput interface {
	pulumi.Input

	ToBucketAclGrantArrayOutput() BucketAclGrantArrayOutput
	ToBucketAclGrantArrayOutputWithContext(context.Context) BucketAclGrantArrayOutput
}

type BucketAclGrantArray []BucketAclGrantInput

func (BucketAclGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAclGrant)(nil)).Elem()
}

func (i BucketAclGrantArray) ToBucketAclGrantArrayOutput() BucketAclGrantArrayOutput {
	return i.ToBucketAclGrantArrayOutputWithContext(context.Background())
}

func (i BucketAclGrantArray) ToBucketAclGrantArrayOutputWithContext(ctx context.Context) BucketAclGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclGrantArrayOutput)
}

type BucketAclGrantOutput struct{ *pulumi.OutputState }

func (BucketAclGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclGrant)(nil)).Elem()
}

func (o BucketAclGrantOutput) ToBucketAclGrantOutput() BucketAclGrantOutput {
	return o
}

func (o BucketAclGrantOutput) ToBucketAclGrantOutputWithContext(ctx context.Context) BucketAclGrantOutput {
	return o
}

func (o BucketAclGrantOutput) ToBucketAclGrantPtrOutput() BucketAclGrantPtrOutput {
	return o.ToBucketAclGrantPtrOutputWithContext(context.Background())
}

func (o BucketAclGrantOutput) ToBucketAclGrantPtrOutputWithContext(ctx context.Context) BucketAclGrantPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAclGrant) *BucketAclGrant {
		return &v
	}).(BucketAclGrantPtrOutput)
}

// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
func (o BucketAclGrantOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrant) *string { return v.Acl }).(pulumi.StringPtrOutput)
}

// 授予指定用户所有权限。
func (o BucketAclGrantOutput) GrantFullControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrant) *string { return v.GrantFullControl }).(pulumi.StringPtrOutput)
}

// 授予指定用户读权限。
func (o BucketAclGrantOutput) GrantRead() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrant) *string { return v.GrantRead }).(pulumi.StringPtrOutput)
}

// 授予指定用户查看桶 ACL 的权限。
func (o BucketAclGrantOutput) GrantReadAcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrant) *string { return v.GrantReadAcp }).(pulumi.StringPtrOutput)
}

// 授予指定用户写权限。
func (o BucketAclGrantOutput) GrantWrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrant) *string { return v.GrantWrite }).(pulumi.StringPtrOutput)
}

// 授予指定用户修改和删除桶 ACL 的权限。
func (o BucketAclGrantOutput) GrantWriteAcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrant) *string { return v.GrantWriteAcp }).(pulumi.StringPtrOutput)
}

type BucketAclGrantPtrOutput struct{ *pulumi.OutputState }

func (BucketAclGrantPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAclGrant)(nil)).Elem()
}

func (o BucketAclGrantPtrOutput) ToBucketAclGrantPtrOutput() BucketAclGrantPtrOutput {
	return o
}

func (o BucketAclGrantPtrOutput) ToBucketAclGrantPtrOutputWithContext(ctx context.Context) BucketAclGrantPtrOutput {
	return o
}

func (o BucketAclGrantPtrOutput) Elem() BucketAclGrantOutput {
	return o.ApplyT(func(v *BucketAclGrant) BucketAclGrant {
		if v != nil {
			return *v
		}
		var ret BucketAclGrant
		return ret
	}).(BucketAclGrantOutput)
}

// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
func (o BucketAclGrantPtrOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclGrant) *string {
		if v == nil {
			return nil
		}
		return v.Acl
	}).(pulumi.StringPtrOutput)
}

// 授予指定用户所有权限。
func (o BucketAclGrantPtrOutput) GrantFullControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclGrant) *string {
		if v == nil {
			return nil
		}
		return v.GrantFullControl
	}).(pulumi.StringPtrOutput)
}

// 授予指定用户读权限。
func (o BucketAclGrantPtrOutput) GrantRead() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclGrant) *string {
		if v == nil {
			return nil
		}
		return v.GrantRead
	}).(pulumi.StringPtrOutput)
}

// 授予指定用户查看桶 ACL 的权限。
func (o BucketAclGrantPtrOutput) GrantReadAcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclGrant) *string {
		if v == nil {
			return nil
		}
		return v.GrantReadAcp
	}).(pulumi.StringPtrOutput)
}

// 授予指定用户写权限。
func (o BucketAclGrantPtrOutput) GrantWrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclGrant) *string {
		if v == nil {
			return nil
		}
		return v.GrantWrite
	}).(pulumi.StringPtrOutput)
}

// 授予指定用户修改和删除桶 ACL 的权限。
func (o BucketAclGrantPtrOutput) GrantWriteAcp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclGrant) *string {
		if v == nil {
			return nil
		}
		return v.GrantWriteAcp
	}).(pulumi.StringPtrOutput)
}

type BucketAclGrantArrayOutput struct{ *pulumi.OutputState }

func (BucketAclGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketAclGrant)(nil)).Elem()
}

func (o BucketAclGrantArrayOutput) ToBucketAclGrantArrayOutput() BucketAclGrantArrayOutput {
	return o
}

func (o BucketAclGrantArrayOutput) ToBucketAclGrantArrayOutputWithContext(ctx context.Context) BucketAclGrantArrayOutput {
	return o
}

func (o BucketAclGrantArrayOutput) Index(i pulumi.IntInput) BucketAclGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketAclGrant {
		return vs[0].([]BucketAclGrant)[vs[1].(int)]
	}).(BucketAclGrantOutput)
}

type BucketAclGrantGrantee struct {
	// 预定义组。包括AllUsers、AuthenticatedUsers。
	Canned *string `pulumi:"canned"`
	// 展示名。
	DisplayName *string `pulumi:"displayName"`
	// 账号ID。
	GranteeId *string `pulumi:"granteeId"`
	// 用户类型。包括Group、CanonicalUser。
	Type *string `pulumi:"type"`
}

// BucketAclGrantGranteeInput is an input type that accepts BucketAclGrantGranteeArgs and BucketAclGrantGranteeOutput values.
// You can construct a concrete instance of `BucketAclGrantGranteeInput` via:
//
//	BucketAclGrantGranteeArgs{...}
type BucketAclGrantGranteeInput interface {
	pulumi.Input

	ToBucketAclGrantGranteeOutput() BucketAclGrantGranteeOutput
	ToBucketAclGrantGranteeOutputWithContext(context.Context) BucketAclGrantGranteeOutput
}

type BucketAclGrantGranteeArgs struct {
	// 预定义组。包括AllUsers、AuthenticatedUsers。
	Canned pulumi.StringPtrInput `pulumi:"canned"`
	// 展示名。
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// 账号ID。
	GranteeId pulumi.StringPtrInput `pulumi:"granteeId"`
	// 用户类型。包括Group、CanonicalUser。
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (BucketAclGrantGranteeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclGrantGrantee)(nil)).Elem()
}

func (i BucketAclGrantGranteeArgs) ToBucketAclGrantGranteeOutput() BucketAclGrantGranteeOutput {
	return i.ToBucketAclGrantGranteeOutputWithContext(context.Background())
}

func (i BucketAclGrantGranteeArgs) ToBucketAclGrantGranteeOutputWithContext(ctx context.Context) BucketAclGrantGranteeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclGrantGranteeOutput)
}

type BucketAclGrantGranteeOutput struct{ *pulumi.OutputState }

func (BucketAclGrantGranteeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclGrantGrantee)(nil)).Elem()
}

func (o BucketAclGrantGranteeOutput) ToBucketAclGrantGranteeOutput() BucketAclGrantGranteeOutput {
	return o
}

func (o BucketAclGrantGranteeOutput) ToBucketAclGrantGranteeOutputWithContext(ctx context.Context) BucketAclGrantGranteeOutput {
	return o
}

// 预定义组。包括AllUsers、AuthenticatedUsers。
func (o BucketAclGrantGranteeOutput) Canned() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrantGrantee) *string { return v.Canned }).(pulumi.StringPtrOutput)
}

// 展示名。
func (o BucketAclGrantGranteeOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrantGrantee) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// 账号ID。
func (o BucketAclGrantGranteeOutput) GranteeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrantGrantee) *string { return v.GranteeId }).(pulumi.StringPtrOutput)
}

// 用户类型。包括Group、CanonicalUser。
func (o BucketAclGrantGranteeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclGrantGrantee) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type BucketAclOwner struct {
	// 展示名。
	DisplayName *string `pulumi:"displayName"`
	// 账号ID。
	OwnerId *string `pulumi:"ownerId"`
}

// BucketAclOwnerInput is an input type that accepts BucketAclOwnerArgs and BucketAclOwnerOutput values.
// You can construct a concrete instance of `BucketAclOwnerInput` via:
//
//	BucketAclOwnerArgs{...}
type BucketAclOwnerInput interface {
	pulumi.Input

	ToBucketAclOwnerOutput() BucketAclOwnerOutput
	ToBucketAclOwnerOutputWithContext(context.Context) BucketAclOwnerOutput
}

type BucketAclOwnerArgs struct {
	// 展示名。
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// 账号ID。
	OwnerId pulumi.StringPtrInput `pulumi:"ownerId"`
}

func (BucketAclOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclOwner)(nil)).Elem()
}

func (i BucketAclOwnerArgs) ToBucketAclOwnerOutput() BucketAclOwnerOutput {
	return i.ToBucketAclOwnerOutputWithContext(context.Background())
}

func (i BucketAclOwnerArgs) ToBucketAclOwnerOutputWithContext(ctx context.Context) BucketAclOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclOwnerOutput)
}

func (i BucketAclOwnerArgs) ToBucketAclOwnerPtrOutput() BucketAclOwnerPtrOutput {
	return i.ToBucketAclOwnerPtrOutputWithContext(context.Background())
}

func (i BucketAclOwnerArgs) ToBucketAclOwnerPtrOutputWithContext(ctx context.Context) BucketAclOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclOwnerOutput).ToBucketAclOwnerPtrOutputWithContext(ctx)
}

// BucketAclOwnerPtrInput is an input type that accepts BucketAclOwnerArgs, BucketAclOwnerPtr and BucketAclOwnerPtrOutput values.
// You can construct a concrete instance of `BucketAclOwnerPtrInput` via:
//
//	        BucketAclOwnerArgs{...}
//
//	or:
//
//	        nil
type BucketAclOwnerPtrInput interface {
	pulumi.Input

	ToBucketAclOwnerPtrOutput() BucketAclOwnerPtrOutput
	ToBucketAclOwnerPtrOutputWithContext(context.Context) BucketAclOwnerPtrOutput
}

type bucketAclOwnerPtrType BucketAclOwnerArgs

func BucketAclOwnerPtr(v *BucketAclOwnerArgs) BucketAclOwnerPtrInput {
	return (*bucketAclOwnerPtrType)(v)
}

func (*bucketAclOwnerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAclOwner)(nil)).Elem()
}

func (i *bucketAclOwnerPtrType) ToBucketAclOwnerPtrOutput() BucketAclOwnerPtrOutput {
	return i.ToBucketAclOwnerPtrOutputWithContext(context.Background())
}

func (i *bucketAclOwnerPtrType) ToBucketAclOwnerPtrOutputWithContext(ctx context.Context) BucketAclOwnerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclOwnerPtrOutput)
}

type BucketAclOwnerOutput struct{ *pulumi.OutputState }

func (BucketAclOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAclOwner)(nil)).Elem()
}

func (o BucketAclOwnerOutput) ToBucketAclOwnerOutput() BucketAclOwnerOutput {
	return o
}

func (o BucketAclOwnerOutput) ToBucketAclOwnerOutputWithContext(ctx context.Context) BucketAclOwnerOutput {
	return o
}

func (o BucketAclOwnerOutput) ToBucketAclOwnerPtrOutput() BucketAclOwnerPtrOutput {
	return o.ToBucketAclOwnerPtrOutputWithContext(context.Background())
}

func (o BucketAclOwnerOutput) ToBucketAclOwnerPtrOutputWithContext(ctx context.Context) BucketAclOwnerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAclOwner) *BucketAclOwner {
		return &v
	}).(BucketAclOwnerPtrOutput)
}

// 展示名。
func (o BucketAclOwnerOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclOwner) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// 账号ID。
func (o BucketAclOwnerOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAclOwner) *string { return v.OwnerId }).(pulumi.StringPtrOutput)
}

type BucketAclOwnerPtrOutput struct{ *pulumi.OutputState }

func (BucketAclOwnerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAclOwner)(nil)).Elem()
}

func (o BucketAclOwnerPtrOutput) ToBucketAclOwnerPtrOutput() BucketAclOwnerPtrOutput {
	return o
}

func (o BucketAclOwnerPtrOutput) ToBucketAclOwnerPtrOutputWithContext(ctx context.Context) BucketAclOwnerPtrOutput {
	return o
}

func (o BucketAclOwnerPtrOutput) Elem() BucketAclOwnerOutput {
	return o.ApplyT(func(v *BucketAclOwner) BucketAclOwner {
		if v != nil {
			return *v
		}
		var ret BucketAclOwner
		return ret
	}).(BucketAclOwnerOutput)
}

// 展示名。
func (o BucketAclOwnerPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclOwner) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// 账号ID。
func (o BucketAclOwnerPtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAclOwner) *string {
		if v == nil {
			return nil
		}
		return v.OwnerId
	}).(pulumi.StringPtrOutput)
}

type BucketLifecycleConfig struct {
	// 指定未合并的分片任务（碎片）的过期属性。
	AbortInCompleteMultipartUpload *BucketLifecycleConfigAbortInCompleteMultipartUpload `pulumi:"abortInCompleteMultipartUpload"`
	// 基于最后修改时间的生命周期规则中删除最新版本对象的过期属性。
	Expiration *BucketLifecycleConfigExpiration `pulumi:"expiration"`
	// 指定规则生效的过滤条件。
	Filter *BucketLifecycleConfigFilter `pulumi:"filter"`
	// 规则 ID。
	LifecycleRuleId              *string                                            `pulumi:"lifecycleRuleId"`
	NoCurrentVersionExpiration   *BucketLifecycleConfigNoCurrentVersionExpiration   `pulumi:"noCurrentVersionExpiration"`
	NonCurrentVersionTransitions []BucketLifecycleConfigNonCurrentVersionTransition `pulumi:"nonCurrentVersionTransitions"`
	// 规则所适用的前缀。
	Prefix *string `pulumi:"prefix"`
	// 是否启用规则。包括Enabled、Disabled。
	Status      *string                           `pulumi:"status"`
	Tags        []BucketLifecycleConfigTag        `pulumi:"tags"`
	Transitions []BucketLifecycleConfigTransition `pulumi:"transitions"`
}

// BucketLifecycleConfigInput is an input type that accepts BucketLifecycleConfigArgs and BucketLifecycleConfigOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigInput` via:
//
//	BucketLifecycleConfigArgs{...}
type BucketLifecycleConfigInput interface {
	pulumi.Input

	ToBucketLifecycleConfigOutput() BucketLifecycleConfigOutput
	ToBucketLifecycleConfigOutputWithContext(context.Context) BucketLifecycleConfigOutput
}

type BucketLifecycleConfigArgs struct {
	// 指定未合并的分片任务（碎片）的过期属性。
	AbortInCompleteMultipartUpload BucketLifecycleConfigAbortInCompleteMultipartUploadPtrInput `pulumi:"abortInCompleteMultipartUpload"`
	// 基于最后修改时间的生命周期规则中删除最新版本对象的过期属性。
	Expiration BucketLifecycleConfigExpirationPtrInput `pulumi:"expiration"`
	// 指定规则生效的过滤条件。
	Filter BucketLifecycleConfigFilterPtrInput `pulumi:"filter"`
	// 规则 ID。
	LifecycleRuleId              pulumi.StringPtrInput                                      `pulumi:"lifecycleRuleId"`
	NoCurrentVersionExpiration   BucketLifecycleConfigNoCurrentVersionExpirationPtrInput    `pulumi:"noCurrentVersionExpiration"`
	NonCurrentVersionTransitions BucketLifecycleConfigNonCurrentVersionTransitionArrayInput `pulumi:"nonCurrentVersionTransitions"`
	// 规则所适用的前缀。
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// 是否启用规则。包括Enabled、Disabled。
	Status      pulumi.StringPtrInput                     `pulumi:"status"`
	Tags        BucketLifecycleConfigTagArrayInput        `pulumi:"tags"`
	Transitions BucketLifecycleConfigTransitionArrayInput `pulumi:"transitions"`
}

func (BucketLifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfig)(nil)).Elem()
}

func (i BucketLifecycleConfigArgs) ToBucketLifecycleConfigOutput() BucketLifecycleConfigOutput {
	return i.ToBucketLifecycleConfigOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigArgs) ToBucketLifecycleConfigOutputWithContext(ctx context.Context) BucketLifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigOutput)
}

// BucketLifecycleConfigArrayInput is an input type that accepts BucketLifecycleConfigArray and BucketLifecycleConfigArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigArrayInput` via:
//
//	BucketLifecycleConfigArray{ BucketLifecycleConfigArgs{...} }
type BucketLifecycleConfigArrayInput interface {
	pulumi.Input

	ToBucketLifecycleConfigArrayOutput() BucketLifecycleConfigArrayOutput
	ToBucketLifecycleConfigArrayOutputWithContext(context.Context) BucketLifecycleConfigArrayOutput
}

type BucketLifecycleConfigArray []BucketLifecycleConfigInput

func (BucketLifecycleConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfig)(nil)).Elem()
}

func (i BucketLifecycleConfigArray) ToBucketLifecycleConfigArrayOutput() BucketLifecycleConfigArrayOutput {
	return i.ToBucketLifecycleConfigArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigArray) ToBucketLifecycleConfigArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigArrayOutput)
}

type BucketLifecycleConfigOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfig)(nil)).Elem()
}

func (o BucketLifecycleConfigOutput) ToBucketLifecycleConfigOutput() BucketLifecycleConfigOutput {
	return o
}

func (o BucketLifecycleConfigOutput) ToBucketLifecycleConfigOutputWithContext(ctx context.Context) BucketLifecycleConfigOutput {
	return o
}

// 指定未合并的分片任务（碎片）的过期属性。
func (o BucketLifecycleConfigOutput) AbortInCompleteMultipartUpload() BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *BucketLifecycleConfigAbortInCompleteMultipartUpload {
		return v.AbortInCompleteMultipartUpload
	}).(BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput)
}

// 基于最后修改时间的生命周期规则中删除最新版本对象的过期属性。
func (o BucketLifecycleConfigOutput) Expiration() BucketLifecycleConfigExpirationPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *BucketLifecycleConfigExpiration { return v.Expiration }).(BucketLifecycleConfigExpirationPtrOutput)
}

// 指定规则生效的过滤条件。
func (o BucketLifecycleConfigOutput) Filter() BucketLifecycleConfigFilterPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *BucketLifecycleConfigFilter { return v.Filter }).(BucketLifecycleConfigFilterPtrOutput)
}

// 规则 ID。
func (o BucketLifecycleConfigOutput) LifecycleRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *string { return v.LifecycleRuleId }).(pulumi.StringPtrOutput)
}

func (o BucketLifecycleConfigOutput) NoCurrentVersionExpiration() BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *BucketLifecycleConfigNoCurrentVersionExpiration {
		return v.NoCurrentVersionExpiration
	}).(BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput)
}

func (o BucketLifecycleConfigOutput) NonCurrentVersionTransitions() BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) []BucketLifecycleConfigNonCurrentVersionTransition {
		return v.NonCurrentVersionTransitions
	}).(BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput)
}

// 规则所适用的前缀。
func (o BucketLifecycleConfigOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// 是否启用规则。包括Enabled、Disabled。
func (o BucketLifecycleConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o BucketLifecycleConfigOutput) Tags() BucketLifecycleConfigTagArrayOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) []BucketLifecycleConfigTag { return v.Tags }).(BucketLifecycleConfigTagArrayOutput)
}

func (o BucketLifecycleConfigOutput) Transitions() BucketLifecycleConfigTransitionArrayOutput {
	return o.ApplyT(func(v BucketLifecycleConfig) []BucketLifecycleConfigTransition { return v.Transitions }).(BucketLifecycleConfigTransitionArrayOutput)
}

type BucketLifecycleConfigArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfig)(nil)).Elem()
}

func (o BucketLifecycleConfigArrayOutput) ToBucketLifecycleConfigArrayOutput() BucketLifecycleConfigArrayOutput {
	return o
}

func (o BucketLifecycleConfigArrayOutput) ToBucketLifecycleConfigArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigArrayOutput {
	return o
}

func (o BucketLifecycleConfigArrayOutput) Index(i pulumi.IntInput) BucketLifecycleConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleConfig {
		return vs[0].([]BucketLifecycleConfig)[vs[1].(int)]
	}).(BucketLifecycleConfigOutput)
}

type BucketLifecycleConfigAbortInCompleteMultipartUpload struct {
	// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
	DaysAfterInitiation *int `pulumi:"daysAfterInitiation"`
}

// BucketLifecycleConfigAbortInCompleteMultipartUploadInput is an input type that accepts BucketLifecycleConfigAbortInCompleteMultipartUploadArgs and BucketLifecycleConfigAbortInCompleteMultipartUploadOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigAbortInCompleteMultipartUploadInput` via:
//
//	BucketLifecycleConfigAbortInCompleteMultipartUploadArgs{...}
type BucketLifecycleConfigAbortInCompleteMultipartUploadInput interface {
	pulumi.Input

	ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadOutput
	ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadOutput
}

type BucketLifecycleConfigAbortInCompleteMultipartUploadArgs struct {
	// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
	DaysAfterInitiation pulumi.IntPtrInput `pulumi:"daysAfterInitiation"`
}

func (BucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigAbortInCompleteMultipartUpload)(nil)).Elem()
}

func (i BucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return i.ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigAbortInCompleteMultipartUploadOutput)
}

func (i BucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return i.ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigAbortInCompleteMultipartUploadOutput).ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigAbortInCompleteMultipartUploadPtrInput is an input type that accepts BucketLifecycleConfigAbortInCompleteMultipartUploadArgs, BucketLifecycleConfigAbortInCompleteMultipartUploadPtr and BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigAbortInCompleteMultipartUploadPtrInput` via:
//
//	        BucketLifecycleConfigAbortInCompleteMultipartUploadArgs{...}
//
//	or:
//
//	        nil
type BucketLifecycleConfigAbortInCompleteMultipartUploadPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput
	ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput
}

type bucketLifecycleConfigAbortInCompleteMultipartUploadPtrType BucketLifecycleConfigAbortInCompleteMultipartUploadArgs

func BucketLifecycleConfigAbortInCompleteMultipartUploadPtr(v *BucketLifecycleConfigAbortInCompleteMultipartUploadArgs) BucketLifecycleConfigAbortInCompleteMultipartUploadPtrInput {
	return (*bucketLifecycleConfigAbortInCompleteMultipartUploadPtrType)(v)
}

func (*bucketLifecycleConfigAbortInCompleteMultipartUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigAbortInCompleteMultipartUpload)(nil)).Elem()
}

func (i *bucketLifecycleConfigAbortInCompleteMultipartUploadPtrType) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return i.ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigAbortInCompleteMultipartUploadPtrType) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput)
}

type BucketLifecycleConfigAbortInCompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigAbortInCompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ToBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(ctx context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return o
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return o.ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLifecycleConfigAbortInCompleteMultipartUpload) *BucketLifecycleConfigAbortInCompleteMultipartUpload {
		return &v
	}).(BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput)
}

// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
func (o BucketLifecycleConfigAbortInCompleteMultipartUploadOutput) DaysAfterInitiation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigAbortInCompleteMultipartUpload) *int { return v.DaysAfterInitiation }).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigAbortInCompleteMultipartUpload)(nil)).Elem()
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput() BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput) ToBucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput) Elem() BucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigAbortInCompleteMultipartUpload) BucketLifecycleConfigAbortInCompleteMultipartUpload {
		if v != nil {
			return *v
		}
		var ret BucketLifecycleConfigAbortInCompleteMultipartUpload
		return ret
	}).(BucketLifecycleConfigAbortInCompleteMultipartUploadOutput)
}

// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
func (o BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput) DaysAfterInitiation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigAbortInCompleteMultipartUpload) *int {
		if v == nil {
			return nil
		}
		return v.DaysAfterInitiation
	}).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigExpiration struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
	Date *string `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
	Days *int `pulumi:"days"`
}

// BucketLifecycleConfigExpirationInput is an input type that accepts BucketLifecycleConfigExpirationArgs and BucketLifecycleConfigExpirationOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigExpirationInput` via:
//
//	BucketLifecycleConfigExpirationArgs{...}
type BucketLifecycleConfigExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleConfigExpirationOutput() BucketLifecycleConfigExpirationOutput
	ToBucketLifecycleConfigExpirationOutputWithContext(context.Context) BucketLifecycleConfigExpirationOutput
}

type BucketLifecycleConfigExpirationArgs struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
	Date pulumi.StringPtrInput `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (BucketLifecycleConfigExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigExpiration)(nil)).Elem()
}

func (i BucketLifecycleConfigExpirationArgs) ToBucketLifecycleConfigExpirationOutput() BucketLifecycleConfigExpirationOutput {
	return i.ToBucketLifecycleConfigExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigExpirationArgs) ToBucketLifecycleConfigExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigExpirationOutput)
}

func (i BucketLifecycleConfigExpirationArgs) ToBucketLifecycleConfigExpirationPtrOutput() BucketLifecycleConfigExpirationPtrOutput {
	return i.ToBucketLifecycleConfigExpirationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigExpirationArgs) ToBucketLifecycleConfigExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigExpirationOutput).ToBucketLifecycleConfigExpirationPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigExpirationPtrInput is an input type that accepts BucketLifecycleConfigExpirationArgs, BucketLifecycleConfigExpirationPtr and BucketLifecycleConfigExpirationPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigExpirationPtrInput` via:
//
//	        BucketLifecycleConfigExpirationArgs{...}
//
//	or:
//
//	        nil
type BucketLifecycleConfigExpirationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigExpirationPtrOutput() BucketLifecycleConfigExpirationPtrOutput
	ToBucketLifecycleConfigExpirationPtrOutputWithContext(context.Context) BucketLifecycleConfigExpirationPtrOutput
}

type bucketLifecycleConfigExpirationPtrType BucketLifecycleConfigExpirationArgs

func BucketLifecycleConfigExpirationPtr(v *BucketLifecycleConfigExpirationArgs) BucketLifecycleConfigExpirationPtrInput {
	return (*bucketLifecycleConfigExpirationPtrType)(v)
}

func (*bucketLifecycleConfigExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigExpiration)(nil)).Elem()
}

func (i *bucketLifecycleConfigExpirationPtrType) ToBucketLifecycleConfigExpirationPtrOutput() BucketLifecycleConfigExpirationPtrOutput {
	return i.ToBucketLifecycleConfigExpirationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigExpirationPtrType) ToBucketLifecycleConfigExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigExpirationPtrOutput)
}

type BucketLifecycleConfigExpirationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigExpirationOutput) ToBucketLifecycleConfigExpirationOutput() BucketLifecycleConfigExpirationOutput {
	return o
}

func (o BucketLifecycleConfigExpirationOutput) ToBucketLifecycleConfigExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigExpirationOutput {
	return o
}

func (o BucketLifecycleConfigExpirationOutput) ToBucketLifecycleConfigExpirationPtrOutput() BucketLifecycleConfigExpirationPtrOutput {
	return o.ToBucketLifecycleConfigExpirationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigExpirationOutput) ToBucketLifecycleConfigExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLifecycleConfigExpiration) *BucketLifecycleConfigExpiration {
		return &v
	}).(BucketLifecycleConfigExpirationPtrOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
func (o BucketLifecycleConfigExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
func (o BucketLifecycleConfigExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigExpirationPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigExpirationPtrOutput) ToBucketLifecycleConfigExpirationPtrOutput() BucketLifecycleConfigExpirationPtrOutput {
	return o
}

func (o BucketLifecycleConfigExpirationPtrOutput) ToBucketLifecycleConfigExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigExpirationPtrOutput {
	return o
}

func (o BucketLifecycleConfigExpirationPtrOutput) Elem() BucketLifecycleConfigExpirationOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigExpiration) BucketLifecycleConfigExpiration {
		if v != nil {
			return *v
		}
		var ret BucketLifecycleConfigExpiration
		return ret
	}).(BucketLifecycleConfigExpirationOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
func (o BucketLifecycleConfigExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
func (o BucketLifecycleConfigExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigFilter struct {
	// 是否启用相等条件。包括Enabled、Disabled。
	GreaterThanIncludeEqual *string `pulumi:"greaterThanIncludeEqual"`
	// 是否启用相等条件。包括Enabled、Disabled。
	LessThanIncludeEqual *string `pulumi:"lessThanIncludeEqual"`
	// 设置规则生效于大于指定大小的对象。
	ObjectSizeGreaterThan *int `pulumi:"objectSizeGreaterThan"`
	// 设置规则生效于小于指定大小的对象。
	ObjectSizeLessThan *int `pulumi:"objectSizeLessThan"`
}

// BucketLifecycleConfigFilterInput is an input type that accepts BucketLifecycleConfigFilterArgs and BucketLifecycleConfigFilterOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigFilterInput` via:
//
//	BucketLifecycleConfigFilterArgs{...}
type BucketLifecycleConfigFilterInput interface {
	pulumi.Input

	ToBucketLifecycleConfigFilterOutput() BucketLifecycleConfigFilterOutput
	ToBucketLifecycleConfigFilterOutputWithContext(context.Context) BucketLifecycleConfigFilterOutput
}

type BucketLifecycleConfigFilterArgs struct {
	// 是否启用相等条件。包括Enabled、Disabled。
	GreaterThanIncludeEqual pulumi.StringPtrInput `pulumi:"greaterThanIncludeEqual"`
	// 是否启用相等条件。包括Enabled、Disabled。
	LessThanIncludeEqual pulumi.StringPtrInput `pulumi:"lessThanIncludeEqual"`
	// 设置规则生效于大于指定大小的对象。
	ObjectSizeGreaterThan pulumi.IntPtrInput `pulumi:"objectSizeGreaterThan"`
	// 设置规则生效于小于指定大小的对象。
	ObjectSizeLessThan pulumi.IntPtrInput `pulumi:"objectSizeLessThan"`
}

func (BucketLifecycleConfigFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigFilter)(nil)).Elem()
}

func (i BucketLifecycleConfigFilterArgs) ToBucketLifecycleConfigFilterOutput() BucketLifecycleConfigFilterOutput {
	return i.ToBucketLifecycleConfigFilterOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigFilterArgs) ToBucketLifecycleConfigFilterOutputWithContext(ctx context.Context) BucketLifecycleConfigFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigFilterOutput)
}

func (i BucketLifecycleConfigFilterArgs) ToBucketLifecycleConfigFilterPtrOutput() BucketLifecycleConfigFilterPtrOutput {
	return i.ToBucketLifecycleConfigFilterPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigFilterArgs) ToBucketLifecycleConfigFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigFilterOutput).ToBucketLifecycleConfigFilterPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigFilterPtrInput is an input type that accepts BucketLifecycleConfigFilterArgs, BucketLifecycleConfigFilterPtr and BucketLifecycleConfigFilterPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigFilterPtrInput` via:
//
//	        BucketLifecycleConfigFilterArgs{...}
//
//	or:
//
//	        nil
type BucketLifecycleConfigFilterPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigFilterPtrOutput() BucketLifecycleConfigFilterPtrOutput
	ToBucketLifecycleConfigFilterPtrOutputWithContext(context.Context) BucketLifecycleConfigFilterPtrOutput
}

type bucketLifecycleConfigFilterPtrType BucketLifecycleConfigFilterArgs

func BucketLifecycleConfigFilterPtr(v *BucketLifecycleConfigFilterArgs) BucketLifecycleConfigFilterPtrInput {
	return (*bucketLifecycleConfigFilterPtrType)(v)
}

func (*bucketLifecycleConfigFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigFilter)(nil)).Elem()
}

func (i *bucketLifecycleConfigFilterPtrType) ToBucketLifecycleConfigFilterPtrOutput() BucketLifecycleConfigFilterPtrOutput {
	return i.ToBucketLifecycleConfigFilterPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigFilterPtrType) ToBucketLifecycleConfigFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigFilterPtrOutput)
}

type BucketLifecycleConfigFilterOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigFilter)(nil)).Elem()
}

func (o BucketLifecycleConfigFilterOutput) ToBucketLifecycleConfigFilterOutput() BucketLifecycleConfigFilterOutput {
	return o
}

func (o BucketLifecycleConfigFilterOutput) ToBucketLifecycleConfigFilterOutputWithContext(ctx context.Context) BucketLifecycleConfigFilterOutput {
	return o
}

func (o BucketLifecycleConfigFilterOutput) ToBucketLifecycleConfigFilterPtrOutput() BucketLifecycleConfigFilterPtrOutput {
	return o.ToBucketLifecycleConfigFilterPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigFilterOutput) ToBucketLifecycleConfigFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLifecycleConfigFilter) *BucketLifecycleConfigFilter {
		return &v
	}).(BucketLifecycleConfigFilterPtrOutput)
}

// 是否启用相等条件。包括Enabled、Disabled。
func (o BucketLifecycleConfigFilterOutput) GreaterThanIncludeEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigFilter) *string { return v.GreaterThanIncludeEqual }).(pulumi.StringPtrOutput)
}

// 是否启用相等条件。包括Enabled、Disabled。
func (o BucketLifecycleConfigFilterOutput) LessThanIncludeEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigFilter) *string { return v.LessThanIncludeEqual }).(pulumi.StringPtrOutput)
}

// 设置规则生效于大于指定大小的对象。
func (o BucketLifecycleConfigFilterOutput) ObjectSizeGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigFilter) *int { return v.ObjectSizeGreaterThan }).(pulumi.IntPtrOutput)
}

// 设置规则生效于小于指定大小的对象。
func (o BucketLifecycleConfigFilterOutput) ObjectSizeLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigFilter) *int { return v.ObjectSizeLessThan }).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigFilterPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigFilter)(nil)).Elem()
}

func (o BucketLifecycleConfigFilterPtrOutput) ToBucketLifecycleConfigFilterPtrOutput() BucketLifecycleConfigFilterPtrOutput {
	return o
}

func (o BucketLifecycleConfigFilterPtrOutput) ToBucketLifecycleConfigFilterPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigFilterPtrOutput {
	return o
}

func (o BucketLifecycleConfigFilterPtrOutput) Elem() BucketLifecycleConfigFilterOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigFilter) BucketLifecycleConfigFilter {
		if v != nil {
			return *v
		}
		var ret BucketLifecycleConfigFilter
		return ret
	}).(BucketLifecycleConfigFilterOutput)
}

// 是否启用相等条件。包括Enabled、Disabled。
func (o BucketLifecycleConfigFilterPtrOutput) GreaterThanIncludeEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigFilter) *string {
		if v == nil {
			return nil
		}
		return v.GreaterThanIncludeEqual
	}).(pulumi.StringPtrOutput)
}

// 是否启用相等条件。包括Enabled、Disabled。
func (o BucketLifecycleConfigFilterPtrOutput) LessThanIncludeEqual() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigFilter) *string {
		if v == nil {
			return nil
		}
		return v.LessThanIncludeEqual
	}).(pulumi.StringPtrOutput)
}

// 设置规则生效于大于指定大小的对象。
func (o BucketLifecycleConfigFilterPtrOutput) ObjectSizeGreaterThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigFilter) *int {
		if v == nil {
			return nil
		}
		return v.ObjectSizeGreaterThan
	}).(pulumi.IntPtrOutput)
}

// 设置规则生效于小于指定大小的对象。
func (o BucketLifecycleConfigFilterPtrOutput) ObjectSizeLessThan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigFilter) *int {
		if v == nil {
			return nil
		}
		return v.ObjectSizeLessThan
	}).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigNoCurrentVersionExpiration struct {
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
	NonCurrentDate *string `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
	NonCurrentDays *int `pulumi:"nonCurrentDays"`
}

// BucketLifecycleConfigNoCurrentVersionExpirationInput is an input type that accepts BucketLifecycleConfigNoCurrentVersionExpirationArgs and BucketLifecycleConfigNoCurrentVersionExpirationOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigNoCurrentVersionExpirationInput` via:
//
//	BucketLifecycleConfigNoCurrentVersionExpirationArgs{...}
type BucketLifecycleConfigNoCurrentVersionExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleConfigNoCurrentVersionExpirationOutput() BucketLifecycleConfigNoCurrentVersionExpirationOutput
	ToBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(context.Context) BucketLifecycleConfigNoCurrentVersionExpirationOutput
}

type BucketLifecycleConfigNoCurrentVersionExpirationArgs struct {
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
	NonCurrentDate pulumi.StringPtrInput `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
	NonCurrentDays pulumi.IntPtrInput `pulumi:"nonCurrentDays"`
}

func (BucketLifecycleConfigNoCurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigNoCurrentVersionExpiration)(nil)).Elem()
}

func (i BucketLifecycleConfigNoCurrentVersionExpirationArgs) ToBucketLifecycleConfigNoCurrentVersionExpirationOutput() BucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return i.ToBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigNoCurrentVersionExpirationArgs) ToBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigNoCurrentVersionExpirationOutput)
}

func (i BucketLifecycleConfigNoCurrentVersionExpirationArgs) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutput() BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return i.ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigNoCurrentVersionExpirationArgs) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigNoCurrentVersionExpirationOutput).ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigNoCurrentVersionExpirationPtrInput is an input type that accepts BucketLifecycleConfigNoCurrentVersionExpirationArgs, BucketLifecycleConfigNoCurrentVersionExpirationPtr and BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigNoCurrentVersionExpirationPtrInput` via:
//
//	        BucketLifecycleConfigNoCurrentVersionExpirationArgs{...}
//
//	or:
//
//	        nil
type BucketLifecycleConfigNoCurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutput() BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput
	ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(context.Context) BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput
}

type bucketLifecycleConfigNoCurrentVersionExpirationPtrType BucketLifecycleConfigNoCurrentVersionExpirationArgs

func BucketLifecycleConfigNoCurrentVersionExpirationPtr(v *BucketLifecycleConfigNoCurrentVersionExpirationArgs) BucketLifecycleConfigNoCurrentVersionExpirationPtrInput {
	return (*bucketLifecycleConfigNoCurrentVersionExpirationPtrType)(v)
}

func (*bucketLifecycleConfigNoCurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigNoCurrentVersionExpiration)(nil)).Elem()
}

func (i *bucketLifecycleConfigNoCurrentVersionExpirationPtrType) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutput() BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return i.ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigNoCurrentVersionExpirationPtrType) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput)
}

type BucketLifecycleConfigNoCurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigNoCurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigNoCurrentVersionExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationOutput) ToBucketLifecycleConfigNoCurrentVersionExpirationOutput() BucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return o
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationOutput) ToBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(ctx context.Context) BucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return o
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationOutput) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutput() BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return o.ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationOutput) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLifecycleConfigNoCurrentVersionExpiration) *BucketLifecycleConfigNoCurrentVersionExpiration {
		return &v
	}).(BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
func (o BucketLifecycleConfigNoCurrentVersionExpirationOutput) NonCurrentDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigNoCurrentVersionExpiration) *string { return v.NonCurrentDate }).(pulumi.StringPtrOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
func (o BucketLifecycleConfigNoCurrentVersionExpirationOutput) NonCurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigNoCurrentVersionExpiration) *int { return v.NonCurrentDays }).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigNoCurrentVersionExpiration)(nil)).Elem()
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutput() BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return o
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput) ToBucketLifecycleConfigNoCurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput {
	return o
}

func (o BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput) Elem() BucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigNoCurrentVersionExpiration) BucketLifecycleConfigNoCurrentVersionExpiration {
		if v != nil {
			return *v
		}
		var ret BucketLifecycleConfigNoCurrentVersionExpiration
		return ret
	}).(BucketLifecycleConfigNoCurrentVersionExpirationOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
func (o BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput) NonCurrentDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigNoCurrentVersionExpiration) *string {
		if v == nil {
			return nil
		}
		return v.NonCurrentDate
	}).(pulumi.StringPtrOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
func (o BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput) NonCurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketLifecycleConfigNoCurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return v.NonCurrentDays
	}).(pulumi.IntPtrOutput)
}

type BucketLifecycleConfigNonCurrentVersionTransition struct {
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的具体日期。
	NonCurrentDate *string `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的天数。
	NonCurrentDays *int `pulumi:"nonCurrentDays"`
	// 存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass *string `pulumi:"storageClass"`
}

// BucketLifecycleConfigNonCurrentVersionTransitionInput is an input type that accepts BucketLifecycleConfigNonCurrentVersionTransitionArgs and BucketLifecycleConfigNonCurrentVersionTransitionOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigNonCurrentVersionTransitionInput` via:
//
//	BucketLifecycleConfigNonCurrentVersionTransitionArgs{...}
type BucketLifecycleConfigNonCurrentVersionTransitionInput interface {
	pulumi.Input

	ToBucketLifecycleConfigNonCurrentVersionTransitionOutput() BucketLifecycleConfigNonCurrentVersionTransitionOutput
	ToBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(context.Context) BucketLifecycleConfigNonCurrentVersionTransitionOutput
}

type BucketLifecycleConfigNonCurrentVersionTransitionArgs struct {
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的具体日期。
	NonCurrentDate pulumi.StringPtrInput `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的天数。
	NonCurrentDays pulumi.IntPtrInput `pulumi:"nonCurrentDays"`
	// 存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (BucketLifecycleConfigNonCurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (i BucketLifecycleConfigNonCurrentVersionTransitionArgs) ToBucketLifecycleConfigNonCurrentVersionTransitionOutput() BucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return i.ToBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigNonCurrentVersionTransitionArgs) ToBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(ctx context.Context) BucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigNonCurrentVersionTransitionOutput)
}

// BucketLifecycleConfigNonCurrentVersionTransitionArrayInput is an input type that accepts BucketLifecycleConfigNonCurrentVersionTransitionArray and BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigNonCurrentVersionTransitionArrayInput` via:
//
//	BucketLifecycleConfigNonCurrentVersionTransitionArray{ BucketLifecycleConfigNonCurrentVersionTransitionArgs{...} }
type BucketLifecycleConfigNonCurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput() BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput
	ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(context.Context) BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput
}

type BucketLifecycleConfigNonCurrentVersionTransitionArray []BucketLifecycleConfigNonCurrentVersionTransitionInput

func (BucketLifecycleConfigNonCurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (i BucketLifecycleConfigNonCurrentVersionTransitionArray) ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput() BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return i.ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigNonCurrentVersionTransitionArray) ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput)
}

type BucketLifecycleConfigNonCurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigNonCurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (o BucketLifecycleConfigNonCurrentVersionTransitionOutput) ToBucketLifecycleConfigNonCurrentVersionTransitionOutput() BucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return o
}

func (o BucketLifecycleConfigNonCurrentVersionTransitionOutput) ToBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(ctx context.Context) BucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return o
}

// 基于最后修改时间的生命周期规则中历史版本对象沉降的具体日期。
func (o BucketLifecycleConfigNonCurrentVersionTransitionOutput) NonCurrentDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigNonCurrentVersionTransition) *string { return v.NonCurrentDate }).(pulumi.StringPtrOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象沉降的天数。
func (o BucketLifecycleConfigNonCurrentVersionTransitionOutput) NonCurrentDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigNonCurrentVersionTransition) *int { return v.NonCurrentDays }).(pulumi.IntPtrOutput)
}

// 存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
func (o BucketLifecycleConfigNonCurrentVersionTransitionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigNonCurrentVersionTransition) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (o BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput() BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) ToBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) BucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleConfigNonCurrentVersionTransition {
		return vs[0].([]BucketLifecycleConfigNonCurrentVersionTransition)[vs[1].(int)]
	}).(BucketLifecycleConfigNonCurrentVersionTransitionOutput)
}

type BucketLifecycleConfigTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// BucketLifecycleConfigTagInput is an input type that accepts BucketLifecycleConfigTagArgs and BucketLifecycleConfigTagOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigTagInput` via:
//
//	BucketLifecycleConfigTagArgs{...}
type BucketLifecycleConfigTagInput interface {
	pulumi.Input

	ToBucketLifecycleConfigTagOutput() BucketLifecycleConfigTagOutput
	ToBucketLifecycleConfigTagOutputWithContext(context.Context) BucketLifecycleConfigTagOutput
}

type BucketLifecycleConfigTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BucketLifecycleConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigTag)(nil)).Elem()
}

func (i BucketLifecycleConfigTagArgs) ToBucketLifecycleConfigTagOutput() BucketLifecycleConfigTagOutput {
	return i.ToBucketLifecycleConfigTagOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigTagArgs) ToBucketLifecycleConfigTagOutputWithContext(ctx context.Context) BucketLifecycleConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigTagOutput)
}

// BucketLifecycleConfigTagArrayInput is an input type that accepts BucketLifecycleConfigTagArray and BucketLifecycleConfigTagArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigTagArrayInput` via:
//
//	BucketLifecycleConfigTagArray{ BucketLifecycleConfigTagArgs{...} }
type BucketLifecycleConfigTagArrayInput interface {
	pulumi.Input

	ToBucketLifecycleConfigTagArrayOutput() BucketLifecycleConfigTagArrayOutput
	ToBucketLifecycleConfigTagArrayOutputWithContext(context.Context) BucketLifecycleConfigTagArrayOutput
}

type BucketLifecycleConfigTagArray []BucketLifecycleConfigTagInput

func (BucketLifecycleConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigTag)(nil)).Elem()
}

func (i BucketLifecycleConfigTagArray) ToBucketLifecycleConfigTagArrayOutput() BucketLifecycleConfigTagArrayOutput {
	return i.ToBucketLifecycleConfigTagArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigTagArray) ToBucketLifecycleConfigTagArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigTagArrayOutput)
}

type BucketLifecycleConfigTagOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigTag)(nil)).Elem()
}

func (o BucketLifecycleConfigTagOutput) ToBucketLifecycleConfigTagOutput() BucketLifecycleConfigTagOutput {
	return o
}

func (o BucketLifecycleConfigTagOutput) ToBucketLifecycleConfigTagOutputWithContext(ctx context.Context) BucketLifecycleConfigTagOutput {
	return o
}

// 标签键。
func (o BucketLifecycleConfigTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o BucketLifecycleConfigTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type BucketLifecycleConfigTagArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigTag)(nil)).Elem()
}

func (o BucketLifecycleConfigTagArrayOutput) ToBucketLifecycleConfigTagArrayOutput() BucketLifecycleConfigTagArrayOutput {
	return o
}

func (o BucketLifecycleConfigTagArrayOutput) ToBucketLifecycleConfigTagArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigTagArrayOutput {
	return o
}

func (o BucketLifecycleConfigTagArrayOutput) Index(i pulumi.IntInput) BucketLifecycleConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleConfigTag {
		return vs[0].([]BucketLifecycleConfigTag)[vs[1].(int)]
	}).(BucketLifecycleConfigTagOutput)
}

type BucketLifecycleConfigTransition struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的具体日期。
	Date *string `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的天数。
	Days *int `pulumi:"days"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass *string `pulumi:"storageClass"`
}

// BucketLifecycleConfigTransitionInput is an input type that accepts BucketLifecycleConfigTransitionArgs and BucketLifecycleConfigTransitionOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigTransitionInput` via:
//
//	BucketLifecycleConfigTransitionArgs{...}
type BucketLifecycleConfigTransitionInput interface {
	pulumi.Input

	ToBucketLifecycleConfigTransitionOutput() BucketLifecycleConfigTransitionOutput
	ToBucketLifecycleConfigTransitionOutputWithContext(context.Context) BucketLifecycleConfigTransitionOutput
}

type BucketLifecycleConfigTransitionArgs struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的具体日期。
	Date pulumi.StringPtrInput `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的天数。
	Days pulumi.IntPtrInput `pulumi:"days"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (BucketLifecycleConfigTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigTransition)(nil)).Elem()
}

func (i BucketLifecycleConfigTransitionArgs) ToBucketLifecycleConfigTransitionOutput() BucketLifecycleConfigTransitionOutput {
	return i.ToBucketLifecycleConfigTransitionOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigTransitionArgs) ToBucketLifecycleConfigTransitionOutputWithContext(ctx context.Context) BucketLifecycleConfigTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigTransitionOutput)
}

// BucketLifecycleConfigTransitionArrayInput is an input type that accepts BucketLifecycleConfigTransitionArray and BucketLifecycleConfigTransitionArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigTransitionArrayInput` via:
//
//	BucketLifecycleConfigTransitionArray{ BucketLifecycleConfigTransitionArgs{...} }
type BucketLifecycleConfigTransitionArrayInput interface {
	pulumi.Input

	ToBucketLifecycleConfigTransitionArrayOutput() BucketLifecycleConfigTransitionArrayOutput
	ToBucketLifecycleConfigTransitionArrayOutputWithContext(context.Context) BucketLifecycleConfigTransitionArrayOutput
}

type BucketLifecycleConfigTransitionArray []BucketLifecycleConfigTransitionInput

func (BucketLifecycleConfigTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigTransition)(nil)).Elem()
}

func (i BucketLifecycleConfigTransitionArray) ToBucketLifecycleConfigTransitionArrayOutput() BucketLifecycleConfigTransitionArrayOutput {
	return i.ToBucketLifecycleConfigTransitionArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigTransitionArray) ToBucketLifecycleConfigTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigTransitionArrayOutput)
}

type BucketLifecycleConfigTransitionOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfigTransition)(nil)).Elem()
}

func (o BucketLifecycleConfigTransitionOutput) ToBucketLifecycleConfigTransitionOutput() BucketLifecycleConfigTransitionOutput {
	return o
}

func (o BucketLifecycleConfigTransitionOutput) ToBucketLifecycleConfigTransitionOutputWithContext(ctx context.Context) BucketLifecycleConfigTransitionOutput {
	return o
}

// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的具体日期。
func (o BucketLifecycleConfigTransitionOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigTransition) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的天数。
func (o BucketLifecycleConfigTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象沉降的存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
func (o BucketLifecycleConfigTransitionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketLifecycleConfigTransition) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type BucketLifecycleConfigTransitionArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleConfigTransition)(nil)).Elem()
}

func (o BucketLifecycleConfigTransitionArrayOutput) ToBucketLifecycleConfigTransitionArrayOutput() BucketLifecycleConfigTransitionArrayOutput {
	return o
}

func (o BucketLifecycleConfigTransitionArrayOutput) ToBucketLifecycleConfigTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigTransitionArrayOutput {
	return o
}

func (o BucketLifecycleConfigTransitionArrayOutput) Index(i pulumi.IntInput) BucketLifecycleConfigTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketLifecycleConfigTransition {
		return vs[0].([]BucketLifecycleConfigTransition)[vs[1].(int)]
	}).(BucketLifecycleConfigTransitionOutput)
}

type BucketTag struct {
	// 标签键。
	Key *string `pulumi:"key"`
	// 标签值。
	Value *string `pulumi:"value"`
}

// BucketTagInput is an input type that accepts BucketTagArgs and BucketTagOutput values.
// You can construct a concrete instance of `BucketTagInput` via:
//
//	BucketTagArgs{...}
type BucketTagInput interface {
	pulumi.Input

	ToBucketTagOutput() BucketTagOutput
	ToBucketTagOutputWithContext(context.Context) BucketTagOutput
}

type BucketTagArgs struct {
	// 标签键。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BucketTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTag)(nil)).Elem()
}

func (i BucketTagArgs) ToBucketTagOutput() BucketTagOutput {
	return i.ToBucketTagOutputWithContext(context.Background())
}

func (i BucketTagArgs) ToBucketTagOutputWithContext(ctx context.Context) BucketTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagOutput)
}

// BucketTagArrayInput is an input type that accepts BucketTagArray and BucketTagArrayOutput values.
// You can construct a concrete instance of `BucketTagArrayInput` via:
//
//	BucketTagArray{ BucketTagArgs{...} }
type BucketTagArrayInput interface {
	pulumi.Input

	ToBucketTagArrayOutput() BucketTagArrayOutput
	ToBucketTagArrayOutputWithContext(context.Context) BucketTagArrayOutput
}

type BucketTagArray []BucketTagInput

func (BucketTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTag)(nil)).Elem()
}

func (i BucketTagArray) ToBucketTagArrayOutput() BucketTagArrayOutput {
	return i.ToBucketTagArrayOutputWithContext(context.Background())
}

func (i BucketTagArray) ToBucketTagArrayOutputWithContext(ctx context.Context) BucketTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagArrayOutput)
}

type BucketTagOutput struct{ *pulumi.OutputState }

func (BucketTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTag)(nil)).Elem()
}

func (o BucketTagOutput) ToBucketTagOutput() BucketTagOutput {
	return o
}

func (o BucketTagOutput) ToBucketTagOutputWithContext(ctx context.Context) BucketTagOutput {
	return o
}

// 标签键。
func (o BucketTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签值。
func (o BucketTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type BucketTagArrayOutput struct{ *pulumi.OutputState }

func (BucketTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTag)(nil)).Elem()
}

func (o BucketTagArrayOutput) ToBucketTagArrayOutput() BucketTagArrayOutput {
	return o
}

func (o BucketTagArrayOutput) ToBucketTagArrayOutputWithContext(ctx context.Context) BucketTagArrayOutput {
	return o
}

func (o BucketTagArrayOutput) Index(i pulumi.IntInput) BucketTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTag {
		return vs[0].([]BucketTag)[vs[1].(int)]
	}).(BucketTagOutput)
}

type GetBucketAcl struct {
	// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
	BucketAclDelivered bool `pulumi:"bucketAclDelivered"`
	// 对象的访问控制权限根节点。
	Grants []GetBucketAclGrant `pulumi:"grants"`
	// 对象所有者。
	Owner GetBucketAclOwner `pulumi:"owner"`
}

// GetBucketAclInput is an input type that accepts GetBucketAclArgs and GetBucketAclOutput values.
// You can construct a concrete instance of `GetBucketAclInput` via:
//
//	GetBucketAclArgs{...}
type GetBucketAclInput interface {
	pulumi.Input

	ToGetBucketAclOutput() GetBucketAclOutput
	ToGetBucketAclOutputWithContext(context.Context) GetBucketAclOutput
}

type GetBucketAclArgs struct {
	// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
	BucketAclDelivered pulumi.BoolInput `pulumi:"bucketAclDelivered"`
	// 对象的访问控制权限根节点。
	Grants GetBucketAclGrantArrayInput `pulumi:"grants"`
	// 对象所有者。
	Owner GetBucketAclOwnerInput `pulumi:"owner"`
}

func (GetBucketAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAcl)(nil)).Elem()
}

func (i GetBucketAclArgs) ToGetBucketAclOutput() GetBucketAclOutput {
	return i.ToGetBucketAclOutputWithContext(context.Background())
}

func (i GetBucketAclArgs) ToGetBucketAclOutputWithContext(ctx context.Context) GetBucketAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketAclOutput)
}

type GetBucketAclOutput struct{ *pulumi.OutputState }

func (GetBucketAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAcl)(nil)).Elem()
}

func (o GetBucketAclOutput) ToGetBucketAclOutput() GetBucketAclOutput {
	return o
}

func (o GetBucketAclOutput) ToGetBucketAclOutputWithContext(ctx context.Context) GetBucketAclOutput {
	return o
}

// 是否开启对象默认继承桶 ACL 功能。true：开启对象默认继承桶 ACL 功能。false：关闭对象默认继承桶 ACL 功能。
func (o GetBucketAclOutput) BucketAclDelivered() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBucketAcl) bool { return v.BucketAclDelivered }).(pulumi.BoolOutput)
}

// 对象的访问控制权限根节点。
func (o GetBucketAclOutput) Grants() GetBucketAclGrantArrayOutput {
	return o.ApplyT(func(v GetBucketAcl) []GetBucketAclGrant { return v.Grants }).(GetBucketAclGrantArrayOutput)
}

// 对象所有者。
func (o GetBucketAclOutput) Owner() GetBucketAclOwnerOutput {
	return o.ApplyT(func(v GetBucketAcl) GetBucketAclOwner { return v.Owner }).(GetBucketAclOwnerOutput)
}

type GetBucketAclGrant struct {
	// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
	Acl string `pulumi:"acl"`
	// 授予指定用户所有权限。
	GrantFullControl string `pulumi:"grantFullControl"`
	// 授予指定用户读权限。
	GrantRead string `pulumi:"grantRead"`
	// 授予指定用户查看桶 ACL 的权限。
	GrantReadAcp string `pulumi:"grantReadAcp"`
	// 授予指定用户写权限。
	GrantWrite string `pulumi:"grantWrite"`
	// 授予指定用户修改和删除桶 ACL 的权限。
	GrantWriteAcp string `pulumi:"grantWriteAcp"`
}

// GetBucketAclGrantInput is an input type that accepts GetBucketAclGrantArgs and GetBucketAclGrantOutput values.
// You can construct a concrete instance of `GetBucketAclGrantInput` via:
//
//	GetBucketAclGrantArgs{...}
type GetBucketAclGrantInput interface {
	pulumi.Input

	ToGetBucketAclGrantOutput() GetBucketAclGrantOutput
	ToGetBucketAclGrantOutputWithContext(context.Context) GetBucketAclGrantOutput
}

type GetBucketAclGrantArgs struct {
	// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
	Acl pulumi.StringInput `pulumi:"acl"`
	// 授予指定用户所有权限。
	GrantFullControl pulumi.StringInput `pulumi:"grantFullControl"`
	// 授予指定用户读权限。
	GrantRead pulumi.StringInput `pulumi:"grantRead"`
	// 授予指定用户查看桶 ACL 的权限。
	GrantReadAcp pulumi.StringInput `pulumi:"grantReadAcp"`
	// 授予指定用户写权限。
	GrantWrite pulumi.StringInput `pulumi:"grantWrite"`
	// 授予指定用户修改和删除桶 ACL 的权限。
	GrantWriteAcp pulumi.StringInput `pulumi:"grantWriteAcp"`
}

func (GetBucketAclGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAclGrant)(nil)).Elem()
}

func (i GetBucketAclGrantArgs) ToGetBucketAclGrantOutput() GetBucketAclGrantOutput {
	return i.ToGetBucketAclGrantOutputWithContext(context.Background())
}

func (i GetBucketAclGrantArgs) ToGetBucketAclGrantOutputWithContext(ctx context.Context) GetBucketAclGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketAclGrantOutput)
}

// GetBucketAclGrantArrayInput is an input type that accepts GetBucketAclGrantArray and GetBucketAclGrantArrayOutput values.
// You can construct a concrete instance of `GetBucketAclGrantArrayInput` via:
//
//	GetBucketAclGrantArray{ GetBucketAclGrantArgs{...} }
type GetBucketAclGrantArrayInput interface {
	pulumi.Input

	ToGetBucketAclGrantArrayOutput() GetBucketAclGrantArrayOutput
	ToGetBucketAclGrantArrayOutputWithContext(context.Context) GetBucketAclGrantArrayOutput
}

type GetBucketAclGrantArray []GetBucketAclGrantInput

func (GetBucketAclGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketAclGrant)(nil)).Elem()
}

func (i GetBucketAclGrantArray) ToGetBucketAclGrantArrayOutput() GetBucketAclGrantArrayOutput {
	return i.ToGetBucketAclGrantArrayOutputWithContext(context.Background())
}

func (i GetBucketAclGrantArray) ToGetBucketAclGrantArrayOutputWithContext(ctx context.Context) GetBucketAclGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketAclGrantArrayOutput)
}

type GetBucketAclGrantOutput struct{ *pulumi.OutputState }

func (GetBucketAclGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAclGrant)(nil)).Elem()
}

func (o GetBucketAclGrantOutput) ToGetBucketAclGrantOutput() GetBucketAclGrantOutput {
	return o
}

func (o GetBucketAclGrantOutput) ToGetBucketAclGrantOutputWithContext(ctx context.Context) GetBucketAclGrantOutput {
	return o
}

// 桶的访问权限。包括private、public-read、public-read-write、authenticated-read、bucket-owner-read、bucket-owner-full-control、log-delivery-write、bucket-owner-entrusted、default。
func (o GetBucketAclGrantOutput) Acl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrant) string { return v.Acl }).(pulumi.StringOutput)
}

// 授予指定用户所有权限。
func (o GetBucketAclGrantOutput) GrantFullControl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrant) string { return v.GrantFullControl }).(pulumi.StringOutput)
}

// 授予指定用户读权限。
func (o GetBucketAclGrantOutput) GrantRead() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrant) string { return v.GrantRead }).(pulumi.StringOutput)
}

// 授予指定用户查看桶 ACL 的权限。
func (o GetBucketAclGrantOutput) GrantReadAcp() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrant) string { return v.GrantReadAcp }).(pulumi.StringOutput)
}

// 授予指定用户写权限。
func (o GetBucketAclGrantOutput) GrantWrite() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrant) string { return v.GrantWrite }).(pulumi.StringOutput)
}

// 授予指定用户修改和删除桶 ACL 的权限。
func (o GetBucketAclGrantOutput) GrantWriteAcp() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrant) string { return v.GrantWriteAcp }).(pulumi.StringOutput)
}

type GetBucketAclGrantArrayOutput struct{ *pulumi.OutputState }

func (GetBucketAclGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketAclGrant)(nil)).Elem()
}

func (o GetBucketAclGrantArrayOutput) ToGetBucketAclGrantArrayOutput() GetBucketAclGrantArrayOutput {
	return o
}

func (o GetBucketAclGrantArrayOutput) ToGetBucketAclGrantArrayOutputWithContext(ctx context.Context) GetBucketAclGrantArrayOutput {
	return o
}

func (o GetBucketAclGrantArrayOutput) Index(i pulumi.IntInput) GetBucketAclGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketAclGrant {
		return vs[0].([]GetBucketAclGrant)[vs[1].(int)]
	}).(GetBucketAclGrantOutput)
}

type GetBucketAclGrantGrantee struct {
	// 预定义组。包括AllUsers、AuthenticatedUsers。
	Canned string `pulumi:"canned"`
	// 展示名。
	DisplayName string `pulumi:"displayName"`
	// 账号ID。
	GranteeId string `pulumi:"granteeId"`
	// 用户类型。包括Group、CanonicalUser。
	Type string `pulumi:"type"`
}

// GetBucketAclGrantGranteeInput is an input type that accepts GetBucketAclGrantGranteeArgs and GetBucketAclGrantGranteeOutput values.
// You can construct a concrete instance of `GetBucketAclGrantGranteeInput` via:
//
//	GetBucketAclGrantGranteeArgs{...}
type GetBucketAclGrantGranteeInput interface {
	pulumi.Input

	ToGetBucketAclGrantGranteeOutput() GetBucketAclGrantGranteeOutput
	ToGetBucketAclGrantGranteeOutputWithContext(context.Context) GetBucketAclGrantGranteeOutput
}

type GetBucketAclGrantGranteeArgs struct {
	// 预定义组。包括AllUsers、AuthenticatedUsers。
	Canned pulumi.StringInput `pulumi:"canned"`
	// 展示名。
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// 账号ID。
	GranteeId pulumi.StringInput `pulumi:"granteeId"`
	// 用户类型。包括Group、CanonicalUser。
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetBucketAclGrantGranteeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAclGrantGrantee)(nil)).Elem()
}

func (i GetBucketAclGrantGranteeArgs) ToGetBucketAclGrantGranteeOutput() GetBucketAclGrantGranteeOutput {
	return i.ToGetBucketAclGrantGranteeOutputWithContext(context.Background())
}

func (i GetBucketAclGrantGranteeArgs) ToGetBucketAclGrantGranteeOutputWithContext(ctx context.Context) GetBucketAclGrantGranteeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketAclGrantGranteeOutput)
}

type GetBucketAclGrantGranteeOutput struct{ *pulumi.OutputState }

func (GetBucketAclGrantGranteeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAclGrantGrantee)(nil)).Elem()
}

func (o GetBucketAclGrantGranteeOutput) ToGetBucketAclGrantGranteeOutput() GetBucketAclGrantGranteeOutput {
	return o
}

func (o GetBucketAclGrantGranteeOutput) ToGetBucketAclGrantGranteeOutputWithContext(ctx context.Context) GetBucketAclGrantGranteeOutput {
	return o
}

// 预定义组。包括AllUsers、AuthenticatedUsers。
func (o GetBucketAclGrantGranteeOutput) Canned() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrantGrantee) string { return v.Canned }).(pulumi.StringOutput)
}

// 展示名。
func (o GetBucketAclGrantGranteeOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrantGrantee) string { return v.DisplayName }).(pulumi.StringOutput)
}

// 账号ID。
func (o GetBucketAclGrantGranteeOutput) GranteeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrantGrantee) string { return v.GranteeId }).(pulumi.StringOutput)
}

// 用户类型。包括Group、CanonicalUser。
func (o GetBucketAclGrantGranteeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclGrantGrantee) string { return v.Type }).(pulumi.StringOutput)
}

type GetBucketAclOwner struct {
	// 展示名。
	DisplayName string `pulumi:"displayName"`
	// 账号ID。
	OwnerId string `pulumi:"ownerId"`
}

// GetBucketAclOwnerInput is an input type that accepts GetBucketAclOwnerArgs and GetBucketAclOwnerOutput values.
// You can construct a concrete instance of `GetBucketAclOwnerInput` via:
//
//	GetBucketAclOwnerArgs{...}
type GetBucketAclOwnerInput interface {
	pulumi.Input

	ToGetBucketAclOwnerOutput() GetBucketAclOwnerOutput
	ToGetBucketAclOwnerOutputWithContext(context.Context) GetBucketAclOwnerOutput
}

type GetBucketAclOwnerArgs struct {
	// 展示名。
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// 账号ID。
	OwnerId pulumi.StringInput `pulumi:"ownerId"`
}

func (GetBucketAclOwnerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAclOwner)(nil)).Elem()
}

func (i GetBucketAclOwnerArgs) ToGetBucketAclOwnerOutput() GetBucketAclOwnerOutput {
	return i.ToGetBucketAclOwnerOutputWithContext(context.Background())
}

func (i GetBucketAclOwnerArgs) ToGetBucketAclOwnerOutputWithContext(ctx context.Context) GetBucketAclOwnerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketAclOwnerOutput)
}

type GetBucketAclOwnerOutput struct{ *pulumi.OutputState }

func (GetBucketAclOwnerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketAclOwner)(nil)).Elem()
}

func (o GetBucketAclOwnerOutput) ToGetBucketAclOwnerOutput() GetBucketAclOwnerOutput {
	return o
}

func (o GetBucketAclOwnerOutput) ToGetBucketAclOwnerOutputWithContext(ctx context.Context) GetBucketAclOwnerOutput {
	return o
}

// 展示名。
func (o GetBucketAclOwnerOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclOwner) string { return v.DisplayName }).(pulumi.StringOutput)
}

// 账号ID。
func (o GetBucketAclOwnerOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketAclOwner) string { return v.OwnerId }).(pulumi.StringOutput)
}

type GetBucketLifecycleConfig struct {
	// 指定未合并的分片任务（碎片）的过期属性。
	AbortInCompleteMultipartUpload GetBucketLifecycleConfigAbortInCompleteMultipartUpload `pulumi:"abortInCompleteMultipartUpload"`
	// 基于最后修改时间的生命周期规则中删除最新版本对象的过期属性。
	Expiration GetBucketLifecycleConfigExpiration `pulumi:"expiration"`
	// 指定规则生效的过滤条件。
	Filter GetBucketLifecycleConfigFilter `pulumi:"filter"`
	// 规则 ID。
	LifecycleRuleId            string                                             `pulumi:"lifecycleRuleId"`
	NoCurrentVersionExpiration GetBucketLifecycleConfigNoCurrentVersionExpiration `pulumi:"noCurrentVersionExpiration"`
	// 基于最后修改时间的生命周期规则中沉降历史版本对象的的过期属性。
	NonCurrentVersionTransitions []GetBucketLifecycleConfigNonCurrentVersionTransition `pulumi:"nonCurrentVersionTransitions"`
	// 规则所适用的前缀。
	Prefix string `pulumi:"prefix"`
	// 是否启用规则。包括Enabled、Disabled。
	Status string `pulumi:"status"`
	// 标签。
	Tags []GetBucketLifecycleConfigTag `pulumi:"tags"`
	// 基于最后修改时间的生命周期规则中沉降最新版本对象的的过期属性。
	Transitions []GetBucketLifecycleConfigTransition `pulumi:"transitions"`
}

// GetBucketLifecycleConfigInput is an input type that accepts GetBucketLifecycleConfigArgs and GetBucketLifecycleConfigOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigInput` via:
//
//	GetBucketLifecycleConfigArgs{...}
type GetBucketLifecycleConfigInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigOutput() GetBucketLifecycleConfigOutput
	ToGetBucketLifecycleConfigOutputWithContext(context.Context) GetBucketLifecycleConfigOutput
}

type GetBucketLifecycleConfigArgs struct {
	// 指定未合并的分片任务（碎片）的过期属性。
	AbortInCompleteMultipartUpload GetBucketLifecycleConfigAbortInCompleteMultipartUploadInput `pulumi:"abortInCompleteMultipartUpload"`
	// 基于最后修改时间的生命周期规则中删除最新版本对象的过期属性。
	Expiration GetBucketLifecycleConfigExpirationInput `pulumi:"expiration"`
	// 指定规则生效的过滤条件。
	Filter GetBucketLifecycleConfigFilterInput `pulumi:"filter"`
	// 规则 ID。
	LifecycleRuleId            pulumi.StringInput                                      `pulumi:"lifecycleRuleId"`
	NoCurrentVersionExpiration GetBucketLifecycleConfigNoCurrentVersionExpirationInput `pulumi:"noCurrentVersionExpiration"`
	// 基于最后修改时间的生命周期规则中沉降历史版本对象的的过期属性。
	NonCurrentVersionTransitions GetBucketLifecycleConfigNonCurrentVersionTransitionArrayInput `pulumi:"nonCurrentVersionTransitions"`
	// 规则所适用的前缀。
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// 是否启用规则。包括Enabled、Disabled。
	Status pulumi.StringInput `pulumi:"status"`
	// 标签。
	Tags GetBucketLifecycleConfigTagArrayInput `pulumi:"tags"`
	// 基于最后修改时间的生命周期规则中沉降最新版本对象的的过期属性。
	Transitions GetBucketLifecycleConfigTransitionArrayInput `pulumi:"transitions"`
}

func (GetBucketLifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfig)(nil)).Elem()
}

func (i GetBucketLifecycleConfigArgs) ToGetBucketLifecycleConfigOutput() GetBucketLifecycleConfigOutput {
	return i.ToGetBucketLifecycleConfigOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigArgs) ToGetBucketLifecycleConfigOutputWithContext(ctx context.Context) GetBucketLifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigOutput)
}

// GetBucketLifecycleConfigArrayInput is an input type that accepts GetBucketLifecycleConfigArray and GetBucketLifecycleConfigArrayOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigArrayInput` via:
//
//	GetBucketLifecycleConfigArray{ GetBucketLifecycleConfigArgs{...} }
type GetBucketLifecycleConfigArrayInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigArrayOutput() GetBucketLifecycleConfigArrayOutput
	ToGetBucketLifecycleConfigArrayOutputWithContext(context.Context) GetBucketLifecycleConfigArrayOutput
}

type GetBucketLifecycleConfigArray []GetBucketLifecycleConfigInput

func (GetBucketLifecycleConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfig)(nil)).Elem()
}

func (i GetBucketLifecycleConfigArray) ToGetBucketLifecycleConfigArrayOutput() GetBucketLifecycleConfigArrayOutput {
	return i.ToGetBucketLifecycleConfigArrayOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigArray) ToGetBucketLifecycleConfigArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigArrayOutput)
}

type GetBucketLifecycleConfigOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfig)(nil)).Elem()
}

func (o GetBucketLifecycleConfigOutput) ToGetBucketLifecycleConfigOutput() GetBucketLifecycleConfigOutput {
	return o
}

func (o GetBucketLifecycleConfigOutput) ToGetBucketLifecycleConfigOutputWithContext(ctx context.Context) GetBucketLifecycleConfigOutput {
	return o
}

// 指定未合并的分片任务（碎片）的过期属性。
func (o GetBucketLifecycleConfigOutput) AbortInCompleteMultipartUpload() GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) GetBucketLifecycleConfigAbortInCompleteMultipartUpload {
		return v.AbortInCompleteMultipartUpload
	}).(GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput)
}

// 基于最后修改时间的生命周期规则中删除最新版本对象的过期属性。
func (o GetBucketLifecycleConfigOutput) Expiration() GetBucketLifecycleConfigExpirationOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) GetBucketLifecycleConfigExpiration { return v.Expiration }).(GetBucketLifecycleConfigExpirationOutput)
}

// 指定规则生效的过滤条件。
func (o GetBucketLifecycleConfigOutput) Filter() GetBucketLifecycleConfigFilterOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) GetBucketLifecycleConfigFilter { return v.Filter }).(GetBucketLifecycleConfigFilterOutput)
}

// 规则 ID。
func (o GetBucketLifecycleConfigOutput) LifecycleRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) string { return v.LifecycleRuleId }).(pulumi.StringOutput)
}

func (o GetBucketLifecycleConfigOutput) NoCurrentVersionExpiration() GetBucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) GetBucketLifecycleConfigNoCurrentVersionExpiration {
		return v.NoCurrentVersionExpiration
	}).(GetBucketLifecycleConfigNoCurrentVersionExpirationOutput)
}

// 基于最后修改时间的生命周期规则中沉降历史版本对象的的过期属性。
func (o GetBucketLifecycleConfigOutput) NonCurrentVersionTransitions() GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) []GetBucketLifecycleConfigNonCurrentVersionTransition {
		return v.NonCurrentVersionTransitions
	}).(GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput)
}

// 规则所适用的前缀。
func (o GetBucketLifecycleConfigOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) string { return v.Prefix }).(pulumi.StringOutput)
}

// 是否启用规则。包括Enabled、Disabled。
func (o GetBucketLifecycleConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) string { return v.Status }).(pulumi.StringOutput)
}

// 标签。
func (o GetBucketLifecycleConfigOutput) Tags() GetBucketLifecycleConfigTagArrayOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) []GetBucketLifecycleConfigTag { return v.Tags }).(GetBucketLifecycleConfigTagArrayOutput)
}

// 基于最后修改时间的生命周期规则中沉降最新版本对象的的过期属性。
func (o GetBucketLifecycleConfigOutput) Transitions() GetBucketLifecycleConfigTransitionArrayOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfig) []GetBucketLifecycleConfigTransition { return v.Transitions }).(GetBucketLifecycleConfigTransitionArrayOutput)
}

type GetBucketLifecycleConfigArrayOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfig)(nil)).Elem()
}

func (o GetBucketLifecycleConfigArrayOutput) ToGetBucketLifecycleConfigArrayOutput() GetBucketLifecycleConfigArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigArrayOutput) ToGetBucketLifecycleConfigArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigArrayOutput) Index(i pulumi.IntInput) GetBucketLifecycleConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketLifecycleConfig {
		return vs[0].([]GetBucketLifecycleConfig)[vs[1].(int)]
	}).(GetBucketLifecycleConfigOutput)
}

type GetBucketLifecycleConfigAbortInCompleteMultipartUpload struct {
	// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
	DaysAfterInitiation int `pulumi:"daysAfterInitiation"`
}

// GetBucketLifecycleConfigAbortInCompleteMultipartUploadInput is an input type that accepts GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs and GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigAbortInCompleteMultipartUploadInput` via:
//
//	GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs{...}
type GetBucketLifecycleConfigAbortInCompleteMultipartUploadInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput() GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput
	ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(context.Context) GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput
}

type GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs struct {
	// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
	DaysAfterInitiation pulumi.IntInput `pulumi:"daysAfterInitiation"`
}

func (GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigAbortInCompleteMultipartUpload)(nil)).Elem()
}

func (i GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput() GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return i.ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs) ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(ctx context.Context) GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput)
}

type GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigAbortInCompleteMultipartUpload)(nil)).Elem()
}

func (o GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput() GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return o
}

func (o GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput) ToGetBucketLifecycleConfigAbortInCompleteMultipartUploadOutputWithContext(ctx context.Context) GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput {
	return o
}

// 指定未合并的分片任务（碎片）的生命周期规则，在分片任务初始化过后过期删除的天数。
func (o GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput) DaysAfterInitiation() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigAbortInCompleteMultipartUpload) int { return v.DaysAfterInitiation }).(pulumi.IntOutput)
}

type GetBucketLifecycleConfigExpiration struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
	Date string `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
	Days int `pulumi:"days"`
}

// GetBucketLifecycleConfigExpirationInput is an input type that accepts GetBucketLifecycleConfigExpirationArgs and GetBucketLifecycleConfigExpirationOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigExpirationInput` via:
//
//	GetBucketLifecycleConfigExpirationArgs{...}
type GetBucketLifecycleConfigExpirationInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigExpirationOutput() GetBucketLifecycleConfigExpirationOutput
	ToGetBucketLifecycleConfigExpirationOutputWithContext(context.Context) GetBucketLifecycleConfigExpirationOutput
}

type GetBucketLifecycleConfigExpirationArgs struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
	Date pulumi.StringInput `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
	Days pulumi.IntInput `pulumi:"days"`
}

func (GetBucketLifecycleConfigExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigExpiration)(nil)).Elem()
}

func (i GetBucketLifecycleConfigExpirationArgs) ToGetBucketLifecycleConfigExpirationOutput() GetBucketLifecycleConfigExpirationOutput {
	return i.ToGetBucketLifecycleConfigExpirationOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigExpirationArgs) ToGetBucketLifecycleConfigExpirationOutputWithContext(ctx context.Context) GetBucketLifecycleConfigExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigExpirationOutput)
}

type GetBucketLifecycleConfigExpirationOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigExpiration)(nil)).Elem()
}

func (o GetBucketLifecycleConfigExpirationOutput) ToGetBucketLifecycleConfigExpirationOutput() GetBucketLifecycleConfigExpirationOutput {
	return o
}

func (o GetBucketLifecycleConfigExpirationOutput) ToGetBucketLifecycleConfigExpirationOutputWithContext(ctx context.Context) GetBucketLifecycleConfigExpirationOutput {
	return o
}

// 基于最后修改时间的生命周期规则中最新版本对象过期删除的具体日期。
func (o GetBucketLifecycleConfigExpirationOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigExpiration) string { return v.Date }).(pulumi.StringOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期删除的天数。
func (o GetBucketLifecycleConfigExpirationOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigExpiration) int { return v.Days }).(pulumi.IntOutput)
}

type GetBucketLifecycleConfigFilter struct {
	// 是否启用相等条件。包括Enabled、Disabled。
	GreaterThanIncludeEqual string `pulumi:"greaterThanIncludeEqual"`
	// 是否启用相等条件。包括Enabled、Disabled。
	LessThanIncludeEqual string `pulumi:"lessThanIncludeEqual"`
	// 设置规则生效于大于指定大小的对象。
	ObjectSizeGreaterThan int `pulumi:"objectSizeGreaterThan"`
	// 设置规则生效于小于指定大小的对象。
	ObjectSizeLessThan int `pulumi:"objectSizeLessThan"`
}

// GetBucketLifecycleConfigFilterInput is an input type that accepts GetBucketLifecycleConfigFilterArgs and GetBucketLifecycleConfigFilterOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigFilterInput` via:
//
//	GetBucketLifecycleConfigFilterArgs{...}
type GetBucketLifecycleConfigFilterInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigFilterOutput() GetBucketLifecycleConfigFilterOutput
	ToGetBucketLifecycleConfigFilterOutputWithContext(context.Context) GetBucketLifecycleConfigFilterOutput
}

type GetBucketLifecycleConfigFilterArgs struct {
	// 是否启用相等条件。包括Enabled、Disabled。
	GreaterThanIncludeEqual pulumi.StringInput `pulumi:"greaterThanIncludeEqual"`
	// 是否启用相等条件。包括Enabled、Disabled。
	LessThanIncludeEqual pulumi.StringInput `pulumi:"lessThanIncludeEqual"`
	// 设置规则生效于大于指定大小的对象。
	ObjectSizeGreaterThan pulumi.IntInput `pulumi:"objectSizeGreaterThan"`
	// 设置规则生效于小于指定大小的对象。
	ObjectSizeLessThan pulumi.IntInput `pulumi:"objectSizeLessThan"`
}

func (GetBucketLifecycleConfigFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigFilter)(nil)).Elem()
}

func (i GetBucketLifecycleConfigFilterArgs) ToGetBucketLifecycleConfigFilterOutput() GetBucketLifecycleConfigFilterOutput {
	return i.ToGetBucketLifecycleConfigFilterOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigFilterArgs) ToGetBucketLifecycleConfigFilterOutputWithContext(ctx context.Context) GetBucketLifecycleConfigFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigFilterOutput)
}

type GetBucketLifecycleConfigFilterOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigFilter)(nil)).Elem()
}

func (o GetBucketLifecycleConfigFilterOutput) ToGetBucketLifecycleConfigFilterOutput() GetBucketLifecycleConfigFilterOutput {
	return o
}

func (o GetBucketLifecycleConfigFilterOutput) ToGetBucketLifecycleConfigFilterOutputWithContext(ctx context.Context) GetBucketLifecycleConfigFilterOutput {
	return o
}

// 是否启用相等条件。包括Enabled、Disabled。
func (o GetBucketLifecycleConfigFilterOutput) GreaterThanIncludeEqual() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigFilter) string { return v.GreaterThanIncludeEqual }).(pulumi.StringOutput)
}

// 是否启用相等条件。包括Enabled、Disabled。
func (o GetBucketLifecycleConfigFilterOutput) LessThanIncludeEqual() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigFilter) string { return v.LessThanIncludeEqual }).(pulumi.StringOutput)
}

// 设置规则生效于大于指定大小的对象。
func (o GetBucketLifecycleConfigFilterOutput) ObjectSizeGreaterThan() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigFilter) int { return v.ObjectSizeGreaterThan }).(pulumi.IntOutput)
}

// 设置规则生效于小于指定大小的对象。
func (o GetBucketLifecycleConfigFilterOutput) ObjectSizeLessThan() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigFilter) int { return v.ObjectSizeLessThan }).(pulumi.IntOutput)
}

type GetBucketLifecycleConfigNoCurrentVersionExpiration struct {
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
	NonCurrentDate string `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
	NonCurrentDays int `pulumi:"nonCurrentDays"`
}

// GetBucketLifecycleConfigNoCurrentVersionExpirationInput is an input type that accepts GetBucketLifecycleConfigNoCurrentVersionExpirationArgs and GetBucketLifecycleConfigNoCurrentVersionExpirationOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigNoCurrentVersionExpirationInput` via:
//
//	GetBucketLifecycleConfigNoCurrentVersionExpirationArgs{...}
type GetBucketLifecycleConfigNoCurrentVersionExpirationInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutput() GetBucketLifecycleConfigNoCurrentVersionExpirationOutput
	ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(context.Context) GetBucketLifecycleConfigNoCurrentVersionExpirationOutput
}

type GetBucketLifecycleConfigNoCurrentVersionExpirationArgs struct {
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
	NonCurrentDate pulumi.StringInput `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
	NonCurrentDays pulumi.IntInput `pulumi:"nonCurrentDays"`
}

func (GetBucketLifecycleConfigNoCurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigNoCurrentVersionExpiration)(nil)).Elem()
}

func (i GetBucketLifecycleConfigNoCurrentVersionExpirationArgs) ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutput() GetBucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return i.ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigNoCurrentVersionExpirationArgs) ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(ctx context.Context) GetBucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigNoCurrentVersionExpirationOutput)
}

type GetBucketLifecycleConfigNoCurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigNoCurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigNoCurrentVersionExpiration)(nil)).Elem()
}

func (o GetBucketLifecycleConfigNoCurrentVersionExpirationOutput) ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutput() GetBucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return o
}

func (o GetBucketLifecycleConfigNoCurrentVersionExpirationOutput) ToGetBucketLifecycleConfigNoCurrentVersionExpirationOutputWithContext(ctx context.Context) GetBucketLifecycleConfigNoCurrentVersionExpirationOutput {
	return o
}

// 基于最后修改时间的生命周期规则中历史版本对象过期删除的具体日期。
func (o GetBucketLifecycleConfigNoCurrentVersionExpirationOutput) NonCurrentDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigNoCurrentVersionExpiration) string { return v.NonCurrentDate }).(pulumi.StringOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象过期删除的天数。
func (o GetBucketLifecycleConfigNoCurrentVersionExpirationOutput) NonCurrentDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigNoCurrentVersionExpiration) int { return v.NonCurrentDays }).(pulumi.IntOutput)
}

type GetBucketLifecycleConfigNonCurrentVersionTransition struct {
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的具体日期。
	NonCurrentDate string `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的天数。
	NonCurrentDays int `pulumi:"nonCurrentDays"`
	// 存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass string `pulumi:"storageClass"`
}

// GetBucketLifecycleConfigNonCurrentVersionTransitionInput is an input type that accepts GetBucketLifecycleConfigNonCurrentVersionTransitionArgs and GetBucketLifecycleConfigNonCurrentVersionTransitionOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigNonCurrentVersionTransitionInput` via:
//
//	GetBucketLifecycleConfigNonCurrentVersionTransitionArgs{...}
type GetBucketLifecycleConfigNonCurrentVersionTransitionInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutput() GetBucketLifecycleConfigNonCurrentVersionTransitionOutput
	ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(context.Context) GetBucketLifecycleConfigNonCurrentVersionTransitionOutput
}

type GetBucketLifecycleConfigNonCurrentVersionTransitionArgs struct {
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的具体日期。
	NonCurrentDate pulumi.StringInput `pulumi:"nonCurrentDate"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的天数。
	NonCurrentDays pulumi.IntInput `pulumi:"nonCurrentDays"`
	// 存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (GetBucketLifecycleConfigNonCurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (i GetBucketLifecycleConfigNonCurrentVersionTransitionArgs) ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutput() GetBucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return i.ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigNonCurrentVersionTransitionArgs) ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(ctx context.Context) GetBucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigNonCurrentVersionTransitionOutput)
}

// GetBucketLifecycleConfigNonCurrentVersionTransitionArrayInput is an input type that accepts GetBucketLifecycleConfigNonCurrentVersionTransitionArray and GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigNonCurrentVersionTransitionArrayInput` via:
//
//	GetBucketLifecycleConfigNonCurrentVersionTransitionArray{ GetBucketLifecycleConfigNonCurrentVersionTransitionArgs{...} }
type GetBucketLifecycleConfigNonCurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput() GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput
	ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(context.Context) GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput
}

type GetBucketLifecycleConfigNonCurrentVersionTransitionArray []GetBucketLifecycleConfigNonCurrentVersionTransitionInput

func (GetBucketLifecycleConfigNonCurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (i GetBucketLifecycleConfigNonCurrentVersionTransitionArray) ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput() GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return i.ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigNonCurrentVersionTransitionArray) ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput)
}

type GetBucketLifecycleConfigNonCurrentVersionTransitionOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigNonCurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (o GetBucketLifecycleConfigNonCurrentVersionTransitionOutput) ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutput() GetBucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return o
}

func (o GetBucketLifecycleConfigNonCurrentVersionTransitionOutput) ToGetBucketLifecycleConfigNonCurrentVersionTransitionOutputWithContext(ctx context.Context) GetBucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return o
}

// 基于最后修改时间的生命周期规则中历史版本对象沉降的具体日期。
func (o GetBucketLifecycleConfigNonCurrentVersionTransitionOutput) NonCurrentDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigNonCurrentVersionTransition) string { return v.NonCurrentDate }).(pulumi.StringOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象沉降的天数。
func (o GetBucketLifecycleConfigNonCurrentVersionTransitionOutput) NonCurrentDays() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigNonCurrentVersionTransition) int { return v.NonCurrentDays }).(pulumi.IntOutput)
}

// 存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
func (o GetBucketLifecycleConfigNonCurrentVersionTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigNonCurrentVersionTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfigNonCurrentVersionTransition)(nil)).Elem()
}

func (o GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput() GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) ToGetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) GetBucketLifecycleConfigNonCurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketLifecycleConfigNonCurrentVersionTransition {
		return vs[0].([]GetBucketLifecycleConfigNonCurrentVersionTransition)[vs[1].(int)]
	}).(GetBucketLifecycleConfigNonCurrentVersionTransitionOutput)
}

type GetBucketLifecycleConfigTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetBucketLifecycleConfigTagInput is an input type that accepts GetBucketLifecycleConfigTagArgs and GetBucketLifecycleConfigTagOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigTagInput` via:
//
//	GetBucketLifecycleConfigTagArgs{...}
type GetBucketLifecycleConfigTagInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigTagOutput() GetBucketLifecycleConfigTagOutput
	ToGetBucketLifecycleConfigTagOutputWithContext(context.Context) GetBucketLifecycleConfigTagOutput
}

type GetBucketLifecycleConfigTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetBucketLifecycleConfigTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigTag)(nil)).Elem()
}

func (i GetBucketLifecycleConfigTagArgs) ToGetBucketLifecycleConfigTagOutput() GetBucketLifecycleConfigTagOutput {
	return i.ToGetBucketLifecycleConfigTagOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigTagArgs) ToGetBucketLifecycleConfigTagOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigTagOutput)
}

// GetBucketLifecycleConfigTagArrayInput is an input type that accepts GetBucketLifecycleConfigTagArray and GetBucketLifecycleConfigTagArrayOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigTagArrayInput` via:
//
//	GetBucketLifecycleConfigTagArray{ GetBucketLifecycleConfigTagArgs{...} }
type GetBucketLifecycleConfigTagArrayInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigTagArrayOutput() GetBucketLifecycleConfigTagArrayOutput
	ToGetBucketLifecycleConfigTagArrayOutputWithContext(context.Context) GetBucketLifecycleConfigTagArrayOutput
}

type GetBucketLifecycleConfigTagArray []GetBucketLifecycleConfigTagInput

func (GetBucketLifecycleConfigTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfigTag)(nil)).Elem()
}

func (i GetBucketLifecycleConfigTagArray) ToGetBucketLifecycleConfigTagArrayOutput() GetBucketLifecycleConfigTagArrayOutput {
	return i.ToGetBucketLifecycleConfigTagArrayOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigTagArray) ToGetBucketLifecycleConfigTagArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigTagArrayOutput)
}

type GetBucketLifecycleConfigTagOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigTag)(nil)).Elem()
}

func (o GetBucketLifecycleConfigTagOutput) ToGetBucketLifecycleConfigTagOutput() GetBucketLifecycleConfigTagOutput {
	return o
}

func (o GetBucketLifecycleConfigTagOutput) ToGetBucketLifecycleConfigTagOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTagOutput {
	return o
}

// 标签键。
func (o GetBucketLifecycleConfigTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetBucketLifecycleConfigTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetBucketLifecycleConfigTagArrayOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfigTag)(nil)).Elem()
}

func (o GetBucketLifecycleConfigTagArrayOutput) ToGetBucketLifecycleConfigTagArrayOutput() GetBucketLifecycleConfigTagArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigTagArrayOutput) ToGetBucketLifecycleConfigTagArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTagArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigTagArrayOutput) Index(i pulumi.IntInput) GetBucketLifecycleConfigTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketLifecycleConfigTag {
		return vs[0].([]GetBucketLifecycleConfigTag)[vs[1].(int)]
	}).(GetBucketLifecycleConfigTagOutput)
}

type GetBucketLifecycleConfigTransition struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的具体日期。
	Date string `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的天数。
	Days int `pulumi:"days"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass string `pulumi:"storageClass"`
}

// GetBucketLifecycleConfigTransitionInput is an input type that accepts GetBucketLifecycleConfigTransitionArgs and GetBucketLifecycleConfigTransitionOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigTransitionInput` via:
//
//	GetBucketLifecycleConfigTransitionArgs{...}
type GetBucketLifecycleConfigTransitionInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigTransitionOutput() GetBucketLifecycleConfigTransitionOutput
	ToGetBucketLifecycleConfigTransitionOutputWithContext(context.Context) GetBucketLifecycleConfigTransitionOutput
}

type GetBucketLifecycleConfigTransitionArgs struct {
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的具体日期。
	Date pulumi.StringInput `pulumi:"date"`
	// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的天数。
	Days pulumi.IntInput `pulumi:"days"`
	// 基于最后修改时间的生命周期规则中历史版本对象沉降的存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (GetBucketLifecycleConfigTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigTransition)(nil)).Elem()
}

func (i GetBucketLifecycleConfigTransitionArgs) ToGetBucketLifecycleConfigTransitionOutput() GetBucketLifecycleConfigTransitionOutput {
	return i.ToGetBucketLifecycleConfigTransitionOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigTransitionArgs) ToGetBucketLifecycleConfigTransitionOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigTransitionOutput)
}

// GetBucketLifecycleConfigTransitionArrayInput is an input type that accepts GetBucketLifecycleConfigTransitionArray and GetBucketLifecycleConfigTransitionArrayOutput values.
// You can construct a concrete instance of `GetBucketLifecycleConfigTransitionArrayInput` via:
//
//	GetBucketLifecycleConfigTransitionArray{ GetBucketLifecycleConfigTransitionArgs{...} }
type GetBucketLifecycleConfigTransitionArrayInput interface {
	pulumi.Input

	ToGetBucketLifecycleConfigTransitionArrayOutput() GetBucketLifecycleConfigTransitionArrayOutput
	ToGetBucketLifecycleConfigTransitionArrayOutputWithContext(context.Context) GetBucketLifecycleConfigTransitionArrayOutput
}

type GetBucketLifecycleConfigTransitionArray []GetBucketLifecycleConfigTransitionInput

func (GetBucketLifecycleConfigTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfigTransition)(nil)).Elem()
}

func (i GetBucketLifecycleConfigTransitionArray) ToGetBucketLifecycleConfigTransitionArrayOutput() GetBucketLifecycleConfigTransitionArrayOutput {
	return i.ToGetBucketLifecycleConfigTransitionArrayOutputWithContext(context.Background())
}

func (i GetBucketLifecycleConfigTransitionArray) ToGetBucketLifecycleConfigTransitionArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketLifecycleConfigTransitionArrayOutput)
}

type GetBucketLifecycleConfigTransitionOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketLifecycleConfigTransition)(nil)).Elem()
}

func (o GetBucketLifecycleConfigTransitionOutput) ToGetBucketLifecycleConfigTransitionOutput() GetBucketLifecycleConfigTransitionOutput {
	return o
}

func (o GetBucketLifecycleConfigTransitionOutput) ToGetBucketLifecycleConfigTransitionOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTransitionOutput {
	return o
}

// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的具体日期。
func (o GetBucketLifecycleConfigTransitionOutput) Date() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigTransition) string { return v.Date }).(pulumi.StringOutput)
}

// 基于最后修改时间的生命周期规则中最新版本对象过期沉降的天数。
func (o GetBucketLifecycleConfigTransitionOutput) Days() pulumi.IntOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigTransition) int { return v.Days }).(pulumi.IntOutput)
}

// 基于最后修改时间的生命周期规则中历史版本对象沉降的存储类型。包括STANDARD、IA、ARCHIVE*FR、INTELLIGENT*TIERING、COLD*ARCHIVE、ARCHIVE、DEEP*COLD_ARCHIVE。
func (o GetBucketLifecycleConfigTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketLifecycleConfigTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type GetBucketLifecycleConfigTransitionArrayOutput struct{ *pulumi.OutputState }

func (GetBucketLifecycleConfigTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketLifecycleConfigTransition)(nil)).Elem()
}

func (o GetBucketLifecycleConfigTransitionArrayOutput) ToGetBucketLifecycleConfigTransitionArrayOutput() GetBucketLifecycleConfigTransitionArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigTransitionArrayOutput) ToGetBucketLifecycleConfigTransitionArrayOutputWithContext(ctx context.Context) GetBucketLifecycleConfigTransitionArrayOutput {
	return o
}

func (o GetBucketLifecycleConfigTransitionArrayOutput) Index(i pulumi.IntInput) GetBucketLifecycleConfigTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketLifecycleConfigTransition {
		return vs[0].([]GetBucketLifecycleConfigTransition)[vs[1].(int)]
	}).(GetBucketLifecycleConfigTransitionOutput)
}

type GetBucketTag struct {
	// 标签键。
	Key string `pulumi:"key"`
	// 标签值。
	Value string `pulumi:"value"`
}

// GetBucketTagInput is an input type that accepts GetBucketTagArgs and GetBucketTagOutput values.
// You can construct a concrete instance of `GetBucketTagInput` via:
//
//	GetBucketTagArgs{...}
type GetBucketTagInput interface {
	pulumi.Input

	ToGetBucketTagOutput() GetBucketTagOutput
	ToGetBucketTagOutputWithContext(context.Context) GetBucketTagOutput
}

type GetBucketTagArgs struct {
	// 标签键。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签值。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetBucketTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketTag)(nil)).Elem()
}

func (i GetBucketTagArgs) ToGetBucketTagOutput() GetBucketTagOutput {
	return i.ToGetBucketTagOutputWithContext(context.Background())
}

func (i GetBucketTagArgs) ToGetBucketTagOutputWithContext(ctx context.Context) GetBucketTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketTagOutput)
}

// GetBucketTagArrayInput is an input type that accepts GetBucketTagArray and GetBucketTagArrayOutput values.
// You can construct a concrete instance of `GetBucketTagArrayInput` via:
//
//	GetBucketTagArray{ GetBucketTagArgs{...} }
type GetBucketTagArrayInput interface {
	pulumi.Input

	ToGetBucketTagArrayOutput() GetBucketTagArrayOutput
	ToGetBucketTagArrayOutputWithContext(context.Context) GetBucketTagArrayOutput
}

type GetBucketTagArray []GetBucketTagInput

func (GetBucketTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketTag)(nil)).Elem()
}

func (i GetBucketTagArray) ToGetBucketTagArrayOutput() GetBucketTagArrayOutput {
	return i.ToGetBucketTagArrayOutputWithContext(context.Background())
}

func (i GetBucketTagArray) ToGetBucketTagArrayOutputWithContext(ctx context.Context) GetBucketTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBucketTagArrayOutput)
}

type GetBucketTagOutput struct{ *pulumi.OutputState }

func (GetBucketTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketTag)(nil)).Elem()
}

func (o GetBucketTagOutput) ToGetBucketTagOutput() GetBucketTagOutput {
	return o
}

func (o GetBucketTagOutput) ToGetBucketTagOutputWithContext(ctx context.Context) GetBucketTagOutput {
	return o
}

// 标签键。
func (o GetBucketTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签值。
func (o GetBucketTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetBucketTagArrayOutput struct{ *pulumi.OutputState }

func (GetBucketTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBucketTag)(nil)).Elem()
}

func (o GetBucketTagArrayOutput) ToGetBucketTagArrayOutput() GetBucketTagArrayOutput {
	return o
}

func (o GetBucketTagArrayOutput) ToGetBucketTagArrayOutputWithContext(ctx context.Context) GetBucketTagArrayOutput {
	return o
}

func (o GetBucketTagArrayOutput) Index(i pulumi.IntInput) GetBucketTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBucketTag {
		return vs[0].([]GetBucketTag)[vs[1].(int)]
	}).(GetBucketTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclInput)(nil)).Elem(), BucketAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclPtrInput)(nil)).Elem(), BucketAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclGrantInput)(nil)).Elem(), BucketAclGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclGrantPtrInput)(nil)).Elem(), BucketAclGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclGrantArrayInput)(nil)).Elem(), BucketAclGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclGrantGranteeInput)(nil)).Elem(), BucketAclGrantGranteeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclOwnerInput)(nil)).Elem(), BucketAclOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclOwnerPtrInput)(nil)).Elem(), BucketAclOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigInput)(nil)).Elem(), BucketLifecycleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigArrayInput)(nil)).Elem(), BucketLifecycleConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigAbortInCompleteMultipartUploadInput)(nil)).Elem(), BucketLifecycleConfigAbortInCompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigAbortInCompleteMultipartUploadPtrInput)(nil)).Elem(), BucketLifecycleConfigAbortInCompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigExpirationInput)(nil)).Elem(), BucketLifecycleConfigExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigExpirationPtrInput)(nil)).Elem(), BucketLifecycleConfigExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigFilterInput)(nil)).Elem(), BucketLifecycleConfigFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigFilterPtrInput)(nil)).Elem(), BucketLifecycleConfigFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigNoCurrentVersionExpirationInput)(nil)).Elem(), BucketLifecycleConfigNoCurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigNoCurrentVersionExpirationPtrInput)(nil)).Elem(), BucketLifecycleConfigNoCurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigNonCurrentVersionTransitionInput)(nil)).Elem(), BucketLifecycleConfigNonCurrentVersionTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigNonCurrentVersionTransitionArrayInput)(nil)).Elem(), BucketLifecycleConfigNonCurrentVersionTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigTagInput)(nil)).Elem(), BucketLifecycleConfigTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigTagArrayInput)(nil)).Elem(), BucketLifecycleConfigTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigTransitionInput)(nil)).Elem(), BucketLifecycleConfigTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigTransitionArrayInput)(nil)).Elem(), BucketLifecycleConfigTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagInput)(nil)).Elem(), BucketTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagArrayInput)(nil)).Elem(), BucketTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketAclInput)(nil)).Elem(), GetBucketAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketAclGrantInput)(nil)).Elem(), GetBucketAclGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketAclGrantArrayInput)(nil)).Elem(), GetBucketAclGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketAclGrantGranteeInput)(nil)).Elem(), GetBucketAclGrantGranteeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketAclOwnerInput)(nil)).Elem(), GetBucketAclOwnerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigInput)(nil)).Elem(), GetBucketLifecycleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigArrayInput)(nil)).Elem(), GetBucketLifecycleConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigAbortInCompleteMultipartUploadInput)(nil)).Elem(), GetBucketLifecycleConfigAbortInCompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigExpirationInput)(nil)).Elem(), GetBucketLifecycleConfigExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigFilterInput)(nil)).Elem(), GetBucketLifecycleConfigFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigNoCurrentVersionExpirationInput)(nil)).Elem(), GetBucketLifecycleConfigNoCurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigNonCurrentVersionTransitionInput)(nil)).Elem(), GetBucketLifecycleConfigNonCurrentVersionTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigNonCurrentVersionTransitionArrayInput)(nil)).Elem(), GetBucketLifecycleConfigNonCurrentVersionTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigTagInput)(nil)).Elem(), GetBucketLifecycleConfigTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigTagArrayInput)(nil)).Elem(), GetBucketLifecycleConfigTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigTransitionInput)(nil)).Elem(), GetBucketLifecycleConfigTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketLifecycleConfigTransitionArrayInput)(nil)).Elem(), GetBucketLifecycleConfigTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketTagInput)(nil)).Elem(), GetBucketTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBucketTagArrayInput)(nil)).Elem(), GetBucketTagArray{})
	pulumi.RegisterOutputType(BucketAclOutput{})
	pulumi.RegisterOutputType(BucketAclPtrOutput{})
	pulumi.RegisterOutputType(BucketAclGrantOutput{})
	pulumi.RegisterOutputType(BucketAclGrantPtrOutput{})
	pulumi.RegisterOutputType(BucketAclGrantArrayOutput{})
	pulumi.RegisterOutputType(BucketAclGrantGranteeOutput{})
	pulumi.RegisterOutputType(BucketAclOwnerOutput{})
	pulumi.RegisterOutputType(BucketAclOwnerPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigAbortInCompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigAbortInCompleteMultipartUploadPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigExpirationPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigFilterOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigNoCurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigNoCurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigNonCurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigNonCurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigTagOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigTagArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigTransitionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketTagOutput{})
	pulumi.RegisterOutputType(BucketTagArrayOutput{})
	pulumi.RegisterOutputType(GetBucketAclOutput{})
	pulumi.RegisterOutputType(GetBucketAclGrantOutput{})
	pulumi.RegisterOutputType(GetBucketAclGrantArrayOutput{})
	pulumi.RegisterOutputType(GetBucketAclGrantGranteeOutput{})
	pulumi.RegisterOutputType(GetBucketAclOwnerOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigArrayOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigAbortInCompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigExpirationOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigFilterOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigNoCurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigNonCurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigNonCurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigTagOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigTagArrayOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigTransitionOutput{})
	pulumi.RegisterOutputType(GetBucketLifecycleConfigTransitionArrayOutput{})
	pulumi.RegisterOutputType(GetBucketTagOutput{})
	pulumi.RegisterOutputType(GetBucketTagArrayOutput{})
}
