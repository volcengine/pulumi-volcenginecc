// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

// 命名空间是 OCI 制品仓库的集合，管理多个具有关联属性的 OCI 制品仓库。命名空间的名称通常为企业内部的组织团队名称、产品项目名称或个人自定义名称。
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/cr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cr.NewNameSpace(ctx, "NamespaceDemo", &cr.NameSpaceArgs{
//				Registry: pulumi.String("test"),
//				Name:     pulumi.String("testnamespace"),
//				Project:  pulumi.String("default"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import volcenginecc:cr/nameSpace:NameSpace example "name|registry"
// ```
type NameSpace struct {
	pulumi.CustomResourceState

	// 命名空间的创建时间。
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// 命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。
	Name pulumi.StringOutput `pulumi:"name"`
	// 命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。
	Project pulumi.StringOutput `pulumi:"project"`
	// 命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。
	Registry pulumi.StringOutput `pulumi:"registry"`
}

// NewNameSpace registers a new resource with the given unique name, arguments, and options.
func NewNameSpace(ctx *pulumi.Context,
	name string, args *NameSpaceArgs, opts ...pulumi.ResourceOption) (*NameSpace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Registry == nil {
		return nil, errors.New("invalid value for required argument 'Registry'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NameSpace
	err := ctx.RegisterResource("volcenginecc:cr/nameSpace:NameSpace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNameSpace gets an existing NameSpace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNameSpace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NameSpaceState, opts ...pulumi.ResourceOption) (*NameSpace, error) {
	var resource NameSpace
	err := ctx.ReadResource("volcenginecc:cr/nameSpace:NameSpace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NameSpace resources.
type nameSpaceState struct {
	// 命名空间的创建时间。
	CreatedTime *string `pulumi:"createdTime"`
	// 命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。
	Name *string `pulumi:"name"`
	// 命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。
	Project *string `pulumi:"project"`
	// 命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。
	Registry *string `pulumi:"registry"`
}

type NameSpaceState struct {
	// 命名空间的创建时间。
	CreatedTime pulumi.StringPtrInput
	// 命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。
	Name pulumi.StringPtrInput
	// 命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。
	Project pulumi.StringPtrInput
	// 命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。
	Registry pulumi.StringPtrInput
}

func (NameSpaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*nameSpaceState)(nil)).Elem()
}

type nameSpaceArgs struct {
	// 命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。
	Name string `pulumi:"name"`
	// 命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。
	Project *string `pulumi:"project"`
	// 命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。
	Registry string `pulumi:"registry"`
}

// The set of arguments for constructing a NameSpace resource.
type NameSpaceArgs struct {
	// 命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。
	Name pulumi.StringInput
	// 命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。
	Project pulumi.StringPtrInput
	// 命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。
	Registry pulumi.StringInput
}

func (NameSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nameSpaceArgs)(nil)).Elem()
}

type NameSpaceInput interface {
	pulumi.Input

	ToNameSpaceOutput() NameSpaceOutput
	ToNameSpaceOutputWithContext(ctx context.Context) NameSpaceOutput
}

func (*NameSpace) ElementType() reflect.Type {
	return reflect.TypeOf((**NameSpace)(nil)).Elem()
}

func (i *NameSpace) ToNameSpaceOutput() NameSpaceOutput {
	return i.ToNameSpaceOutputWithContext(context.Background())
}

func (i *NameSpace) ToNameSpaceOutputWithContext(ctx context.Context) NameSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameSpaceOutput)
}

// NameSpaceArrayInput is an input type that accepts NameSpaceArray and NameSpaceArrayOutput values.
// You can construct a concrete instance of `NameSpaceArrayInput` via:
//
//	NameSpaceArray{ NameSpaceArgs{...} }
type NameSpaceArrayInput interface {
	pulumi.Input

	ToNameSpaceArrayOutput() NameSpaceArrayOutput
	ToNameSpaceArrayOutputWithContext(context.Context) NameSpaceArrayOutput
}

type NameSpaceArray []NameSpaceInput

func (NameSpaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NameSpace)(nil)).Elem()
}

func (i NameSpaceArray) ToNameSpaceArrayOutput() NameSpaceArrayOutput {
	return i.ToNameSpaceArrayOutputWithContext(context.Background())
}

func (i NameSpaceArray) ToNameSpaceArrayOutputWithContext(ctx context.Context) NameSpaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameSpaceArrayOutput)
}

// NameSpaceMapInput is an input type that accepts NameSpaceMap and NameSpaceMapOutput values.
// You can construct a concrete instance of `NameSpaceMapInput` via:
//
//	NameSpaceMap{ "key": NameSpaceArgs{...} }
type NameSpaceMapInput interface {
	pulumi.Input

	ToNameSpaceMapOutput() NameSpaceMapOutput
	ToNameSpaceMapOutputWithContext(context.Context) NameSpaceMapOutput
}

type NameSpaceMap map[string]NameSpaceInput

func (NameSpaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NameSpace)(nil)).Elem()
}

func (i NameSpaceMap) ToNameSpaceMapOutput() NameSpaceMapOutput {
	return i.ToNameSpaceMapOutputWithContext(context.Background())
}

func (i NameSpaceMap) ToNameSpaceMapOutputWithContext(ctx context.Context) NameSpaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NameSpaceMapOutput)
}

type NameSpaceOutput struct{ *pulumi.OutputState }

func (NameSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NameSpace)(nil)).Elem()
}

func (o NameSpaceOutput) ToNameSpaceOutput() NameSpaceOutput {
	return o
}

func (o NameSpaceOutput) ToNameSpaceOutputWithContext(ctx context.Context) NameSpaceOutput {
	return o
}

// 命名空间的创建时间。
func (o NameSpaceOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *NameSpace) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// 命名空间名称。支持小写英文、数字、英文句号（.）、短划线（-）、下划线（_），标点符号不能出现在首位或末位，也不能连续输入。长度限制为 2～90 个字符。标准版实例：同一个镜像仓库实例下，名称必须唯一。体验版实例：同一地域下，所有火山引擎账号范围内的命名空间名称需要保持唯一。如果您设置的命名空间名称已被占用，请尝试其他名称或者 购买标准版实例。
func (o NameSpaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NameSpace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// 命名空间所属项目的名称。参数值大小写敏感，不得超过 64 个字符。参数为空时，命名空间关联默认的 default项目。
func (o NameSpaceOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *NameSpace) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// 命名空间下新建 OCI 制品仓库的默认公开属性，默认 Private。公开属性支持后续变更。Public：公开，不需要访问密钥，支持直接访问。Private：私有，需要输入访问密钥后才能够访问。
func (o NameSpaceOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v *NameSpace) pulumi.StringOutput { return v.Registry }).(pulumi.StringOutput)
}

type NameSpaceArrayOutput struct{ *pulumi.OutputState }

func (NameSpaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NameSpace)(nil)).Elem()
}

func (o NameSpaceArrayOutput) ToNameSpaceArrayOutput() NameSpaceArrayOutput {
	return o
}

func (o NameSpaceArrayOutput) ToNameSpaceArrayOutputWithContext(ctx context.Context) NameSpaceArrayOutput {
	return o
}

func (o NameSpaceArrayOutput) Index(i pulumi.IntInput) NameSpaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NameSpace {
		return vs[0].([]*NameSpace)[vs[1].(int)]
	}).(NameSpaceOutput)
}

type NameSpaceMapOutput struct{ *pulumi.OutputState }

func (NameSpaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NameSpace)(nil)).Elem()
}

func (o NameSpaceMapOutput) ToNameSpaceMapOutput() NameSpaceMapOutput {
	return o
}

func (o NameSpaceMapOutput) ToNameSpaceMapOutputWithContext(ctx context.Context) NameSpaceMapOutput {
	return o
}

func (o NameSpaceMapOutput) MapIndex(k pulumi.StringInput) NameSpaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NameSpace {
		return vs[0].(map[string]*NameSpace)[vs[1].(string)]
	}).(NameSpaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NameSpaceInput)(nil)).Elem(), &NameSpace{})
	pulumi.RegisterInputType(reflect.TypeOf((*NameSpaceArrayInput)(nil)).Elem(), NameSpaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NameSpaceMapInput)(nil)).Elem(), NameSpaceMap{})
	pulumi.RegisterOutputType(NameSpaceOutput{})
	pulumi.RegisterOutputType(NameSpaceArrayOutput{})
	pulumi.RegisterOutputType(NameSpaceMapOutput{})
}
