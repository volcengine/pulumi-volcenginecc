// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/volcengine/pulumi-volcenginecc/sdk/go/volcenginecc/internal"
)

var _ = internal.GetEnvOrDefault

type RegistryProxyCache struct {
	// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
	Type *string `pulumi:"type"`
}

// RegistryProxyCacheInput is an input type that accepts RegistryProxyCacheArgs and RegistryProxyCacheOutput values.
// You can construct a concrete instance of `RegistryProxyCacheInput` via:
//
//	RegistryProxyCacheArgs{...}
type RegistryProxyCacheInput interface {
	pulumi.Input

	ToRegistryProxyCacheOutput() RegistryProxyCacheOutput
	ToRegistryProxyCacheOutputWithContext(context.Context) RegistryProxyCacheOutput
}

type RegistryProxyCacheArgs struct {
	// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (RegistryProxyCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryProxyCache)(nil)).Elem()
}

func (i RegistryProxyCacheArgs) ToRegistryProxyCacheOutput() RegistryProxyCacheOutput {
	return i.ToRegistryProxyCacheOutputWithContext(context.Background())
}

func (i RegistryProxyCacheArgs) ToRegistryProxyCacheOutputWithContext(ctx context.Context) RegistryProxyCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryProxyCacheOutput)
}

func (i RegistryProxyCacheArgs) ToRegistryProxyCachePtrOutput() RegistryProxyCachePtrOutput {
	return i.ToRegistryProxyCachePtrOutputWithContext(context.Background())
}

func (i RegistryProxyCacheArgs) ToRegistryProxyCachePtrOutputWithContext(ctx context.Context) RegistryProxyCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryProxyCacheOutput).ToRegistryProxyCachePtrOutputWithContext(ctx)
}

// RegistryProxyCachePtrInput is an input type that accepts RegistryProxyCacheArgs, RegistryProxyCachePtr and RegistryProxyCachePtrOutput values.
// You can construct a concrete instance of `RegistryProxyCachePtrInput` via:
//
//	        RegistryProxyCacheArgs{...}
//
//	or:
//
//	        nil
type RegistryProxyCachePtrInput interface {
	pulumi.Input

	ToRegistryProxyCachePtrOutput() RegistryProxyCachePtrOutput
	ToRegistryProxyCachePtrOutputWithContext(context.Context) RegistryProxyCachePtrOutput
}

type registryProxyCachePtrType RegistryProxyCacheArgs

func RegistryProxyCachePtr(v *RegistryProxyCacheArgs) RegistryProxyCachePtrInput {
	return (*registryProxyCachePtrType)(v)
}

func (*registryProxyCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryProxyCache)(nil)).Elem()
}

func (i *registryProxyCachePtrType) ToRegistryProxyCachePtrOutput() RegistryProxyCachePtrOutput {
	return i.ToRegistryProxyCachePtrOutputWithContext(context.Background())
}

func (i *registryProxyCachePtrType) ToRegistryProxyCachePtrOutputWithContext(ctx context.Context) RegistryProxyCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryProxyCachePtrOutput)
}

type RegistryProxyCacheOutput struct{ *pulumi.OutputState }

func (RegistryProxyCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryProxyCache)(nil)).Elem()
}

func (o RegistryProxyCacheOutput) ToRegistryProxyCacheOutput() RegistryProxyCacheOutput {
	return o
}

func (o RegistryProxyCacheOutput) ToRegistryProxyCacheOutputWithContext(ctx context.Context) RegistryProxyCacheOutput {
	return o
}

func (o RegistryProxyCacheOutput) ToRegistryProxyCachePtrOutput() RegistryProxyCachePtrOutput {
	return o.ToRegistryProxyCachePtrOutputWithContext(context.Background())
}

func (o RegistryProxyCacheOutput) ToRegistryProxyCachePtrOutputWithContext(ctx context.Context) RegistryProxyCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryProxyCache) *RegistryProxyCache {
		return &v
	}).(RegistryProxyCachePtrOutput)
}

// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
func (o RegistryProxyCacheOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryProxyCache) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RegistryProxyCachePtrOutput struct{ *pulumi.OutputState }

func (RegistryProxyCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryProxyCache)(nil)).Elem()
}

func (o RegistryProxyCachePtrOutput) ToRegistryProxyCachePtrOutput() RegistryProxyCachePtrOutput {
	return o
}

func (o RegistryProxyCachePtrOutput) ToRegistryProxyCachePtrOutputWithContext(ctx context.Context) RegistryProxyCachePtrOutput {
	return o
}

func (o RegistryProxyCachePtrOutput) Elem() RegistryProxyCacheOutput {
	return o.ApplyT(func(v *RegistryProxyCache) RegistryProxyCache {
		if v != nil {
			return *v
		}
		var ret RegistryProxyCache
		return ret
	}).(RegistryProxyCacheOutput)
}

// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
func (o RegistryProxyCachePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryProxyCache) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type RegistryStatus struct {
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Conditions []string `pulumi:"conditions"`
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Phase *string `pulumi:"phase"`
}

// RegistryStatusInput is an input type that accepts RegistryStatusArgs and RegistryStatusOutput values.
// You can construct a concrete instance of `RegistryStatusInput` via:
//
//	RegistryStatusArgs{...}
type RegistryStatusInput interface {
	pulumi.Input

	ToRegistryStatusOutput() RegistryStatusOutput
	ToRegistryStatusOutputWithContext(context.Context) RegistryStatusOutput
}

type RegistryStatusArgs struct {
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Conditions pulumi.StringArrayInput `pulumi:"conditions"`
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Phase pulumi.StringPtrInput `pulumi:"phase"`
}

func (RegistryStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryStatus)(nil)).Elem()
}

func (i RegistryStatusArgs) ToRegistryStatusOutput() RegistryStatusOutput {
	return i.ToRegistryStatusOutputWithContext(context.Background())
}

func (i RegistryStatusArgs) ToRegistryStatusOutputWithContext(ctx context.Context) RegistryStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryStatusOutput)
}

func (i RegistryStatusArgs) ToRegistryStatusPtrOutput() RegistryStatusPtrOutput {
	return i.ToRegistryStatusPtrOutputWithContext(context.Background())
}

func (i RegistryStatusArgs) ToRegistryStatusPtrOutputWithContext(ctx context.Context) RegistryStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryStatusOutput).ToRegistryStatusPtrOutputWithContext(ctx)
}

// RegistryStatusPtrInput is an input type that accepts RegistryStatusArgs, RegistryStatusPtr and RegistryStatusPtrOutput values.
// You can construct a concrete instance of `RegistryStatusPtrInput` via:
//
//	        RegistryStatusArgs{...}
//
//	or:
//
//	        nil
type RegistryStatusPtrInput interface {
	pulumi.Input

	ToRegistryStatusPtrOutput() RegistryStatusPtrOutput
	ToRegistryStatusPtrOutputWithContext(context.Context) RegistryStatusPtrOutput
}

type registryStatusPtrType RegistryStatusArgs

func RegistryStatusPtr(v *RegistryStatusArgs) RegistryStatusPtrInput {
	return (*registryStatusPtrType)(v)
}

func (*registryStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryStatus)(nil)).Elem()
}

func (i *registryStatusPtrType) ToRegistryStatusPtrOutput() RegistryStatusPtrOutput {
	return i.ToRegistryStatusPtrOutputWithContext(context.Background())
}

func (i *registryStatusPtrType) ToRegistryStatusPtrOutputWithContext(ctx context.Context) RegistryStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryStatusPtrOutput)
}

type RegistryStatusOutput struct{ *pulumi.OutputState }

func (RegistryStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryStatus)(nil)).Elem()
}

func (o RegistryStatusOutput) ToRegistryStatusOutput() RegistryStatusOutput {
	return o
}

func (o RegistryStatusOutput) ToRegistryStatusOutputWithContext(ctx context.Context) RegistryStatusOutput {
	return o
}

func (o RegistryStatusOutput) ToRegistryStatusPtrOutput() RegistryStatusPtrOutput {
	return o.ToRegistryStatusPtrOutputWithContext(context.Background())
}

func (o RegistryStatusOutput) ToRegistryStatusPtrOutputWithContext(ctx context.Context) RegistryStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryStatus) *RegistryStatus {
		return &v
	}).(RegistryStatusPtrOutput)
}

// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
func (o RegistryStatusOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegistryStatus) []string { return v.Conditions }).(pulumi.StringArrayOutput)
}

// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
func (o RegistryStatusOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryStatus) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

type RegistryStatusPtrOutput struct{ *pulumi.OutputState }

func (RegistryStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryStatus)(nil)).Elem()
}

func (o RegistryStatusPtrOutput) ToRegistryStatusPtrOutput() RegistryStatusPtrOutput {
	return o
}

func (o RegistryStatusPtrOutput) ToRegistryStatusPtrOutputWithContext(ctx context.Context) RegistryStatusPtrOutput {
	return o
}

func (o RegistryStatusPtrOutput) Elem() RegistryStatusOutput {
	return o.ApplyT(func(v *RegistryStatus) RegistryStatus {
		if v != nil {
			return *v
		}
		var ret RegistryStatus
		return ret
	}).(RegistryStatusOutput)
}

// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
func (o RegistryStatusPtrOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegistryStatus) []string {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(pulumi.StringArrayOutput)
}

// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
func (o RegistryStatusPtrOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegistryStatus) *string {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(pulumi.StringPtrOutput)
}

type RegistryTag struct {
	// 标签的 Key 值。
	Key *string `pulumi:"key"`
	// 标签的 Value 值列表。
	Value *string `pulumi:"value"`
}

// RegistryTagInput is an input type that accepts RegistryTagArgs and RegistryTagOutput values.
// You can construct a concrete instance of `RegistryTagInput` via:
//
//	RegistryTagArgs{...}
type RegistryTagInput interface {
	pulumi.Input

	ToRegistryTagOutput() RegistryTagOutput
	ToRegistryTagOutputWithContext(context.Context) RegistryTagOutput
}

type RegistryTagArgs struct {
	// 标签的 Key 值。
	Key pulumi.StringPtrInput `pulumi:"key"`
	// 标签的 Value 值列表。
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RegistryTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTag)(nil)).Elem()
}

func (i RegistryTagArgs) ToRegistryTagOutput() RegistryTagOutput {
	return i.ToRegistryTagOutputWithContext(context.Background())
}

func (i RegistryTagArgs) ToRegistryTagOutputWithContext(ctx context.Context) RegistryTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTagOutput)
}

// RegistryTagArrayInput is an input type that accepts RegistryTagArray and RegistryTagArrayOutput values.
// You can construct a concrete instance of `RegistryTagArrayInput` via:
//
//	RegistryTagArray{ RegistryTagArgs{...} }
type RegistryTagArrayInput interface {
	pulumi.Input

	ToRegistryTagArrayOutput() RegistryTagArrayOutput
	ToRegistryTagArrayOutputWithContext(context.Context) RegistryTagArrayOutput
}

type RegistryTagArray []RegistryTagInput

func (RegistryTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTag)(nil)).Elem()
}

func (i RegistryTagArray) ToRegistryTagArrayOutput() RegistryTagArrayOutput {
	return i.ToRegistryTagArrayOutputWithContext(context.Background())
}

func (i RegistryTagArray) ToRegistryTagArrayOutputWithContext(ctx context.Context) RegistryTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegistryTagArrayOutput)
}

type RegistryTagOutput struct{ *pulumi.OutputState }

func (RegistryTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryTag)(nil)).Elem()
}

func (o RegistryTagOutput) ToRegistryTagOutput() RegistryTagOutput {
	return o
}

func (o RegistryTagOutput) ToRegistryTagOutputWithContext(ctx context.Context) RegistryTagOutput {
	return o
}

// 标签的 Key 值。
func (o RegistryTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// 标签的 Value 值列表。
func (o RegistryTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegistryTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RegistryTagArrayOutput struct{ *pulumi.OutputState }

func (RegistryTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegistryTag)(nil)).Elem()
}

func (o RegistryTagArrayOutput) ToRegistryTagArrayOutput() RegistryTagArrayOutput {
	return o
}

func (o RegistryTagArrayOutput) ToRegistryTagArrayOutputWithContext(ctx context.Context) RegistryTagArrayOutput {
	return o
}

func (o RegistryTagArrayOutput) Index(i pulumi.IntInput) RegistryTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegistryTag {
		return vs[0].([]RegistryTag)[vs[1].(int)]
	}).(RegistryTagOutput)
}

type GetRegistryProxyCache struct {
	// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
	Type string `pulumi:"type"`
}

// GetRegistryProxyCacheInput is an input type that accepts GetRegistryProxyCacheArgs and GetRegistryProxyCacheOutput values.
// You can construct a concrete instance of `GetRegistryProxyCacheInput` via:
//
//	GetRegistryProxyCacheArgs{...}
type GetRegistryProxyCacheInput interface {
	pulumi.Input

	ToGetRegistryProxyCacheOutput() GetRegistryProxyCacheOutput
	ToGetRegistryProxyCacheOutputWithContext(context.Context) GetRegistryProxyCacheOutput
}

type GetRegistryProxyCacheArgs struct {
	// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetRegistryProxyCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryProxyCache)(nil)).Elem()
}

func (i GetRegistryProxyCacheArgs) ToGetRegistryProxyCacheOutput() GetRegistryProxyCacheOutput {
	return i.ToGetRegistryProxyCacheOutputWithContext(context.Background())
}

func (i GetRegistryProxyCacheArgs) ToGetRegistryProxyCacheOutputWithContext(ctx context.Context) GetRegistryProxyCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistryProxyCacheOutput)
}

type GetRegistryProxyCacheOutput struct{ *pulumi.OutputState }

func (GetRegistryProxyCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryProxyCache)(nil)).Elem()
}

func (o GetRegistryProxyCacheOutput) ToGetRegistryProxyCacheOutput() GetRegistryProxyCacheOutput {
	return o
}

func (o GetRegistryProxyCacheOutput) ToGetRegistryProxyCacheOutputWithContext(ctx context.Context) GetRegistryProxyCacheOutput {
	return o
}

// ProxyCache支持的镜像仓库实例类型，参数值说明如下：DockerHub：dockerhub 镜像仓库。
func (o GetRegistryProxyCacheOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryProxyCache) string { return v.Type }).(pulumi.StringOutput)
}

type GetRegistryStatus struct {
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Conditions []string `pulumi:"conditions"`
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Phase string `pulumi:"phase"`
}

// GetRegistryStatusInput is an input type that accepts GetRegistryStatusArgs and GetRegistryStatusOutput values.
// You can construct a concrete instance of `GetRegistryStatusInput` via:
//
//	GetRegistryStatusArgs{...}
type GetRegistryStatusInput interface {
	pulumi.Input

	ToGetRegistryStatusOutput() GetRegistryStatusOutput
	ToGetRegistryStatusOutputWithContext(context.Context) GetRegistryStatusOutput
}

type GetRegistryStatusArgs struct {
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Conditions pulumi.StringArrayInput `pulumi:"conditions"`
	// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
	Phase pulumi.StringInput `pulumi:"phase"`
}

func (GetRegistryStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryStatus)(nil)).Elem()
}

func (i GetRegistryStatusArgs) ToGetRegistryStatusOutput() GetRegistryStatusOutput {
	return i.ToGetRegistryStatusOutputWithContext(context.Background())
}

func (i GetRegistryStatusArgs) ToGetRegistryStatusOutputWithContext(ctx context.Context) GetRegistryStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistryStatusOutput)
}

type GetRegistryStatusOutput struct{ *pulumi.OutputState }

func (GetRegistryStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryStatus)(nil)).Elem()
}

func (o GetRegistryStatusOutput) ToGetRegistryStatusOutput() GetRegistryStatusOutput {
	return o
}

func (o GetRegistryStatusOutput) ToGetRegistryStatusOutputWithContext(ctx context.Context) GetRegistryStatusOutput {
	return o
}

// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
func (o GetRegistryStatusOutput) Conditions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegistryStatus) []string { return v.Conditions }).(pulumi.StringArrayOutput)
}

// Creating, [ Progressing ] ：创建中。Running, [ Ok ] ：运行中。Running, [ Degraded ] ：运行中。Stopped, [ Balance ] ： 欠费关停。Stopped, [ Released ] ：待回收。Stopped, [ Released, Balance ] ：欠费关停。Starting, [ Progressing ] ：启动中。Deleting, [ Progressing ] ：销毁中。Failed, [ Unknown ] ：异常。
func (o GetRegistryStatusOutput) Phase() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryStatus) string { return v.Phase }).(pulumi.StringOutput)
}

type GetRegistryTag struct {
	// 标签的 Key 值。
	Key string `pulumi:"key"`
	// 标签的 Value 值列表。
	Value string `pulumi:"value"`
}

// GetRegistryTagInput is an input type that accepts GetRegistryTagArgs and GetRegistryTagOutput values.
// You can construct a concrete instance of `GetRegistryTagInput` via:
//
//	GetRegistryTagArgs{...}
type GetRegistryTagInput interface {
	pulumi.Input

	ToGetRegistryTagOutput() GetRegistryTagOutput
	ToGetRegistryTagOutputWithContext(context.Context) GetRegistryTagOutput
}

type GetRegistryTagArgs struct {
	// 标签的 Key 值。
	Key pulumi.StringInput `pulumi:"key"`
	// 标签的 Value 值列表。
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetRegistryTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryTag)(nil)).Elem()
}

func (i GetRegistryTagArgs) ToGetRegistryTagOutput() GetRegistryTagOutput {
	return i.ToGetRegistryTagOutputWithContext(context.Background())
}

func (i GetRegistryTagArgs) ToGetRegistryTagOutputWithContext(ctx context.Context) GetRegistryTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistryTagOutput)
}

// GetRegistryTagArrayInput is an input type that accepts GetRegistryTagArray and GetRegistryTagArrayOutput values.
// You can construct a concrete instance of `GetRegistryTagArrayInput` via:
//
//	GetRegistryTagArray{ GetRegistryTagArgs{...} }
type GetRegistryTagArrayInput interface {
	pulumi.Input

	ToGetRegistryTagArrayOutput() GetRegistryTagArrayOutput
	ToGetRegistryTagArrayOutputWithContext(context.Context) GetRegistryTagArrayOutput
}

type GetRegistryTagArray []GetRegistryTagInput

func (GetRegistryTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegistryTag)(nil)).Elem()
}

func (i GetRegistryTagArray) ToGetRegistryTagArrayOutput() GetRegistryTagArrayOutput {
	return i.ToGetRegistryTagArrayOutputWithContext(context.Background())
}

func (i GetRegistryTagArray) ToGetRegistryTagArrayOutputWithContext(ctx context.Context) GetRegistryTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegistryTagArrayOutput)
}

type GetRegistryTagOutput struct{ *pulumi.OutputState }

func (GetRegistryTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryTag)(nil)).Elem()
}

func (o GetRegistryTagOutput) ToGetRegistryTagOutput() GetRegistryTagOutput {
	return o
}

func (o GetRegistryTagOutput) ToGetRegistryTagOutputWithContext(ctx context.Context) GetRegistryTagOutput {
	return o
}

// 标签的 Key 值。
func (o GetRegistryTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryTag) string { return v.Key }).(pulumi.StringOutput)
}

// 标签的 Value 值列表。
func (o GetRegistryTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegistryTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetRegistryTagArrayOutput struct{ *pulumi.OutputState }

func (GetRegistryTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegistryTag)(nil)).Elem()
}

func (o GetRegistryTagArrayOutput) ToGetRegistryTagArrayOutput() GetRegistryTagArrayOutput {
	return o
}

func (o GetRegistryTagArrayOutput) ToGetRegistryTagArrayOutputWithContext(ctx context.Context) GetRegistryTagArrayOutput {
	return o
}

func (o GetRegistryTagArrayOutput) Index(i pulumi.IntInput) GetRegistryTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegistryTag {
		return vs[0].([]GetRegistryTag)[vs[1].(int)]
	}).(GetRegistryTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryProxyCacheInput)(nil)).Elem(), RegistryProxyCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryProxyCachePtrInput)(nil)).Elem(), RegistryProxyCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryStatusInput)(nil)).Elem(), RegistryStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryStatusPtrInput)(nil)).Elem(), RegistryStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTagInput)(nil)).Elem(), RegistryTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryTagArrayInput)(nil)).Elem(), RegistryTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistryProxyCacheInput)(nil)).Elem(), GetRegistryProxyCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistryStatusInput)(nil)).Elem(), GetRegistryStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistryTagInput)(nil)).Elem(), GetRegistryTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegistryTagArrayInput)(nil)).Elem(), GetRegistryTagArray{})
	pulumi.RegisterOutputType(RegistryProxyCacheOutput{})
	pulumi.RegisterOutputType(RegistryProxyCachePtrOutput{})
	pulumi.RegisterOutputType(RegistryStatusOutput{})
	pulumi.RegisterOutputType(RegistryStatusPtrOutput{})
	pulumi.RegisterOutputType(RegistryTagOutput{})
	pulumi.RegisterOutputType(RegistryTagArrayOutput{})
	pulumi.RegisterOutputType(GetRegistryProxyCacheOutput{})
	pulumi.RegisterOutputType(GetRegistryStatusOutput{})
	pulumi.RegisterOutputType(GetRegistryTagOutput{})
	pulumi.RegisterOutputType(GetRegistryTagArrayOutput{})
}
