# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['NlbArgs', 'Nlb']

@pulumi.input_type
class NlbArgs:
    def __init__(__self__, *,
                 ipv4_network_type: pulumi.Input[builtins.str],
                 security_group_ids: pulumi.Input[Sequence[pulumi.Input[builtins.str]]],
                 vpc_id: pulumi.Input[builtins.str],
                 zone_mappings: pulumi.Input[Sequence[pulumi.Input['NlbZoneMappingArgs']]],
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 cross_zone_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_version: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 load_balancer_name: Optional[pulumi.Input[builtins.str]] = None,
                 modification_protection_status: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['NlbTagArgs']]]] = None):
        """
        The set of arguments for constructing a Nlb resource.
        :param pulumi.Input[builtins.str] ipv4_network_type: NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: NLB实例关联的安全组ID列表。
        :param pulumi.Input[builtins.str] vpc_id: NLB实例所属的VPC ID。
        :param pulumi.Input[builtins.str] account_id: NLB实例所属的账号ID。
        :param pulumi.Input[builtins.bool] cross_zone_enabled: NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        :param pulumi.Input[builtins.str] description: NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        :param pulumi.Input[builtins.str] ip_address_version: NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        :param pulumi.Input[builtins.str] ipv4_bandwidth_package_id: IPv4类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv6_bandwidth_package_id: IPv6类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv6_network_type: NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] load_balancer_name: NLB实例的名称。
        :param pulumi.Input[builtins.str] modification_protection_status: NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        :param pulumi.Input[builtins.str] project_name: NLB实例所属项目的名称。
        """
        pulumi.set(__self__, "ipv4_network_type", ipv4_network_type)
        pulumi.set(__self__, "security_group_ids", security_group_ids)
        pulumi.set(__self__, "vpc_id", vpc_id)
        pulumi.set(__self__, "zone_mappings", zone_mappings)
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if cross_zone_enabled is not None:
            pulumi.set(__self__, "cross_zone_enabled", cross_zone_enabled)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_address_version is not None:
            pulumi.set(__self__, "ip_address_version", ip_address_version)
        if ipv4_bandwidth_package_id is not None:
            pulumi.set(__self__, "ipv4_bandwidth_package_id", ipv4_bandwidth_package_id)
        if ipv6_bandwidth_package_id is not None:
            pulumi.set(__self__, "ipv6_bandwidth_package_id", ipv6_bandwidth_package_id)
        if ipv6_network_type is not None:
            pulumi.set(__self__, "ipv6_network_type", ipv6_network_type)
        if load_balancer_name is not None:
            pulumi.set(__self__, "load_balancer_name", load_balancer_name)
        if modification_protection_status is not None:
            pulumi.set(__self__, "modification_protection_status", modification_protection_status)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="ipv4NetworkType")
    def ipv4_network_type(self) -> pulumi.Input[builtins.str]:
        """
        NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        """
        return pulumi.get(self, "ipv4_network_type")

    @ipv4_network_type.setter
    def ipv4_network_type(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "ipv4_network_type", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> pulumi.Input[Sequence[pulumi.Input[builtins.str]]]:
        """
        NLB实例关联的安全组ID列表。
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: pulumi.Input[Sequence[pulumi.Input[builtins.str]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[builtins.str]:
        """
        NLB实例所属的VPC ID。
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="zoneMappings")
    def zone_mappings(self) -> pulumi.Input[Sequence[pulumi.Input['NlbZoneMappingArgs']]]:
        return pulumi.get(self, "zone_mappings")

    @zone_mappings.setter
    def zone_mappings(self, value: pulumi.Input[Sequence[pulumi.Input['NlbZoneMappingArgs']]]):
        pulumi.set(self, "zone_mappings", value)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例所属的账号ID。
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter(name="crossZoneEnabled")
    def cross_zone_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        """
        return pulumi.get(self, "cross_zone_enabled")

    @cross_zone_enabled.setter
    def cross_zone_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "cross_zone_enabled", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="ipAddressVersion")
    def ip_address_version(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        """
        return pulumi.get(self, "ip_address_version")

    @ip_address_version.setter
    def ip_address_version(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_address_version", value)

    @property
    @pulumi.getter(name="ipv4BandwidthPackageId")
    def ipv4_bandwidth_package_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv4类型的共享带宽包ID。
        """
        return pulumi.get(self, "ipv4_bandwidth_package_id")

    @ipv4_bandwidth_package_id.setter
    def ipv4_bandwidth_package_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_bandwidth_package_id", value)

    @property
    @pulumi.getter(name="ipv6BandwidthPackageId")
    def ipv6_bandwidth_package_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv6类型的共享带宽包ID。
        """
        return pulumi.get(self, "ipv6_bandwidth_package_id")

    @ipv6_bandwidth_package_id.setter
    def ipv6_bandwidth_package_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_bandwidth_package_id", value)

    @property
    @pulumi.getter(name="ipv6NetworkType")
    def ipv6_network_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        """
        return pulumi.get(self, "ipv6_network_type")

    @ipv6_network_type.setter
    def ipv6_network_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_network_type", value)

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的名称。
        """
        return pulumi.get(self, "load_balancer_name")

    @load_balancer_name.setter
    def load_balancer_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "load_balancer_name", value)

    @property
    @pulumi.getter(name="modificationProtectionStatus")
    def modification_protection_status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        """
        return pulumi.get(self, "modification_protection_status")

    @modification_protection_status.setter
    def modification_protection_status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "modification_protection_status", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['NlbTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['NlbTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _NlbState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 billing_status: Optional[pulumi.Input[builtins.str]] = None,
                 billing_type: Optional[pulumi.Input[builtins.int]] = None,
                 created_time: Optional[pulumi.Input[builtins.str]] = None,
                 cross_zone_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 dns_name: Optional[pulumi.Input[builtins.str]] = None,
                 expected_overdue_time: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_version: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 load_balancer_id: Optional[pulumi.Input[builtins.str]] = None,
                 load_balancer_name: Optional[pulumi.Input[builtins.str]] = None,
                 managed_security_group_id: Optional[pulumi.Input[builtins.str]] = None,
                 modification_protection_status: Optional[pulumi.Input[builtins.str]] = None,
                 overdue_time: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 reclaimed_time: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['NlbTagArgs']]]] = None,
                 updated_time: Optional[pulumi.Input[builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None,
                 zone_mappings: Optional[pulumi.Input[Sequence[pulumi.Input['NlbZoneMappingArgs']]]] = None):
        """
        Input properties used for looking up and filtering Nlb resources.
        :param pulumi.Input[builtins.str] account_id: NLB实例所属的账号ID。
        :param pulumi.Input[builtins.str] billing_status: NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
        :param pulumi.Input[builtins.int] billing_type: NLB实例的计费类型。3：按使用量计费
        :param pulumi.Input[builtins.str] created_time: NLB实例的创建时间。
        :param pulumi.Input[builtins.bool] cross_zone_enabled: NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        :param pulumi.Input[builtins.str] description: NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        :param pulumi.Input[builtins.str] dns_name: NLB实例的DNS地址。
        :param pulumi.Input[builtins.str] expected_overdue_time: NLB实例欠费关停时间。
        :param pulumi.Input[builtins.str] ip_address_version: NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        :param pulumi.Input[builtins.str] ipv4_bandwidth_package_id: IPv4类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv4_network_type: NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] ipv6_bandwidth_package_id: IPv6类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv6_network_type: NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] load_balancer_id: NLB实例ID。
        :param pulumi.Input[builtins.str] load_balancer_name: NLB实例的名称。
        :param pulumi.Input[builtins.str] managed_security_group_id: 系统为NLB实例自动关联的托管安全组ID。
        :param pulumi.Input[builtins.str] modification_protection_status: NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        :param pulumi.Input[builtins.str] overdue_time: NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        :param pulumi.Input[builtins.str] project_name: NLB实例所属项目的名称。
        :param pulumi.Input[builtins.str] reclaimed_time: NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: NLB实例关联的安全组ID列表。
        :param pulumi.Input[builtins.str] status: NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
        :param pulumi.Input[builtins.str] updated_time: NLB实例的更新时间。
        :param pulumi.Input[builtins.str] vpc_id: NLB实例所属的VPC ID。
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if billing_status is not None:
            pulumi.set(__self__, "billing_status", billing_status)
        if billing_type is not None:
            pulumi.set(__self__, "billing_type", billing_type)
        if created_time is not None:
            pulumi.set(__self__, "created_time", created_time)
        if cross_zone_enabled is not None:
            pulumi.set(__self__, "cross_zone_enabled", cross_zone_enabled)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if dns_name is not None:
            pulumi.set(__self__, "dns_name", dns_name)
        if expected_overdue_time is not None:
            pulumi.set(__self__, "expected_overdue_time", expected_overdue_time)
        if ip_address_version is not None:
            pulumi.set(__self__, "ip_address_version", ip_address_version)
        if ipv4_bandwidth_package_id is not None:
            pulumi.set(__self__, "ipv4_bandwidth_package_id", ipv4_bandwidth_package_id)
        if ipv4_network_type is not None:
            pulumi.set(__self__, "ipv4_network_type", ipv4_network_type)
        if ipv6_bandwidth_package_id is not None:
            pulumi.set(__self__, "ipv6_bandwidth_package_id", ipv6_bandwidth_package_id)
        if ipv6_network_type is not None:
            pulumi.set(__self__, "ipv6_network_type", ipv6_network_type)
        if load_balancer_id is not None:
            pulumi.set(__self__, "load_balancer_id", load_balancer_id)
        if load_balancer_name is not None:
            pulumi.set(__self__, "load_balancer_name", load_balancer_name)
        if managed_security_group_id is not None:
            pulumi.set(__self__, "managed_security_group_id", managed_security_group_id)
        if modification_protection_status is not None:
            pulumi.set(__self__, "modification_protection_status", modification_protection_status)
        if overdue_time is not None:
            pulumi.set(__self__, "overdue_time", overdue_time)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if reclaimed_time is not None:
            pulumi.set(__self__, "reclaimed_time", reclaimed_time)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_time is not None:
            pulumi.set(__self__, "updated_time", updated_time)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)
        if zone_mappings is not None:
            pulumi.set(__self__, "zone_mappings", zone_mappings)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例所属的账号ID。
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter(name="billingStatus")
    def billing_status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
        """
        return pulumi.get(self, "billing_status")

    @billing_status.setter
    def billing_status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "billing_status", value)

    @property
    @pulumi.getter(name="billingType")
    def billing_type(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        NLB实例的计费类型。3：按使用量计费
        """
        return pulumi.get(self, "billing_type")

    @billing_type.setter
    def billing_type(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "billing_type", value)

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的创建时间。
        """
        return pulumi.get(self, "created_time")

    @created_time.setter
    def created_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "created_time", value)

    @property
    @pulumi.getter(name="crossZoneEnabled")
    def cross_zone_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        """
        return pulumi.get(self, "cross_zone_enabled")

    @cross_zone_enabled.setter
    def cross_zone_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "cross_zone_enabled", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="dnsName")
    def dns_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的DNS地址。
        """
        return pulumi.get(self, "dns_name")

    @dns_name.setter
    def dns_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "dns_name", value)

    @property
    @pulumi.getter(name="expectedOverdueTime")
    def expected_overdue_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例欠费关停时间。
        """
        return pulumi.get(self, "expected_overdue_time")

    @expected_overdue_time.setter
    def expected_overdue_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "expected_overdue_time", value)

    @property
    @pulumi.getter(name="ipAddressVersion")
    def ip_address_version(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        """
        return pulumi.get(self, "ip_address_version")

    @ip_address_version.setter
    def ip_address_version(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_address_version", value)

    @property
    @pulumi.getter(name="ipv4BandwidthPackageId")
    def ipv4_bandwidth_package_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv4类型的共享带宽包ID。
        """
        return pulumi.get(self, "ipv4_bandwidth_package_id")

    @ipv4_bandwidth_package_id.setter
    def ipv4_bandwidth_package_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_bandwidth_package_id", value)

    @property
    @pulumi.getter(name="ipv4NetworkType")
    def ipv4_network_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        """
        return pulumi.get(self, "ipv4_network_type")

    @ipv4_network_type.setter
    def ipv4_network_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv4_network_type", value)

    @property
    @pulumi.getter(name="ipv6BandwidthPackageId")
    def ipv6_bandwidth_package_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IPv6类型的共享带宽包ID。
        """
        return pulumi.get(self, "ipv6_bandwidth_package_id")

    @ipv6_bandwidth_package_id.setter
    def ipv6_bandwidth_package_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_bandwidth_package_id", value)

    @property
    @pulumi.getter(name="ipv6NetworkType")
    def ipv6_network_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        """
        return pulumi.get(self, "ipv6_network_type")

    @ipv6_network_type.setter
    def ipv6_network_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ipv6_network_type", value)

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例ID。
        """
        return pulumi.get(self, "load_balancer_id")

    @load_balancer_id.setter
    def load_balancer_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "load_balancer_id", value)

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的名称。
        """
        return pulumi.get(self, "load_balancer_name")

    @load_balancer_name.setter
    def load_balancer_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "load_balancer_name", value)

    @property
    @pulumi.getter(name="managedSecurityGroupId")
    def managed_security_group_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        系统为NLB实例自动关联的托管安全组ID。
        """
        return pulumi.get(self, "managed_security_group_id")

    @managed_security_group_id.setter
    def managed_security_group_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "managed_security_group_id", value)

    @property
    @pulumi.getter(name="modificationProtectionStatus")
    def modification_protection_status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        """
        return pulumi.get(self, "modification_protection_status")

    @modification_protection_status.setter
    def modification_protection_status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "modification_protection_status", value)

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        """
        return pulumi.get(self, "overdue_time")

    @overdue_time.setter
    def overdue_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "overdue_time", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="reclaimedTime")
    def reclaimed_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        """
        return pulumi.get(self, "reclaimed_time")

    @reclaimed_time.setter
    def reclaimed_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "reclaimed_time", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        NLB实例关联的安全组ID列表。
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['NlbTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['NlbTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例的更新时间。
        """
        return pulumi.get(self, "updated_time")

    @updated_time.setter
    def updated_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "updated_time", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        NLB实例所属的VPC ID。
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="zoneMappings")
    def zone_mappings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['NlbZoneMappingArgs']]]]:
        return pulumi.get(self, "zone_mappings")

    @zone_mappings.setter
    def zone_mappings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['NlbZoneMappingArgs']]]]):
        pulumi.set(self, "zone_mappings", value)


@pulumi.type_token("volcenginecc:clb/nlb:Nlb")
class Nlb(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 cross_zone_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_version: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 load_balancer_name: Optional[pulumi.Input[builtins.str]] = None,
                 modification_protection_status: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NlbTagArgs', 'NlbTagArgsDict']]]]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None,
                 zone_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NlbZoneMappingArgs', 'NlbZoneMappingArgsDict']]]]] = None,
                 __props__=None):
        """
        NLB 实例用于接收用户的访问请求，并根据监听器和服务器组的配置设定，将访问请求转发至后端服务器。

        ## Import

        ```sh
        $ pulumi import volcenginecc:clb/nlb:Nlb example "load_balancer_id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] account_id: NLB实例所属的账号ID。
        :param pulumi.Input[builtins.bool] cross_zone_enabled: NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        :param pulumi.Input[builtins.str] description: NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        :param pulumi.Input[builtins.str] ip_address_version: NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        :param pulumi.Input[builtins.str] ipv4_bandwidth_package_id: IPv4类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv4_network_type: NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] ipv6_bandwidth_package_id: IPv6类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv6_network_type: NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] load_balancer_name: NLB实例的名称。
        :param pulumi.Input[builtins.str] modification_protection_status: NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        :param pulumi.Input[builtins.str] project_name: NLB实例所属项目的名称。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: NLB实例关联的安全组ID列表。
        :param pulumi.Input[builtins.str] vpc_id: NLB实例所属的VPC ID。
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NlbArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        NLB 实例用于接收用户的访问请求，并根据监听器和服务器组的配置设定，将访问请求转发至后端服务器。

        ## Import

        ```sh
        $ pulumi import volcenginecc:clb/nlb:Nlb example "load_balancer_id"
        ```

        :param str resource_name: The name of the resource.
        :param NlbArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NlbArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 cross_zone_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_version: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv4_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_network_type: Optional[pulumi.Input[builtins.str]] = None,
                 load_balancer_name: Optional[pulumi.Input[builtins.str]] = None,
                 modification_protection_status: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NlbTagArgs', 'NlbTagArgsDict']]]]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None,
                 zone_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NlbZoneMappingArgs', 'NlbZoneMappingArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NlbArgs.__new__(NlbArgs)

            __props__.__dict__["account_id"] = account_id
            __props__.__dict__["cross_zone_enabled"] = cross_zone_enabled
            __props__.__dict__["description"] = description
            __props__.__dict__["ip_address_version"] = ip_address_version
            __props__.__dict__["ipv4_bandwidth_package_id"] = ipv4_bandwidth_package_id
            if ipv4_network_type is None and not opts.urn:
                raise TypeError("Missing required property 'ipv4_network_type'")
            __props__.__dict__["ipv4_network_type"] = ipv4_network_type
            __props__.__dict__["ipv6_bandwidth_package_id"] = ipv6_bandwidth_package_id
            __props__.__dict__["ipv6_network_type"] = ipv6_network_type
            __props__.__dict__["load_balancer_name"] = load_balancer_name
            __props__.__dict__["modification_protection_status"] = modification_protection_status
            __props__.__dict__["project_name"] = project_name
            if security_group_ids is None and not opts.urn:
                raise TypeError("Missing required property 'security_group_ids'")
            __props__.__dict__["security_group_ids"] = security_group_ids
            __props__.__dict__["tags"] = tags
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            if zone_mappings is None and not opts.urn:
                raise TypeError("Missing required property 'zone_mappings'")
            __props__.__dict__["zone_mappings"] = zone_mappings
            __props__.__dict__["billing_status"] = None
            __props__.__dict__["billing_type"] = None
            __props__.__dict__["created_time"] = None
            __props__.__dict__["dns_name"] = None
            __props__.__dict__["expected_overdue_time"] = None
            __props__.__dict__["load_balancer_id"] = None
            __props__.__dict__["managed_security_group_id"] = None
            __props__.__dict__["overdue_time"] = None
            __props__.__dict__["reclaimed_time"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_time"] = None
        super(Nlb, __self__).__init__(
            'volcenginecc:clb/nlb:Nlb',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[builtins.str]] = None,
            billing_status: Optional[pulumi.Input[builtins.str]] = None,
            billing_type: Optional[pulumi.Input[builtins.int]] = None,
            created_time: Optional[pulumi.Input[builtins.str]] = None,
            cross_zone_enabled: Optional[pulumi.Input[builtins.bool]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            dns_name: Optional[pulumi.Input[builtins.str]] = None,
            expected_overdue_time: Optional[pulumi.Input[builtins.str]] = None,
            ip_address_version: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
            ipv4_network_type: Optional[pulumi.Input[builtins.str]] = None,
            ipv6_bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
            ipv6_network_type: Optional[pulumi.Input[builtins.str]] = None,
            load_balancer_id: Optional[pulumi.Input[builtins.str]] = None,
            load_balancer_name: Optional[pulumi.Input[builtins.str]] = None,
            managed_security_group_id: Optional[pulumi.Input[builtins.str]] = None,
            modification_protection_status: Optional[pulumi.Input[builtins.str]] = None,
            overdue_time: Optional[pulumi.Input[builtins.str]] = None,
            project_name: Optional[pulumi.Input[builtins.str]] = None,
            reclaimed_time: Optional[pulumi.Input[builtins.str]] = None,
            security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            status: Optional[pulumi.Input[builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NlbTagArgs', 'NlbTagArgsDict']]]]] = None,
            updated_time: Optional[pulumi.Input[builtins.str]] = None,
            vpc_id: Optional[pulumi.Input[builtins.str]] = None,
            zone_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[Union['NlbZoneMappingArgs', 'NlbZoneMappingArgsDict']]]]] = None) -> 'Nlb':
        """
        Get an existing Nlb resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] account_id: NLB实例所属的账号ID。
        :param pulumi.Input[builtins.str] billing_status: NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
        :param pulumi.Input[builtins.int] billing_type: NLB实例的计费类型。3：按使用量计费
        :param pulumi.Input[builtins.str] created_time: NLB实例的创建时间。
        :param pulumi.Input[builtins.bool] cross_zone_enabled: NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        :param pulumi.Input[builtins.str] description: NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        :param pulumi.Input[builtins.str] dns_name: NLB实例的DNS地址。
        :param pulumi.Input[builtins.str] expected_overdue_time: NLB实例欠费关停时间。
        :param pulumi.Input[builtins.str] ip_address_version: NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        :param pulumi.Input[builtins.str] ipv4_bandwidth_package_id: IPv4类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv4_network_type: NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] ipv6_bandwidth_package_id: IPv6类型的共享带宽包ID。
        :param pulumi.Input[builtins.str] ipv6_network_type: NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        :param pulumi.Input[builtins.str] load_balancer_id: NLB实例ID。
        :param pulumi.Input[builtins.str] load_balancer_name: NLB实例的名称。
        :param pulumi.Input[builtins.str] managed_security_group_id: 系统为NLB实例自动关联的托管安全组ID。
        :param pulumi.Input[builtins.str] modification_protection_status: NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        :param pulumi.Input[builtins.str] overdue_time: NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        :param pulumi.Input[builtins.str] project_name: NLB实例所属项目的名称。
        :param pulumi.Input[builtins.str] reclaimed_time: NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: NLB实例关联的安全组ID列表。
        :param pulumi.Input[builtins.str] status: NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
        :param pulumi.Input[builtins.str] updated_time: NLB实例的更新时间。
        :param pulumi.Input[builtins.str] vpc_id: NLB实例所属的VPC ID。
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NlbState.__new__(_NlbState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["billing_status"] = billing_status
        __props__.__dict__["billing_type"] = billing_type
        __props__.__dict__["created_time"] = created_time
        __props__.__dict__["cross_zone_enabled"] = cross_zone_enabled
        __props__.__dict__["description"] = description
        __props__.__dict__["dns_name"] = dns_name
        __props__.__dict__["expected_overdue_time"] = expected_overdue_time
        __props__.__dict__["ip_address_version"] = ip_address_version
        __props__.__dict__["ipv4_bandwidth_package_id"] = ipv4_bandwidth_package_id
        __props__.__dict__["ipv4_network_type"] = ipv4_network_type
        __props__.__dict__["ipv6_bandwidth_package_id"] = ipv6_bandwidth_package_id
        __props__.__dict__["ipv6_network_type"] = ipv6_network_type
        __props__.__dict__["load_balancer_id"] = load_balancer_id
        __props__.__dict__["load_balancer_name"] = load_balancer_name
        __props__.__dict__["managed_security_group_id"] = managed_security_group_id
        __props__.__dict__["modification_protection_status"] = modification_protection_status
        __props__.__dict__["overdue_time"] = overdue_time
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["reclaimed_time"] = reclaimed_time
        __props__.__dict__["security_group_ids"] = security_group_ids
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_time"] = updated_time
        __props__.__dict__["vpc_id"] = vpc_id
        __props__.__dict__["zone_mappings"] = zone_mappings
        return Nlb(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例所属的账号ID。
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="billingStatus")
    def billing_status(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的计费状态。Normal: 正常，FinancialLocked: 被锁定。
        """
        return pulumi.get(self, "billing_status")

    @property
    @pulumi.getter(name="billingType")
    def billing_type(self) -> pulumi.Output[builtins.int]:
        """
        NLB实例的计费类型。3：按使用量计费
        """
        return pulumi.get(self, "billing_type")

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的创建时间。
        """
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter(name="crossZoneEnabled")
    def cross_zone_enabled(self) -> pulumi.Output[builtins.bool]:
        """
        NLB实例是否开启跨可用区转发能力。true（默认值）：开启。false：关闭。
        """
        return pulumi.get(self, "cross_zone_enabled")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="dnsName")
    def dns_name(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的DNS地址。
        """
        return pulumi.get(self, "dns_name")

    @property
    @pulumi.getter(name="expectedOverdueTime")
    def expected_overdue_time(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例欠费关停时间。
        """
        return pulumi.get(self, "expected_overdue_time")

    @property
    @pulumi.getter(name="ipAddressVersion")
    def ip_address_version(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的IP地址类型。ipv4：IPv4版本。dualstack：双栈，即同时支持IPv4版本和IPv6版本。
        """
        return pulumi.get(self, "ip_address_version")

    @property
    @pulumi.getter(name="ipv4BandwidthPackageId")
    def ipv4_bandwidth_package_id(self) -> pulumi.Output[builtins.str]:
        """
        IPv4类型的共享带宽包ID。
        """
        return pulumi.get(self, "ipv4_bandwidth_package_id")

    @property
    @pulumi.getter(name="ipv4NetworkType")
    def ipv4_network_type(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的IPv4网络类型。internet：公网类型。intranet：私网类型。
        """
        return pulumi.get(self, "ipv4_network_type")

    @property
    @pulumi.getter(name="ipv6BandwidthPackageId")
    def ipv6_bandwidth_package_id(self) -> pulumi.Output[builtins.str]:
        """
        IPv6类型的共享带宽包ID。
        """
        return pulumi.get(self, "ipv6_bandwidth_package_id")

    @property
    @pulumi.getter(name="ipv6NetworkType")
    def ipv6_network_type(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的IPv6网络类型。internet：公网类型。intranet：私网类型。
        """
        return pulumi.get(self, "ipv6_network_type")

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例ID。
        """
        return pulumi.get(self, "load_balancer_id")

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的名称。
        """
        return pulumi.get(self, "load_balancer_name")

    @property
    @pulumi.getter(name="managedSecurityGroupId")
    def managed_security_group_id(self) -> pulumi.Output[builtins.str]:
        """
        系统为NLB实例自动关联的托管安全组ID。
        """
        return pulumi.get(self, "managed_security_group_id")

    @property
    @pulumi.getter(name="modificationProtectionStatus")
    def modification_protection_status(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例是否开启控制台上修改保护。NonProtection或空：关闭，允许通过控制台修改实例或删除实例。ConsoleProtection：开启，禁止通过控制台修改实例或删除实例。
        """
        return pulumi.get(self, "modification_protection_status")

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例被锁定的时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        """
        return pulumi.get(self, "overdue_time")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="reclaimedTime")
    def reclaimed_time(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的预期回收时间。参数BillingStatus为Normal时，本参数返回为空字符串。
        """
        return pulumi.get(self, "reclaimed_time")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        NLB实例关联的安全组ID列表。
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[builtins.str]:
        """
        NLB 实例的状态。Inactive：已停止。Active：运行中。Creating：创建中。Provisioning：创建中。仅调用API创建NLB实例时存在该状态。Configuring：配置中。Deleting：删除中。CreateFailed：创建失败。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence['outputs.NlbTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例的更新时间。
        """
        return pulumi.get(self, "updated_time")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[builtins.str]:
        """
        NLB实例所属的VPC ID。
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="zoneMappings")
    def zone_mappings(self) -> pulumi.Output[Sequence['outputs.NlbZoneMapping']]:
        return pulumi.get(self, "zone_mappings")

