# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'TransitRouterAttachment',
    'TransitRouterAttachmentTag',
    'TransitRouterTag',
    'GetTransitRouterAttachmentResult',
    'GetTransitRouterAttachmentTagResult',
    'GetTransitRouterTagResult',
]

@pulumi.output_type
class TransitRouterAttachment(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "accountId":
            suggest = "account_id"
        elif key == "autoPublishRouteEnabled":
            suggest = "auto_publish_route_enabled"
        elif key == "businessStatus":
            suggest = "business_status"
        elif key == "creationTime":
            suggest = "creation_time"
        elif key == "deletedTime":
            suggest = "deleted_time"
        elif key == "ipv6Enabled":
            suggest = "ipv6_enabled"
        elif key == "overdueTime":
            suggest = "overdue_time"
        elif key == "resourceId":
            suggest = "resource_id"
        elif key == "resourceType":
            suggest = "resource_type"
        elif key == "transitRouterAttachmentId":
            suggest = "transit_router_attachment_id"
        elif key == "transitRouterAttachmentName":
            suggest = "transit_router_attachment_name"
        elif key == "transitRouterForwardPolicyTableId":
            suggest = "transit_router_forward_policy_table_id"
        elif key == "transitRouterId":
            suggest = "transit_router_id"
        elif key == "transitRouterRouteTableId":
            suggest = "transit_router_route_table_id"
        elif key == "transitRouterTrafficQosMarkingPolicyId":
            suggest = "transit_router_traffic_qos_marking_policy_id"
        elif key == "transitRouterTrafficQosQueuePolicyId":
            suggest = "transit_router_traffic_qos_queue_policy_id"
        elif key == "updateTime":
            suggest = "update_time"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in TransitRouterAttachment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        TransitRouterAttachment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        TransitRouterAttachment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 account_id: Optional[builtins.str] = None,
                 auto_publish_route_enabled: Optional[builtins.bool] = None,
                 business_status: Optional[builtins.str] = None,
                 creation_time: Optional[builtins.str] = None,
                 deleted_time: Optional[builtins.str] = None,
                 description: Optional[builtins.str] = None,
                 ipv6_enabled: Optional[builtins.bool] = None,
                 overdue_time: Optional[builtins.str] = None,
                 resource_id: Optional[builtins.str] = None,
                 resource_type: Optional[builtins.str] = None,
                 status: Optional[builtins.str] = None,
                 tags: Optional[Sequence['outputs.TransitRouterAttachmentTag']] = None,
                 transit_router_attachment_id: Optional[builtins.str] = None,
                 transit_router_attachment_name: Optional[builtins.str] = None,
                 transit_router_forward_policy_table_id: Optional[builtins.str] = None,
                 transit_router_id: Optional[builtins.str] = None,
                 transit_router_route_table_id: Optional[builtins.str] = None,
                 transit_router_traffic_qos_marking_policy_id: Optional[builtins.str] = None,
                 transit_router_traffic_qos_queue_policy_id: Optional[builtins.str] = None,
                 update_time: Optional[builtins.str] = None):
        """
        :param builtins.str account_id: 网络实例连接所属的账号ID。
        :param builtins.bool auto_publish_route_enabled: 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
        :param builtins.str business_status: 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
        :param builtins.str creation_time: 网络实例连接的创建时间。
        :param builtins.str deleted_time: 网络实例连接的删除时间。
        :param builtins.str description: 网络实例连接的描述信息。
        :param builtins.bool ipv6_enabled: 是否开启IPv6功能。true：是。false：否。
        :param builtins.str overdue_time: 网络实例连接的欠费关停时间。
        :param builtins.str resource_id: 网络实例的ID。
        :param builtins.str resource_type: 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
        :param builtins.str status: 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
        :param builtins.str transit_router_attachment_id: 网络实例连接的ID。
        :param builtins.str transit_router_attachment_name: 网络实例连接的名称。
        :param builtins.str transit_router_forward_policy_table_id: 跨地域连接关联的转发策略的ID。
        :param builtins.str transit_router_id: 中转路由器实例的ID。
        :param builtins.str transit_router_route_table_id: 网络实例连接关联转发的路由表ID。
        :param builtins.str transit_router_traffic_qos_marking_policy_id: 跨地域连接关联的流标记策略的ID。
        :param builtins.str transit_router_traffic_qos_queue_policy_id: 跨地域连接关联的流队列策略的ID。
        :param builtins.str update_time: 网络实例连接的最近操作时间。
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if auto_publish_route_enabled is not None:
            pulumi.set(__self__, "auto_publish_route_enabled", auto_publish_route_enabled)
        if business_status is not None:
            pulumi.set(__self__, "business_status", business_status)
        if creation_time is not None:
            pulumi.set(__self__, "creation_time", creation_time)
        if deleted_time is not None:
            pulumi.set(__self__, "deleted_time", deleted_time)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ipv6_enabled is not None:
            pulumi.set(__self__, "ipv6_enabled", ipv6_enabled)
        if overdue_time is not None:
            pulumi.set(__self__, "overdue_time", overdue_time)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if transit_router_attachment_id is not None:
            pulumi.set(__self__, "transit_router_attachment_id", transit_router_attachment_id)
        if transit_router_attachment_name is not None:
            pulumi.set(__self__, "transit_router_attachment_name", transit_router_attachment_name)
        if transit_router_forward_policy_table_id is not None:
            pulumi.set(__self__, "transit_router_forward_policy_table_id", transit_router_forward_policy_table_id)
        if transit_router_id is not None:
            pulumi.set(__self__, "transit_router_id", transit_router_id)
        if transit_router_route_table_id is not None:
            pulumi.set(__self__, "transit_router_route_table_id", transit_router_route_table_id)
        if transit_router_traffic_qos_marking_policy_id is not None:
            pulumi.set(__self__, "transit_router_traffic_qos_marking_policy_id", transit_router_traffic_qos_marking_policy_id)
        if transit_router_traffic_qos_queue_policy_id is not None:
            pulumi.set(__self__, "transit_router_traffic_qos_queue_policy_id", transit_router_traffic_qos_queue_policy_id)
        if update_time is not None:
            pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[builtins.str]:
        """
        网络实例连接所属的账号ID。
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="autoPublishRouteEnabled")
    def auto_publish_route_enabled(self) -> Optional[builtins.bool]:
        """
        是否自动同步TR路由到网络实例路由表中。true：是。false：否。
        """
        return pulumi.get(self, "auto_publish_route_enabled")

    @property
    @pulumi.getter(name="businessStatus")
    def business_status(self) -> Optional[builtins.str]:
        """
        网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
        """
        return pulumi.get(self, "business_status")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> Optional[builtins.str]:
        """
        网络实例连接的创建时间。
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter(name="deletedTime")
    def deleted_time(self) -> Optional[builtins.str]:
        """
        网络实例连接的删除时间。
        """
        return pulumi.get(self, "deleted_time")

    @property
    @pulumi.getter
    def description(self) -> Optional[builtins.str]:
        """
        网络实例连接的描述信息。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="ipv6Enabled")
    def ipv6_enabled(self) -> Optional[builtins.bool]:
        """
        是否开启IPv6功能。true：是。false：否。
        """
        return pulumi.get(self, "ipv6_enabled")

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> Optional[builtins.str]:
        """
        网络实例连接的欠费关停时间。
        """
        return pulumi.get(self, "overdue_time")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> Optional[builtins.str]:
        """
        网络实例的ID。
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[builtins.str]:
        """
        网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
        """
        return pulumi.get(self, "resource_type")

    @property
    @pulumi.getter
    def status(self) -> Optional[builtins.str]:
        """
        网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence['outputs.TransitRouterAttachmentTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="transitRouterAttachmentId")
    def transit_router_attachment_id(self) -> Optional[builtins.str]:
        """
        网络实例连接的ID。
        """
        return pulumi.get(self, "transit_router_attachment_id")

    @property
    @pulumi.getter(name="transitRouterAttachmentName")
    def transit_router_attachment_name(self) -> Optional[builtins.str]:
        """
        网络实例连接的名称。
        """
        return pulumi.get(self, "transit_router_attachment_name")

    @property
    @pulumi.getter(name="transitRouterForwardPolicyTableId")
    def transit_router_forward_policy_table_id(self) -> Optional[builtins.str]:
        """
        跨地域连接关联的转发策略的ID。
        """
        return pulumi.get(self, "transit_router_forward_policy_table_id")

    @property
    @pulumi.getter(name="transitRouterId")
    def transit_router_id(self) -> Optional[builtins.str]:
        """
        中转路由器实例的ID。
        """
        return pulumi.get(self, "transit_router_id")

    @property
    @pulumi.getter(name="transitRouterRouteTableId")
    def transit_router_route_table_id(self) -> Optional[builtins.str]:
        """
        网络实例连接关联转发的路由表ID。
        """
        return pulumi.get(self, "transit_router_route_table_id")

    @property
    @pulumi.getter(name="transitRouterTrafficQosMarkingPolicyId")
    def transit_router_traffic_qos_marking_policy_id(self) -> Optional[builtins.str]:
        """
        跨地域连接关联的流标记策略的ID。
        """
        return pulumi.get(self, "transit_router_traffic_qos_marking_policy_id")

    @property
    @pulumi.getter(name="transitRouterTrafficQosQueuePolicyId")
    def transit_router_traffic_qos_queue_policy_id(self) -> Optional[builtins.str]:
        """
        跨地域连接关联的流队列策略的ID。
        """
        return pulumi.get(self, "transit_router_traffic_qos_queue_policy_id")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> Optional[builtins.str]:
        """
        网络实例连接的最近操作时间。
        """
        return pulumi.get(self, "update_time")


@pulumi.output_type
class TransitRouterAttachmentTag(dict):
    def __init__(__self__, *,
                 key: Optional[builtins.str] = None,
                 value: Optional[builtins.str] = None):
        """
        :param builtins.str key: 标签键。
        :param builtins.str value: 标签值。
        """
        if key is not None:
            pulumi.set(__self__, "key", key)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        """
        标签键。
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> Optional[builtins.str]:
        """
        标签值。
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class TransitRouterTag(dict):
    def __init__(__self__, *,
                 key: Optional[builtins.str] = None,
                 value: Optional[builtins.str] = None):
        """
        :param builtins.str key: 标签键。
        :param builtins.str value: 标签值。
        """
        if key is not None:
            pulumi.set(__self__, "key", key)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> Optional[builtins.str]:
        """
        标签键。
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> Optional[builtins.str]:
        """
        标签值。
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetTransitRouterAttachmentResult(dict):
    def __init__(__self__, *,
                 account_id: builtins.str,
                 auto_publish_route_enabled: builtins.bool,
                 business_status: builtins.str,
                 creation_time: builtins.str,
                 deleted_time: builtins.str,
                 description: builtins.str,
                 ipv6_enabled: builtins.bool,
                 overdue_time: builtins.str,
                 resource_id: builtins.str,
                 resource_type: builtins.str,
                 status: builtins.str,
                 tags: Sequence['outputs.GetTransitRouterAttachmentTagResult'],
                 transit_router_attachment_id: builtins.str,
                 transit_router_attachment_name: builtins.str,
                 transit_router_forward_policy_table_id: builtins.str,
                 transit_router_id: builtins.str,
                 transit_router_route_table_id: builtins.str,
                 transit_router_traffic_qos_marking_policy_id: builtins.str,
                 transit_router_traffic_qos_queue_policy_id: builtins.str,
                 update_time: builtins.str):
        """
        :param builtins.str account_id: 网络实例连接所属的账号ID。
        :param builtins.bool auto_publish_route_enabled: 是否自动同步TR路由到网络实例路由表中。true：是。false：否。
        :param builtins.str business_status: 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
        :param builtins.str creation_time: 网络实例连接的创建时间。
        :param builtins.str deleted_time: 网络实例连接的删除时间。
        :param builtins.str description: 网络实例连接的描述信息。
        :param builtins.bool ipv6_enabled: 是否开启IPv6功能。true：是。false：否。
        :param builtins.str overdue_time: 网络实例连接的欠费关停时间。
        :param builtins.str resource_id: 网络实例的ID。
        :param builtins.str resource_type: 网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
        :param builtins.str status: 网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
        :param Sequence['GetTransitRouterAttachmentTagArgs'] tags: 网络实例连接的标签信息
        :param builtins.str transit_router_attachment_id: 网络实例连接的ID。
        :param builtins.str transit_router_attachment_name: 网络实例连接的名称。
        :param builtins.str transit_router_forward_policy_table_id: 跨地域连接关联的转发策略的ID。
        :param builtins.str transit_router_id: 中转路由器实例的ID。
        :param builtins.str transit_router_route_table_id: 网络实例连接关联转发的路由表ID。
        :param builtins.str transit_router_traffic_qos_marking_policy_id: 跨地域连接关联的流标记策略的ID。
        :param builtins.str transit_router_traffic_qos_queue_policy_id: 跨地域连接关联的流队列策略的ID。
        :param builtins.str update_time: 网络实例连接的最近操作时间。
        """
        pulumi.set(__self__, "account_id", account_id)
        pulumi.set(__self__, "auto_publish_route_enabled", auto_publish_route_enabled)
        pulumi.set(__self__, "business_status", business_status)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "deleted_time", deleted_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "ipv6_enabled", ipv6_enabled)
        pulumi.set(__self__, "overdue_time", overdue_time)
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "transit_router_attachment_id", transit_router_attachment_id)
        pulumi.set(__self__, "transit_router_attachment_name", transit_router_attachment_name)
        pulumi.set(__self__, "transit_router_forward_policy_table_id", transit_router_forward_policy_table_id)
        pulumi.set(__self__, "transit_router_id", transit_router_id)
        pulumi.set(__self__, "transit_router_route_table_id", transit_router_route_table_id)
        pulumi.set(__self__, "transit_router_traffic_qos_marking_policy_id", transit_router_traffic_qos_marking_policy_id)
        pulumi.set(__self__, "transit_router_traffic_qos_queue_policy_id", transit_router_traffic_qos_queue_policy_id)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> builtins.str:
        """
        网络实例连接所属的账号ID。
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="autoPublishRouteEnabled")
    def auto_publish_route_enabled(self) -> builtins.bool:
        """
        是否自动同步TR路由到网络实例路由表中。true：是。false：否。
        """
        return pulumi.get(self, "auto_publish_route_enabled")

    @property
    @pulumi.getter(name="businessStatus")
    def business_status(self) -> builtins.str:
        """
        网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
        """
        return pulumi.get(self, "business_status")

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> builtins.str:
        """
        网络实例连接的创建时间。
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter(name="deletedTime")
    def deleted_time(self) -> builtins.str:
        """
        网络实例连接的删除时间。
        """
        return pulumi.get(self, "deleted_time")

    @property
    @pulumi.getter
    def description(self) -> builtins.str:
        """
        网络实例连接的描述信息。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="ipv6Enabled")
    def ipv6_enabled(self) -> builtins.bool:
        """
        是否开启IPv6功能。true：是。false：否。
        """
        return pulumi.get(self, "ipv6_enabled")

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> builtins.str:
        """
        网络实例连接的欠费关停时间。
        """
        return pulumi.get(self, "overdue_time")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> builtins.str:
        """
        网络实例的ID。
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> builtins.str:
        """
        网络实例连接关联的网络实例类型。VPC：私有网络。VPN：VPN连接。DirectConnectGateway：专线网关。TransitRouter：中转路由器。
        """
        return pulumi.get(self, "resource_type")

    @property
    @pulumi.getter
    def status(self) -> builtins.str:
        """
        网络实例连接的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> Sequence['outputs.GetTransitRouterAttachmentTagResult']:
        """
        网络实例连接的标签信息
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="transitRouterAttachmentId")
    def transit_router_attachment_id(self) -> builtins.str:
        """
        网络实例连接的ID。
        """
        return pulumi.get(self, "transit_router_attachment_id")

    @property
    @pulumi.getter(name="transitRouterAttachmentName")
    def transit_router_attachment_name(self) -> builtins.str:
        """
        网络实例连接的名称。
        """
        return pulumi.get(self, "transit_router_attachment_name")

    @property
    @pulumi.getter(name="transitRouterForwardPolicyTableId")
    def transit_router_forward_policy_table_id(self) -> builtins.str:
        """
        跨地域连接关联的转发策略的ID。
        """
        return pulumi.get(self, "transit_router_forward_policy_table_id")

    @property
    @pulumi.getter(name="transitRouterId")
    def transit_router_id(self) -> builtins.str:
        """
        中转路由器实例的ID。
        """
        return pulumi.get(self, "transit_router_id")

    @property
    @pulumi.getter(name="transitRouterRouteTableId")
    def transit_router_route_table_id(self) -> builtins.str:
        """
        网络实例连接关联转发的路由表ID。
        """
        return pulumi.get(self, "transit_router_route_table_id")

    @property
    @pulumi.getter(name="transitRouterTrafficQosMarkingPolicyId")
    def transit_router_traffic_qos_marking_policy_id(self) -> builtins.str:
        """
        跨地域连接关联的流标记策略的ID。
        """
        return pulumi.get(self, "transit_router_traffic_qos_marking_policy_id")

    @property
    @pulumi.getter(name="transitRouterTrafficQosQueuePolicyId")
    def transit_router_traffic_qos_queue_policy_id(self) -> builtins.str:
        """
        跨地域连接关联的流队列策略的ID。
        """
        return pulumi.get(self, "transit_router_traffic_qos_queue_policy_id")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> builtins.str:
        """
        网络实例连接的最近操作时间。
        """
        return pulumi.get(self, "update_time")


@pulumi.output_type
class GetTransitRouterAttachmentTagResult(dict):
    def __init__(__self__, *,
                 key: builtins.str,
                 value: builtins.str):
        """
        :param builtins.str key: 标签键。
        :param builtins.str value: 标签值。
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> builtins.str:
        """
        标签键。
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> builtins.str:
        """
        标签值。
        """
        return pulumi.get(self, "value")


@pulumi.output_type
class GetTransitRouterTagResult(dict):
    def __init__(__self__, *,
                 key: builtins.str,
                 value: builtins.str):
        """
        :param builtins.str key: 标签键。
        :param builtins.str value: 标签值。
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> builtins.str:
        """
        标签键。
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> builtins.str:
        """
        标签值。
        """
        return pulumi.get(self, "value")


