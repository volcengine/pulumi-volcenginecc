# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EniArgs', 'Eni']

@pulumi.input_type
class EniArgs:
    def __init__(__self__, *,
                 delete_on_termination: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_sets: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 network_interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 port_security_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 primary_ip_address: Optional[pulumi.Input['EniPrimaryIpAddressArgs']] = None,
                 private_ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input['EniPrivateIpSetArgs']]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 secondary_private_ip_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 subnet_id: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['EniTagArgs']]]] = None,
                 zone_id: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a Eni resource.
        :param pulumi.Input[builtins.bool] delete_on_termination: 是否开启随云服务器实例删除，true为开启，false为不开启。
        :param pulumi.Input[builtins.str] description: 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        :param pulumi.Input[builtins.str] instance_id: 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        :param pulumi.Input[builtins.int] ipv6_address_count: 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv6_sets: 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        :param pulumi.Input[builtins.str] network_interface_name: 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        :param pulumi.Input[builtins.bool] port_security_enabled: 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        :param pulumi.Input['EniPrimaryIpAddressArgs'] primary_ip_address: 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        :param pulumi.Input[builtins.str] project_name: 网卡所属项目的名称。
        :param pulumi.Input[builtins.int] secondary_private_ip_address_count: 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: 辅助网卡加入一个或多个安全组的ID。
        :param pulumi.Input[builtins.str] subnet_id: 辅助网卡所在子网的ID。
        :param pulumi.Input[builtins.str] zone_id: 网卡所属可用区的ID。
        """
        if delete_on_termination is not None:
            pulumi.set(__self__, "delete_on_termination", delete_on_termination)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if ipv6_address_count is not None:
            pulumi.set(__self__, "ipv6_address_count", ipv6_address_count)
        if ipv6_sets is not None:
            pulumi.set(__self__, "ipv6_sets", ipv6_sets)
        if network_interface_name is not None:
            pulumi.set(__self__, "network_interface_name", network_interface_name)
        if port_security_enabled is not None:
            pulumi.set(__self__, "port_security_enabled", port_security_enabled)
        if primary_ip_address is not None:
            pulumi.set(__self__, "primary_ip_address", primary_ip_address)
        if private_ip_sets is not None:
            pulumi.set(__self__, "private_ip_sets", private_ip_sets)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if secondary_private_ip_address_count is not None:
            pulumi.set(__self__, "secondary_private_ip_address_count", secondary_private_ip_address_count)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="deleteOnTermination")
    def delete_on_termination(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否开启随云服务器实例删除，true为开启，false为不开启。
        """
        return pulumi.get(self, "delete_on_termination")

    @delete_on_termination.setter
    def delete_on_termination(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "delete_on_termination", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="ipv6AddressCount")
    def ipv6_address_count(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        """
        return pulumi.get(self, "ipv6_address_count")

    @ipv6_address_count.setter
    def ipv6_address_count(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipv6_address_count", value)

    @property
    @pulumi.getter(name="ipv6Sets")
    def ipv6_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        """
        return pulumi.get(self, "ipv6_sets")

    @ipv6_sets.setter
    def ipv6_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "ipv6_sets", value)

    @property
    @pulumi.getter(name="networkInterfaceName")
    def network_interface_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        """
        return pulumi.get(self, "network_interface_name")

    @network_interface_name.setter
    def network_interface_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "network_interface_name", value)

    @property
    @pulumi.getter(name="portSecurityEnabled")
    def port_security_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        """
        return pulumi.get(self, "port_security_enabled")

    @port_security_enabled.setter
    def port_security_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "port_security_enabled", value)

    @property
    @pulumi.getter(name="primaryIpAddress")
    def primary_ip_address(self) -> Optional[pulumi.Input['EniPrimaryIpAddressArgs']]:
        """
        网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        """
        return pulumi.get(self, "primary_ip_address")

    @primary_ip_address.setter
    def primary_ip_address(self, value: Optional[pulumi.Input['EniPrimaryIpAddressArgs']]):
        pulumi.set(self, "primary_ip_address", value)

    @property
    @pulumi.getter(name="privateIpSets")
    def private_ip_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EniPrivateIpSetArgs']]]]:
        return pulumi.get(self, "private_ip_sets")

    @private_ip_sets.setter
    def private_ip_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EniPrivateIpSetArgs']]]]):
        pulumi.set(self, "private_ip_sets", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="secondaryPrivateIpAddressCount")
    def secondary_private_ip_address_count(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        """
        return pulumi.get(self, "secondary_private_ip_address_count")

    @secondary_private_ip_address_count.setter
    def secondary_private_ip_address_count(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "secondary_private_ip_address_count", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        辅助网卡加入一个或多个安全组的ID。
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        辅助网卡所在子网的ID。
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EniTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EniTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所属可用区的ID。
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "zone_id", value)


@pulumi.input_type
class _EniState:
    def __init__(__self__, *,
                 account_id: Optional[pulumi.Input[builtins.str]] = None,
                 created_time: Optional[pulumi.Input[builtins.str]] = None,
                 delete_on_termination: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_sets: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 mac_address: Optional[pulumi.Input[builtins.str]] = None,
                 network_interface_id: Optional[pulumi.Input[builtins.str]] = None,
                 network_interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 port_security_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 primary_ip_address: Optional[pulumi.Input['EniPrimaryIpAddressArgs']] = None,
                 private_ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input['EniPrivateIpSetArgs']]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 secondary_private_ip_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 service_managed: Optional[pulumi.Input[builtins.bool]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 subnet_id: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['EniTagArgs']]]] = None,
                 type: Optional[pulumi.Input[builtins.str]] = None,
                 updated_time: Optional[pulumi.Input[builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None,
                 vpc_name: Optional[pulumi.Input[builtins.str]] = None,
                 zone_id: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering Eni resources.
        :param pulumi.Input[builtins.str] account_id: 网卡所有者ID。
        :param pulumi.Input[builtins.str] created_time: 网卡创建时间。
        :param pulumi.Input[builtins.bool] delete_on_termination: 是否开启随云服务器实例删除，true为开启，false为不开启。
        :param pulumi.Input[builtins.str] description: 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        :param pulumi.Input[builtins.str] instance_id: 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        :param pulumi.Input[builtins.int] ipv6_address_count: 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv6_sets: 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        :param pulumi.Input[builtins.str] mac_address: 网卡的MAC地址。
        :param pulumi.Input[builtins.str] network_interface_id: 网卡ID。
        :param pulumi.Input[builtins.str] network_interface_name: 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        :param pulumi.Input[builtins.bool] port_security_enabled: 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        :param pulumi.Input['EniPrimaryIpAddressArgs'] primary_ip_address: 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        :param pulumi.Input[builtins.str] project_name: 网卡所属项目的名称。
        :param pulumi.Input[builtins.int] secondary_private_ip_address_count: 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: 辅助网卡加入一个或多个安全组的ID。
        :param pulumi.Input[builtins.bool] service_managed: 是否为火山引擎官方服务网卡，true为是，false为否。
        :param pulumi.Input[builtins.str] status: 网卡的绑定状态。
        :param pulumi.Input[builtins.str] subnet_id: 辅助网卡所在子网的ID。
        :param pulumi.Input[builtins.str] type: 网卡类型。primary：主网卡，secondary：辅助网卡
        :param pulumi.Input[builtins.str] updated_time: 更新网卡的时间。
        :param pulumi.Input[builtins.str] vpc_id: 网卡所属的VPC的ID。
        :param pulumi.Input[builtins.str] vpc_name: 网卡所属VPC的名称。
        :param pulumi.Input[builtins.str] zone_id: 网卡所属可用区的ID。
        """
        if account_id is not None:
            pulumi.set(__self__, "account_id", account_id)
        if created_time is not None:
            pulumi.set(__self__, "created_time", created_time)
        if delete_on_termination is not None:
            pulumi.set(__self__, "delete_on_termination", delete_on_termination)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if ipv6_address_count is not None:
            pulumi.set(__self__, "ipv6_address_count", ipv6_address_count)
        if ipv6_sets is not None:
            pulumi.set(__self__, "ipv6_sets", ipv6_sets)
        if mac_address is not None:
            pulumi.set(__self__, "mac_address", mac_address)
        if network_interface_id is not None:
            pulumi.set(__self__, "network_interface_id", network_interface_id)
        if network_interface_name is not None:
            pulumi.set(__self__, "network_interface_name", network_interface_name)
        if port_security_enabled is not None:
            pulumi.set(__self__, "port_security_enabled", port_security_enabled)
        if primary_ip_address is not None:
            pulumi.set(__self__, "primary_ip_address", primary_ip_address)
        if private_ip_sets is not None:
            pulumi.set(__self__, "private_ip_sets", private_ip_sets)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if secondary_private_ip_address_count is not None:
            pulumi.set(__self__, "secondary_private_ip_address_count", secondary_private_ip_address_count)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if service_managed is not None:
            pulumi.set(__self__, "service_managed", service_managed)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if updated_time is not None:
            pulumi.set(__self__, "updated_time", updated_time)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)
        if vpc_name is not None:
            pulumi.set(__self__, "vpc_name", vpc_name)
        if zone_id is not None:
            pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所有者ID。
        """
        return pulumi.get(self, "account_id")

    @account_id.setter
    def account_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "account_id", value)

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡创建时间。
        """
        return pulumi.get(self, "created_time")

    @created_time.setter
    def created_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "created_time", value)

    @property
    @pulumi.getter(name="deleteOnTermination")
    def delete_on_termination(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否开启随云服务器实例删除，true为开启，false为不开启。
        """
        return pulumi.get(self, "delete_on_termination")

    @delete_on_termination.setter
    def delete_on_termination(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "delete_on_termination", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="ipv6AddressCount")
    def ipv6_address_count(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        """
        return pulumi.get(self, "ipv6_address_count")

    @ipv6_address_count.setter
    def ipv6_address_count(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "ipv6_address_count", value)

    @property
    @pulumi.getter(name="ipv6Sets")
    def ipv6_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        """
        return pulumi.get(self, "ipv6_sets")

    @ipv6_sets.setter
    def ipv6_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "ipv6_sets", value)

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡的MAC地址。
        """
        return pulumi.get(self, "mac_address")

    @mac_address.setter
    def mac_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "mac_address", value)

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡ID。
        """
        return pulumi.get(self, "network_interface_id")

    @network_interface_id.setter
    def network_interface_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "network_interface_id", value)

    @property
    @pulumi.getter(name="networkInterfaceName")
    def network_interface_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        """
        return pulumi.get(self, "network_interface_name")

    @network_interface_name.setter
    def network_interface_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "network_interface_name", value)

    @property
    @pulumi.getter(name="portSecurityEnabled")
    def port_security_enabled(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        """
        return pulumi.get(self, "port_security_enabled")

    @port_security_enabled.setter
    def port_security_enabled(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "port_security_enabled", value)

    @property
    @pulumi.getter(name="primaryIpAddress")
    def primary_ip_address(self) -> Optional[pulumi.Input['EniPrimaryIpAddressArgs']]:
        """
        网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        """
        return pulumi.get(self, "primary_ip_address")

    @primary_ip_address.setter
    def primary_ip_address(self, value: Optional[pulumi.Input['EniPrimaryIpAddressArgs']]):
        pulumi.set(self, "primary_ip_address", value)

    @property
    @pulumi.getter(name="privateIpSets")
    def private_ip_sets(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EniPrivateIpSetArgs']]]]:
        return pulumi.get(self, "private_ip_sets")

    @private_ip_sets.setter
    def private_ip_sets(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EniPrivateIpSetArgs']]]]):
        pulumi.set(self, "private_ip_sets", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="secondaryPrivateIpAddressCount")
    def secondary_private_ip_address_count(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        """
        return pulumi.get(self, "secondary_private_ip_address_count")

    @secondary_private_ip_address_count.setter
    def secondary_private_ip_address_count(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "secondary_private_ip_address_count", value)

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        辅助网卡加入一个或多个安全组的ID。
        """
        return pulumi.get(self, "security_group_ids")

    @security_group_ids.setter
    def security_group_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "security_group_ids", value)

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否为火山引擎官方服务网卡，true为是，false为否。
        """
        return pulumi.get(self, "service_managed")

    @service_managed.setter
    def service_managed(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "service_managed", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡的绑定状态。
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        辅助网卡所在子网的ID。
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EniTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EniTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡类型。primary：主网卡，secondary：辅助网卡
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        更新网卡的时间。
        """
        return pulumi.get(self, "updated_time")

    @updated_time.setter
    def updated_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "updated_time", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所属的VPC的ID。
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter(name="vpcName")
    def vpc_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所属VPC的名称。
        """
        return pulumi.get(self, "vpc_name")

    @vpc_name.setter
    def vpc_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "vpc_name", value)

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        网卡所属可用区的ID。
        """
        return pulumi.get(self, "zone_id")

    @zone_id.setter
    def zone_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "zone_id", value)


@pulumi.type_token("volcenginecc:vpc/eni:Eni")
class Eni(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 delete_on_termination: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_sets: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 network_interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 port_security_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 primary_ip_address: Optional[pulumi.Input[Union['EniPrimaryIpAddressArgs', 'EniPrimaryIpAddressArgsDict']]] = None,
                 private_ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EniPrivateIpSetArgs', 'EniPrivateIpSetArgsDict']]]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 secondary_private_ip_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 subnet_id: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EniTagArgs', 'EniTagArgsDict']]]]] = None,
                 zone_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        网卡即虚拟网卡。在私有网络里，网卡是挂载在云服务器、负载均衡等云资源上的一种网络接口。每张网卡均有一个主私网IP地址。若有需要，可手动为其分配多个辅助私网IP地址。

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/eni:Eni example "network_interface_id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.bool] delete_on_termination: 是否开启随云服务器实例删除，true为开启，false为不开启。
        :param pulumi.Input[builtins.str] description: 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        :param pulumi.Input[builtins.str] instance_id: 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        :param pulumi.Input[builtins.int] ipv6_address_count: 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv6_sets: 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        :param pulumi.Input[builtins.str] network_interface_name: 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        :param pulumi.Input[builtins.bool] port_security_enabled: 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        :param pulumi.Input[Union['EniPrimaryIpAddressArgs', 'EniPrimaryIpAddressArgsDict']] primary_ip_address: 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        :param pulumi.Input[builtins.str] project_name: 网卡所属项目的名称。
        :param pulumi.Input[builtins.int] secondary_private_ip_address_count: 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: 辅助网卡加入一个或多个安全组的ID。
        :param pulumi.Input[builtins.str] subnet_id: 辅助网卡所在子网的ID。
        :param pulumi.Input[builtins.str] zone_id: 网卡所属可用区的ID。
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[EniArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        网卡即虚拟网卡。在私有网络里，网卡是挂载在云服务器、负载均衡等云资源上的一种网络接口。每张网卡均有一个主私网IP地址。若有需要，可手动为其分配多个辅助私网IP地址。

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/eni:Eni example "network_interface_id"
        ```

        :param str resource_name: The name of the resource.
        :param EniArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EniArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 delete_on_termination: Optional[pulumi.Input[builtins.bool]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 ipv6_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 ipv6_sets: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 network_interface_name: Optional[pulumi.Input[builtins.str]] = None,
                 port_security_enabled: Optional[pulumi.Input[builtins.bool]] = None,
                 primary_ip_address: Optional[pulumi.Input[Union['EniPrimaryIpAddressArgs', 'EniPrimaryIpAddressArgsDict']]] = None,
                 private_ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EniPrivateIpSetArgs', 'EniPrivateIpSetArgsDict']]]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 secondary_private_ip_address_count: Optional[pulumi.Input[builtins.int]] = None,
                 security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 subnet_id: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EniTagArgs', 'EniTagArgsDict']]]]] = None,
                 zone_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EniArgs.__new__(EniArgs)

            __props__.__dict__["delete_on_termination"] = delete_on_termination
            __props__.__dict__["description"] = description
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["ipv6_address_count"] = ipv6_address_count
            __props__.__dict__["ipv6_sets"] = ipv6_sets
            __props__.__dict__["network_interface_name"] = network_interface_name
            __props__.__dict__["port_security_enabled"] = port_security_enabled
            __props__.__dict__["primary_ip_address"] = primary_ip_address
            __props__.__dict__["private_ip_sets"] = private_ip_sets
            __props__.__dict__["project_name"] = project_name
            __props__.__dict__["secondary_private_ip_address_count"] = secondary_private_ip_address_count
            __props__.__dict__["security_group_ids"] = security_group_ids
            __props__.__dict__["subnet_id"] = subnet_id
            __props__.__dict__["tags"] = tags
            __props__.__dict__["zone_id"] = zone_id
            __props__.__dict__["account_id"] = None
            __props__.__dict__["created_time"] = None
            __props__.__dict__["mac_address"] = None
            __props__.__dict__["network_interface_id"] = None
            __props__.__dict__["service_managed"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["type"] = None
            __props__.__dict__["updated_time"] = None
            __props__.__dict__["vpc_id"] = None
            __props__.__dict__["vpc_name"] = None
        super(Eni, __self__).__init__(
            'volcenginecc:vpc/eni:Eni',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account_id: Optional[pulumi.Input[builtins.str]] = None,
            created_time: Optional[pulumi.Input[builtins.str]] = None,
            delete_on_termination: Optional[pulumi.Input[builtins.bool]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            instance_id: Optional[pulumi.Input[builtins.str]] = None,
            ipv6_address_count: Optional[pulumi.Input[builtins.int]] = None,
            ipv6_sets: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            mac_address: Optional[pulumi.Input[builtins.str]] = None,
            network_interface_id: Optional[pulumi.Input[builtins.str]] = None,
            network_interface_name: Optional[pulumi.Input[builtins.str]] = None,
            port_security_enabled: Optional[pulumi.Input[builtins.bool]] = None,
            primary_ip_address: Optional[pulumi.Input[Union['EniPrimaryIpAddressArgs', 'EniPrimaryIpAddressArgsDict']]] = None,
            private_ip_sets: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EniPrivateIpSetArgs', 'EniPrivateIpSetArgsDict']]]]] = None,
            project_name: Optional[pulumi.Input[builtins.str]] = None,
            secondary_private_ip_address_count: Optional[pulumi.Input[builtins.int]] = None,
            security_group_ids: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            service_managed: Optional[pulumi.Input[builtins.bool]] = None,
            status: Optional[pulumi.Input[builtins.str]] = None,
            subnet_id: Optional[pulumi.Input[builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EniTagArgs', 'EniTagArgsDict']]]]] = None,
            type: Optional[pulumi.Input[builtins.str]] = None,
            updated_time: Optional[pulumi.Input[builtins.str]] = None,
            vpc_id: Optional[pulumi.Input[builtins.str]] = None,
            vpc_name: Optional[pulumi.Input[builtins.str]] = None,
            zone_id: Optional[pulumi.Input[builtins.str]] = None) -> 'Eni':
        """
        Get an existing Eni resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] account_id: 网卡所有者ID。
        :param pulumi.Input[builtins.str] created_time: 网卡创建时间。
        :param pulumi.Input[builtins.bool] delete_on_termination: 是否开启随云服务器实例删除，true为开启，false为不开启。
        :param pulumi.Input[builtins.str] description: 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        :param pulumi.Input[builtins.str] instance_id: 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        :param pulumi.Input[builtins.int] ipv6_address_count: 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] ipv6_sets: 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        :param pulumi.Input[builtins.str] mac_address: 网卡的MAC地址。
        :param pulumi.Input[builtins.str] network_interface_id: 网卡ID。
        :param pulumi.Input[builtins.str] network_interface_name: 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        :param pulumi.Input[builtins.bool] port_security_enabled: 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        :param pulumi.Input[Union['EniPrimaryIpAddressArgs', 'EniPrimaryIpAddressArgsDict']] primary_ip_address: 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        :param pulumi.Input[builtins.str] project_name: 网卡所属项目的名称。
        :param pulumi.Input[builtins.int] secondary_private_ip_address_count: 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_group_ids: 辅助网卡加入一个或多个安全组的ID。
        :param pulumi.Input[builtins.bool] service_managed: 是否为火山引擎官方服务网卡，true为是，false为否。
        :param pulumi.Input[builtins.str] status: 网卡的绑定状态。
        :param pulumi.Input[builtins.str] subnet_id: 辅助网卡所在子网的ID。
        :param pulumi.Input[builtins.str] type: 网卡类型。primary：主网卡，secondary：辅助网卡
        :param pulumi.Input[builtins.str] updated_time: 更新网卡的时间。
        :param pulumi.Input[builtins.str] vpc_id: 网卡所属的VPC的ID。
        :param pulumi.Input[builtins.str] vpc_name: 网卡所属VPC的名称。
        :param pulumi.Input[builtins.str] zone_id: 网卡所属可用区的ID。
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EniState.__new__(_EniState)

        __props__.__dict__["account_id"] = account_id
        __props__.__dict__["created_time"] = created_time
        __props__.__dict__["delete_on_termination"] = delete_on_termination
        __props__.__dict__["description"] = description
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["ipv6_address_count"] = ipv6_address_count
        __props__.__dict__["ipv6_sets"] = ipv6_sets
        __props__.__dict__["mac_address"] = mac_address
        __props__.__dict__["network_interface_id"] = network_interface_id
        __props__.__dict__["network_interface_name"] = network_interface_name
        __props__.__dict__["port_security_enabled"] = port_security_enabled
        __props__.__dict__["primary_ip_address"] = primary_ip_address
        __props__.__dict__["private_ip_sets"] = private_ip_sets
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["secondary_private_ip_address_count"] = secondary_private_ip_address_count
        __props__.__dict__["security_group_ids"] = security_group_ids
        __props__.__dict__["service_managed"] = service_managed
        __props__.__dict__["status"] = status
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["updated_time"] = updated_time
        __props__.__dict__["vpc_id"] = vpc_id
        __props__.__dict__["vpc_name"] = vpc_name
        __props__.__dict__["zone_id"] = zone_id
        return Eni(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accountId")
    def account_id(self) -> pulumi.Output[builtins.str]:
        """
        网卡所有者ID。
        """
        return pulumi.get(self, "account_id")

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> pulumi.Output[builtins.str]:
        """
        网卡创建时间。
        """
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter(name="deleteOnTermination")
    def delete_on_termination(self) -> pulumi.Output[builtins.bool]:
        """
        是否开启随云服务器实例删除，true为开启，false为不开启。
        """
        return pulumi.get(self, "delete_on_termination")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[builtins.str]:
        """
        网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="ipv6AddressCount")
    def ipv6_address_count(self) -> pulumi.Output[builtins.int]:
        """
        为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        """
        return pulumi.get(self, "ipv6_address_count")

    @property
    @pulumi.getter(name="ipv6Sets")
    def ipv6_sets(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        """
        return pulumi.get(self, "ipv6_sets")

    @property
    @pulumi.getter(name="macAddress")
    def mac_address(self) -> pulumi.Output[builtins.str]:
        """
        网卡的MAC地址。
        """
        return pulumi.get(self, "mac_address")

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> pulumi.Output[builtins.str]:
        """
        网卡ID。
        """
        return pulumi.get(self, "network_interface_id")

    @property
    @pulumi.getter(name="networkInterfaceName")
    def network_interface_name(self) -> pulumi.Output[builtins.str]:
        """
        网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        """
        return pulumi.get(self, "network_interface_name")

    @property
    @pulumi.getter(name="portSecurityEnabled")
    def port_security_enabled(self) -> pulumi.Output[builtins.bool]:
        """
        是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        """
        return pulumi.get(self, "port_security_enabled")

    @property
    @pulumi.getter(name="primaryIpAddress")
    def primary_ip_address(self) -> pulumi.Output['outputs.EniPrimaryIpAddress']:
        """
        网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        """
        return pulumi.get(self, "primary_ip_address")

    @property
    @pulumi.getter(name="privateIpSets")
    def private_ip_sets(self) -> pulumi.Output[Sequence['outputs.EniPrivateIpSet']]:
        return pulumi.get(self, "private_ip_sets")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[builtins.str]:
        """
        网卡所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="secondaryPrivateIpAddressCount")
    def secondary_private_ip_address_count(self) -> pulumi.Output[builtins.int]:
        """
        为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        """
        return pulumi.get(self, "secondary_private_ip_address_count")

    @property
    @pulumi.getter(name="securityGroupIds")
    def security_group_ids(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        辅助网卡加入一个或多个安全组的ID。
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> pulumi.Output[builtins.bool]:
        """
        是否为火山引擎官方服务网卡，true为是，false为否。
        """
        return pulumi.get(self, "service_managed")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[builtins.str]:
        """
        网卡的绑定状态。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[builtins.str]:
        """
        辅助网卡所在子网的ID。
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence['outputs.EniTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        网卡类型。primary：主网卡，secondary：辅助网卡
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> pulumi.Output[builtins.str]:
        """
        更新网卡的时间。
        """
        return pulumi.get(self, "updated_time")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[builtins.str]:
        """
        网卡所属的VPC的ID。
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="vpcName")
    def vpc_name(self) -> pulumi.Output[builtins.str]:
        """
        网卡所属VPC的名称。
        """
        return pulumi.get(self, "vpc_name")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> pulumi.Output[builtins.str]:
        """
        网卡所属可用区的ID。
        """
        return pulumi.get(self, "zone_id")

