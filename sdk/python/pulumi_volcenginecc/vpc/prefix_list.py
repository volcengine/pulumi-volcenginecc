# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PrefixListArgs', 'PrefixList']

@pulumi.input_type
class PrefixListArgs:
    def __init__(__self__, *,
                 max_entries: pulumi.Input[builtins.int],
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_version: Optional[pulumi.Input[builtins.str]] = None,
                 prefix_list_entries: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListPrefixListEntryArgs']]]] = None,
                 prefix_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListTagArgs']]]] = None):
        """
        The set of arguments for constructing a PrefixList resource.
        :param pulumi.Input[builtins.int] max_entries: 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        :param pulumi.Input[builtins.str] description: 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        :param pulumi.Input[builtins.str] ip_version: IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        :param pulumi.Input[builtins.str] prefix_list_name: 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        :param pulumi.Input[builtins.str] project_name: 前缀列表所属项目的名称，不填默认加入default项目。
        """
        pulumi.set(__self__, "max_entries", max_entries)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_version is not None:
            pulumi.set(__self__, "ip_version", ip_version)
        if prefix_list_entries is not None:
            pulumi.set(__self__, "prefix_list_entries", prefix_list_entries)
        if prefix_list_name is not None:
            pulumi.set(__self__, "prefix_list_name", prefix_list_name)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="maxEntries")
    def max_entries(self) -> pulumi.Input[builtins.int]:
        """
        最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        """
        return pulumi.get(self, "max_entries")

    @max_entries.setter
    def max_entries(self, value: pulumi.Input[builtins.int]):
        pulumi.set(self, "max_entries", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        """
        return pulumi.get(self, "ip_version")

    @ip_version.setter
    def ip_version(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_version", value)

    @property
    @pulumi.getter(name="prefixListEntries")
    def prefix_list_entries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListPrefixListEntryArgs']]]]:
        return pulumi.get(self, "prefix_list_entries")

    @prefix_list_entries.setter
    def prefix_list_entries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListPrefixListEntryArgs']]]]):
        pulumi.set(self, "prefix_list_entries", value)

    @property
    @pulumi.getter(name="prefixListName")
    def prefix_list_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        """
        return pulumi.get(self, "prefix_list_name")

    @prefix_list_name.setter
    def prefix_list_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "prefix_list_name", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表所属项目的名称，不填默认加入default项目。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _PrefixListState:
    def __init__(__self__, *,
                 association_count: Optional[pulumi.Input[builtins.int]] = None,
                 associations_route_tables: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListAssociationsRouteTableArgs']]]] = None,
                 associations_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListAssociationsSecurityGroupArgs']]]] = None,
                 created_time: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_version: Optional[pulumi.Input[builtins.str]] = None,
                 max_entries: Optional[pulumi.Input[builtins.int]] = None,
                 prefix_list_entries: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListPrefixListEntryArgs']]]] = None,
                 prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
                 prefix_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListTagArgs']]]] = None,
                 updated_time: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering PrefixList resources.
        :param pulumi.Input[builtins.int] association_count: 前缀列表关联的资源数量。
        :param pulumi.Input[builtins.str] created_time: 前缀列表的创建时间。
        :param pulumi.Input[builtins.str] description: 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        :param pulumi.Input[builtins.str] ip_version: IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        :param pulumi.Input[builtins.int] max_entries: 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        :param pulumi.Input[builtins.str] prefix_list_id: 前缀列表的ID。
        :param pulumi.Input[builtins.str] prefix_list_name: 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        :param pulumi.Input[builtins.str] project_name: 前缀列表所属项目的名称，不填默认加入default项目。
        :param pulumi.Input[builtins.str] status: 前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
        :param pulumi.Input[builtins.str] updated_time: 前缀列表的最近一次修改时间。
        """
        if association_count is not None:
            pulumi.set(__self__, "association_count", association_count)
        if associations_route_tables is not None:
            pulumi.set(__self__, "associations_route_tables", associations_route_tables)
        if associations_security_groups is not None:
            pulumi.set(__self__, "associations_security_groups", associations_security_groups)
        if created_time is not None:
            pulumi.set(__self__, "created_time", created_time)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if ip_version is not None:
            pulumi.set(__self__, "ip_version", ip_version)
        if max_entries is not None:
            pulumi.set(__self__, "max_entries", max_entries)
        if prefix_list_entries is not None:
            pulumi.set(__self__, "prefix_list_entries", prefix_list_entries)
        if prefix_list_id is not None:
            pulumi.set(__self__, "prefix_list_id", prefix_list_id)
        if prefix_list_name is not None:
            pulumi.set(__self__, "prefix_list_name", prefix_list_name)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_time is not None:
            pulumi.set(__self__, "updated_time", updated_time)

    @property
    @pulumi.getter(name="associationCount")
    def association_count(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        前缀列表关联的资源数量。
        """
        return pulumi.get(self, "association_count")

    @association_count.setter
    def association_count(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "association_count", value)

    @property
    @pulumi.getter(name="associationsRouteTables")
    def associations_route_tables(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListAssociationsRouteTableArgs']]]]:
        return pulumi.get(self, "associations_route_tables")

    @associations_route_tables.setter
    def associations_route_tables(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListAssociationsRouteTableArgs']]]]):
        pulumi.set(self, "associations_route_tables", value)

    @property
    @pulumi.getter(name="associationsSecurityGroups")
    def associations_security_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListAssociationsSecurityGroupArgs']]]]:
        return pulumi.get(self, "associations_security_groups")

    @associations_security_groups.setter
    def associations_security_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListAssociationsSecurityGroupArgs']]]]):
        pulumi.set(self, "associations_security_groups", value)

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的创建时间。
        """
        return pulumi.get(self, "created_time")

    @created_time.setter
    def created_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "created_time", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        """
        return pulumi.get(self, "ip_version")

    @ip_version.setter
    def ip_version(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_version", value)

    @property
    @pulumi.getter(name="maxEntries")
    def max_entries(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        """
        return pulumi.get(self, "max_entries")

    @max_entries.setter
    def max_entries(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "max_entries", value)

    @property
    @pulumi.getter(name="prefixListEntries")
    def prefix_list_entries(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListPrefixListEntryArgs']]]]:
        return pulumi.get(self, "prefix_list_entries")

    @prefix_list_entries.setter
    def prefix_list_entries(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListPrefixListEntryArgs']]]]):
        pulumi.set(self, "prefix_list_entries", value)

    @property
    @pulumi.getter(name="prefixListId")
    def prefix_list_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的ID。
        """
        return pulumi.get(self, "prefix_list_id")

    @prefix_list_id.setter
    def prefix_list_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "prefix_list_id", value)

    @property
    @pulumi.getter(name="prefixListName")
    def prefix_list_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        """
        return pulumi.get(self, "prefix_list_name")

    @prefix_list_name.setter
    def prefix_list_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "prefix_list_name", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表所属项目的名称，不填默认加入default项目。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrefixListTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        前缀列表的最近一次修改时间。
        """
        return pulumi.get(self, "updated_time")

    @updated_time.setter
    def updated_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "updated_time", value)


@pulumi.type_token("volcenginecc:vpc/prefixList:PrefixList")
class PrefixList(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_version: Optional[pulumi.Input[builtins.str]] = None,
                 max_entries: Optional[pulumi.Input[builtins.int]] = None,
                 prefix_list_entries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListPrefixListEntryArgs', 'PrefixListPrefixListEntryArgsDict']]]]] = None,
                 prefix_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListTagArgs', 'PrefixListTagArgsDict']]]]] = None,
                 __props__=None):
        """
        前缀列表是一组CIDR地址块的集合，用于简化安全组规则、路由表条目的配置。当前缀列表修改时，所有关联它的资源均会同步修改。

        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcenginecc as volcenginecc

        prefixlist_demo = volcenginecc.vpc.PrefixList("PrefixlistDemo",
            description="PrefixlistDemo Example",
            ip_version="IPv4",
            max_entries=20,
            prefix_list_name="my-prefix-list",
            project_name="default",
            prefix_list_entries=[{
                "cidr": "192.168.0.0/*",
                "description": "privite description",
            }],
            tags=[{
                "key": "env",
                "value": "test",
            }])
        ```

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/prefixList:PrefixList example "prefix_list_id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] description: 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        :param pulumi.Input[builtins.str] ip_version: IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        :param pulumi.Input[builtins.int] max_entries: 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        :param pulumi.Input[builtins.str] prefix_list_name: 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        :param pulumi.Input[builtins.str] project_name: 前缀列表所属项目的名称，不填默认加入default项目。
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PrefixListArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        前缀列表是一组CIDR地址块的集合，用于简化安全组规则、路由表条目的配置。当前缀列表修改时，所有关联它的资源均会同步修改。

        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcenginecc as volcenginecc

        prefixlist_demo = volcenginecc.vpc.PrefixList("PrefixlistDemo",
            description="PrefixlistDemo Example",
            ip_version="IPv4",
            max_entries=20,
            prefix_list_name="my-prefix-list",
            project_name="default",
            prefix_list_entries=[{
                "cidr": "192.168.0.0/*",
                "description": "privite description",
            }],
            tags=[{
                "key": "env",
                "value": "test",
            }])
        ```

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/prefixList:PrefixList example "prefix_list_id"
        ```

        :param str resource_name: The name of the resource.
        :param PrefixListArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PrefixListArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 ip_version: Optional[pulumi.Input[builtins.str]] = None,
                 max_entries: Optional[pulumi.Input[builtins.int]] = None,
                 prefix_list_entries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListPrefixListEntryArgs', 'PrefixListPrefixListEntryArgsDict']]]]] = None,
                 prefix_list_name: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListTagArgs', 'PrefixListTagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PrefixListArgs.__new__(PrefixListArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["ip_version"] = ip_version
            if max_entries is None and not opts.urn:
                raise TypeError("Missing required property 'max_entries'")
            __props__.__dict__["max_entries"] = max_entries
            __props__.__dict__["prefix_list_entries"] = prefix_list_entries
            __props__.__dict__["prefix_list_name"] = prefix_list_name
            __props__.__dict__["project_name"] = project_name
            __props__.__dict__["tags"] = tags
            __props__.__dict__["association_count"] = None
            __props__.__dict__["associations_route_tables"] = None
            __props__.__dict__["associations_security_groups"] = None
            __props__.__dict__["created_time"] = None
            __props__.__dict__["prefix_list_id"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_time"] = None
        super(PrefixList, __self__).__init__(
            'volcenginecc:vpc/prefixList:PrefixList',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            association_count: Optional[pulumi.Input[builtins.int]] = None,
            associations_route_tables: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListAssociationsRouteTableArgs', 'PrefixListAssociationsRouteTableArgsDict']]]]] = None,
            associations_security_groups: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListAssociationsSecurityGroupArgs', 'PrefixListAssociationsSecurityGroupArgsDict']]]]] = None,
            created_time: Optional[pulumi.Input[builtins.str]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            ip_version: Optional[pulumi.Input[builtins.str]] = None,
            max_entries: Optional[pulumi.Input[builtins.int]] = None,
            prefix_list_entries: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListPrefixListEntryArgs', 'PrefixListPrefixListEntryArgsDict']]]]] = None,
            prefix_list_id: Optional[pulumi.Input[builtins.str]] = None,
            prefix_list_name: Optional[pulumi.Input[builtins.str]] = None,
            project_name: Optional[pulumi.Input[builtins.str]] = None,
            status: Optional[pulumi.Input[builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrefixListTagArgs', 'PrefixListTagArgsDict']]]]] = None,
            updated_time: Optional[pulumi.Input[builtins.str]] = None) -> 'PrefixList':
        """
        Get an existing PrefixList resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.int] association_count: 前缀列表关联的资源数量。
        :param pulumi.Input[builtins.str] created_time: 前缀列表的创建时间。
        :param pulumi.Input[builtins.str] description: 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        :param pulumi.Input[builtins.str] ip_version: IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        :param pulumi.Input[builtins.int] max_entries: 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        :param pulumi.Input[builtins.str] prefix_list_id: 前缀列表的ID。
        :param pulumi.Input[builtins.str] prefix_list_name: 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        :param pulumi.Input[builtins.str] project_name: 前缀列表所属项目的名称，不填默认加入default项目。
        :param pulumi.Input[builtins.str] status: 前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
        :param pulumi.Input[builtins.str] updated_time: 前缀列表的最近一次修改时间。
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PrefixListState.__new__(_PrefixListState)

        __props__.__dict__["association_count"] = association_count
        __props__.__dict__["associations_route_tables"] = associations_route_tables
        __props__.__dict__["associations_security_groups"] = associations_security_groups
        __props__.__dict__["created_time"] = created_time
        __props__.__dict__["description"] = description
        __props__.__dict__["ip_version"] = ip_version
        __props__.__dict__["max_entries"] = max_entries
        __props__.__dict__["prefix_list_entries"] = prefix_list_entries
        __props__.__dict__["prefix_list_id"] = prefix_list_id
        __props__.__dict__["prefix_list_name"] = prefix_list_name
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_time"] = updated_time
        return PrefixList(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="associationCount")
    def association_count(self) -> pulumi.Output[builtins.int]:
        """
        前缀列表关联的资源数量。
        """
        return pulumi.get(self, "association_count")

    @property
    @pulumi.getter(name="associationsRouteTables")
    def associations_route_tables(self) -> pulumi.Output[Sequence['outputs.PrefixListAssociationsRouteTable']]:
        return pulumi.get(self, "associations_route_tables")

    @property
    @pulumi.getter(name="associationsSecurityGroups")
    def associations_security_groups(self) -> pulumi.Output[Sequence['outputs.PrefixListAssociationsSecurityGroup']]:
        return pulumi.get(self, "associations_security_groups")

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表的创建时间。
        """
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> pulumi.Output[builtins.str]:
        """
        IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        """
        return pulumi.get(self, "ip_version")

    @property
    @pulumi.getter(name="maxEntries")
    def max_entries(self) -> pulumi.Output[builtins.int]:
        """
        最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        """
        return pulumi.get(self, "max_entries")

    @property
    @pulumi.getter(name="prefixListEntries")
    def prefix_list_entries(self) -> pulumi.Output[Sequence['outputs.PrefixListPrefixListEntry']]:
        return pulumi.get(self, "prefix_list_entries")

    @property
    @pulumi.getter(name="prefixListId")
    def prefix_list_id(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表的ID。
        """
        return pulumi.get(self, "prefix_list_id")

    @property
    @pulumi.getter(name="prefixListName")
    def prefix_list_name(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        """
        return pulumi.get(self, "prefix_list_name")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表所属项目的名称，不填默认加入default项目。
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence['outputs.PrefixListTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> pulumi.Output[builtins.str]:
        """
        前缀列表的最近一次修改时间。
        """
        return pulumi.get(self, "updated_time")

