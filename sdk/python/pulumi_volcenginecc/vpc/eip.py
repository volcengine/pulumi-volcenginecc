# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['EipArgs', 'Eip']

@pulumi.input_type
class EipArgs:
    def __init__(__self__, *,
                 billing_type: pulumi.Input[builtins.int],
                 bandwidth: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 direct_mode: Optional[pulumi.Input[builtins.bool]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 instance_type: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_pool_id: Optional[pulumi.Input[builtins.str]] = None,
                 isp: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 period: Optional[pulumi.Input[builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[builtins.int]] = None,
                 private_ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 release_with_instance: Optional[pulumi.Input[builtins.bool]] = None,
                 renew_period_times: Optional[pulumi.Input[builtins.int]] = None,
                 renew_type: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_instance_id: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_types: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 service_managed: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['EipTagArgs']]]] = None):
        """
        The set of arguments for constructing a Eip resource.
        :param pulumi.Input[builtins.int] billing_type: 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        :param pulumi.Input[builtins.int] bandwidth: 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        :param pulumi.Input[builtins.str] bandwidth_package_id: 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        :param pulumi.Input[builtins.str] description: 公网IP的描述信息。
        :param pulumi.Input[builtins.bool] direct_mode: 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        :param pulumi.Input[builtins.str] instance_id: 当前绑定的实例ID。
        :param pulumi.Input[builtins.str] instance_type: 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        :param pulumi.Input[builtins.str] ip_address: 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        :param pulumi.Input[builtins.str] ip_address_pool_id: IP地址池的ID。
        :param pulumi.Input[builtins.str] isp: 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        :param pulumi.Input[builtins.str] name: 公网IP的名称。
        :param pulumi.Input[builtins.int] period: 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        :param pulumi.Input[builtins.int] period_unit: 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        :param pulumi.Input[builtins.str] private_ip_address: 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        :param pulumi.Input[builtins.str] project_name: 公网IP所属项目的名称。
        :param pulumi.Input[builtins.bool] release_with_instance: 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        :param pulumi.Input[builtins.int] renew_period_times: 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        :param pulumi.Input[builtins.int] renew_type: 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        :param pulumi.Input[builtins.int] security_protection_instance_id: DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_protection_types: 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        :param pulumi.Input[builtins.bool] service_managed: 是否由服务管理
        """
        pulumi.set(__self__, "billing_type", billing_type)
        if bandwidth is not None:
            pulumi.set(__self__, "bandwidth", bandwidth)
        if bandwidth_package_id is not None:
            pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if direct_mode is not None:
            pulumi.set(__self__, "direct_mode", direct_mode)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if ip_address_pool_id is not None:
            pulumi.set(__self__, "ip_address_pool_id", ip_address_pool_id)
        if isp is not None:
            pulumi.set(__self__, "isp", isp)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if private_ip_address is not None:
            pulumi.set(__self__, "private_ip_address", private_ip_address)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if release_with_instance is not None:
            pulumi.set(__self__, "release_with_instance", release_with_instance)
        if renew_period_times is not None:
            pulumi.set(__self__, "renew_period_times", renew_period_times)
        if renew_type is not None:
            pulumi.set(__self__, "renew_type", renew_type)
        if security_protection_instance_id is not None:
            pulumi.set(__self__, "security_protection_instance_id", security_protection_instance_id)
        if security_protection_types is not None:
            pulumi.set(__self__, "security_protection_types", security_protection_types)
        if service_managed is not None:
            pulumi.set(__self__, "service_managed", service_managed)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="billingType")
    def billing_type(self) -> pulumi.Input[builtins.int]:
        """
        公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        """
        return pulumi.get(self, "billing_type")

    @billing_type.setter
    def billing_type(self, value: pulumi.Input[builtins.int]):
        pulumi.set(self, "billing_type", value)

    @property
    @pulumi.getter
    def bandwidth(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        """
        return pulumi.get(self, "bandwidth")

    @bandwidth.setter
    def bandwidth(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "bandwidth", value)

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        """
        return pulumi.get(self, "bandwidth_package_id")

    @bandwidth_package_id.setter
    def bandwidth_package_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "bandwidth_package_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的描述信息。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="directMode")
    def direct_mode(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        """
        return pulumi.get(self, "direct_mode")

    @direct_mode.setter
    def direct_mode(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "direct_mode", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        当前绑定的实例ID。
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "instance_type", value)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @property
    @pulumi.getter(name="ipAddressPoolId")
    def ip_address_pool_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IP地址池的ID。
        """
        return pulumi.get(self, "ip_address_pool_id")

    @ip_address_pool_id.setter
    def ip_address_pool_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_address_pool_id", value)

    @property
    @pulumi.getter
    def isp(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        """
        return pulumi.get(self, "isp")

    @isp.setter
    def isp(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "isp", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的名称。
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "period_unit", value)

    @property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        """
        return pulumi.get(self, "private_ip_address")

    @private_ip_address.setter
    def private_ip_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "private_ip_address", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="releaseWithInstance")
    def release_with_instance(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        """
        return pulumi.get(self, "release_with_instance")

    @release_with_instance.setter
    def release_with_instance(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "release_with_instance", value)

    @property
    @pulumi.getter(name="renewPeriodTimes")
    def renew_period_times(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        """
        return pulumi.get(self, "renew_period_times")

    @renew_period_times.setter
    def renew_period_times(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "renew_period_times", value)

    @property
    @pulumi.getter(name="renewType")
    def renew_type(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        """
        return pulumi.get(self, "renew_type")

    @renew_type.setter
    def renew_type(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "renew_type", value)

    @property
    @pulumi.getter(name="securityProtectionInstanceId")
    def security_protection_instance_id(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        """
        return pulumi.get(self, "security_protection_instance_id")

    @security_protection_instance_id.setter
    def security_protection_instance_id(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "security_protection_instance_id", value)

    @property
    @pulumi.getter(name="securityProtectionTypes")
    def security_protection_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        """
        return pulumi.get(self, "security_protection_types")

    @security_protection_types.setter
    def security_protection_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "security_protection_types", value)

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否由服务管理
        """
        return pulumi.get(self, "service_managed")

    @service_managed.setter
    def service_managed(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "service_managed", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EipTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EipTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _EipState:
    def __init__(__self__, *,
                 allocation_id: Optional[pulumi.Input[builtins.str]] = None,
                 bandwidth: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 billing_type: Optional[pulumi.Input[builtins.int]] = None,
                 business_status: Optional[pulumi.Input[builtins.str]] = None,
                 created_time: Optional[pulumi.Input[builtins.str]] = None,
                 deleted_time: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 direct_mode: Optional[pulumi.Input[builtins.bool]] = None,
                 eip_address: Optional[pulumi.Input[builtins.str]] = None,
                 expired_time: Optional[pulumi.Input[builtins.str]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 instance_type: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_pool_id: Optional[pulumi.Input[builtins.str]] = None,
                 is_blocked: Optional[pulumi.Input[builtins.bool]] = None,
                 isp: Optional[pulumi.Input[builtins.str]] = None,
                 lock_reason: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 overdue_time: Optional[pulumi.Input[builtins.str]] = None,
                 period: Optional[pulumi.Input[builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[builtins.int]] = None,
                 private_ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 release_with_instance: Optional[pulumi.Input[builtins.bool]] = None,
                 renew_period_times: Optional[pulumi.Input[builtins.int]] = None,
                 renew_type: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_instance_id: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_types: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 service_managed: Optional[pulumi.Input[builtins.bool]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['EipTagArgs']]]] = None,
                 updated_time: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering Eip resources.
        :param pulumi.Input[builtins.str] allocation_id: 公网IP的ID。
        :param pulumi.Input[builtins.int] bandwidth: 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        :param pulumi.Input[builtins.str] bandwidth_package_id: 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        :param pulumi.Input[builtins.int] billing_type: 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        :param pulumi.Input[builtins.str] business_status: 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
        :param pulumi.Input[builtins.str] created_time: 公网IP的创建时间。
        :param pulumi.Input[builtins.str] deleted_time: 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
        :param pulumi.Input[builtins.str] description: 公网IP的描述信息。
        :param pulumi.Input[builtins.bool] direct_mode: 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        :param pulumi.Input[builtins.str] eip_address: 公网IP地址。
        :param pulumi.Input[builtins.str] expired_time: 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
        :param pulumi.Input[builtins.str] instance_id: 当前绑定的实例ID。
        :param pulumi.Input[builtins.str] instance_type: 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        :param pulumi.Input[builtins.str] ip_address: 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        :param pulumi.Input[builtins.str] ip_address_pool_id: IP地址池的ID。
        :param pulumi.Input[builtins.bool] is_blocked: 是否被封禁。true：是。false：否。
        :param pulumi.Input[builtins.str] isp: 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        :param pulumi.Input[builtins.str] lock_reason: 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
        :param pulumi.Input[builtins.str] name: 公网IP的名称。
        :param pulumi.Input[builtins.str] overdue_time: 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
        :param pulumi.Input[builtins.int] period: 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        :param pulumi.Input[builtins.int] period_unit: 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        :param pulumi.Input[builtins.str] private_ip_address: 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        :param pulumi.Input[builtins.str] project_name: 公网IP所属项目的名称。
        :param pulumi.Input[builtins.bool] release_with_instance: 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        :param pulumi.Input[builtins.int] renew_period_times: 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        :param pulumi.Input[builtins.int] renew_type: 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        :param pulumi.Input[builtins.int] security_protection_instance_id: DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_protection_types: 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        :param pulumi.Input[builtins.bool] service_managed: 是否由服务管理
        :param pulumi.Input[builtins.str] status: 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
        :param pulumi.Input[builtins.str] updated_time: 更新公网IP的时间。
        """
        if allocation_id is not None:
            pulumi.set(__self__, "allocation_id", allocation_id)
        if bandwidth is not None:
            pulumi.set(__self__, "bandwidth", bandwidth)
        if bandwidth_package_id is not None:
            pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        if billing_type is not None:
            pulumi.set(__self__, "billing_type", billing_type)
        if business_status is not None:
            pulumi.set(__self__, "business_status", business_status)
        if created_time is not None:
            pulumi.set(__self__, "created_time", created_time)
        if deleted_time is not None:
            pulumi.set(__self__, "deleted_time", deleted_time)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if direct_mode is not None:
            pulumi.set(__self__, "direct_mode", direct_mode)
        if eip_address is not None:
            pulumi.set(__self__, "eip_address", eip_address)
        if expired_time is not None:
            pulumi.set(__self__, "expired_time", expired_time)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if ip_address is not None:
            pulumi.set(__self__, "ip_address", ip_address)
        if ip_address_pool_id is not None:
            pulumi.set(__self__, "ip_address_pool_id", ip_address_pool_id)
        if is_blocked is not None:
            pulumi.set(__self__, "is_blocked", is_blocked)
        if isp is not None:
            pulumi.set(__self__, "isp", isp)
        if lock_reason is not None:
            pulumi.set(__self__, "lock_reason", lock_reason)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if overdue_time is not None:
            pulumi.set(__self__, "overdue_time", overdue_time)
        if period is not None:
            pulumi.set(__self__, "period", period)
        if period_unit is not None:
            pulumi.set(__self__, "period_unit", period_unit)
        if private_ip_address is not None:
            pulumi.set(__self__, "private_ip_address", private_ip_address)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if release_with_instance is not None:
            pulumi.set(__self__, "release_with_instance", release_with_instance)
        if renew_period_times is not None:
            pulumi.set(__self__, "renew_period_times", renew_period_times)
        if renew_type is not None:
            pulumi.set(__self__, "renew_type", renew_type)
        if security_protection_instance_id is not None:
            pulumi.set(__self__, "security_protection_instance_id", security_protection_instance_id)
        if security_protection_types is not None:
            pulumi.set(__self__, "security_protection_types", security_protection_types)
        if service_managed is not None:
            pulumi.set(__self__, "service_managed", service_managed)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_time is not None:
            pulumi.set(__self__, "updated_time", updated_time)

    @property
    @pulumi.getter(name="allocationId")
    def allocation_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的ID。
        """
        return pulumi.get(self, "allocation_id")

    @allocation_id.setter
    def allocation_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "allocation_id", value)

    @property
    @pulumi.getter
    def bandwidth(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        """
        return pulumi.get(self, "bandwidth")

    @bandwidth.setter
    def bandwidth(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "bandwidth", value)

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        """
        return pulumi.get(self, "bandwidth_package_id")

    @bandwidth_package_id.setter
    def bandwidth_package_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "bandwidth_package_id", value)

    @property
    @pulumi.getter(name="billingType")
    def billing_type(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        """
        return pulumi.get(self, "billing_type")

    @billing_type.setter
    def billing_type(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "billing_type", value)

    @property
    @pulumi.getter(name="businessStatus")
    def business_status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
        """
        return pulumi.get(self, "business_status")

    @business_status.setter
    def business_status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "business_status", value)

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的创建时间。
        """
        return pulumi.get(self, "created_time")

    @created_time.setter
    def created_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "created_time", value)

    @property
    @pulumi.getter(name="deletedTime")
    def deleted_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
        """
        return pulumi.get(self, "deleted_time")

    @deleted_time.setter
    def deleted_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "deleted_time", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的描述信息。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="directMode")
    def direct_mode(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        """
        return pulumi.get(self, "direct_mode")

    @direct_mode.setter
    def direct_mode(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "direct_mode", value)

    @property
    @pulumi.getter(name="eipAddress")
    def eip_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP地址。
        """
        return pulumi.get(self, "eip_address")

    @eip_address.setter
    def eip_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "eip_address", value)

    @property
    @pulumi.getter(name="expiredTime")
    def expired_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
        """
        return pulumi.get(self, "expired_time")

    @expired_time.setter
    def expired_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "expired_time", value)

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        当前绑定的实例ID。
        """
        return pulumi.get(self, "instance_id")

    @instance_id.setter
    def instance_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "instance_id", value)

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        """
        return pulumi.get(self, "instance_type")

    @instance_type.setter
    def instance_type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "instance_type", value)

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        """
        return pulumi.get(self, "ip_address")

    @ip_address.setter
    def ip_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_address", value)

    @property
    @pulumi.getter(name="ipAddressPoolId")
    def ip_address_pool_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        IP地址池的ID。
        """
        return pulumi.get(self, "ip_address_pool_id")

    @ip_address_pool_id.setter
    def ip_address_pool_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "ip_address_pool_id", value)

    @property
    @pulumi.getter(name="isBlocked")
    def is_blocked(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否被封禁。true：是。false：否。
        """
        return pulumi.get(self, "is_blocked")

    @is_blocked.setter
    def is_blocked(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "is_blocked", value)

    @property
    @pulumi.getter
    def isp(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        """
        return pulumi.get(self, "isp")

    @isp.setter
    def isp(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "isp", value)

    @property
    @pulumi.getter(name="lockReason")
    def lock_reason(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
        """
        return pulumi.get(self, "lock_reason")

    @lock_reason.setter
    def lock_reason(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "lock_reason", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的名称。
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
        """
        return pulumi.get(self, "overdue_time")

    @overdue_time.setter
    def overdue_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "overdue_time", value)

    @property
    @pulumi.getter
    def period(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        """
        return pulumi.get(self, "period")

    @period.setter
    def period(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "period", value)

    @property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        """
        return pulumi.get(self, "period_unit")

    @period_unit.setter
    def period_unit(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "period_unit", value)

    @property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        """
        return pulumi.get(self, "private_ip_address")

    @private_ip_address.setter
    def private_ip_address(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "private_ip_address", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="releaseWithInstance")
    def release_with_instance(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        """
        return pulumi.get(self, "release_with_instance")

    @release_with_instance.setter
    def release_with_instance(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "release_with_instance", value)

    @property
    @pulumi.getter(name="renewPeriodTimes")
    def renew_period_times(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        """
        return pulumi.get(self, "renew_period_times")

    @renew_period_times.setter
    def renew_period_times(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "renew_period_times", value)

    @property
    @pulumi.getter(name="renewType")
    def renew_type(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        """
        return pulumi.get(self, "renew_type")

    @renew_type.setter
    def renew_type(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "renew_type", value)

    @property
    @pulumi.getter(name="securityProtectionInstanceId")
    def security_protection_instance_id(self) -> Optional[pulumi.Input[builtins.int]]:
        """
        DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        """
        return pulumi.get(self, "security_protection_instance_id")

    @security_protection_instance_id.setter
    def security_protection_instance_id(self, value: Optional[pulumi.Input[builtins.int]]):
        pulumi.set(self, "security_protection_instance_id", value)

    @property
    @pulumi.getter(name="securityProtectionTypes")
    def security_protection_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]:
        """
        防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        """
        return pulumi.get(self, "security_protection_types")

    @security_protection_types.setter
    def security_protection_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]]):
        pulumi.set(self, "security_protection_types", value)

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        是否由服务管理
        """
        return pulumi.get(self, "service_managed")

    @service_managed.setter
    def service_managed(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "service_managed", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['EipTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['EipTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        更新公网IP的时间。
        """
        return pulumi.get(self, "updated_time")

    @updated_time.setter
    def updated_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "updated_time", value)


@pulumi.type_token("volcenginecc:vpc/eip:Eip")
class Eip(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bandwidth: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 billing_type: Optional[pulumi.Input[builtins.int]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 direct_mode: Optional[pulumi.Input[builtins.bool]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 instance_type: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_pool_id: Optional[pulumi.Input[builtins.str]] = None,
                 isp: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 period: Optional[pulumi.Input[builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[builtins.int]] = None,
                 private_ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 release_with_instance: Optional[pulumi.Input[builtins.bool]] = None,
                 renew_period_times: Optional[pulumi.Input[builtins.int]] = None,
                 renew_type: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_instance_id: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_types: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 service_managed: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EipTagArgs', 'EipTagArgsDict']]]]] = None,
                 __props__=None):
        """
        公网IP（Elastic IP Address，EIP）及其公网出口带宽，是火山引擎为云资源提供的可独立购买和持有的IP连通服务。公网IP支持直接绑定云服务器（包括ECS云服务器、EBM裸金属服务器、GPU云服务器），还支持绑定公网NAT网关、负载均衡、辅助网卡等组件，为云服务器提供公网互通能力。

        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcenginecc as volcenginecc

        eip_demo = volcenginecc.vpc.Eip("EipDemo",
            name="EipDemo",
            description="EipDemo description",
            isp="BGP",
            billing_type=2,
            bandwidth=3,
            period=5,
            project_name="default",
            bandwidth_package_id="bwp-ij5gz1lf66m874o8cth*****",
            tags=[{
                "key": "env",
                "value": "test",
            }],
            instance_id="i-ye48ymyy9s5i3z4*****",
            instance_type="EcsInstance",
            direct_mode=True)
        ```

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/eip:Eip example "allocation_id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.int] bandwidth: 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        :param pulumi.Input[builtins.str] bandwidth_package_id: 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        :param pulumi.Input[builtins.int] billing_type: 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        :param pulumi.Input[builtins.str] description: 公网IP的描述信息。
        :param pulumi.Input[builtins.bool] direct_mode: 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        :param pulumi.Input[builtins.str] instance_id: 当前绑定的实例ID。
        :param pulumi.Input[builtins.str] instance_type: 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        :param pulumi.Input[builtins.str] ip_address: 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        :param pulumi.Input[builtins.str] ip_address_pool_id: IP地址池的ID。
        :param pulumi.Input[builtins.str] isp: 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        :param pulumi.Input[builtins.str] name: 公网IP的名称。
        :param pulumi.Input[builtins.int] period: 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        :param pulumi.Input[builtins.int] period_unit: 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        :param pulumi.Input[builtins.str] private_ip_address: 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        :param pulumi.Input[builtins.str] project_name: 公网IP所属项目的名称。
        :param pulumi.Input[builtins.bool] release_with_instance: 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        :param pulumi.Input[builtins.int] renew_period_times: 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        :param pulumi.Input[builtins.int] renew_type: 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        :param pulumi.Input[builtins.int] security_protection_instance_id: DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_protection_types: 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        :param pulumi.Input[builtins.bool] service_managed: 是否由服务管理
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: EipArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        公网IP（Elastic IP Address，EIP）及其公网出口带宽，是火山引擎为云资源提供的可独立购买和持有的IP连通服务。公网IP支持直接绑定云服务器（包括ECS云服务器、EBM裸金属服务器、GPU云服务器），还支持绑定公网NAT网关、负载均衡、辅助网卡等组件，为云服务器提供公网互通能力。

        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcenginecc as volcenginecc

        eip_demo = volcenginecc.vpc.Eip("EipDemo",
            name="EipDemo",
            description="EipDemo description",
            isp="BGP",
            billing_type=2,
            bandwidth=3,
            period=5,
            project_name="default",
            bandwidth_package_id="bwp-ij5gz1lf66m874o8cth*****",
            tags=[{
                "key": "env",
                "value": "test",
            }],
            instance_id="i-ye48ymyy9s5i3z4*****",
            instance_type="EcsInstance",
            direct_mode=True)
        ```

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/eip:Eip example "allocation_id"
        ```

        :param str resource_name: The name of the resource.
        :param EipArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(EipArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bandwidth: Optional[pulumi.Input[builtins.int]] = None,
                 bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
                 billing_type: Optional[pulumi.Input[builtins.int]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 direct_mode: Optional[pulumi.Input[builtins.bool]] = None,
                 instance_id: Optional[pulumi.Input[builtins.str]] = None,
                 instance_type: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 ip_address_pool_id: Optional[pulumi.Input[builtins.str]] = None,
                 isp: Optional[pulumi.Input[builtins.str]] = None,
                 name: Optional[pulumi.Input[builtins.str]] = None,
                 period: Optional[pulumi.Input[builtins.int]] = None,
                 period_unit: Optional[pulumi.Input[builtins.int]] = None,
                 private_ip_address: Optional[pulumi.Input[builtins.str]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 release_with_instance: Optional[pulumi.Input[builtins.bool]] = None,
                 renew_period_times: Optional[pulumi.Input[builtins.int]] = None,
                 renew_type: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_instance_id: Optional[pulumi.Input[builtins.int]] = None,
                 security_protection_types: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
                 service_managed: Optional[pulumi.Input[builtins.bool]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EipTagArgs', 'EipTagArgsDict']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = EipArgs.__new__(EipArgs)

            __props__.__dict__["bandwidth"] = bandwidth
            __props__.__dict__["bandwidth_package_id"] = bandwidth_package_id
            if billing_type is None and not opts.urn:
                raise TypeError("Missing required property 'billing_type'")
            __props__.__dict__["billing_type"] = billing_type
            __props__.__dict__["description"] = description
            __props__.__dict__["direct_mode"] = direct_mode
            __props__.__dict__["instance_id"] = instance_id
            __props__.__dict__["instance_type"] = instance_type
            __props__.__dict__["ip_address"] = ip_address
            __props__.__dict__["ip_address_pool_id"] = ip_address_pool_id
            __props__.__dict__["isp"] = isp
            __props__.__dict__["name"] = name
            __props__.__dict__["period"] = period
            __props__.__dict__["period_unit"] = period_unit
            __props__.__dict__["private_ip_address"] = private_ip_address
            __props__.__dict__["project_name"] = project_name
            __props__.__dict__["release_with_instance"] = release_with_instance
            __props__.__dict__["renew_period_times"] = renew_period_times
            __props__.__dict__["renew_type"] = renew_type
            __props__.__dict__["security_protection_instance_id"] = security_protection_instance_id
            __props__.__dict__["security_protection_types"] = security_protection_types
            __props__.__dict__["service_managed"] = service_managed
            __props__.__dict__["tags"] = tags
            __props__.__dict__["allocation_id"] = None
            __props__.__dict__["business_status"] = None
            __props__.__dict__["created_time"] = None
            __props__.__dict__["deleted_time"] = None
            __props__.__dict__["eip_address"] = None
            __props__.__dict__["expired_time"] = None
            __props__.__dict__["is_blocked"] = None
            __props__.__dict__["lock_reason"] = None
            __props__.__dict__["overdue_time"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["updated_time"] = None
        super(Eip, __self__).__init__(
            'volcenginecc:vpc/eip:Eip',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allocation_id: Optional[pulumi.Input[builtins.str]] = None,
            bandwidth: Optional[pulumi.Input[builtins.int]] = None,
            bandwidth_package_id: Optional[pulumi.Input[builtins.str]] = None,
            billing_type: Optional[pulumi.Input[builtins.int]] = None,
            business_status: Optional[pulumi.Input[builtins.str]] = None,
            created_time: Optional[pulumi.Input[builtins.str]] = None,
            deleted_time: Optional[pulumi.Input[builtins.str]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            direct_mode: Optional[pulumi.Input[builtins.bool]] = None,
            eip_address: Optional[pulumi.Input[builtins.str]] = None,
            expired_time: Optional[pulumi.Input[builtins.str]] = None,
            instance_id: Optional[pulumi.Input[builtins.str]] = None,
            instance_type: Optional[pulumi.Input[builtins.str]] = None,
            ip_address: Optional[pulumi.Input[builtins.str]] = None,
            ip_address_pool_id: Optional[pulumi.Input[builtins.str]] = None,
            is_blocked: Optional[pulumi.Input[builtins.bool]] = None,
            isp: Optional[pulumi.Input[builtins.str]] = None,
            lock_reason: Optional[pulumi.Input[builtins.str]] = None,
            name: Optional[pulumi.Input[builtins.str]] = None,
            overdue_time: Optional[pulumi.Input[builtins.str]] = None,
            period: Optional[pulumi.Input[builtins.int]] = None,
            period_unit: Optional[pulumi.Input[builtins.int]] = None,
            private_ip_address: Optional[pulumi.Input[builtins.str]] = None,
            project_name: Optional[pulumi.Input[builtins.str]] = None,
            release_with_instance: Optional[pulumi.Input[builtins.bool]] = None,
            renew_period_times: Optional[pulumi.Input[builtins.int]] = None,
            renew_type: Optional[pulumi.Input[builtins.int]] = None,
            security_protection_instance_id: Optional[pulumi.Input[builtins.int]] = None,
            security_protection_types: Optional[pulumi.Input[Sequence[pulumi.Input[builtins.str]]]] = None,
            service_managed: Optional[pulumi.Input[builtins.bool]] = None,
            status: Optional[pulumi.Input[builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['EipTagArgs', 'EipTagArgsDict']]]]] = None,
            updated_time: Optional[pulumi.Input[builtins.str]] = None) -> 'Eip':
        """
        Get an existing Eip resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] allocation_id: 公网IP的ID。
        :param pulumi.Input[builtins.int] bandwidth: 公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        :param pulumi.Input[builtins.str] bandwidth_package_id: 共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        :param pulumi.Input[builtins.int] billing_type: 公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        :param pulumi.Input[builtins.str] business_status: 公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
        :param pulumi.Input[builtins.str] created_time: 公网IP的创建时间。
        :param pulumi.Input[builtins.str] deleted_time: 预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
        :param pulumi.Input[builtins.str] description: 公网IP的描述信息。
        :param pulumi.Input[builtins.bool] direct_mode: 绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        :param pulumi.Input[builtins.str] eip_address: 公网IP地址。
        :param pulumi.Input[builtins.str] expired_time: 公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
        :param pulumi.Input[builtins.str] instance_id: 当前绑定的实例ID。
        :param pulumi.Input[builtins.str] instance_type: 当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        :param pulumi.Input[builtins.str] ip_address: 申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        :param pulumi.Input[builtins.str] ip_address_pool_id: IP地址池的ID。
        :param pulumi.Input[builtins.bool] is_blocked: 是否被封禁。true：是。false：否。
        :param pulumi.Input[builtins.str] isp: 线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        :param pulumi.Input[builtins.str] lock_reason: 公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
        :param pulumi.Input[builtins.str] name: 公网IP的名称。
        :param pulumi.Input[builtins.str] overdue_time: 资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
        :param pulumi.Input[builtins.int] period: 购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        :param pulumi.Input[builtins.int] period_unit: 购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        :param pulumi.Input[builtins.str] private_ip_address: 要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        :param pulumi.Input[builtins.str] project_name: 公网IP所属项目的名称。
        :param pulumi.Input[builtins.bool] release_with_instance: 是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        :param pulumi.Input[builtins.int] renew_period_times: 自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        :param pulumi.Input[builtins.int] renew_type: 包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        :param pulumi.Input[builtins.int] security_protection_instance_id: DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        :param pulumi.Input[Sequence[pulumi.Input[builtins.str]]] security_protection_types: 防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        :param pulumi.Input[builtins.bool] service_managed: 是否由服务管理
        :param pulumi.Input[builtins.str] status: 公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
        :param pulumi.Input[builtins.str] updated_time: 更新公网IP的时间。
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _EipState.__new__(_EipState)

        __props__.__dict__["allocation_id"] = allocation_id
        __props__.__dict__["bandwidth"] = bandwidth
        __props__.__dict__["bandwidth_package_id"] = bandwidth_package_id
        __props__.__dict__["billing_type"] = billing_type
        __props__.__dict__["business_status"] = business_status
        __props__.__dict__["created_time"] = created_time
        __props__.__dict__["deleted_time"] = deleted_time
        __props__.__dict__["description"] = description
        __props__.__dict__["direct_mode"] = direct_mode
        __props__.__dict__["eip_address"] = eip_address
        __props__.__dict__["expired_time"] = expired_time
        __props__.__dict__["instance_id"] = instance_id
        __props__.__dict__["instance_type"] = instance_type
        __props__.__dict__["ip_address"] = ip_address
        __props__.__dict__["ip_address_pool_id"] = ip_address_pool_id
        __props__.__dict__["is_blocked"] = is_blocked
        __props__.__dict__["isp"] = isp
        __props__.__dict__["lock_reason"] = lock_reason
        __props__.__dict__["name"] = name
        __props__.__dict__["overdue_time"] = overdue_time
        __props__.__dict__["period"] = period
        __props__.__dict__["period_unit"] = period_unit
        __props__.__dict__["private_ip_address"] = private_ip_address
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["release_with_instance"] = release_with_instance
        __props__.__dict__["renew_period_times"] = renew_period_times
        __props__.__dict__["renew_type"] = renew_type
        __props__.__dict__["security_protection_instance_id"] = security_protection_instance_id
        __props__.__dict__["security_protection_types"] = security_protection_types
        __props__.__dict__["service_managed"] = service_managed
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_time"] = updated_time
        return Eip(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="allocationId")
    def allocation_id(self) -> pulumi.Output[builtins.str]:
        """
        公网IP的ID。
        """
        return pulumi.get(self, "allocation_id")

    @property
    @pulumi.getter
    def bandwidth(self) -> pulumi.Output[builtins.int]:
        """
        公网IP的带宽上限，默认为“1”，单位：Mbps,BillingType传入1：取值范围1 ~ 500。BillingType传入2：取值范围1 ~ 500。BillingType传入3：取值范围1 ~ 200。
        """
        return pulumi.get(self, "bandwidth")

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> pulumi.Output[builtins.str]:
        """
        共享带宽包的ID，表示将公网IP加入到共享带宽包。公网IP加入到共享带宽包必须同时满足如下条件：二者的安全防护类型相同。二者的地域相同。公网IP的计费方式必须是按量计费。共享带宽包为IPv4类型。
        """
        return pulumi.get(self, "bandwidth_package_id")

    @property
    @pulumi.getter(name="billingType")
    def billing_type(self) -> pulumi.Output[builtins.int]:
        """
        公网IP的计费方式。取值如下：1：包年包月。2：按量计费-按带宽上限计费。3：按量计费-按实际流量计费。
        """
        return pulumi.get(self, "billing_type")

    @property
    @pulumi.getter(name="businessStatus")
    def business_status(self) -> pulumi.Output[builtins.str]:
        """
        公网IP是否被锁定。Normal: 正常。FinancialLocked: 被锁定。
        """
        return pulumi.get(self, "business_status")

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> pulumi.Output[builtins.str]:
        """
        公网IP的创建时间。
        """
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter(name="deletedTime")
    def deleted_time(self) -> pulumi.Output[builtins.str]:
        """
        预期资源强制回收时间。包年包月公网IP，此参数有返回值。按量计费公网IP，仅欠费冻结时，此参数有返回值。
        """
        return pulumi.get(self, "deleted_time")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        公网IP的描述信息。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="directMode")
    def direct_mode(self) -> pulumi.Output[builtins.bool]:
        """
        绑定公网IP时是否启用直通模式。请严格按照以下枚举值的大小写输入，不要传入其他取值。false（默认）：不使用直通模式。true：使用直通模式。
        """
        return pulumi.get(self, "direct_mode")

    @property
    @pulumi.getter(name="eipAddress")
    def eip_address(self) -> pulumi.Output[builtins.str]:
        """
        公网IP地址。
        """
        return pulumi.get(self, "eip_address")

    @property
    @pulumi.getter(name="expiredTime")
    def expired_time(self) -> pulumi.Output[builtins.str]:
        """
        公网IP的到期时间。包年包月，返回值为到期时间。按量计费，返回值为空。
        """
        return pulumi.get(self, "expired_time")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> pulumi.Output[builtins.str]:
        """
        当前绑定的实例ID。
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> pulumi.Output[builtins.str]:
        """
        当前绑定的实例类型。Nat：公网NAT网关。NetworkInterface: 弹性网卡。ClbInstance: 负载均衡。EcsInstance：云服务器。HaVip：高可用虚拟IP。
        """
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> pulumi.Output[builtins.str]:
        """
        申请申请指定的公网IP地址。仅支持填写使用后释放的IP地址，不填则表示自动分配。指定的公网IP地址
        """
        return pulumi.get(self, "ip_address")

    @property
    @pulumi.getter(name="ipAddressPoolId")
    def ip_address_pool_id(self) -> pulumi.Output[builtins.str]:
        """
        IP地址池的ID。
        """
        return pulumi.get(self, "ip_address_pool_id")

    @property
    @pulumi.getter(name="isBlocked")
    def is_blocked(self) -> pulumi.Output[builtins.bool]:
        """
        是否被封禁。true：是。false：否。
        """
        return pulumi.get(self, "is_blocked")

    @property
    @pulumi.getter
    def isp(self) -> pulumi.Output[builtins.str]:
        """
        线路类型。BGP：BGP（多线）。ChinaMobile：中国移动静态单线。ChinaTelecom：中国电信静态单线。ChinaUnicom：中国联通静态单线。SingleLine*BGP：BGP单线。Fusion*BGP：融合BGP。ChinaMobile*Value：中国移动惠选型静态单线。ChinaUnicom*Value：中国联通惠选型静态单线。ChinaTelecom_Value：中国电信惠选型静态单线。
        """
        return pulumi.get(self, "isp")

    @property
    @pulumi.getter(name="lockReason")
    def lock_reason(self) -> pulumi.Output[builtins.str]:
        """
        公网IP被锁定的原因。financial: 因欠费被锁定。unlock: 欠费关停后充值恢复过程中。空值 : 没有被锁定。
        """
        return pulumi.get(self, "lock_reason")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[builtins.str]:
        """
        公网IP的名称。
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="overdueTime")
    def overdue_time(self) -> pulumi.Output[builtins.str]:
        """
        资源冻结时间。仅当资源因为欠费冻结，此参数才会有返回值。
        """
        return pulumi.get(self, "overdue_time")

    @property
    @pulumi.getter
    def period(self) -> pulumi.Output[builtins.int]:
        """
        购买包年包月公网IP的时长，默认为“1”。当PeriodUnit传入1，Period取值范围：1~9、12、24、36、48、60。当PeriodUnit传入2，Period取值范围：1～5。
        """
        return pulumi.get(self, "period")

    @property
    @pulumi.getter(name="periodUnit")
    def period_unit(self) -> pulumi.Output[builtins.int]:
        """
        购买包年包月公网IP时长的单位。取值如下：1（默认值）：月。2 ：年。
        """
        return pulumi.get(self, "period_unit")

    @property
    @pulumi.getter(name="privateIpAddress")
    def private_ip_address(self) -> pulumi.Output[builtins.str]:
        """
        要绑定公网IP的实例的私网IP地址。只支持传入云服务ECS主网卡的私网IP地址和辅助网卡IP地址。若不填写：InstanceType传入EcsInstance，则绑定云服务器ECS主网卡的主私网IP地址。InstanceType传入NetworkInterface，则绑定辅助网卡主私网IP地址。
        """
        return pulumi.get(self, "private_ip_address")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[builtins.str]:
        """
        公网IP所属项目的名称。
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="releaseWithInstance")
    def release_with_instance(self) -> pulumi.Output[builtins.bool]:
        """
        是否随云服务器实例删除。仅按量计费公网IP有效。开启后，当云服务器实例被系统自动回收（退订24小时后、到期回收、欠费回收）或被调用DeleteInstances接口时，公网IP随其一同释放。true：是。false：否。
        """
        return pulumi.get(self, "release_with_instance")

    @property
    @pulumi.getter(name="renewPeriodTimes")
    def renew_period_times(self) -> pulumi.Output[builtins.int]:
        """
        自动续费的时长，取值范围1、2、3、6、12，单位：月。若RenewType传入2，则必须传入RenewPeriodTimes
        """
        return pulumi.get(self, "renew_period_times")

    @property
    @pulumi.getter(name="renewType")
    def renew_type(self) -> pulumi.Output[builtins.int]:
        """
        包年包月公网IP续费的方式。取值如下：1（默认值）：手动续费。2：自动续费。3：到期不续费。
        """
        return pulumi.get(self, "renew_type")

    @property
    @pulumi.getter(name="securityProtectionInstanceId")
    def security_protection_instance_id(self) -> pulumi.Output[builtins.int]:
        """
        DDoS原生防护（企业版）ID。您可以调用 DescInstanceList 接口，查询DDoS原生防护（企业版）的ID。当SecurityProtectionTypes传入AntiDDoS_Enhanced时，此参数必须传入。
        """
        return pulumi.get(self, "security_protection_instance_id")

    @property
    @pulumi.getter(name="securityProtectionTypes")
    def security_protection_types(self) -> pulumi.Output[Sequence[builtins.str]]:
        """
        防护类型。AntiDDoS_Enhanced：增强防护类型的公网IP，可以加入到DDoS原生防护（企业版）实例。空值：默认防护类型的公网IP。
        """
        return pulumi.get(self, "security_protection_types")

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> pulumi.Output[builtins.bool]:
        """
        是否由服务管理
        """
        return pulumi.get(self, "service_managed")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[builtins.str]:
        """
        公网IP的状态。Attaching：绑定中。Detaching：解绑中。Attached：已绑定。Available：可用。Deleting：删除中。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence['outputs.EipTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedTime")
    def updated_time(self) -> pulumi.Output[builtins.str]:
        """
        更新公网IP的时间。
        """
        return pulumi.get(self, "updated_time")

