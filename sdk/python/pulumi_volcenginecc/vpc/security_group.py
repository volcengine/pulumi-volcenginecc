# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SecurityGroupArgs', 'SecurityGroup']

@pulumi.input_type
class SecurityGroupArgs:
    def __init__(__self__, *,
                 vpc_id: pulumi.Input[builtins.str],
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 egress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupEgressPermissionArgs']]]] = None,
                 ingress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupIngressPermissionArgs']]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]] = None):
        """
        The set of arguments for constructing a SecurityGroup resource.
        :param pulumi.Input[builtins.str] vpc_id: 安全组所属的VPC ID。
        :param pulumi.Input[builtins.str] description: 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        :param pulumi.Input[builtins.str] project_name: 安全组所属项目名称。不填默认项目为default。
        :param pulumi.Input[builtins.str] security_group_name: 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        """
        pulumi.set(__self__, "vpc_id", vpc_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if egress_permissions is not None:
            pulumi.set(__self__, "egress_permissions", egress_permissions)
        if ingress_permissions is not None:
            pulumi.set(__self__, "ingress_permissions", ingress_permissions)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if security_group_name is not None:
            pulumi.set(__self__, "security_group_name", security_group_name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Input[builtins.str]:
        """
        安全组所属的VPC ID。
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: pulumi.Input[builtins.str]):
        pulumi.set(self, "vpc_id", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="egressPermissions")
    def egress_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupEgressPermissionArgs']]]]:
        return pulumi.get(self, "egress_permissions")

    @egress_permissions.setter
    def egress_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupEgressPermissionArgs']]]]):
        pulumi.set(self, "egress_permissions", value)

    @property
    @pulumi.getter(name="ingressPermissions")
    def ingress_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupIngressPermissionArgs']]]]:
        return pulumi.get(self, "ingress_permissions")

    @ingress_permissions.setter
    def ingress_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupIngressPermissionArgs']]]]):
        pulumi.set(self, "ingress_permissions", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组所属项目名称。不填默认项目为default。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="securityGroupName")
    def security_group_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        """
        return pulumi.get(self, "security_group_name")

    @security_group_name.setter
    def security_group_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "security_group_name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _SecurityGroupState:
    def __init__(__self__, *,
                 creation_time: Optional[pulumi.Input[builtins.str]] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 egress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupEgressPermissionArgs']]]] = None,
                 ingress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupIngressPermissionArgs']]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_id: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 service_managed: Optional[pulumi.Input[builtins.bool]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]] = None,
                 type: Optional[pulumi.Input[builtins.str]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering SecurityGroup resources.
        :param pulumi.Input[builtins.str] creation_time: 安全组创建时间。
        :param pulumi.Input[builtins.str] description: 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        :param pulumi.Input[builtins.str] project_name: 安全组所属项目名称。不填默认项目为default。
        :param pulumi.Input[builtins.str] security_group_id: 安全组ID。
        :param pulumi.Input[builtins.str] security_group_name: 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        :param pulumi.Input[builtins.bool] service_managed: 安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
        :param pulumi.Input[builtins.str] status: 安全组状态。Available为可用，Creating为创建中。
        :param pulumi.Input[builtins.str] type: 安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
        :param pulumi.Input[builtins.str] vpc_id: 安全组所属的VPC ID。
        """
        if creation_time is not None:
            pulumi.set(__self__, "creation_time", creation_time)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if egress_permissions is not None:
            pulumi.set(__self__, "egress_permissions", egress_permissions)
        if ingress_permissions is not None:
            pulumi.set(__self__, "ingress_permissions", ingress_permissions)
        if project_name is not None:
            pulumi.set(__self__, "project_name", project_name)
        if security_group_id is not None:
            pulumi.set(__self__, "security_group_id", security_group_id)
        if security_group_name is not None:
            pulumi.set(__self__, "security_group_name", security_group_name)
        if service_managed is not None:
            pulumi.set(__self__, "service_managed", service_managed)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组创建时间。
        """
        return pulumi.get(self, "creation_time")

    @creation_time.setter
    def creation_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "creation_time", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="egressPermissions")
    def egress_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupEgressPermissionArgs']]]]:
        return pulumi.get(self, "egress_permissions")

    @egress_permissions.setter
    def egress_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupEgressPermissionArgs']]]]):
        pulumi.set(self, "egress_permissions", value)

    @property
    @pulumi.getter(name="ingressPermissions")
    def ingress_permissions(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupIngressPermissionArgs']]]]:
        return pulumi.get(self, "ingress_permissions")

    @ingress_permissions.setter
    def ingress_permissions(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupIngressPermissionArgs']]]]):
        pulumi.set(self, "ingress_permissions", value)

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组所属项目名称。不填默认项目为default。
        """
        return pulumi.get(self, "project_name")

    @project_name.setter
    def project_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "project_name", value)

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组ID。
        """
        return pulumi.get(self, "security_group_id")

    @security_group_id.setter
    def security_group_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "security_group_id", value)

    @property
    @pulumi.getter(name="securityGroupName")
    def security_group_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        """
        return pulumi.get(self, "security_group_name")

    @security_group_name.setter
    def security_group_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "security_group_name", value)

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> Optional[pulumi.Input[builtins.bool]]:
        """
        安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
        """
        return pulumi.get(self, "service_managed")

    @service_managed.setter
    def service_managed(self, value: Optional[pulumi.Input[builtins.bool]]):
        pulumi.set(self, "service_managed", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组状态。Available为可用，Creating为创建中。
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]:
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['SecurityGroupTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        安全组所属的VPC ID。
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.type_token("volcenginecc:vpc/securityGroup:SecurityGroup")
class SecurityGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 egress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupEgressPermissionArgs', 'SecurityGroupEgressPermissionArgsDict']]]]] = None,
                 ingress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupIngressPermissionArgs', 'SecurityGroupIngressPermissionArgsDict']]]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupTagArgs', 'SecurityGroupTagArgsDict']]]]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        安全组是一个逻辑意义上的分组，为同一个私有网络内具有相同安全保护需求并相互信任的网卡提供访问策略。您可以通过配置安全组规则，控制安全组关联网卡的出入流量。

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/securityGroup:SecurityGroup example "security_group_id"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] description: 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        :param pulumi.Input[builtins.str] project_name: 安全组所属项目名称。不填默认项目为default。
        :param pulumi.Input[builtins.str] security_group_name: 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        :param pulumi.Input[builtins.str] vpc_id: 安全组所属的VPC ID。
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SecurityGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        安全组是一个逻辑意义上的分组，为同一个私有网络内具有相同安全保护需求并相互信任的网卡提供访问策略。您可以通过配置安全组规则，控制安全组关联网卡的出入流量。

        ## Import

        ```sh
        $ pulumi import volcenginecc:vpc/securityGroup:SecurityGroup example "security_group_id"
        ```

        :param str resource_name: The name of the resource.
        :param SecurityGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SecurityGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[builtins.str]] = None,
                 egress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupEgressPermissionArgs', 'SecurityGroupEgressPermissionArgsDict']]]]] = None,
                 ingress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupIngressPermissionArgs', 'SecurityGroupIngressPermissionArgsDict']]]]] = None,
                 project_name: Optional[pulumi.Input[builtins.str]] = None,
                 security_group_name: Optional[pulumi.Input[builtins.str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupTagArgs', 'SecurityGroupTagArgsDict']]]]] = None,
                 vpc_id: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SecurityGroupArgs.__new__(SecurityGroupArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["egress_permissions"] = egress_permissions
            __props__.__dict__["ingress_permissions"] = ingress_permissions
            __props__.__dict__["project_name"] = project_name
            __props__.__dict__["security_group_name"] = security_group_name
            __props__.__dict__["tags"] = tags
            if vpc_id is None and not opts.urn:
                raise TypeError("Missing required property 'vpc_id'")
            __props__.__dict__["vpc_id"] = vpc_id
            __props__.__dict__["creation_time"] = None
            __props__.__dict__["security_group_id"] = None
            __props__.__dict__["service_managed"] = None
            __props__.__dict__["status"] = None
            __props__.__dict__["type"] = None
        super(SecurityGroup, __self__).__init__(
            'volcenginecc:vpc/securityGroup:SecurityGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            creation_time: Optional[pulumi.Input[builtins.str]] = None,
            description: Optional[pulumi.Input[builtins.str]] = None,
            egress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupEgressPermissionArgs', 'SecurityGroupEgressPermissionArgsDict']]]]] = None,
            ingress_permissions: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupIngressPermissionArgs', 'SecurityGroupIngressPermissionArgsDict']]]]] = None,
            project_name: Optional[pulumi.Input[builtins.str]] = None,
            security_group_id: Optional[pulumi.Input[builtins.str]] = None,
            security_group_name: Optional[pulumi.Input[builtins.str]] = None,
            service_managed: Optional[pulumi.Input[builtins.bool]] = None,
            status: Optional[pulumi.Input[builtins.str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[Union['SecurityGroupTagArgs', 'SecurityGroupTagArgsDict']]]]] = None,
            type: Optional[pulumi.Input[builtins.str]] = None,
            vpc_id: Optional[pulumi.Input[builtins.str]] = None) -> 'SecurityGroup':
        """
        Get an existing SecurityGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] creation_time: 安全组创建时间。
        :param pulumi.Input[builtins.str] description: 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        :param pulumi.Input[builtins.str] project_name: 安全组所属项目名称。不填默认项目为default。
        :param pulumi.Input[builtins.str] security_group_id: 安全组ID。
        :param pulumi.Input[builtins.str] security_group_name: 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        :param pulumi.Input[builtins.bool] service_managed: 安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
        :param pulumi.Input[builtins.str] status: 安全组状态。Available为可用，Creating为创建中。
        :param pulumi.Input[builtins.str] type: 安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
        :param pulumi.Input[builtins.str] vpc_id: 安全组所属的VPC ID。
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SecurityGroupState.__new__(_SecurityGroupState)

        __props__.__dict__["creation_time"] = creation_time
        __props__.__dict__["description"] = description
        __props__.__dict__["egress_permissions"] = egress_permissions
        __props__.__dict__["ingress_permissions"] = ingress_permissions
        __props__.__dict__["project_name"] = project_name
        __props__.__dict__["security_group_id"] = security_group_id
        __props__.__dict__["security_group_name"] = security_group_name
        __props__.__dict__["service_managed"] = service_managed
        __props__.__dict__["status"] = status
        __props__.__dict__["tags"] = tags
        __props__.__dict__["type"] = type
        __props__.__dict__["vpc_id"] = vpc_id
        return SecurityGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="creationTime")
    def creation_time(self) -> pulumi.Output[builtins.str]:
        """
        安全组创建时间。
        """
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[builtins.str]:
        """
        安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="egressPermissions")
    def egress_permissions(self) -> pulumi.Output[Sequence['outputs.SecurityGroupEgressPermission']]:
        return pulumi.get(self, "egress_permissions")

    @property
    @pulumi.getter(name="ingressPermissions")
    def ingress_permissions(self) -> pulumi.Output[Sequence['outputs.SecurityGroupIngressPermission']]:
        return pulumi.get(self, "ingress_permissions")

    @property
    @pulumi.getter(name="projectName")
    def project_name(self) -> pulumi.Output[builtins.str]:
        """
        安全组所属项目名称。不填默认项目为default。
        """
        return pulumi.get(self, "project_name")

    @property
    @pulumi.getter(name="securityGroupId")
    def security_group_id(self) -> pulumi.Output[builtins.str]:
        """
        安全组ID。
        """
        return pulumi.get(self, "security_group_id")

    @property
    @pulumi.getter(name="securityGroupName")
    def security_group_name(self) -> pulumi.Output[builtins.str]:
        """
        安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
        """
        return pulumi.get(self, "security_group_name")

    @property
    @pulumi.getter(name="serviceManaged")
    def service_managed(self) -> pulumi.Output[builtins.bool]:
        """
        安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
        """
        return pulumi.get(self, "service_managed")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[builtins.str]:
        """
        安全组状态。Available为可用，Creating为创建中。
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence['outputs.SecurityGroupTag']]:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[builtins.str]:
        """
        安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[builtins.str]:
        """
        安全组所属的VPC ID。
        """
        return pulumi.get(self, "vpc_id")

