# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'AddonStatus',
    'AddonStatusCondition',
    'GetAddonStatusResult',
    'GetAddonStatusConditionResult',
]

@pulumi.output_type
class AddonStatus(dict):
    def __init__(__self__, *,
                 conditions: Optional[Sequence['outputs.AddonStatusCondition']] = None,
                 phase: Optional[builtins.str] = None):
        """
        :param builtins.str phase: 组件的状态，参数值有：Running, Failed, Creating, Deleting, Updating
        """
        if conditions is not None:
            pulumi.set(__self__, "conditions", conditions)
        if phase is not None:
            pulumi.set(__self__, "phase", phase)

    @property
    @pulumi.getter
    def conditions(self) -> Optional[Sequence['outputs.AddonStatusCondition']]:
        return pulumi.get(self, "conditions")

    @property
    @pulumi.getter
    def phase(self) -> Optional[builtins.str]:
        """
        组件的状态，参数值有：Running, Failed, Creating, Deleting, Updating
        """
        return pulumi.get(self, "phase")


@pulumi.output_type
class AddonStatusCondition(dict):
    def __init__(__self__, *,
                 type: Optional[builtins.str] = None):
        """
        :param builtins.str type: 组件当前主状态下的状态条件，即进入该主状态的原因，可以有多个原因，参数值有：Progressing, ClusterVersionUpgrading, Unknown, Degraded, NameConflict, ClusterNotRunning, CrashLoopBackOff, SchedulingFailed, ResourceCleanupFailed
        """
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def type(self) -> Optional[builtins.str]:
        """
        组件当前主状态下的状态条件，即进入该主状态的原因，可以有多个原因，参数值有：Progressing, ClusterVersionUpgrading, Unknown, Degraded, NameConflict, ClusterNotRunning, CrashLoopBackOff, SchedulingFailed, ResourceCleanupFailed
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetAddonStatusResult(dict):
    def __init__(__self__, *,
                 conditions: Sequence['outputs.GetAddonStatusConditionResult'],
                 phase: builtins.str):
        """
        :param Sequence['GetAddonStatusConditionArgs'] conditions: 组件当前主状态下的状态条件。
        :param builtins.str phase: 组件的状态，参数值有：Running, Failed, Creating, Deleting, Updating
        """
        pulumi.set(__self__, "conditions", conditions)
        pulumi.set(__self__, "phase", phase)

    @property
    @pulumi.getter
    def conditions(self) -> Sequence['outputs.GetAddonStatusConditionResult']:
        """
        组件当前主状态下的状态条件。
        """
        return pulumi.get(self, "conditions")

    @property
    @pulumi.getter
    def phase(self) -> builtins.str:
        """
        组件的状态，参数值有：Running, Failed, Creating, Deleting, Updating
        """
        return pulumi.get(self, "phase")


@pulumi.output_type
class GetAddonStatusConditionResult(dict):
    def __init__(__self__, *,
                 type: builtins.str):
        """
        :param builtins.str type: 组件当前主状态下的状态条件，即进入该主状态的原因，可以有多个原因，参数值有：Progressing, ClusterVersionUpgrading, Unknown, Degraded, NameConflict, ClusterNotRunning, CrashLoopBackOff, SchedulingFailed, ResourceCleanupFailed
        """
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def type(self) -> builtins.str:
        """
        组件当前主状态下的状态条件，即进入该主状态的原因，可以有多个原因，参数值有：Progressing, ClusterVersionUpgrading, Unknown, Degraded, NameConflict, ClusterNotRunning, CrashLoopBackOff, SchedulingFailed, ResourceCleanupFailed
        """
        return pulumi.get(self, "type")


