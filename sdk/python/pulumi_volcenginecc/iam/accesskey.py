# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = ['AccesskeyArgs', 'Accesskey']

@pulumi.input_type
class AccesskeyArgs:
    def __init__(__self__, *,
                 access_key_id: Optional[pulumi.Input[builtins.str]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 user_name: Optional[pulumi.Input[builtins.str]] = None):
        """
        The set of arguments for constructing a Accesskey resource.
        :param pulumi.Input[builtins.str] access_key_id: 密钥ID（Access Key Id）。
        :param pulumi.Input[builtins.str] status: 密钥状态 (active/inactive)
        :param pulumi.Input[builtins.str] user_name: 用户名
        """
        if access_key_id is not None:
            pulumi.set(__self__, "access_key_id", access_key_id)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="accessKeyId")
    def access_key_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        密钥ID（Access Key Id）。
        """
        return pulumi.get(self, "access_key_id")

    @access_key_id.setter
    def access_key_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "access_key_id", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        密钥状态 (active/inactive)
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        用户名
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "user_name", value)


@pulumi.input_type
class _AccesskeyState:
    def __init__(__self__, *,
                 access_key_id: Optional[pulumi.Input[builtins.str]] = None,
                 create_date: Optional[pulumi.Input[builtins.str]] = None,
                 region: Optional[pulumi.Input[builtins.str]] = None,
                 request_time: Optional[pulumi.Input[builtins.str]] = None,
                 secret_access_key: Optional[pulumi.Input[builtins.str]] = None,
                 service: Optional[pulumi.Input[builtins.str]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 update_date: Optional[pulumi.Input[builtins.str]] = None,
                 user_name: Optional[pulumi.Input[builtins.str]] = None):
        """
        Input properties used for looking up and filtering Accesskey resources.
        :param pulumi.Input[builtins.str] access_key_id: 密钥ID（Access Key Id）。
        :param pulumi.Input[builtins.str] create_date: 密钥创建时间
        :param pulumi.Input[builtins.str] region: API密钥最后访问的地域。
        :param pulumi.Input[builtins.str] request_time: API密钥的最后使用的时间。
        :param pulumi.Input[builtins.str] secret_access_key: 私有密钥（Secret Access Key）。
        :param pulumi.Input[builtins.str] service: API密钥最后访问的服务的英文简称。
        :param pulumi.Input[builtins.str] status: 密钥状态 (active/inactive)
        :param pulumi.Input[builtins.str] update_date: 密钥更新时间
        :param pulumi.Input[builtins.str] user_name: 用户名
        """
        if access_key_id is not None:
            pulumi.set(__self__, "access_key_id", access_key_id)
        if create_date is not None:
            pulumi.set(__self__, "create_date", create_date)
        if region is not None:
            pulumi.set(__self__, "region", region)
        if request_time is not None:
            pulumi.set(__self__, "request_time", request_time)
        if secret_access_key is not None:
            pulumi.set(__self__, "secret_access_key", secret_access_key)
        if service is not None:
            pulumi.set(__self__, "service", service)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if update_date is not None:
            pulumi.set(__self__, "update_date", update_date)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="accessKeyId")
    def access_key_id(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        密钥ID（Access Key Id）。
        """
        return pulumi.get(self, "access_key_id")

    @access_key_id.setter
    def access_key_id(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "access_key_id", value)

    @property
    @pulumi.getter(name="createDate")
    def create_date(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        密钥创建时间
        """
        return pulumi.get(self, "create_date")

    @create_date.setter
    def create_date(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "create_date", value)

    @property
    @pulumi.getter
    def region(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        API密钥最后访问的地域。
        """
        return pulumi.get(self, "region")

    @region.setter
    def region(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "region", value)

    @property
    @pulumi.getter(name="requestTime")
    def request_time(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        API密钥的最后使用的时间。
        """
        return pulumi.get(self, "request_time")

    @request_time.setter
    def request_time(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "request_time", value)

    @property
    @pulumi.getter(name="secretAccessKey")
    def secret_access_key(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        私有密钥（Secret Access Key）。
        """
        return pulumi.get(self, "secret_access_key")

    @secret_access_key.setter
    def secret_access_key(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "secret_access_key", value)

    @property
    @pulumi.getter
    def service(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        API密钥最后访问的服务的英文简称。
        """
        return pulumi.get(self, "service")

    @service.setter
    def service(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "service", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        密钥状态 (active/inactive)
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="updateDate")
    def update_date(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        密钥更新时间
        """
        return pulumi.get(self, "update_date")

    @update_date.setter
    def update_date(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "update_date", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[builtins.str]]:
        """
        用户名
        """
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[builtins.str]]):
        pulumi.set(self, "user_name", value)


@pulumi.type_token("volcenginecc:iam/accesskey:Accesskey")
class Accesskey(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 access_key_id: Optional[pulumi.Input[builtins.str]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 user_name: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcenginecc as volcenginecc

        accesskey_demo = volcenginecc.iam.Accesskey("AccesskeyDemo", user_name="s2222")
        ```

        ## Import

        ```sh
        $ pulumi import volcenginecc:iam/accesskey:Accesskey example "access_key_id|user_name"
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] access_key_id: 密钥ID（Access Key Id）。
        :param pulumi.Input[builtins.str] status: 密钥状态 (active/inactive)
        :param pulumi.Input[builtins.str] user_name: 用户名
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[AccesskeyArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcenginecc as volcenginecc

        accesskey_demo = volcenginecc.iam.Accesskey("AccesskeyDemo", user_name="s2222")
        ```

        ## Import

        ```sh
        $ pulumi import volcenginecc:iam/accesskey:Accesskey example "access_key_id|user_name"
        ```

        :param str resource_name: The name of the resource.
        :param AccesskeyArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AccesskeyArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 access_key_id: Optional[pulumi.Input[builtins.str]] = None,
                 status: Optional[pulumi.Input[builtins.str]] = None,
                 user_name: Optional[pulumi.Input[builtins.str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AccesskeyArgs.__new__(AccesskeyArgs)

            __props__.__dict__["access_key_id"] = access_key_id
            __props__.__dict__["status"] = status
            __props__.__dict__["user_name"] = user_name
            __props__.__dict__["create_date"] = None
            __props__.__dict__["region"] = None
            __props__.__dict__["request_time"] = None
            __props__.__dict__["secret_access_key"] = None
            __props__.__dict__["service"] = None
            __props__.__dict__["update_date"] = None
        super(Accesskey, __self__).__init__(
            'volcenginecc:iam/accesskey:Accesskey',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            access_key_id: Optional[pulumi.Input[builtins.str]] = None,
            create_date: Optional[pulumi.Input[builtins.str]] = None,
            region: Optional[pulumi.Input[builtins.str]] = None,
            request_time: Optional[pulumi.Input[builtins.str]] = None,
            secret_access_key: Optional[pulumi.Input[builtins.str]] = None,
            service: Optional[pulumi.Input[builtins.str]] = None,
            status: Optional[pulumi.Input[builtins.str]] = None,
            update_date: Optional[pulumi.Input[builtins.str]] = None,
            user_name: Optional[pulumi.Input[builtins.str]] = None) -> 'Accesskey':
        """
        Get an existing Accesskey resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[builtins.str] access_key_id: 密钥ID（Access Key Id）。
        :param pulumi.Input[builtins.str] create_date: 密钥创建时间
        :param pulumi.Input[builtins.str] region: API密钥最后访问的地域。
        :param pulumi.Input[builtins.str] request_time: API密钥的最后使用的时间。
        :param pulumi.Input[builtins.str] secret_access_key: 私有密钥（Secret Access Key）。
        :param pulumi.Input[builtins.str] service: API密钥最后访问的服务的英文简称。
        :param pulumi.Input[builtins.str] status: 密钥状态 (active/inactive)
        :param pulumi.Input[builtins.str] update_date: 密钥更新时间
        :param pulumi.Input[builtins.str] user_name: 用户名
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AccesskeyState.__new__(_AccesskeyState)

        __props__.__dict__["access_key_id"] = access_key_id
        __props__.__dict__["create_date"] = create_date
        __props__.__dict__["region"] = region
        __props__.__dict__["request_time"] = request_time
        __props__.__dict__["secret_access_key"] = secret_access_key
        __props__.__dict__["service"] = service
        __props__.__dict__["status"] = status
        __props__.__dict__["update_date"] = update_date
        __props__.__dict__["user_name"] = user_name
        return Accesskey(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="accessKeyId")
    def access_key_id(self) -> pulumi.Output[builtins.str]:
        """
        密钥ID（Access Key Id）。
        """
        return pulumi.get(self, "access_key_id")

    @property
    @pulumi.getter(name="createDate")
    def create_date(self) -> pulumi.Output[builtins.str]:
        """
        密钥创建时间
        """
        return pulumi.get(self, "create_date")

    @property
    @pulumi.getter
    def region(self) -> pulumi.Output[builtins.str]:
        """
        API密钥最后访问的地域。
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="requestTime")
    def request_time(self) -> pulumi.Output[builtins.str]:
        """
        API密钥的最后使用的时间。
        """
        return pulumi.get(self, "request_time")

    @property
    @pulumi.getter(name="secretAccessKey")
    def secret_access_key(self) -> pulumi.Output[builtins.str]:
        """
        私有密钥（Secret Access Key）。
        """
        return pulumi.get(self, "secret_access_key")

    @property
    @pulumi.getter
    def service(self) -> pulumi.Output[builtins.str]:
        """
        API密钥最后访问的服务的英文简称。
        """
        return pulumi.get(self, "service")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[builtins.str]:
        """
        密钥状态 (active/inactive)
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateDate")
    def update_date(self) -> pulumi.Output[builtins.str]:
        """
        密钥更新时间
        """
        return pulumi.get(self, "update_date")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> pulumi.Output[builtins.str]:
        """
        用户名
        """
        return pulumi.get(self, "user_name")

