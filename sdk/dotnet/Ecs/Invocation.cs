// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Ecs
{
    /// <summary>
    /// 云助手是火山引擎打造的原生自动化运维工具。您可以创建立即执行、周期执行、定时执行的作业任务，创建完成后完，云助手客户端将按照执行模式自动开始执行。
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcenginecc = Pulumi.Volcenginecc;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var invocationDemo = new Volcenginecc.Ecs.Invocation("InvocationDemo", new()
    ///     {
    ///         InvocationName = "InvocationDemo",
    ///         InvocationDescription = "InvocationDemo desc",
    ///         WorkingDir = "/home",
    ///         Username = "InvocationDemo",
    ///         WindowsPassword = "********",
    ///         Timeout = 60,
    ///         InstanceIds = new[]
    ///         {
    ///             "i-ye2v6l0pvkqc6inxxxxx",
    ///         },
    ///         RepeatMode = "Rate",
    ///         Frequency = "1h",
    ///         LaunchTime = "2025-08-30T11:10Z",
    ///         RecurrenceEndTime = "2025-08-31T11:04Z",
    ///         ProjectName = "default",
    ///         Tags = new[]
    ///         {
    ///             new Volcenginecc.Ecs.Inputs.InvocationTagArgs
    ///             {
    ///                 Key = "env",
    ///                 Value = "test",
    ///             },
    ///         },
    ///         CommandId = "cmd-ye28kugp249tzrexxxxx",
    ///         Parameters = "{\"dirname\":\"10\"}",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:ecs/invocation:Invocation example "invocation_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:ecs/invocation:Invocation")]
    public partial class Invocation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 命令内容。
        /// </summary>
        [Output("commandContent")]
        public Output<string> CommandContent { get; private set; } = null!;

        /// <summary>
        /// 被调用命令的描述。
        /// </summary>
        [Output("commandDescription")]
        public Output<string> CommandDescription { get; private set; } = null!;

        /// <summary>
        /// 命令ID。
        /// </summary>
        [Output("commandId")]
        public Output<string> CommandId { get; private set; } = null!;

        /// <summary>
        /// 任务触发时的命令名称。
        /// </summary>
        [Output("commandName")]
        public Output<string> CommandName { get; private set; } = null!;

        /// <summary>
        /// 被调用命令的提供方。
        /// </summary>
        [Output("commandProvider")]
        public Output<string> CommandProvider { get; private set; } = null!;

        /// <summary>
        /// 作业触发的命令类型。
        /// </summary>
        [Output("commandType")]
        public Output<string> CommandType { get; private set; } = null!;

        /// <summary>
        /// 被调用命令是否使用自定义参数。true：已启用。false：未启用。
        /// </summary>
        [Output("enableParameter")]
        public Output<bool> EnableParameter { get; private set; } = null!;

        /// <summary>
        /// 任务结束时间。
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// 执行频率。RepeatMode=Rate 时本参数必填。格式：&lt;执行间隔数值&gt;&lt;执行间隔单位&gt;，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
        /// </summary>
        [Output("frequency")]
        public Output<string> Frequency { get; private set; } = null!;

        /// <summary>
        /// 实例ID列表，最多支持200个ID。
        /// </summary>
        [Output("instanceIds")]
        public Output<ImmutableArray<string>> InstanceIds { get; private set; } = null!;

        /// <summary>
        /// 执行实例数量。
        /// </summary>
        [Output("instanceNumber")]
        public Output<int> InstanceNumber { get; private set; } = null!;

        /// <summary>
        /// 作业描述，默认为空字符串，不超过256个字符。
        /// </summary>
        [Output("invocationDescription")]
        public Output<string> InvocationDescription { get; private set; } = null!;

        /// <summary>
        /// 任务执行 ID。
        /// </summary>
        [Output("invocationId")]
        public Output<string> InvocationId { get; private set; } = null!;

        /// <summary>
        /// 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
        /// </summary>
        [Output("invocationName")]
        public Output<string> InvocationName { get; private set; } = null!;

        [Output("invocationResults")]
        public Output<ImmutableArray<Outputs.InvocationInvocationResult>> InvocationResults { get; private set; } = null!;

        /// <summary>
        /// 命令执行的总执行状态。
        /// </summary>
        [Output("invocationStatus")]
        public Output<string> InvocationStatus { get; private set; } = null!;

        /// <summary>
        /// 执行时间。
        /// </summary>
        [Output("launchTime")]
        public Output<string> LaunchTime { get; private set; } = null!;

        [Output("parameterDefinitions")]
        public Output<ImmutableArray<Outputs.InvocationParameterDefinition>> ParameterDefinitions { get; private set; } = null!;

        /// <summary>
        /// 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
        /// </summary>
        [Output("parameters")]
        public Output<string> Parameters { get; private set; } = null!;

        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 周期结束时间，仅适用于周期任务（Rate）。
        /// </summary>
        [Output("recurrenceEndTime")]
        public Output<string> RecurrenceEndTime { get; private set; } = null!;

        /// <summary>
        /// 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
        /// </summary>
        [Output("repeatMode")]
        public Output<string> RepeatMode { get; private set; } = null!;

        /// <summary>
        /// 任务开始时间。
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.InvocationTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
        /// </summary>
        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;

        /// <summary>
        /// 在ECS实例中执行命令的用户名称。
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;

        /// <summary>
        /// 自定义windows用户的密码。
        /// </summary>
        [Output("windowsPassword")]
        public Output<string> WindowsPassword { get; private set; } = null!;

        /// <summary>
        /// 创建的命令在ECS实例中运行的目录。
        /// </summary>
        [Output("workingDir")]
        public Output<string> WorkingDir { get; private set; } = null!;


        /// <summary>
        /// Create a Invocation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Invocation(string name, InvocationArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:ecs/invocation:Invocation", name, args ?? new InvocationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Invocation(string name, Input<string> id, InvocationState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:ecs/invocation:Invocation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Invocation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Invocation Get(string name, Input<string> id, InvocationState? state = null, CustomResourceOptions? options = null)
        {
            return new Invocation(name, id, state, options);
        }
    }

    public sealed class InvocationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 命令ID。
        /// </summary>
        [Input("commandId", required: true)]
        public Input<string> CommandId { get; set; } = null!;

        /// <summary>
        /// 执行频率。RepeatMode=Rate 时本参数必填。格式：&lt;执行间隔数值&gt;&lt;执行间隔单位&gt;，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("instanceIds", required: true)]
        private InputList<string>? _instanceIds;

        /// <summary>
        /// 实例ID列表，最多支持200个ID。
        /// </summary>
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        /// <summary>
        /// 作业描述，默认为空字符串，不超过256个字符。
        /// </summary>
        [Input("invocationDescription")]
        public Input<string>? InvocationDescription { get; set; }

        /// <summary>
        /// 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
        /// </summary>
        [Input("invocationName", required: true)]
        public Input<string> InvocationName { get; set; } = null!;

        /// <summary>
        /// 执行时间。
        /// </summary>
        [Input("launchTime")]
        public Input<string>? LaunchTime { get; set; }

        /// <summary>
        /// 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
        /// </summary>
        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 周期结束时间，仅适用于周期任务（Rate）。
        /// </summary>
        [Input("recurrenceEndTime")]
        public Input<string>? RecurrenceEndTime { get; set; }

        /// <summary>
        /// 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
        /// </summary>
        [Input("repeatMode")]
        public Input<string>? RepeatMode { get; set; }

        [Input("tags")]
        private InputList<Inputs.InvocationTagArgs>? _tags;
        public InputList<Inputs.InvocationTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InvocationTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// 在ECS实例中执行命令的用户名称。
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// 自定义windows用户的密码。
        /// </summary>
        [Input("windowsPassword")]
        public Input<string>? WindowsPassword { get; set; }

        /// <summary>
        /// 创建的命令在ECS实例中运行的目录。
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public InvocationArgs()
        {
        }
        public static new InvocationArgs Empty => new InvocationArgs();
    }

    public sealed class InvocationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 命令内容。
        /// </summary>
        [Input("commandContent")]
        public Input<string>? CommandContent { get; set; }

        /// <summary>
        /// 被调用命令的描述。
        /// </summary>
        [Input("commandDescription")]
        public Input<string>? CommandDescription { get; set; }

        /// <summary>
        /// 命令ID。
        /// </summary>
        [Input("commandId")]
        public Input<string>? CommandId { get; set; }

        /// <summary>
        /// 任务触发时的命令名称。
        /// </summary>
        [Input("commandName")]
        public Input<string>? CommandName { get; set; }

        /// <summary>
        /// 被调用命令的提供方。
        /// </summary>
        [Input("commandProvider")]
        public Input<string>? CommandProvider { get; set; }

        /// <summary>
        /// 作业触发的命令类型。
        /// </summary>
        [Input("commandType")]
        public Input<string>? CommandType { get; set; }

        /// <summary>
        /// 被调用命令是否使用自定义参数。true：已启用。false：未启用。
        /// </summary>
        [Input("enableParameter")]
        public Input<bool>? EnableParameter { get; set; }

        /// <summary>
        /// 任务结束时间。
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// 执行频率。RepeatMode=Rate 时本参数必填。格式：&lt;执行间隔数值&gt;&lt;执行间隔单位&gt;，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("instanceIds")]
        private InputList<string>? _instanceIds;

        /// <summary>
        /// 实例ID列表，最多支持200个ID。
        /// </summary>
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        /// <summary>
        /// 执行实例数量。
        /// </summary>
        [Input("instanceNumber")]
        public Input<int>? InstanceNumber { get; set; }

        /// <summary>
        /// 作业描述，默认为空字符串，不超过256个字符。
        /// </summary>
        [Input("invocationDescription")]
        public Input<string>? InvocationDescription { get; set; }

        /// <summary>
        /// 任务执行 ID。
        /// </summary>
        [Input("invocationId")]
        public Input<string>? InvocationId { get; set; }

        /// <summary>
        /// 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
        /// </summary>
        [Input("invocationName")]
        public Input<string>? InvocationName { get; set; }

        [Input("invocationResults")]
        private InputList<Inputs.InvocationInvocationResultGetArgs>? _invocationResults;
        public InputList<Inputs.InvocationInvocationResultGetArgs> InvocationResults
        {
            get => _invocationResults ?? (_invocationResults = new InputList<Inputs.InvocationInvocationResultGetArgs>());
            set => _invocationResults = value;
        }

        /// <summary>
        /// 命令执行的总执行状态。
        /// </summary>
        [Input("invocationStatus")]
        public Input<string>? InvocationStatus { get; set; }

        /// <summary>
        /// 执行时间。
        /// </summary>
        [Input("launchTime")]
        public Input<string>? LaunchTime { get; set; }

        [Input("parameterDefinitions")]
        private InputList<Inputs.InvocationParameterDefinitionGetArgs>? _parameterDefinitions;
        public InputList<Inputs.InvocationParameterDefinitionGetArgs> ParameterDefinitions
        {
            get => _parameterDefinitions ?? (_parameterDefinitions = new InputList<Inputs.InvocationParameterDefinitionGetArgs>());
            set => _parameterDefinitions = value;
        }

        /// <summary>
        /// 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
        /// </summary>
        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 周期结束时间，仅适用于周期任务（Rate）。
        /// </summary>
        [Input("recurrenceEndTime")]
        public Input<string>? RecurrenceEndTime { get; set; }

        /// <summary>
        /// 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
        /// </summary>
        [Input("repeatMode")]
        public Input<string>? RepeatMode { get; set; }

        /// <summary>
        /// 任务开始时间。
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("tags")]
        private InputList<Inputs.InvocationTagGetArgs>? _tags;
        public InputList<Inputs.InvocationTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.InvocationTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// 在ECS实例中执行命令的用户名称。
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// 自定义windows用户的密码。
        /// </summary>
        [Input("windowsPassword")]
        public Input<string>? WindowsPassword { get; set; }

        /// <summary>
        /// 创建的命令在ECS实例中运行的目录。
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public InvocationState()
        {
        }
        public static new InvocationState Empty => new InvocationState();
    }
}
