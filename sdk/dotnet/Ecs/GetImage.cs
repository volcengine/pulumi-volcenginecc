// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Ecs
{
    public static class GetImage
    {
        /// <summary>
        /// Data Source schema for Volcengine::ECS::Image
        /// </summary>
        public static Task<GetImageResult> InvokeAsync(GetImageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageResult>("volcenginecc:ecs/getImage:getImage", args ?? new GetImageArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::ECS::Image
        /// </summary>
        public static Output<GetImageResult> Invoke(GetImageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageResult>("volcenginecc:ecs/getImage:getImage", args ?? new GetImageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::ECS::Image
        /// </summary>
        public static Output<GetImageResult> Invoke(GetImageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageResult>("volcenginecc:ecs/getImage:getImage", args ?? new GetImageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetImageArgs()
        {
        }
        public static new GetImageArgs Empty => new GetImageArgs();
    }

    public sealed class GetImageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetImageInvokeArgs()
        {
        }
        public static new GetImageInvokeArgs Empty => new GetImageInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageResult
    {
        /// <summary>
        /// 镜像的架构类型。可以选择amd64（x86计算）、arm64（ARM计算）类型。
        /// </summary>
        public readonly string Architecture;
        /// <summary>
        /// 镜像的启动模式。可以选择BIOS、UEFI类型。
        /// </summary>
        public readonly string BootMode;
        /// <summary>
        /// 镜像创建时间
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 镜像的检测结果。
        /// </summary>
        public readonly Outputs.GetImageDetectionResultsResult DetectionResults;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 镜像ID。
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
        /// </summary>
        public readonly string ImageName;
        /// <summary>
        /// 镜像所属的账号ID。
        /// </summary>
        public readonly string ImageOwnerId;
        /// <summary>
        /// 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// 镜像中是否安装了云助手Agent。
        /// </summary>
        public readonly bool IsInstallRunCommandAgent;
        /// <summary>
        /// 公共镜像是否长期维护。
        /// </summary>
        public readonly bool IsLts;
        /// <summary>
        /// 镜像是否支持Cloud-init。
        /// </summary>
        public readonly bool IsSupportCloudInit;
        /// <summary>
        /// 镜像的内核版本。
        /// </summary>
        public readonly string Kernel;
        /// <summary>
        /// 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// 镜像操作系统的名称。
        /// </summary>
        public readonly string OsName;
        /// <summary>
        /// 操作系统类型。
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// 镜像的发行版本。
        /// </summary>
        public readonly string PlatformVersion;
        /// <summary>
        /// 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 镜像共享的账户
        /// </summary>
        public readonly ImmutableArray<string> SharePermissions;
        /// <summary>
        /// 镜像共享状态。HasShared：自定义镜像已被共享给其他用户。当自定义镜像未被共享或使用公共镜像时，ShareStatus返回为空。
        /// </summary>
        public readonly string ShareStatus;
        /// <summary>
        /// 镜像大小，单位为GiB。
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
        /// </summary>
        public readonly string SnapshotGroupId;
        /// <summary>
        /// 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
        /// </summary>
        public readonly string SnapshotId;
        /// <summary>
        /// 镜像关联快照的信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageSnapshotResult> Snapshots;
        /// <summary>
        /// 镜像的状态。
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 镜像绑定的标签列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageTagResult> Tags;
        /// <summary>
        /// 镜像更新时间
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// 镜像大小，单位为Byte。
        /// </summary>
        public readonly double VirtualSize;
        /// <summary>
        /// 镜像的可见性。public：公共镜像。private：私有镜像。shared：共享镜像。
        /// </summary>
        public readonly string Visibility;

        [OutputConstructor]
        private GetImageResult(
            string architecture,

            string bootMode,

            string createdAt,

            string description,

            Outputs.GetImageDetectionResultsResult detectionResults,

            string id,

            string imageId,

            string imageName,

            string imageOwnerId,

            string instanceId,

            bool isInstallRunCommandAgent,

            bool isLts,

            bool isSupportCloudInit,

            string kernel,

            string licenseType,

            string osName,

            string osType,

            string platform,

            string platformVersion,

            string projectName,

            ImmutableArray<string> sharePermissions,

            string shareStatus,

            int size,

            string snapshotGroupId,

            string snapshotId,

            ImmutableArray<Outputs.GetImageSnapshotResult> snapshots,

            string status,

            ImmutableArray<Outputs.GetImageTagResult> tags,

            string updatedAt,

            double virtualSize,

            string visibility)
        {
            Architecture = architecture;
            BootMode = bootMode;
            CreatedAt = createdAt;
            Description = description;
            DetectionResults = detectionResults;
            Id = id;
            ImageId = imageId;
            ImageName = imageName;
            ImageOwnerId = imageOwnerId;
            InstanceId = instanceId;
            IsInstallRunCommandAgent = isInstallRunCommandAgent;
            IsLts = isLts;
            IsSupportCloudInit = isSupportCloudInit;
            Kernel = kernel;
            LicenseType = licenseType;
            OsName = osName;
            OsType = osType;
            Platform = platform;
            PlatformVersion = platformVersion;
            ProjectName = projectName;
            SharePermissions = sharePermissions;
            ShareStatus = shareStatus;
            Size = size;
            SnapshotGroupId = snapshotGroupId;
            SnapshotId = snapshotId;
            Snapshots = snapshots;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
            VirtualSize = virtualSize;
            Visibility = visibility;
        }
    }
}
