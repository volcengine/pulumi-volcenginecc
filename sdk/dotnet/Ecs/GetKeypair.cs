// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Ecs
{
    public static class GetKeypair
    {
        /// <summary>
        /// Data Source schema for Volcengine::ECS::Keypair
        /// </summary>
        public static Task<GetKeypairResult> InvokeAsync(GetKeypairArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeypairResult>("volcenginecc:ecs/getKeypair:getKeypair", args ?? new GetKeypairArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::ECS::Keypair
        /// </summary>
        public static Output<GetKeypairResult> Invoke(GetKeypairInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeypairResult>("volcenginecc:ecs/getKeypair:getKeypair", args ?? new GetKeypairInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::ECS::Keypair
        /// </summary>
        public static Output<GetKeypairResult> Invoke(GetKeypairInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeypairResult>("volcenginecc:ecs/getKeypair:getKeypair", args ?? new GetKeypairInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeypairArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetKeypairArgs()
        {
        }
        public static new GetKeypairArgs Empty => new GetKeypairArgs();
    }

    public sealed class GetKeypairInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetKeypairInvokeArgs()
        {
        }
        public static new GetKeypairInvokeArgs Empty => new GetKeypairInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeypairResult
    {
        /// <summary>
        /// 密钥对创建时间。
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// 密钥对的描述，默认值为空字符串。必须以字母或中文开头。只能包含中文、字母、数字、点“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”长度限制在255个字符以内。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 密钥对的指纹。根据RFC4716定义的公钥指纹格式，采用MD5信息摘要算法。
        /// </summary>
        public readonly string FingerPrint;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 操作的实例ID。
        /// </summary>
        public readonly ImmutableArray<string> InstanceIds;
        /// <summary>
        /// 密钥对唯一ID。
        /// </summary>
        public readonly string KeyPairId;
        /// <summary>
        /// 密钥对名称。不可与已有名称重复。长度限制在 2～64 个字符之间。允许使用点号“.”分隔字符成多段，每段允许使用大小写字母、数字或连字符“-”。不能以“-”和“.”开头或结尾，不能连续使用“-”或者“.”。
        /// </summary>
        public readonly string KeyPairName;
        /// <summary>
        /// 密钥对私钥信息。
        /// </summary>
        public readonly string PrivateKey;
        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。只能包含字母、数字、下划线“_”、点“.”和中划线“-”。长度限制在64个字符以内。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 密钥对的公钥信息。
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// 密钥对的标签。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKeypairTagResult> Tags;
        /// <summary>
        /// 密钥对更新时间。
        /// </summary>
        public readonly string UpdatedTime;

        [OutputConstructor]
        private GetKeypairResult(
            string createdTime,

            string description,

            string fingerPrint,

            string id,

            ImmutableArray<string> instanceIds,

            string keyPairId,

            string keyPairName,

            string privateKey,

            string projectName,

            string publicKey,

            ImmutableArray<Outputs.GetKeypairTagResult> tags,

            string updatedTime)
        {
            CreatedTime = createdTime;
            Description = description;
            FingerPrint = fingerPrint;
            Id = id;
            InstanceIds = instanceIds;
            KeyPairId = keyPairId;
            KeyPairName = keyPairName;
            PrivateKey = privateKey;
            ProjectName = projectName;
            PublicKey = publicKey;
            Tags = tags;
            UpdatedTime = updatedTime;
        }
    }
}
