// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Ecs
{
    /// <summary>
    /// 自定义命令是云助手提供的满足您个性化运维需求的功能，您可以在预置的公共命令不满足需求时创建自定义命令，并通过运维任务在实例中批量执行您编写的自定义命令。
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:ecs/command:Command example "command_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:ecs/command:Command")]
    public partial class Command : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 命令内容。请根据ContentEncoding参数传入相应命令内容。命令内容不能超过16KB。
        /// </summary>
        [Output("commandContent")]
        public Output<string> CommandContent { get; private set; } = null!;

        /// <summary>
        /// 自定义命令ID。
        /// </summary>
        [Output("commandId")]
        public Output<string> CommandId { get; private set; } = null!;

        /// <summary>
        /// 命令内容是否经过Base64编码处理。Base64（默认）：经过Base64编码处理。PlainText： 未进行编码处理。
        /// </summary>
        [Output("contentEncoding")]
        public Output<string> ContentEncoding { get; private set; } = null!;

        /// <summary>
        /// 创建时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// 命令描述，默认为空字符串。字符长度0~256。不限制特殊字符。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 创建的命令是否使用自定义参数。false：默认，表示不使用自定义参数。true：表示使用自定义参数。
        /// </summary>
        [Output("enableParameter")]
        public Output<bool> EnableParameter { get; private set; } = null!;

        /// <summary>
        /// 命令被调用次数。
        /// </summary>
        [Output("invocationTimes")]
        public Output<int> InvocationTimes { get; private set; } = null!;

        /// <summary>
        /// 命令名称。字符长度1~32。不限制特殊字符。
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parameterDefinitions")]
        public Output<ImmutableArray<Outputs.CommandParameterDefinition>> ParameterDefinitions { get; private set; } = null!;

        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 命令的提供方。
        /// </summary>
        [Output("providerName")]
        public Output<string> ProviderName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.CommandTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。取值范围：30~86400。默认值：60。
        /// </summary>
        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;

        /// <summary>
        /// 命令的类型。Shell：表示创建一个在Linux实例中运行的Shell脚本。Python：表示创建一个Python脚本。Bat：表示创建一个Bat脚本。PowerShell：表示创建一个PowerShell脚本。
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// 更新时间。
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// 执行命令时的用户名。
        /// </summary>
        [Output("username")]
        public Output<string> Username { get; private set; } = null!;

        /// <summary>
        /// 创建的命令在ECS实例中运行的目录。
        /// </summary>
        [Output("workingDir")]
        public Output<string> WorkingDir { get; private set; } = null!;


        /// <summary>
        /// Create a Command resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Command(string name, CommandArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:ecs/command:Command", name, args ?? new CommandArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Command(string name, Input<string> id, CommandState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:ecs/command:Command", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Command resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Command Get(string name, Input<string> id, CommandState? state = null, CustomResourceOptions? options = null)
        {
            return new Command(name, id, state, options);
        }
    }

    public sealed class CommandArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 命令内容。请根据ContentEncoding参数传入相应命令内容。命令内容不能超过16KB。
        /// </summary>
        [Input("commandContent", required: true)]
        public Input<string> CommandContent { get; set; } = null!;

        /// <summary>
        /// 命令内容是否经过Base64编码处理。Base64（默认）：经过Base64编码处理。PlainText： 未进行编码处理。
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// 命令描述，默认为空字符串。字符长度0~256。不限制特殊字符。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 创建的命令是否使用自定义参数。false：默认，表示不使用自定义参数。true：表示使用自定义参数。
        /// </summary>
        [Input("enableParameter")]
        public Input<bool>? EnableParameter { get; set; }

        /// <summary>
        /// 命令名称。字符长度1~32。不限制特殊字符。
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("parameterDefinitions")]
        private InputList<Inputs.CommandParameterDefinitionArgs>? _parameterDefinitions;
        public InputList<Inputs.CommandParameterDefinitionArgs> ParameterDefinitions
        {
            get => _parameterDefinitions ?? (_parameterDefinitions = new InputList<Inputs.CommandParameterDefinitionArgs>());
            set => _parameterDefinitions = value;
        }

        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.CommandTagArgs>? _tags;
        public InputList<Inputs.CommandTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CommandTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。取值范围：30~86400。默认值：60。
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// 命令的类型。Shell：表示创建一个在Linux实例中运行的Shell脚本。Python：表示创建一个Python脚本。Bat：表示创建一个Bat脚本。PowerShell：表示创建一个PowerShell脚本。
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// 执行命令时的用户名。
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// 创建的命令在ECS实例中运行的目录。
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public CommandArgs()
        {
        }
        public static new CommandArgs Empty => new CommandArgs();
    }

    public sealed class CommandState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 命令内容。请根据ContentEncoding参数传入相应命令内容。命令内容不能超过16KB。
        /// </summary>
        [Input("commandContent")]
        public Input<string>? CommandContent { get; set; }

        /// <summary>
        /// 自定义命令ID。
        /// </summary>
        [Input("commandId")]
        public Input<string>? CommandId { get; set; }

        /// <summary>
        /// 命令内容是否经过Base64编码处理。Base64（默认）：经过Base64编码处理。PlainText： 未进行编码处理。
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// 创建时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// 命令描述，默认为空字符串。字符长度0~256。不限制特殊字符。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 创建的命令是否使用自定义参数。false：默认，表示不使用自定义参数。true：表示使用自定义参数。
        /// </summary>
        [Input("enableParameter")]
        public Input<bool>? EnableParameter { get; set; }

        /// <summary>
        /// 命令被调用次数。
        /// </summary>
        [Input("invocationTimes")]
        public Input<int>? InvocationTimes { get; set; }

        /// <summary>
        /// 命令名称。字符长度1~32。不限制特殊字符。
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameterDefinitions")]
        private InputList<Inputs.CommandParameterDefinitionGetArgs>? _parameterDefinitions;
        public InputList<Inputs.CommandParameterDefinitionGetArgs> ParameterDefinitions
        {
            get => _parameterDefinitions ?? (_parameterDefinitions = new InputList<Inputs.CommandParameterDefinitionGetArgs>());
            set => _parameterDefinitions = value;
        }

        /// <summary>
        /// 资源所属项目，一个资源只能归属于一个项目。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 命令的提供方。
        /// </summary>
        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        [Input("tags")]
        private InputList<Inputs.CommandTagGetArgs>? _tags;
        public InputList<Inputs.CommandTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CommandTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。取值范围：30~86400。默认值：60。
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// 命令的类型。Shell：表示创建一个在Linux实例中运行的Shell脚本。Python：表示创建一个Python脚本。Bat：表示创建一个Bat脚本。PowerShell：表示创建一个PowerShell脚本。
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// 更新时间。
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        /// <summary>
        /// 执行命令时的用户名。
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// 创建的命令在ECS实例中运行的目录。
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public CommandState()
        {
        }
        public static new CommandState Empty => new CommandState();
    }
}
