// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Vmp
{
    public static class GetWorkspace
    {
        /// <summary>
        /// Data Source schema for Volcengine::VMP::Workspace
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("volcenginecc:vmp/getWorkspace:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::VMP::Workspace
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("volcenginecc:vmp/getWorkspace:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::VMP::Workspace
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("volcenginecc:vmp/getWorkspace:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
        public static new GetWorkspaceArgs Empty => new GetWorkspaceArgs();
    }

    public sealed class GetWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetWorkspaceInvokeArgs()
        {
        }
        public static new GetWorkspaceInvokeArgs Empty => new GetWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// 工作区创建时间，RFC3339 格式。
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// 是否开启工作区删除保护,true：开启，false：关闭。
        /// </summary>
        public readonly bool DeleteProtectionEnabled;
        /// <summary>
        /// 工作区描述信息，字符串形式，长度限制为 0～200。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 工作区规格详情。
        /// </summary>
        public readonly Outputs.GetWorkspaceInstanceTypeResult InstanceType;
        /// <summary>
        /// 工作区规格,vmp.standard.15d：15 天存储时长工作区。vmp.standard.30d：30 天存储时长工作区。vmp.standard.90d：90 天存储时长工作区。vmp.standard.180d：180 天存储时长工作区。vmp.standard.1y：1 年存储时长工作区。
        /// </summary>
        public readonly string InstanceTypeId;
        /// <summary>
        /// 工作区名称，字符串形式，长度限制为 1～100。
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// 工作区预期欠费回收时间，RFC3339 格式。
        /// </summary>
        public readonly string OverdueReclaimTime;
        /// <summary>
        /// 工作区 BasicAuth 密码。
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// 项目名称。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 工作区 Push Gateway URL 地址。
        /// </summary>
        public readonly string PrometheusPushIntranetEndpoint;
        /// <summary>
        /// 工作区 Query URL 地址。
        /// </summary>
        public readonly string PrometheusQueryIntranetEndpoint;
        /// <summary>
        /// 工作区 RemoteWrite URL 地址。
        /// </summary>
        public readonly string PrometheusWriteIntranetEndpoint;
        /// <summary>
        /// 工作区配额详情。
        /// </summary>
        public readonly Outputs.GetWorkspaceQuotaResult Quota;
        /// <summary>
        /// 工作区状态，取值：Creating：创建中 Active：正常 Updating：更新中 Deleting：删除中 OverdueShutted：欠费关停 Resuming：恢复中 Error：错误。
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 工作区标签。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetWorkspaceTagResult> Tags;
        /// <summary>
        /// 工作区用量。
        /// </summary>
        public readonly Outputs.GetWorkspaceUsageResult Usage;
        /// <summary>
        /// 工作区 BasicAuth 用户名。
        /// </summary>
        public readonly string Username;
        /// <summary>
        /// 工作区Id。
        /// </summary>
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceResult(
            string createTime,

            bool deleteProtectionEnabled,

            string description,

            string id,

            Outputs.GetWorkspaceInstanceTypeResult instanceType,

            string instanceTypeId,

            string name,

            string overdueReclaimTime,

            string password,

            string projectName,

            string prometheusPushIntranetEndpoint,

            string prometheusQueryIntranetEndpoint,

            string prometheusWriteIntranetEndpoint,

            Outputs.GetWorkspaceQuotaResult quota,

            string status,

            ImmutableArray<Outputs.GetWorkspaceTagResult> tags,

            Outputs.GetWorkspaceUsageResult usage,

            string username,

            string workspaceId)
        {
            CreateTime = createTime;
            DeleteProtectionEnabled = deleteProtectionEnabled;
            Description = description;
            Id = id;
            InstanceType = instanceType;
            InstanceTypeId = instanceTypeId;
            Name = name;
            OverdueReclaimTime = overdueReclaimTime;
            Password = password;
            ProjectName = projectName;
            PrometheusPushIntranetEndpoint = prometheusPushIntranetEndpoint;
            PrometheusQueryIntranetEndpoint = prometheusQueryIntranetEndpoint;
            PrometheusWriteIntranetEndpoint = prometheusWriteIntranetEndpoint;
            Quota = quota;
            Status = status;
            Tags = tags;
            Usage = usage;
            Username = username;
            WorkspaceId = workspaceId;
        }
    }
}
