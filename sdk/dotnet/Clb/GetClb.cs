// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Clb
{
    public static class GetClb
    {
        /// <summary>
        /// Data Source schema for Volcengine::CLB::CLB
        /// </summary>
        public static Task<GetClbResult> InvokeAsync(GetClbArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClbResult>("volcenginecc:clb/getClb:getClb", args ?? new GetClbArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::CLB
        /// </summary>
        public static Output<GetClbResult> Invoke(GetClbInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClbResult>("volcenginecc:clb/getClb:getClb", args ?? new GetClbInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::CLB
        /// </summary>
        public static Output<GetClbResult> Invoke(GetClbInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetClbResult>("volcenginecc:clb/getClb:getClb", args ?? new GetClbInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClbArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetClbArgs()
        {
        }
        public static new GetClbArgs Empty => new GetClbArgs();
    }

    public sealed class GetClbInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetClbInvokeArgs()
        {
        }
        public static new GetClbInvokeArgs Empty => new GetClbInvokeArgs();
    }


    [OutputType]
    public sealed class GetClbResult
    {
        /// <summary>
        /// 负载均衡实例中访问日志的信息
        /// </summary>
        public readonly Outputs.GetClbAccessLogResult AccessLog;
        /// <summary>
        /// 负载均衡实例所属的账号ID
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// 负载均衡实例的IP地址类型
        /// </summary>
        public readonly string AddressIpVersion;
        /// <summary>
        /// 允许的多个端口范围
        /// </summary>
        public readonly ImmutableArray<string> AllowedPorts;
        /// <summary>
        /// 负载均衡实例是否被锁定
        /// </summary>
        public readonly string BusinessStatus;
        /// <summary>
        /// 是否开启bypass安全组功能
        /// </summary>
        public readonly string BypassSecurityGroupEnabled;
        /// <summary>
        /// 负载均衡实例的创建时间
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// 负载均衡实例的预期回收时间
        /// </summary>
        public readonly string DeletedTime;
        /// <summary>
        /// 负载均衡实例的描述
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 负载均衡实例的公网IP的信息
        /// </summary>
        public readonly Outputs.GetClbEipResult Eip;
        /// <summary>
        /// 公网IP地址
        /// </summary>
        public readonly string EipAddress;
        /// <summary>
        /// 公网IP ID
        /// </summary>
        public readonly string EipId;
        /// <summary>
        /// 负载均衡实例的启用状态
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// 负载均衡实例的私网IPv4地址信息
        /// </summary>
        public readonly Outputs.GetClbEniResult Eni;
        /// <summary>
        /// 负载均衡实例的私网IPv4地址数量。该参数和参数EniAddress不能同时传入，如果传入该参数，则无需传入EniAddress
        /// </summary>
        public readonly double EniAddressNum;
        /// <summary>
        /// 负载均衡实例的私网IPv6地址
        /// </summary>
        public readonly string EniIpv6Address;
        /// <summary>
        /// 负载均衡实例的私网IPv4地址信息列表，创建时通过EniAddressNum指定数量
        /// </summary>
        public readonly Outputs.GetClbEnisResult Enis;
        /// <summary>
        /// 独占集群Id
        /// </summary>
        public readonly string ExclusiveClusterId;
        /// <summary>
        /// 负载均衡实例到期时间
        /// </summary>
        public readonly string ExpiredTime;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 负载均衡实例中监听器的信息
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClbListenerResult> Listeners;
        /// <summary>
        /// 负载均衡实例计费方式
        /// </summary>
        public readonly double LoadBalancerBillingType;
        /// <summary>
        /// 负载均衡实例ID
        /// </summary>
        public readonly string LoadBalancerId;
        /// <summary>
        /// 负载均衡实例的名称
        /// </summary>
        public readonly string LoadBalancerName;
        /// <summary>
        /// 负载均衡实例的规格
        /// </summary>
        public readonly string LoadBalancerSpec;
        /// <summary>
        /// 负载均衡实例被冻结的原因
        /// </summary>
        public readonly string LockReason;
        /// <summary>
        /// 负载均衡实例的主可用区ID
        /// </summary>
        public readonly string MasterZoneId;
        /// <summary>
        /// 设置修改保护状态的原因
        /// </summary>
        public readonly string ModificationProtectionReason;
        /// <summary>
        /// 负载均衡实例在控制台上修改保护的状态
        /// </summary>
        public readonly string ModificationProtectionStatus;
        /// <summary>
        /// 是否为新架构
        /// </summary>
        public readonly bool NewArch;
        /// <summary>
        /// 订单ID。仅在创建动作的参数LoadBalancerBillingType配置为1时，改参数有值
        /// </summary>
        public readonly string OrderId;
        /// <summary>
        /// 负载均衡实例的冻结时间
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// 包年包月计费类型的时长数量
        /// </summary>
        public readonly double Period;
        /// <summary>
        /// 包年包月计费类型的时长单位
        /// </summary>
        public readonly string PeriodUnit;
        /// <summary>
        /// CLB实例所属项目的名称
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 请求的Region
        /// </summary>
        public readonly string RegionId;
        /// <summary>
        /// 负载均衡实例中后端服务器组的信息
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClbServerGroupResult> ServerGroups;
        /// <summary>
        /// CLB实例是否为托管资源
        /// </summary>
        public readonly bool ServiceManaged;
        /// <summary>
        /// 负载均衡实例的备可用区ID
        /// </summary>
        public readonly string SlaveZoneId;
        /// <summary>
        /// 负载均衡实例状态
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 负载均衡实例所属VPC内的子网ID
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// CLB实例标签
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClbTagResult> Tags;
        /// <summary>
        /// 是否开启 TCP Timestamp 清除功能
        /// </summary>
        public readonly string TimestampRemoveEnabled;
        /// <summary>
        /// 负载均衡实例的类型
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// 负载均衡实例的最近操作时间
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// 负载均衡实例所属的VPC ID
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// 负载均衡实例的可用区类型
        /// </summary>
        public readonly string ZoneType;

        [OutputConstructor]
        private GetClbResult(
            Outputs.GetClbAccessLogResult accessLog,

            string accountId,

            string addressIpVersion,

            ImmutableArray<string> allowedPorts,

            string businessStatus,

            string bypassSecurityGroupEnabled,

            string createTime,

            string deletedTime,

            string description,

            Outputs.GetClbEipResult eip,

            string eipAddress,

            string eipId,

            bool enabled,

            Outputs.GetClbEniResult eni,

            double eniAddressNum,

            string eniIpv6Address,

            Outputs.GetClbEnisResult enis,

            string exclusiveClusterId,

            string expiredTime,

            string id,

            ImmutableArray<Outputs.GetClbListenerResult> listeners,

            double loadBalancerBillingType,

            string loadBalancerId,

            string loadBalancerName,

            string loadBalancerSpec,

            string lockReason,

            string masterZoneId,

            string modificationProtectionReason,

            string modificationProtectionStatus,

            bool newArch,

            string orderId,

            string overdueTime,

            double period,

            string periodUnit,

            string projectName,

            string regionId,

            ImmutableArray<Outputs.GetClbServerGroupResult> serverGroups,

            bool serviceManaged,

            string slaveZoneId,

            string status,

            string subnetId,

            ImmutableArray<Outputs.GetClbTagResult> tags,

            string timestampRemoveEnabled,

            string type,

            string updateTime,

            string vpcId,

            string zoneType)
        {
            AccessLog = accessLog;
            AccountId = accountId;
            AddressIpVersion = addressIpVersion;
            AllowedPorts = allowedPorts;
            BusinessStatus = businessStatus;
            BypassSecurityGroupEnabled = bypassSecurityGroupEnabled;
            CreateTime = createTime;
            DeletedTime = deletedTime;
            Description = description;
            Eip = eip;
            EipAddress = eipAddress;
            EipId = eipId;
            Enabled = enabled;
            Eni = eni;
            EniAddressNum = eniAddressNum;
            EniIpv6Address = eniIpv6Address;
            Enis = enis;
            ExclusiveClusterId = exclusiveClusterId;
            ExpiredTime = expiredTime;
            Id = id;
            Listeners = listeners;
            LoadBalancerBillingType = loadBalancerBillingType;
            LoadBalancerId = loadBalancerId;
            LoadBalancerName = loadBalancerName;
            LoadBalancerSpec = loadBalancerSpec;
            LockReason = lockReason;
            MasterZoneId = masterZoneId;
            ModificationProtectionReason = modificationProtectionReason;
            ModificationProtectionStatus = modificationProtectionStatus;
            NewArch = newArch;
            OrderId = orderId;
            OverdueTime = overdueTime;
            Period = period;
            PeriodUnit = periodUnit;
            ProjectName = projectName;
            RegionId = regionId;
            ServerGroups = serverGroups;
            ServiceManaged = serviceManaged;
            SlaveZoneId = slaveZoneId;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            TimestampRemoveEnabled = timestampRemoveEnabled;
            Type = type;
            UpdateTime = updateTime;
            VpcId = vpcId;
            ZoneType = zoneType;
        }
    }
}
