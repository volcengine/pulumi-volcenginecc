// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Clb
{
    public static class GetNlbServerGroup
    {
        /// <summary>
        /// Data Source schema for Volcengine::CLB::NLBServerGroup
        /// </summary>
        public static Task<GetNlbServerGroupResult> InvokeAsync(GetNlbServerGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNlbServerGroupResult>("volcenginecc:clb/getNlbServerGroup:getNlbServerGroup", args ?? new GetNlbServerGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::NLBServerGroup
        /// </summary>
        public static Output<GetNlbServerGroupResult> Invoke(GetNlbServerGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNlbServerGroupResult>("volcenginecc:clb/getNlbServerGroup:getNlbServerGroup", args ?? new GetNlbServerGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::NLBServerGroup
        /// </summary>
        public static Output<GetNlbServerGroupResult> Invoke(GetNlbServerGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNlbServerGroupResult>("volcenginecc:clb/getNlbServerGroup:getNlbServerGroup", args ?? new GetNlbServerGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNlbServerGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetNlbServerGroupArgs()
        {
        }
        public static new GetNlbServerGroupArgs Empty => new GetNlbServerGroupArgs();
    }

    public sealed class GetNlbServerGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetNlbServerGroupInvokeArgs()
        {
        }
        public static new GetNlbServerGroupInvokeArgs Empty => new GetNlbServerGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetNlbServerGroupResult
    {
        /// <summary>
        /// 账号ID
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// 是否开启全端口转发
        /// </summary>
        public readonly bool AnyPortEnabled;
        /// <summary>
        /// 是否开启放通后端安全组功能。仅参数Type为“instance”时，可以配置此参数
        /// </summary>
        public readonly bool BypassSecurityGroupEnabled;
        /// <summary>
        /// 是否开启连接优雅中断
        /// </summary>
        public readonly bool ConnectionDrainEnabled;
        /// <summary>
        /// 连接优雅中断超时时间，取值范围为0～900秒。参数ConnectionDrainEnabled为“true”时，该参数为必填。
        /// </summary>
        public readonly int ConnectionDrainTimeout;
        /// <summary>
        /// 后端服务器组的创建时间
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// 后端服务器组的描述,服务器组的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 健康检查相关参数
        /// </summary>
        public readonly Outputs.GetNlbServerGroupHealthCheckResult HealthCheck;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 服务器组的IP地址类型
        /// </summary>
        public readonly string IpAddressVersion;
        /// <summary>
        /// 是否开启源地址保持
        /// </summary>
        public readonly bool PreserveClientIpEnabled;
        /// <summary>
        /// 项目名称
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// NLB转发流量到后端服务器时使用的通信协议
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// 是否开启Proxy-Protocol协议
        /// </summary>
        public readonly string ProxyProtocolType;
        /// <summary>
        /// 服务器组关联的NLB实例
        /// </summary>
        public readonly ImmutableArray<string> RelatedLoadBalancerIds;
        /// <summary>
        /// NLB转发流量时遵循的规则
        /// </summary>
        public readonly string Scheduler;
        /// <summary>
        /// 服务器组中后端服务器的数量
        /// </summary>
        public readonly int ServerCount;
        /// <summary>
        /// 服务器组ID
        /// </summary>
        public readonly string ServerGroupId;
        /// <summary>
        /// 服务器组名称, 必须以字母、数字或中文开头，可包含以下特殊字符：点号（.）、下划线（_）和中划线（-）。限制为1 ～ 128个字符。该参数不传入，则默认为服务器组ID。
        /// </summary>
        public readonly string ServerGroupName;
        /// <summary>
        /// 服务器组中待添加后端服务器的信息
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNlbServerGroupServerResult> Servers;
        /// <summary>
        /// 是否开启会话保持
        /// </summary>
        public readonly bool SessionPersistenceEnabled;
        /// <summary>
        /// 会话保持的超时时间，取值范围为1～3600秒，默认1000秒
        /// </summary>
        public readonly int SessionPersistenceTimeout;
        /// <summary>
        /// 服务器组的状态
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 标签
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNlbServerGroupTagResult> Tags;
        /// <summary>
        /// 是否开启清除TCP/HTTP/HTTPS报文的timestamp（即时间戳）的功能
        /// </summary>
        public readonly bool TimestampRemoveEnabled;
        /// <summary>
        /// 服务器组的类型
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// 后端服务器组的更新时间
        /// </summary>
        public readonly string UpdatedTime;
        /// <summary>
        /// 服务器组所属私有网络的ID。
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetNlbServerGroupResult(
            string accountId,

            bool anyPortEnabled,

            bool bypassSecurityGroupEnabled,

            bool connectionDrainEnabled,

            int connectionDrainTimeout,

            string createdTime,

            string description,

            Outputs.GetNlbServerGroupHealthCheckResult healthCheck,

            string id,

            string ipAddressVersion,

            bool preserveClientIpEnabled,

            string projectName,

            string protocol,

            string proxyProtocolType,

            ImmutableArray<string> relatedLoadBalancerIds,

            string scheduler,

            int serverCount,

            string serverGroupId,

            string serverGroupName,

            ImmutableArray<Outputs.GetNlbServerGroupServerResult> servers,

            bool sessionPersistenceEnabled,

            int sessionPersistenceTimeout,

            string status,

            ImmutableArray<Outputs.GetNlbServerGroupTagResult> tags,

            bool timestampRemoveEnabled,

            string type,

            string updatedTime,

            string vpcId)
        {
            AccountId = accountId;
            AnyPortEnabled = anyPortEnabled;
            BypassSecurityGroupEnabled = bypassSecurityGroupEnabled;
            ConnectionDrainEnabled = connectionDrainEnabled;
            ConnectionDrainTimeout = connectionDrainTimeout;
            CreatedTime = createdTime;
            Description = description;
            HealthCheck = healthCheck;
            Id = id;
            IpAddressVersion = ipAddressVersion;
            PreserveClientIpEnabled = preserveClientIpEnabled;
            ProjectName = projectName;
            Protocol = protocol;
            ProxyProtocolType = proxyProtocolType;
            RelatedLoadBalancerIds = relatedLoadBalancerIds;
            Scheduler = scheduler;
            ServerCount = serverCount;
            ServerGroupId = serverGroupId;
            ServerGroupName = serverGroupName;
            Servers = servers;
            SessionPersistenceEnabled = sessionPersistenceEnabled;
            SessionPersistenceTimeout = sessionPersistenceTimeout;
            Status = status;
            Tags = tags;
            TimestampRemoveEnabled = timestampRemoveEnabled;
            Type = type;
            UpdatedTime = updatedTime;
            VpcId = vpcId;
        }
    }
}
