// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Vpc
{
    /// <summary>
    /// 路由表由一系列路由条目组成，为私有网络的流量指定下一跳的云资源，每个子网必须且仅支持关联一个路由表，使子网内的资源通过路由表转发流量。
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:vpc/routeTable:RouteTable example "route_table_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:vpc/routeTable:RouteTable")]
    public partial class RouteTable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 路由表所属账号的ID。
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
        /// </summary>
        [Output("associateType")]
        public Output<string> AssociateType { get; private set; } = null!;

        /// <summary>
        /// 路由表创建时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        [Output("customRouteEntries")]
        public Output<ImmutableArray<Outputs.RouteTableCustomRouteEntry>> CustomRouteEntries { get; private set; } = null!;

        /// <summary>
        /// 路由表描述信息。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 关联路由表的IPv4网关ID。
        /// </summary>
        [Output("ipv4GatewayId")]
        public Output<string> Ipv4GatewayId { get; private set; } = null!;

        /// <summary>
        /// 关联路由表的IPv6网关ID。
        /// </summary>
        [Output("ipv6GatewayId")]
        public Output<string> Ipv6GatewayId { get; private set; } = null!;

        /// <summary>
        /// 路由表所属项目的名称。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 路由表ID。
        /// </summary>
        [Output("routeTableId")]
        public Output<string> RouteTableId { get; private set; } = null!;

        /// <summary>
        /// 路由表名称。
        /// </summary>
        [Output("routeTableName")]
        public Output<string> RouteTableName { get; private set; } = null!;

        /// <summary>
        /// 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
        /// </summary>
        [Output("routeTableType")]
        public Output<string> RouteTableType { get; private set; } = null!;

        /// <summary>
        /// 关联的子网的ID列表。
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        [Output("systemRouteEntries")]
        public Output<ImmutableArray<Outputs.RouteTableSystemRouteEntry>> SystemRouteEntries { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.RouteTableTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 路由表更新时间。
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// 路由表所属VPC的ID。
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// VPC的名称。
        /// </summary>
        [Output("vpcName")]
        public Output<string> VpcName { get; private set; } = null!;


        /// <summary>
        /// Create a RouteTable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RouteTable(string name, RouteTableArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/routeTable:RouteTable", name, args ?? new RouteTableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RouteTable(string name, Input<string> id, RouteTableState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/routeTable:RouteTable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RouteTable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RouteTable Get(string name, Input<string> id, RouteTableState? state = null, CustomResourceOptions? options = null)
        {
            return new RouteTable(name, id, state, options);
        }
    }

    public sealed class RouteTableArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
        /// </summary>
        [Input("associateType")]
        public Input<string>? AssociateType { get; set; }

        [Input("customRouteEntries")]
        private InputList<Inputs.RouteTableCustomRouteEntryArgs>? _customRouteEntries;
        public InputList<Inputs.RouteTableCustomRouteEntryArgs> CustomRouteEntries
        {
            get => _customRouteEntries ?? (_customRouteEntries = new InputList<Inputs.RouteTableCustomRouteEntryArgs>());
            set => _customRouteEntries = value;
        }

        /// <summary>
        /// 路由表描述信息。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 关联路由表的IPv4网关ID。
        /// </summary>
        [Input("ipv4GatewayId")]
        public Input<string>? Ipv4GatewayId { get; set; }

        /// <summary>
        /// 关联路由表的IPv6网关ID。
        /// </summary>
        [Input("ipv6GatewayId")]
        public Input<string>? Ipv6GatewayId { get; set; }

        /// <summary>
        /// 路由表所属项目的名称。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 路由表名称。
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// 关联的子网的ID列表。
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputList<Inputs.RouteTableTagArgs>? _tags;
        public InputList<Inputs.RouteTableTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RouteTableTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 路由表所属VPC的ID。
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// VPC的名称。
        /// </summary>
        [Input("vpcName")]
        public Input<string>? VpcName { get; set; }

        public RouteTableArgs()
        {
        }
        public static new RouteTableArgs Empty => new RouteTableArgs();
    }

    public sealed class RouteTableState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 路由表所属账号的ID。
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
        /// </summary>
        [Input("associateType")]
        public Input<string>? AssociateType { get; set; }

        /// <summary>
        /// 路由表创建时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("customRouteEntries")]
        private InputList<Inputs.RouteTableCustomRouteEntryGetArgs>? _customRouteEntries;
        public InputList<Inputs.RouteTableCustomRouteEntryGetArgs> CustomRouteEntries
        {
            get => _customRouteEntries ?? (_customRouteEntries = new InputList<Inputs.RouteTableCustomRouteEntryGetArgs>());
            set => _customRouteEntries = value;
        }

        /// <summary>
        /// 路由表描述信息。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 关联路由表的IPv4网关ID。
        /// </summary>
        [Input("ipv4GatewayId")]
        public Input<string>? Ipv4GatewayId { get; set; }

        /// <summary>
        /// 关联路由表的IPv6网关ID。
        /// </summary>
        [Input("ipv6GatewayId")]
        public Input<string>? Ipv6GatewayId { get; set; }

        /// <summary>
        /// 路由表所属项目的名称。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 路由表ID。
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// 路由表名称。
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        /// <summary>
        /// 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
        /// </summary>
        [Input("routeTableType")]
        public Input<string>? RouteTableType { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// 关联的子网的ID列表。
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("systemRouteEntries")]
        private InputList<Inputs.RouteTableSystemRouteEntryGetArgs>? _systemRouteEntries;
        public InputList<Inputs.RouteTableSystemRouteEntryGetArgs> SystemRouteEntries
        {
            get => _systemRouteEntries ?? (_systemRouteEntries = new InputList<Inputs.RouteTableSystemRouteEntryGetArgs>());
            set => _systemRouteEntries = value;
        }

        [Input("tags")]
        private InputList<Inputs.RouteTableTagGetArgs>? _tags;
        public InputList<Inputs.RouteTableTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RouteTableTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 路由表更新时间。
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        /// <summary>
        /// 路由表所属VPC的ID。
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// VPC的名称。
        /// </summary>
        [Input("vpcName")]
        public Input<string>? VpcName { get; set; }

        public RouteTableState()
        {
        }
        public static new RouteTableState Empty => new RouteTableState();
    }
}
