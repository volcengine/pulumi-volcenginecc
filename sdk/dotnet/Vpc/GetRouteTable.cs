// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Vpc
{
    public static class GetRouteTable
    {
        /// <summary>
        /// Data Source schema for Volcengine::VPC::RouteTable
        /// </summary>
        public static Task<GetRouteTableResult> InvokeAsync(GetRouteTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteTableResult>("volcenginecc:vpc/getRouteTable:getRouteTable", args ?? new GetRouteTableArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::VPC::RouteTable
        /// </summary>
        public static Output<GetRouteTableResult> Invoke(GetRouteTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteTableResult>("volcenginecc:vpc/getRouteTable:getRouteTable", args ?? new GetRouteTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::VPC::RouteTable
        /// </summary>
        public static Output<GetRouteTableResult> Invoke(GetRouteTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteTableResult>("volcenginecc:vpc/getRouteTable:getRouteTable", args ?? new GetRouteTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRouteTableArgs()
        {
        }
        public static new GetRouteTableArgs Empty => new GetRouteTableArgs();
    }

    public sealed class GetRouteTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRouteTableInvokeArgs()
        {
        }
        public static new GetRouteTableInvokeArgs Empty => new GetRouteTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteTableResult
    {
        /// <summary>
        /// 路由表所属账号的ID。
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
        /// </summary>
        public readonly string AssociateType;
        /// <summary>
        /// 路由表创建时间。
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// 路由表关联的自定义路由条目列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTableCustomRouteEntryResult> CustomRouteEntries;
        /// <summary>
        /// 路由表描述信息。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 关联路由表的IPv4网关ID。
        /// </summary>
        public readonly string Ipv4GatewayId;
        /// <summary>
        /// 关联路由表的IPv6网关ID。
        /// </summary>
        public readonly string Ipv6GatewayId;
        /// <summary>
        /// 路由表所属项目的名称。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 路由表ID。
        /// </summary>
        public readonly string RouteTableId;
        /// <summary>
        /// 路由表名称。
        /// </summary>
        public readonly string RouteTableName;
        /// <summary>
        /// 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
        /// </summary>
        public readonly string RouteTableType;
        /// <summary>
        /// 关联的子网的ID列表。
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// 路由表关联的系统默认路由条目列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTableSystemRouteEntryResult> SystemRouteEntries;
        /// <summary>
        /// 标签列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRouteTableTagResult> Tags;
        /// <summary>
        /// 路由表更新时间。
        /// </summary>
        public readonly string UpdatedTime;
        /// <summary>
        /// 路由表所属VPC的ID。
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// VPC的名称。
        /// </summary>
        public readonly string VpcName;

        [OutputConstructor]
        private GetRouteTableResult(
            string accountId,

            string associateType,

            string createdTime,

            ImmutableArray<Outputs.GetRouteTableCustomRouteEntryResult> customRouteEntries,

            string description,

            string id,

            string ipv4GatewayId,

            string ipv6GatewayId,

            string projectName,

            string routeTableId,

            string routeTableName,

            string routeTableType,

            ImmutableArray<string> subnetIds,

            ImmutableArray<Outputs.GetRouteTableSystemRouteEntryResult> systemRouteEntries,

            ImmutableArray<Outputs.GetRouteTableTagResult> tags,

            string updatedTime,

            string vpcId,

            string vpcName)
        {
            AccountId = accountId;
            AssociateType = associateType;
            CreatedTime = createdTime;
            CustomRouteEntries = customRouteEntries;
            Description = description;
            Id = id;
            Ipv4GatewayId = ipv4GatewayId;
            Ipv6GatewayId = ipv6GatewayId;
            ProjectName = projectName;
            RouteTableId = routeTableId;
            RouteTableName = routeTableName;
            RouteTableType = routeTableType;
            SubnetIds = subnetIds;
            SystemRouteEntries = systemRouteEntries;
            Tags = tags;
            UpdatedTime = updatedTime;
            VpcId = vpcId;
            VpcName = vpcName;
        }
    }
}
