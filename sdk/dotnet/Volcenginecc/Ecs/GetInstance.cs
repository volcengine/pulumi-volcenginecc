// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Ecs
{
    public static class GetInstance
    {
        /// <summary>
        /// Data Source schema for Volcengine::ECS::Instance
        /// </summary>
        public static Task<GetInstanceResult> InvokeAsync(GetInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceResult>("volcenginecc:ecs/getInstance:getInstance", args ?? new GetInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::ECS::Instance
        /// </summary>
        public static Output<GetInstanceResult> Invoke(GetInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceResult>("volcenginecc:ecs/getInstance:getInstance", args ?? new GetInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::ECS::Instance
        /// </summary>
        public static Output<GetInstanceResult> Invoke(GetInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceResult>("volcenginecc:ecs/getInstance:getInstance", args ?? new GetInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetInstanceArgs()
        {
        }
        public static new GetInstanceArgs Empty => new GetInstanceArgs();
    }

    public sealed class GetInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetInstanceInvokeArgs()
        {
        }
        public static new GetInstanceInvokeArgs Empty => new GetInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceResult
    {
        public readonly int AffinityGroupSize;
        public readonly bool AutoRenew;
        public readonly int AutoRenewPeriod;
        public readonly double CpuMaxFrequency;
        public readonly Outputs.GetInstanceCpuMemoryResult CpuMemory;
        public readonly string CreatedAt;
        public readonly string CreditSpecification;
        public readonly bool DeletionProtection;
        public readonly int DeploymentSetGroupNumber;
        public readonly string DeploymentSetId;
        public readonly string Description;
        public readonly Outputs.GetInstanceEipAddressResult EipAddress;
        public readonly string ExpiredAt;
        public readonly string Hostname;
        public readonly string HpcClusterId;
        public readonly string Id;
        public readonly Outputs.GetInstanceImageResult Image;
        public readonly string InstanceChargeType;
        public readonly string InstanceId;
        public readonly string InstanceName;
        public readonly string InstanceType;
        public readonly Outputs.GetInstanceKeyPairResult KeyPair;
        public readonly Outputs.GetInstanceOperationSystemResult OperationSystem;
        public readonly string Password;
        public readonly int Period;
        public readonly string PeriodUnit;
        public readonly Outputs.GetInstancePlacementResult Placement;
        public readonly Outputs.GetInstancePrimaryNetworkInterfaceResult PrimaryNetworkInterface;
        public readonly string ProjectName;
        public readonly ImmutableArray<Outputs.GetInstanceSecondaryNetworkInterfaceResult> SecondaryNetworkInterfaces;
        public readonly double SpotPriceLimit;
        public readonly string SpotStrategy;
        public readonly string Status;
        public readonly Outputs.GetInstanceSystemVolumeResult SystemVolume;
        public readonly ImmutableArray<Outputs.GetInstanceTagResult> Tags;
        public readonly string UpdatedAt;
        public readonly string UserData;
        public readonly string VpcId;
        public readonly string ZoneId;

        [OutputConstructor]
        private GetInstanceResult(
            int affinityGroupSize,

            bool autoRenew,

            int autoRenewPeriod,

            double cpuMaxFrequency,

            Outputs.GetInstanceCpuMemoryResult cpuMemory,

            string createdAt,

            string creditSpecification,

            bool deletionProtection,

            int deploymentSetGroupNumber,

            string deploymentSetId,

            string description,

            Outputs.GetInstanceEipAddressResult eipAddress,

            string expiredAt,

            string hostname,

            string hpcClusterId,

            string id,

            Outputs.GetInstanceImageResult image,

            string instanceChargeType,

            string instanceId,

            string instanceName,

            string instanceType,

            Outputs.GetInstanceKeyPairResult keyPair,

            Outputs.GetInstanceOperationSystemResult operationSystem,

            string password,

            int period,

            string periodUnit,

            Outputs.GetInstancePlacementResult placement,

            Outputs.GetInstancePrimaryNetworkInterfaceResult primaryNetworkInterface,

            string projectName,

            ImmutableArray<Outputs.GetInstanceSecondaryNetworkInterfaceResult> secondaryNetworkInterfaces,

            double spotPriceLimit,

            string spotStrategy,

            string status,

            Outputs.GetInstanceSystemVolumeResult systemVolume,

            ImmutableArray<Outputs.GetInstanceTagResult> tags,

            string updatedAt,

            string userData,

            string vpcId,

            string zoneId)
        {
            AffinityGroupSize = affinityGroupSize;
            AutoRenew = autoRenew;
            AutoRenewPeriod = autoRenewPeriod;
            CpuMaxFrequency = cpuMaxFrequency;
            CpuMemory = cpuMemory;
            CreatedAt = createdAt;
            CreditSpecification = creditSpecification;
            DeletionProtection = deletionProtection;
            DeploymentSetGroupNumber = deploymentSetGroupNumber;
            DeploymentSetId = deploymentSetId;
            Description = description;
            EipAddress = eipAddress;
            ExpiredAt = expiredAt;
            Hostname = hostname;
            HpcClusterId = hpcClusterId;
            Id = id;
            Image = image;
            InstanceChargeType = instanceChargeType;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceType = instanceType;
            KeyPair = keyPair;
            OperationSystem = operationSystem;
            Password = password;
            Period = period;
            PeriodUnit = periodUnit;
            Placement = placement;
            PrimaryNetworkInterface = primaryNetworkInterface;
            ProjectName = projectName;
            SecondaryNetworkInterfaces = secondaryNetworkInterfaces;
            SpotPriceLimit = spotPriceLimit;
            SpotStrategy = spotStrategy;
            Status = status;
            SystemVolume = systemVolume;
            Tags = tags;
            UpdatedAt = updatedAt;
            UserData = userData;
            VpcId = vpcId;
            ZoneId = zoneId;
        }
    }
}
