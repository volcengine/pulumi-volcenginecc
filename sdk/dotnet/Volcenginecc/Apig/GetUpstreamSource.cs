// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Apig
{
    public static class GetUpstreamSource
    {
        /// <summary>
        /// Data Source schema for Volcengine::APIG::UpstreamSource
        /// </summary>
        public static Task<GetUpstreamSourceResult> InvokeAsync(GetUpstreamSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUpstreamSourceResult>("volcenginecc:apig/getUpstreamSource:getUpstreamSource", args ?? new GetUpstreamSourceArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::APIG::UpstreamSource
        /// </summary>
        public static Output<GetUpstreamSourceResult> Invoke(GetUpstreamSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUpstreamSourceResult>("volcenginecc:apig/getUpstreamSource:getUpstreamSource", args ?? new GetUpstreamSourceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::APIG::UpstreamSource
        /// </summary>
        public static Output<GetUpstreamSourceResult> Invoke(GetUpstreamSourceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUpstreamSourceResult>("volcenginecc:apig/getUpstreamSource:getUpstreamSource", args ?? new GetUpstreamSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUpstreamSourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetUpstreamSourceArgs()
        {
        }
        public static new GetUpstreamSourceArgs Empty => new GetUpstreamSourceArgs();
    }

    public sealed class GetUpstreamSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetUpstreamSourceInvokeArgs()
        {
        }
        public static new GetUpstreamSourceInvokeArgs Empty => new GetUpstreamSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetUpstreamSourceResult
    {
        /// <summary>
        /// 备注，长度限制为0~253个字符。
        /// </summary>
        public readonly string Comments;
        /// <summary>
        /// 创建时间。
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// 网关实例ID。
        /// </summary>
        public readonly string GatewayId;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 路由同步。开启后，API网关会自动监听Ingress资源的变化，并将Ingress资源转义为服务，域名，Upstream等资源合并至当前网关。由Ingress转义的资源不支持在控制台操作。仅支持容器集群来源类型。
        /// </summary>
        public readonly Outputs.GetUpstreamSourceIngressSettingsResult IngressSettings;
        /// <summary>
        /// Upstream来源配置。
        /// </summary>
        public readonly Outputs.GetUpstreamSourceSourceSpecResult SourceSpec;
        /// <summary>
        /// Upstream来源类型，取值：K8S：容器集群。Nacos：注册中心。
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// 导入状态，取值：Syncing：导入中。SyncedSucceed：导入成功。SyncedFailed：导入失败。
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 导入状态信息，取值：ConnectionFailed：Nacos集群无法连接。AuthenticationFailed：认证失败。PermissionFailed：Nacos集群无法连接。
        /// </summary>
        public readonly string StatusMessage;
        /// <summary>
        /// 更新时间。
        /// </summary>
        public readonly string UpdatedTime;
        /// <summary>
        /// Upstream来源ID。
        /// </summary>
        public readonly string UpstreamSourceId;
        /// <summary>
        /// 指定命名空间。
        /// </summary>
        public readonly ImmutableArray<string> WatchNamespaces;

        [OutputConstructor]
        private GetUpstreamSourceResult(
            string comments,

            string createdTime,

            string gatewayId,

            string id,

            Outputs.GetUpstreamSourceIngressSettingsResult ingressSettings,

            Outputs.GetUpstreamSourceSourceSpecResult sourceSpec,

            string sourceType,

            string status,

            string statusMessage,

            string updatedTime,

            string upstreamSourceId,

            ImmutableArray<string> watchNamespaces)
        {
            Comments = comments;
            CreatedTime = createdTime;
            GatewayId = gatewayId;
            Id = id;
            IngressSettings = ingressSettings;
            SourceSpec = sourceSpec;
            SourceType = sourceType;
            Status = status;
            StatusMessage = statusMessage;
            UpdatedTime = updatedTime;
            UpstreamSourceId = upstreamSourceId;
            WatchNamespaces = watchNamespaces;
        }
    }
}
