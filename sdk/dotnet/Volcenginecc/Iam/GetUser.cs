// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Iam
{
    public static class GetUser
    {
        /// <summary>
        /// Data Source schema for Volcengine::IAM::User
        /// </summary>
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("volcenginecc:iam/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::User
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("volcenginecc:iam/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::User
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("volcenginecc:iam/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        /// <summary>
        /// 子用户归属的主账号。
        /// </summary>
        public readonly double AccountId;
        /// <summary>
        /// 子用户对应的创建时间。
        /// </summary>
        public readonly string CreateDate;
        /// <summary>
        /// 子用户对应的描述信息，长度不超过255。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 子用户对应的展示名称，用户显示名。长度1~128，仅支持中文、英文、数字、空格和.-_@符号。
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// 子用户对应的电子邮件地址。
        /// </summary>
        public readonly string Email;
        /// <summary>
        /// 子用户归属的用户组。
        /// </summary>
        public readonly ImmutableArray<string> Groups;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 子用户的登录配置。
        /// </summary>
        public readonly Outputs.GetUserLoginProfileResult LoginProfile;
        /// <summary>
        /// 子用户对应的手机号。
        /// </summary>
        public readonly string MobilePhone;
        /// <summary>
        /// 子用户对应的权限策略。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserPolicyResult> Policies;
        /// <summary>
        /// 子用户的操作保护配置。
        /// </summary>
        public readonly Outputs.GetUserSecurityConfigResult SecurityConfig;
        /// <summary>
        /// 子用户对应的资源标签。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserTagResult> Tags;
        /// <summary>
        /// 子用户对应的Trn表达式。
        /// </summary>
        public readonly string Trn;
        /// <summary>
        /// 子用户对应的更新时间。
        /// </summary>
        public readonly string UpdateDate;
        /// <summary>
        /// 子用户的ID。
        /// </summary>
        public readonly int UserId;
        /// <summary>
        /// 子用户名称，用户名。长度1~64，支持英文、数字、下划线、和.-@符号。
        /// </summary>
        public readonly string UserName;

        [OutputConstructor]
        private GetUserResult(
            double accountId,

            string createDate,

            string description,

            string displayName,

            string email,

            ImmutableArray<string> groups,

            string id,

            Outputs.GetUserLoginProfileResult loginProfile,

            string mobilePhone,

            ImmutableArray<Outputs.GetUserPolicyResult> policies,

            Outputs.GetUserSecurityConfigResult securityConfig,

            ImmutableArray<Outputs.GetUserTagResult> tags,

            string trn,

            string updateDate,

            int userId,

            string userName)
        {
            AccountId = accountId;
            CreateDate = createDate;
            Description = description;
            DisplayName = displayName;
            Email = email;
            Groups = groups;
            Id = id;
            LoginProfile = loginProfile;
            MobilePhone = mobilePhone;
            Policies = policies;
            SecurityConfig = securityConfig;
            Tags = tags;
            Trn = trn;
            UpdateDate = updateDate;
            UserId = userId;
            UserName = userName;
        }
    }
}
