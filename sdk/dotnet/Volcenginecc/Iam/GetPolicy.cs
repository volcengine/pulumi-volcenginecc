// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Iam
{
    public static class GetPolicy
    {
        /// <summary>
        /// Data Source schema for Volcengine::IAM::Policy
        /// </summary>
        public static Task<GetPolicyResult> InvokeAsync(GetPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyResult>("volcenginecc:iam/getPolicy:getPolicy", args ?? new GetPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::Policy
        /// </summary>
        public static Output<GetPolicyResult> Invoke(GetPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyResult>("volcenginecc:iam/getPolicy:getPolicy", args ?? new GetPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::Policy
        /// </summary>
        public static Output<GetPolicyResult> Invoke(GetPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyResult>("volcenginecc:iam/getPolicy:getPolicy", args ?? new GetPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetPolicyArgs()
        {
        }
        public static new GetPolicyArgs Empty => new GetPolicyArgs();
    }

    public sealed class GetPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetPolicyInvokeArgs()
        {
        }
        public static new GetPolicyInvokeArgs Empty => new GetPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyResult
    {
        /// <summary>
        /// 策略绑定的身份数量。
        /// </summary>
        public readonly int AttachmentCount;
        /// <summary>
        /// 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
        /// </summary>
        public readonly string Category;
        /// <summary>
        /// 策略创建时间。
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// 策略描述，长度不超过128。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 是否是服务关联角色的策略，0代表否，1代表是。
        /// </summary>
        public readonly int IsServiceRolePolicy;
        /// <summary>
        /// 策略语法内容，例如：{"Statement":[{"Effect":"Allow","Action":["iam:","tag:"],"Resource":["*"]}]}
        /// </summary>
        public readonly string PolicyDocument;
        /// <summary>
        /// 策略名，长度1~64，支持英文、数字和+=,.@-_符号。
        /// </summary>
        public readonly string PolicyName;
        /// <summary>
        /// 策略绑定的角色列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyPolicyRoleResult> PolicyRoles;
        /// <summary>
        /// 策略的TRN。
        /// </summary>
        public readonly string PolicyTrn;
        /// <summary>
        /// 策略类型。System代表系统预设策略，Custom代表自定义策略。
        /// </summary>
        public readonly string PolicyType;
        /// <summary>
        /// 策略绑定的用户组列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyPolicyUserGroupResult> PolicyUserGroups;
        /// <summary>
        /// 策略绑定的用户列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyPolicyUserResult> PolicyUsers;
        /// <summary>
        /// 策略更新时间。
        /// </summary>
        public readonly string UpdatedTime;

        [OutputConstructor]
        private GetPolicyResult(
            int attachmentCount,

            string category,

            string createdTime,

            string description,

            string id,

            int isServiceRolePolicy,

            string policyDocument,

            string policyName,

            ImmutableArray<Outputs.GetPolicyPolicyRoleResult> policyRoles,

            string policyTrn,

            string policyType,

            ImmutableArray<Outputs.GetPolicyPolicyUserGroupResult> policyUserGroups,

            ImmutableArray<Outputs.GetPolicyPolicyUserResult> policyUsers,

            string updatedTime)
        {
            AttachmentCount = attachmentCount;
            Category = category;
            CreatedTime = createdTime;
            Description = description;
            Id = id;
            IsServiceRolePolicy = isServiceRolePolicy;
            PolicyDocument = policyDocument;
            PolicyName = policyName;
            PolicyRoles = policyRoles;
            PolicyTrn = policyTrn;
            PolicyType = policyType;
            PolicyUserGroups = policyUserGroups;
            PolicyUsers = policyUsers;
            UpdatedTime = updatedTime;
        }
    }
}
