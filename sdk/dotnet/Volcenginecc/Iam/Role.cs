// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Iam
{
    /// <summary>
    /// 角色（Role）是IAM体系里的一种虚拟身份，用于将账号内某些访问权限授予给各类身份实体，受信任的身份实体可扮演该角色来访问账号内的云资源。
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcenginecc = Pulumi.Volcenginecc;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var roleDemo = new Volcenginecc.Iam.Role("RoleDemo", new()
    ///     {
    ///         RoleName = "RoleDemo",
    ///         Description = "role attach policies",
    ///         MaxSessionDuration = 3600,
    ///         TrustPolicyDocument = @"{
    ///     ""Statement"": [
    ///         {
    ///             ""Effect"": ""Allow"",
    ///             ""Action"": [
    ///                 ""sts:AssumeRole""
    ///             ],
    ///             ""Principal"": {
    ///                 ""IAM"": [
    ///                     ""trn:iam::20000000xx:root""
    ///                 ]
    ///             }
    ///         }
    ///     ]
    /// }",
    ///         Tags = new[]
    ///         {
    ///             new Volcenginecc.Iam.Inputs.RoleTagArgs
    ///             {
    ///                 Key = "env",
    ///                 Value = "test",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:iam/role:Role example "role_name"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:iam/role:Role")]
    public partial class Role : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 角色创建时间。
        /// </summary>
        [Output("createDate")]
        public Output<string> CreateDate { get; private set; } = null!;

        /// <summary>
        /// 角色描述，长度不超过128。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 角色显示名，长度不超过64。
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// 是否是服务关联角色, 0否，1是。
        /// </summary>
        [Output("isServiceLinkedRole")]
        public Output<int> IsServiceLinkedRole { get; private set; } = null!;

        /// <summary>
        /// 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
        /// </summary>
        [Output("maxSessionDuration")]
        public Output<int> MaxSessionDuration { get; private set; } = null!;

        [Output("policies")]
        public Output<ImmutableArray<Outputs.RolePolicy>> Policies { get; private set; } = null!;

        /// <summary>
        /// 角色ID。
        /// </summary>
        [Output("roleId")]
        public Output<int> RoleId { get; private set; } = null!;

        /// <summary>
        /// 角色名，长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        [Output("roleName")]
        public Output<string> RoleName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.RoleTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 角色TRN。
        /// </summary>
        [Output("trn")]
        public Output<string> Trn { get; private set; } = null!;

        /// <summary>
        /// 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
        /// </summary>
        [Output("trustPolicyDocument")]
        public Output<string> TrustPolicyDocument { get; private set; } = null!;

        /// <summary>
        /// 角色更新时间。
        /// </summary>
        [Output("updateDate")]
        public Output<string> UpdateDate { get; private set; } = null!;


        /// <summary>
        /// Create a Role resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Role(string name, RoleArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:iam/role:Role", name, args ?? new RoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Role(string name, Input<string> id, RoleState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:iam/role:Role", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Role resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Role Get(string name, Input<string> id, RoleState? state = null, CustomResourceOptions? options = null)
        {
            return new Role(name, id, state, options);
        }
    }

    public sealed class RoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 角色描述，长度不超过128。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 角色显示名，长度不超过64。
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
        /// </summary>
        [Input("maxSessionDuration")]
        public Input<int>? MaxSessionDuration { get; set; }

        [Input("policies")]
        private InputList<Inputs.RolePolicyArgs>? _policies;
        public InputList<Inputs.RolePolicyArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.RolePolicyArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// 角色名，长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        [Input("roleName", required: true)]
        public Input<string> RoleName { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.RoleTagArgs>? _tags;
        public InputList<Inputs.RoleTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RoleTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
        /// </summary>
        [Input("trustPolicyDocument")]
        public Input<string>? TrustPolicyDocument { get; set; }

        public RoleArgs()
        {
        }
        public static new RoleArgs Empty => new RoleArgs();
    }

    public sealed class RoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 角色创建时间。
        /// </summary>
        [Input("createDate")]
        public Input<string>? CreateDate { get; set; }

        /// <summary>
        /// 角色描述，长度不超过128。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 角色显示名，长度不超过64。
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// 是否是服务关联角色, 0否，1是。
        /// </summary>
        [Input("isServiceLinkedRole")]
        public Input<int>? IsServiceLinkedRole { get; set; }

        /// <summary>
        /// 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
        /// </summary>
        [Input("maxSessionDuration")]
        public Input<int>? MaxSessionDuration { get; set; }

        [Input("policies")]
        private InputList<Inputs.RolePolicyGetArgs>? _policies;
        public InputList<Inputs.RolePolicyGetArgs> Policies
        {
            get => _policies ?? (_policies = new InputList<Inputs.RolePolicyGetArgs>());
            set => _policies = value;
        }

        /// <summary>
        /// 角色ID。
        /// </summary>
        [Input("roleId")]
        public Input<int>? RoleId { get; set; }

        /// <summary>
        /// 角色名，长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        [Input("tags")]
        private InputList<Inputs.RoleTagGetArgs>? _tags;
        public InputList<Inputs.RoleTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RoleTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 角色TRN。
        /// </summary>
        [Input("trn")]
        public Input<string>? Trn { get; set; }

        /// <summary>
        /// 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
        /// </summary>
        [Input("trustPolicyDocument")]
        public Input<string>? TrustPolicyDocument { get; set; }

        /// <summary>
        /// 角色更新时间。
        /// </summary>
        [Input("updateDate")]
        public Input<string>? UpdateDate { get; set; }

        public RoleState()
        {
        }
        public static new RoleState Empty => new RoleState();
    }
}
