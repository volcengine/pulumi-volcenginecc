// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Iam
{
    /// <summary>
    /// 用户组是用户的集合。当用户组被关联上策略后，同一用户组里的所有用户会拥有对应的策略权限，同一个用户可存在于多个用户组中，可同时拥有多个用户组的权限。
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:iam/group:Group example "user_group_name"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:iam/group:Group")]
    public partial class Group : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 用户组所属主账号的ID。
        /// </summary>
        [Output("accountId")]
        public Output<int> AccountId { get; private set; } = null!;

        [Output("attachedPolicys")]
        public Output<ImmutableArray<Outputs.GroupAttachedPolicy>> AttachedPolicys { get; private set; } = null!;

        /// <summary>
        /// 用户组的创建时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// 用户组描述信息。长度不超过128。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 用户组显示名称。长度不超过64。
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// 用户组的更新时间。
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// 用户组ID。
        /// </summary>
        [Output("userGroupId")]
        public Output<int> UserGroupId { get; private set; } = null!;

        /// <summary>
        /// 用户组名称。长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        [Output("userGroupName")]
        public Output<string> UserGroupName { get; private set; } = null!;

        [Output("users")]
        public Output<ImmutableArray<Outputs.GroupUser>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a Group resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Group(string name, GroupArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:iam/group:Group", name, args ?? new GroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Group(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:iam/group:Group", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Group resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Group Get(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
        {
            return new Group(name, id, state, options);
        }
    }

    public sealed class GroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("attachedPolicys")]
        private InputList<Inputs.GroupAttachedPolicyArgs>? _attachedPolicys;
        public InputList<Inputs.GroupAttachedPolicyArgs> AttachedPolicys
        {
            get => _attachedPolicys ?? (_attachedPolicys = new InputList<Inputs.GroupAttachedPolicyArgs>());
            set => _attachedPolicys = value;
        }

        /// <summary>
        /// 用户组描述信息。长度不超过128。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 用户组显示名称。长度不超过64。
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// 用户组名称。长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        [Input("userGroupName", required: true)]
        public Input<string> UserGroupName { get; set; } = null!;

        [Input("users")]
        private InputList<Inputs.GroupUserArgs>? _users;
        public InputList<Inputs.GroupUserArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.GroupUserArgs>());
            set => _users = value;
        }

        public GroupArgs()
        {
        }
        public static new GroupArgs Empty => new GroupArgs();
    }

    public sealed class GroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 用户组所属主账号的ID。
        /// </summary>
        [Input("accountId")]
        public Input<int>? AccountId { get; set; }

        [Input("attachedPolicys")]
        private InputList<Inputs.GroupAttachedPolicyGetArgs>? _attachedPolicys;
        public InputList<Inputs.GroupAttachedPolicyGetArgs> AttachedPolicys
        {
            get => _attachedPolicys ?? (_attachedPolicys = new InputList<Inputs.GroupAttachedPolicyGetArgs>());
            set => _attachedPolicys = value;
        }

        /// <summary>
        /// 用户组的创建时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// 用户组描述信息。长度不超过128。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 用户组显示名称。长度不超过64。
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// 用户组的更新时间。
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        /// <summary>
        /// 用户组ID。
        /// </summary>
        [Input("userGroupId")]
        public Input<int>? UserGroupId { get; set; }

        /// <summary>
        /// 用户组名称。长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        [Input("userGroupName")]
        public Input<string>? UserGroupName { get; set; }

        [Input("users")]
        private InputList<Inputs.GroupUserGetArgs>? _users;
        public InputList<Inputs.GroupUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.GroupUserGetArgs>());
            set => _users = value;
        }

        public GroupState()
        {
        }
        public static new GroupState Empty => new GroupState();
    }
}
