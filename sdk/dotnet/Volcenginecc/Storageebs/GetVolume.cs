// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Storageebs
{
    public static class GetVolume
    {
        /// <summary>
        /// Data Source schema for Volcengine::StorageEBS::Volume
        /// </summary>
        public static Task<GetVolumeResult> InvokeAsync(GetVolumeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVolumeResult>("volcenginecc:storageebs/getVolume:getVolume", args ?? new GetVolumeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::StorageEBS::Volume
        /// </summary>
        public static Output<GetVolumeResult> Invoke(GetVolumeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeResult>("volcenginecc:storageebs/getVolume:getVolume", args ?? new GetVolumeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::StorageEBS::Volume
        /// </summary>
        public static Output<GetVolumeResult> Invoke(GetVolumeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVolumeResult>("volcenginecc:storageebs/getVolume:getVolume", args ?? new GetVolumeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVolumeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetVolumeArgs()
        {
        }
        public static new GetVolumeArgs Empty => new GetVolumeArgs();
    }

    public sealed class GetVolumeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetVolumeInvokeArgs()
        {
        }
        public static new GetVolumeInvokeArgs Empty => new GetVolumeInvokeArgs();
    }


    [OutputType]
    public sealed class GetVolumeResult
    {
        /// <summary>
        /// 自动快照策略ID。
        /// </summary>
        public readonly string AutoSnapshotPolicyId;
        /// <summary>
        /// 自动快照策略名称。
        /// </summary>
        public readonly string AutoSnapshotPolicyName;
        /// <summary>
        /// 基本性能。
        /// </summary>
        public readonly Outputs.GetVolumeBaselinePerformanceResult BaselinePerformance;
        /// <summary>
        /// 云盘创建时间。
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// 释放实例时，该云盘是否随实例一起释放，取值说明如下：true：云盘随实例一起释放。false：云盘不随实例一起释放。
        /// </summary>
        public readonly bool DeleteWithInstance;
        /// <summary>
        /// 云盘的描述信息，默认为空，长度限制在1 ~ 255字符之间。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 设备名称
        /// </summary>
        public readonly string DeviceName;
        /// <summary>
        /// 具体错误
        /// </summary>
        public readonly string ErrorDetail;
        /// <summary>
        /// 包年包月到期时间。
        /// </summary>
        public readonly string ExpiredTime;
        /// <summary>
        /// 额外性能。
        /// </summary>
        public readonly Outputs.GetVolumeExtraPerformanceResult ExtraPerformance;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 云盘中的镜像ID。
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// 创建云盘的同时挂载的ECS实例ID。
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// 云盘属性，data表示数据盘。默认值为data。说明： 仅支持创建数据盘。
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// 云盘欠费回收时间。
        /// </summary>
        public readonly string OverdueReclaimTime;
        /// <summary>
        /// 云盘欠费关停时间。
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// 付费类型，说明如下： Pre：预付费（包年包月） Post：后付费（按量计费）。
        /// </summary>
        public readonly string PayType;
        /// <summary>
        /// 云盘所要加入的Project（项目）名称。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 续费方式 1：手动续费 2 ：自动续费 3 ：到期不续费。
        /// </summary>
        public readonly double RenewType;
        /// <summary>
        /// Size，数据盘容量大小，单位为GiB。不同类型的数据盘容量范围如下：ESSD*PL0：10~65536 GiB；ESSD*FlexPL：10~65536 GiB；TSSD_TL0：40~65536 GiB
        /// </summary>
        public readonly double Size;
        /// <summary>
        /// 快照计数
        /// </summary>
        public readonly double SnapshotCount;
        /// <summary>
        /// 源快照。
        /// </summary>
        public readonly string SourceSnapshotId;
        /// <summary>
        /// 云盘状态
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 总性能。
        /// </summary>
        public readonly Outputs.GetVolumeTotalPerformanceResult TotalPerformance;
        /// <summary>
        /// 交易状态 0：创建中 1：运行中 2：创建失败
        /// </summary>
        public readonly double TradeStatus;
        /// <summary>
        /// 云盘更新时间。
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// 云盘id。
        /// </summary>
        public readonly string VolumeId;
        /// <summary>
        /// 云盘显示名称。命名规则如下：首字符仅支持中文、字母或下划线（*）。可包含中文、字母、数字、下划线（*）或中划线（-）。长度限制在1~128字符之间。
        /// </summary>
        public readonly string VolumeName;
        /// <summary>
        /// 云盘类型，取值说明如下：ESSD*PL0：极速型SSD云盘，PL0规格。ESSD*FlexPL: 极速型SSD云盘，FlexPL规格。TSSD_TL0: 吞吐型SSD云盘。
        /// </summary>
        public readonly string VolumeType;
        /// <summary>
        /// 可用区ID。
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private GetVolumeResult(
            string autoSnapshotPolicyId,

            string autoSnapshotPolicyName,

            Outputs.GetVolumeBaselinePerformanceResult baselinePerformance,

            string createdAt,

            bool deleteWithInstance,

            string description,

            string deviceName,

            string errorDetail,

            string expiredTime,

            Outputs.GetVolumeExtraPerformanceResult extraPerformance,

            string id,

            string imageId,

            string instanceId,

            string kind,

            string overdueReclaimTime,

            string overdueTime,

            string payType,

            string projectName,

            double renewType,

            double size,

            double snapshotCount,

            string sourceSnapshotId,

            string status,

            Outputs.GetVolumeTotalPerformanceResult totalPerformance,

            double tradeStatus,

            string updatedAt,

            string volumeId,

            string volumeName,

            string volumeType,

            string zoneId)
        {
            AutoSnapshotPolicyId = autoSnapshotPolicyId;
            AutoSnapshotPolicyName = autoSnapshotPolicyName;
            BaselinePerformance = baselinePerformance;
            CreatedAt = createdAt;
            DeleteWithInstance = deleteWithInstance;
            Description = description;
            DeviceName = deviceName;
            ErrorDetail = errorDetail;
            ExpiredTime = expiredTime;
            ExtraPerformance = extraPerformance;
            Id = id;
            ImageId = imageId;
            InstanceId = instanceId;
            Kind = kind;
            OverdueReclaimTime = overdueReclaimTime;
            OverdueTime = overdueTime;
            PayType = payType;
            ProjectName = projectName;
            RenewType = renewType;
            Size = size;
            SnapshotCount = snapshotCount;
            SourceSnapshotId = sourceSnapshotId;
            Status = status;
            TotalPerformance = totalPerformance;
            TradeStatus = tradeStatus;
            UpdatedAt = updatedAt;
            VolumeId = volumeId;
            VolumeName = volumeName;
            VolumeType = volumeType;
            ZoneId = zoneId;
        }
    }
}
