// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Transitrouter
{
    /// <summary>
    /// 通过为网络实例连接或跨地域连接关联的路由表创建或删除静态路由，能够灵活地控制中转路由器中的流量走向。
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcenginecc = Volcengine.Pulumi.Volcenginecc;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var transitRouterRouteEntryDemo = new Volcenginecc.Transitrouter.TransitRouterRouteEntry("TransitRouterRouteEntryDemo", new()
    ///     {
    ///         Description = "Demo Example",
    ///         DestinationCidrBlock = "192.168.1.101/*",
    ///         TransitRouterRouteEntryName = "test-Attachmentkua",
    ///         TransitRouterRouteTableId = "tr-rtb-mijcn***",
    ///         TransitRouterRouteEntryNextHopId = "tr-attach-13fs****",
    ///         TransitRouterRouteEntryNextHopType = "Attachment",
    ///         TransitRouterRouteEntryType = "Propagated",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:transitrouter/transitRouterRouteEntry:TransitRouterRouteEntry example "transit_router_route_table_id|transit_router_route_entry_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:transitrouter/transitRouterRouteEntry:TransitRouterRouteEntry")]
    public partial class TransitRouterRouteEntry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 路由条目的AS路径。
        /// </summary>
        [Output("asPaths")]
        public Output<ImmutableArray<string>> AsPaths { get; private set; } = null!;

        /// <summary>
        /// 路由条目的创建时间。
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 路由条目的目标网段。
        /// </summary>
        [Output("destinationCidrBlock")]
        public Output<string> DestinationCidrBlock { get; private set; } = null!;

        /// <summary>
        /// 路由条目的状态。Available：可用。Creating：创建中。Pending：配置中。Deleting：删除中。Conflicted：未生效。
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// TR路由条目的ID。
        /// </summary>
        [Output("transitRouterRouteEntryId")]
        public Output<string> TransitRouterRouteEntryId { get; private set; } = null!;

        /// <summary>
        /// 路由条目的名称。
        /// </summary>
        [Output("transitRouterRouteEntryName")]
        public Output<string> TransitRouterRouteEntryName { get; private set; } = null!;

        /// <summary>
        /// 路由条目的下一跳ID。
        /// </summary>
        [Output("transitRouterRouteEntryNextHopId")]
        public Output<string> TransitRouterRouteEntryNextHopId { get; private set; } = null!;

        /// <summary>
        /// 路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。
        /// </summary>
        [Output("transitRouterRouteEntryNextHopType")]
        public Output<string> TransitRouterRouteEntryNextHopType { get; private set; } = null!;

        /// <summary>
        /// 路由条目的类型。Static：静态路由。Propagated：自动学习路由。
        /// </summary>
        [Output("transitRouterRouteEntryType")]
        public Output<string> TransitRouterRouteEntryType { get; private set; } = null!;

        /// <summary>
        /// 中转路由器实例关联的路由表的ID。
        /// </summary>
        [Output("transitRouterRouteTableId")]
        public Output<string> TransitRouterRouteTableId { get; private set; } = null!;

        /// <summary>
        /// 路由条目的更新时间。
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a TransitRouterRouteEntry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitRouterRouteEntry(string name, TransitRouterRouteEntryArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:transitrouter/transitRouterRouteEntry:TransitRouterRouteEntry", name, args ?? new TransitRouterRouteEntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitRouterRouteEntry(string name, Input<string> id, TransitRouterRouteEntryState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:transitrouter/transitRouterRouteEntry:TransitRouterRouteEntry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitRouterRouteEntry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitRouterRouteEntry Get(string name, Input<string> id, TransitRouterRouteEntryState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitRouterRouteEntry(name, id, state, options);
        }
    }

    public sealed class TransitRouterRouteEntryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 路由条目的目标网段。
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public Input<string> DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// 路由条目的名称。
        /// </summary>
        [Input("transitRouterRouteEntryName")]
        public Input<string>? TransitRouterRouteEntryName { get; set; }

        /// <summary>
        /// 路由条目的下一跳ID。
        /// </summary>
        [Input("transitRouterRouteEntryNextHopId")]
        public Input<string>? TransitRouterRouteEntryNextHopId { get; set; }

        /// <summary>
        /// 路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。
        /// </summary>
        [Input("transitRouterRouteEntryNextHopType", required: true)]
        public Input<string> TransitRouterRouteEntryNextHopType { get; set; } = null!;

        /// <summary>
        /// 路由条目的类型。Static：静态路由。Propagated：自动学习路由。
        /// </summary>
        [Input("transitRouterRouteEntryType")]
        public Input<string>? TransitRouterRouteEntryType { get; set; }

        /// <summary>
        /// 中转路由器实例关联的路由表的ID。
        /// </summary>
        [Input("transitRouterRouteTableId", required: true)]
        public Input<string> TransitRouterRouteTableId { get; set; } = null!;

        public TransitRouterRouteEntryArgs()
        {
        }
        public static new TransitRouterRouteEntryArgs Empty => new TransitRouterRouteEntryArgs();
    }

    public sealed class TransitRouterRouteEntryState : global::Pulumi.ResourceArgs
    {
        [Input("asPaths")]
        private InputList<string>? _asPaths;

        /// <summary>
        /// 路由条目的AS路径。
        /// </summary>
        public InputList<string> AsPaths
        {
            get => _asPaths ?? (_asPaths = new InputList<string>());
            set => _asPaths = value;
        }

        /// <summary>
        /// 路由条目的创建时间。
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// TR路由表路由条目的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 路由条目的目标网段。
        /// </summary>
        [Input("destinationCidrBlock")]
        public Input<string>? DestinationCidrBlock { get; set; }

        /// <summary>
        /// 路由条目的状态。Available：可用。Creating：创建中。Pending：配置中。Deleting：删除中。Conflicted：未生效。
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// TR路由条目的ID。
        /// </summary>
        [Input("transitRouterRouteEntryId")]
        public Input<string>? TransitRouterRouteEntryId { get; set; }

        /// <summary>
        /// 路由条目的名称。
        /// </summary>
        [Input("transitRouterRouteEntryName")]
        public Input<string>? TransitRouterRouteEntryName { get; set; }

        /// <summary>
        /// 路由条目的下一跳ID。
        /// </summary>
        [Input("transitRouterRouteEntryNextHopId")]
        public Input<string>? TransitRouterRouteEntryNextHopId { get; set; }

        /// <summary>
        /// 路由条目的下一跳类型。取值如下：Attachment：网络实例，表示匹配该路由条目的流量会被转发到指定的网络实例。BlackHole：黑洞，表示匹配该路由条目的流量会被丢弃。
        /// </summary>
        [Input("transitRouterRouteEntryNextHopType")]
        public Input<string>? TransitRouterRouteEntryNextHopType { get; set; }

        /// <summary>
        /// 路由条目的类型。Static：静态路由。Propagated：自动学习路由。
        /// </summary>
        [Input("transitRouterRouteEntryType")]
        public Input<string>? TransitRouterRouteEntryType { get; set; }

        /// <summary>
        /// 中转路由器实例关联的路由表的ID。
        /// </summary>
        [Input("transitRouterRouteTableId")]
        public Input<string>? TransitRouterRouteTableId { get; set; }

        /// <summary>
        /// 路由条目的更新时间。
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public TransitRouterRouteEntryState()
        {
        }
        public static new TransitRouterRouteEntryState Empty => new TransitRouterRouteEntryState();
    }
}
