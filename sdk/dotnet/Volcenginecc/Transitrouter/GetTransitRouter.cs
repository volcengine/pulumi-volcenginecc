// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Transitrouter
{
    public static class GetTransitRouter
    {
        /// <summary>
        /// Data Source schema for Volcengine::TransitRouter::TransitRouter
        /// </summary>
        public static Task<GetTransitRouterResult> InvokeAsync(GetTransitRouterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransitRouterResult>("volcenginecc:transitrouter/getTransitRouter:getTransitRouter", args ?? new GetTransitRouterArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::TransitRouter::TransitRouter
        /// </summary>
        public static Output<GetTransitRouterResult> Invoke(GetTransitRouterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitRouterResult>("volcenginecc:transitrouter/getTransitRouter:getTransitRouter", args ?? new GetTransitRouterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::TransitRouter::TransitRouter
        /// </summary>
        public static Output<GetTransitRouterResult> Invoke(GetTransitRouterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitRouterResult>("volcenginecc:transitrouter/getTransitRouter:getTransitRouter", args ?? new GetTransitRouterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitRouterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTransitRouterArgs()
        {
        }
        public static new GetTransitRouterArgs Empty => new GetTransitRouterArgs();
    }

    public sealed class GetTransitRouterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTransitRouterInvokeArgs()
        {
        }
        public static new GetTransitRouterInvokeArgs Empty => new GetTransitRouterInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransitRouterResult
    {
        /// <summary>
        /// 网络实例连接所属的账号ID。
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// 中转路由器的ASN号。取值范围为64512 ～ 65534 和 4200000000 ～ 4294967294，默认值为64512。
        /// </summary>
        public readonly int Asn;
        /// <summary>
        /// 网络实例连接的详细信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransitRouterAttachmentResult> Attachments;
        /// <summary>
        /// 网络实例连接的业务状态。取值如下：Normal：正常。FinancialLocked：已冻结。
        /// </summary>
        public readonly string BusinessStatus;
        /// <summary>
        /// 网络实例连接的创建时间。
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// 网络实例连接的删除时间。
        /// </summary>
        public readonly string DeletedTime;
        /// <summary>
        /// 中转路由器实例的描述信息。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ~ 255个字符。不传入该参数或该参数不传入数值时，默认为空字符串。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 实例共享的状态。Accepted：已接受。Initial：待接受。
        /// </summary>
        public readonly string GrantStatus;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 中转路由器实例的欠费关停时间。
        /// </summary>
        public readonly string OverdueTime;
        /// <summary>
        /// 中转路由器实例所属项目的名称。不传入该参数或该参数不传入数值时，默认为default。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 中转路由器实例的状态。Creating: 创建中。Deleting: 删除中。Pending：配置中。Available：可用。
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 标签列表
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTransitRouterTagResult> Tags;
        /// <summary>
        /// 中转路由器实例的ID。
        /// </summary>
        public readonly string TransitRouterId;
        /// <summary>
        /// 中转路由器实例的名称。必须以字母、数字或中文开头，可包含字母、数字、中文和以下特殊字符：点号（.）、下划线（_）和短横线（-）。长度限制为1 ~ 128个字符。不传入该参数或该参数不传入数值时，默认为中转路由器实例的ID。
        /// </summary>
        public readonly string TransitRouterName;
        /// <summary>
        /// 中转路由器实例的最近操作时间。
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetTransitRouterResult(
            string accountId,

            int asn,

            ImmutableArray<Outputs.GetTransitRouterAttachmentResult> attachments,

            string businessStatus,

            string creationTime,

            string deletedTime,

            string description,

            string grantStatus,

            string id,

            string overdueTime,

            string projectName,

            string status,

            ImmutableArray<Outputs.GetTransitRouterTagResult> tags,

            string transitRouterId,

            string transitRouterName,

            string updateTime)
        {
            AccountId = accountId;
            Asn = asn;
            Attachments = attachments;
            BusinessStatus = businessStatus;
            CreationTime = creationTime;
            DeletedTime = deletedTime;
            Description = description;
            GrantStatus = grantStatus;
            Id = id;
            OverdueTime = overdueTime;
            ProjectName = projectName;
            Status = status;
            Tags = tags;
            TransitRouterId = transitRouterId;
            TransitRouterName = transitRouterName;
            UpdateTime = updateTime;
        }
    }
}
