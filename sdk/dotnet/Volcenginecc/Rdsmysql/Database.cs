// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Rdsmysql
{
    /// <summary>
    /// 数据库
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:rdsmysql/database:Database example "instance_id|name"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:rdsmysql/database:Database")]
    public partial class Database : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 数据库字符集。目前支持的字符集包含：utf8、utf8mb4（默认）、latin1、ascii。
        /// </summary>
        [Output("characterSetName")]
        public Output<string> CharacterSetName { get; private set; } = null!;

        [Output("databasePrivileges")]
        public Output<ImmutableArray<Outputs.DatabaseDatabasePrivilege>> DatabasePrivileges { get; private set; } = null!;

        /// <summary>
        /// 数据库的描述信息，长度不超过 256 个字符。该字段可选，若不设置该字段，或设置了该字段但描述信息长度为 0 ，则描述信息为空。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 数据库实例 ID。
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// 数据库名称。命名规则如下：名称唯一。长度为 2~64 个字符。以字母开头，以字母或数字结尾。由字母、数字、下划线（_）或中划线（-）组成。不能使用某些预留字，包括 root、admin 等。
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a Database resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Database(string name, DatabaseArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:rdsmysql/database:Database", name, args ?? new DatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Database(string name, Input<string> id, DatabaseState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:rdsmysql/database:Database", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Database resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Database Get(string name, Input<string> id, DatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new Database(name, id, state, options);
        }
    }

    public sealed class DatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 数据库字符集。目前支持的字符集包含：utf8、utf8mb4（默认）、latin1、ascii。
        /// </summary>
        [Input("characterSetName")]
        public Input<string>? CharacterSetName { get; set; }

        [Input("databasePrivileges")]
        private InputList<Inputs.DatabaseDatabasePrivilegeArgs>? _databasePrivileges;
        public InputList<Inputs.DatabaseDatabasePrivilegeArgs> DatabasePrivileges
        {
            get => _databasePrivileges ?? (_databasePrivileges = new InputList<Inputs.DatabaseDatabasePrivilegeArgs>());
            set => _databasePrivileges = value;
        }

        /// <summary>
        /// 数据库的描述信息，长度不超过 256 个字符。该字段可选，若不设置该字段，或设置了该字段但描述信息长度为 0 ，则描述信息为空。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 数据库实例 ID。
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// 数据库名称。命名规则如下：名称唯一。长度为 2~64 个字符。以字母开头，以字母或数字结尾。由字母、数字、下划线（_）或中划线（-）组成。不能使用某些预留字，包括 root、admin 等。
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public DatabaseArgs()
        {
        }
        public static new DatabaseArgs Empty => new DatabaseArgs();
    }

    public sealed class DatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 数据库字符集。目前支持的字符集包含：utf8、utf8mb4（默认）、latin1、ascii。
        /// </summary>
        [Input("characterSetName")]
        public Input<string>? CharacterSetName { get; set; }

        [Input("databasePrivileges")]
        private InputList<Inputs.DatabaseDatabasePrivilegeGetArgs>? _databasePrivileges;
        public InputList<Inputs.DatabaseDatabasePrivilegeGetArgs> DatabasePrivileges
        {
            get => _databasePrivileges ?? (_databasePrivileges = new InputList<Inputs.DatabaseDatabasePrivilegeGetArgs>());
            set => _databasePrivileges = value;
        }

        /// <summary>
        /// 数据库的描述信息，长度不超过 256 个字符。该字段可选，若不设置该字段，或设置了该字段但描述信息长度为 0 ，则描述信息为空。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 数据库实例 ID。
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// 数据库名称。命名规则如下：名称唯一。长度为 2~64 个字符。以字母开头，以字母或数字结尾。由字母、数字、下划线（_）或中划线（-）组成。不能使用某些预留字，包括 root、admin 等。
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public DatabaseState()
        {
        }
        public static new DatabaseState Empty => new DatabaseState();
    }
}
