// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Rdsmysql
{
    public static class GetDatabase
    {
        /// <summary>
        /// Data Source schema for Volcengine::RDSMySQL::Database
        /// </summary>
        public static Task<GetDatabaseResult> InvokeAsync(GetDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseResult>("volcenginecc:rdsmysql/getDatabase:getDatabase", args ?? new GetDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::RDSMySQL::Database
        /// </summary>
        public static Output<GetDatabaseResult> Invoke(GetDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseResult>("volcenginecc:rdsmysql/getDatabase:getDatabase", args ?? new GetDatabaseInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::RDSMySQL::Database
        /// </summary>
        public static Output<GetDatabaseResult> Invoke(GetDatabaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseResult>("volcenginecc:rdsmysql/getDatabase:getDatabase", args ?? new GetDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDatabaseArgs()
        {
        }
        public static new GetDatabaseArgs Empty => new GetDatabaseArgs();
    }

    public sealed class GetDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDatabaseInvokeArgs()
        {
        }
        public static new GetDatabaseInvokeArgs Empty => new GetDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseResult
    {
        /// <summary>
        /// 数据库字符集。目前支持的字符集包含：utf8、utf8mb4（默认）、latin1、ascii。
        /// </summary>
        public readonly string CharacterSetName;
        /// <summary>
        /// 授权数据库权限信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDatabaseDatabasePrivilegeResult> DatabasePrivileges;
        /// <summary>
        /// 数据库的描述信息，长度不超过 256 个字符。该字段可选，若不设置该字段，或设置了该字段但描述信息长度为 0 ，则描述信息为空。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 数据库实例 ID。
        /// </summary>
        public readonly string InstanceId;
        /// <summary>
        /// 数据库名称。命名规则如下：名称唯一。长度为 2~64 个字符。以字母开头，以字母或数字结尾。由字母、数字、下划线（_）或中划线（-）组成。不能使用某些预留字，包括 root、admin 等。
        /// </summary>
        public readonly string Name;
        public readonly string Status;

        [OutputConstructor]
        private GetDatabaseResult(
            string characterSetName,

            ImmutableArray<Outputs.GetDatabaseDatabasePrivilegeResult> databasePrivileges,

            string description,

            string id,

            string instanceId,

            string name,

            string status)
        {
            CharacterSetName = characterSetName;
            DatabasePrivileges = databasePrivileges;
            Description = description;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            Status = status;
        }
    }
}
