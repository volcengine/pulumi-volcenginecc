// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Clb
{
    /// <summary>
    /// CLB提供监听级别的访问控制，如果您希望仅允许某些IP、或仅拒绝某些IP通过监听端口访问CLB实例，可以对该监听器设置访问控制策略。
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcenginecc = Volcengine.Pulumi.Volcenginecc;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var aclDemo = new Volcenginecc.Clb.Acl("AclDemo", new()
    ///     {
    ///         AclName = "AclDemo",
    ///         Description = "AclDemo Example",
    ///         ProjectName = "default",
    ///         AclEntries = new[]
    ///         {
    ///             new Volcenginecc.Clb.Inputs.AclAclEntryArgs
    ///             {
    ///                 Description = "AclDemo description",
    ///                 Entry = "1.1.2.2/32",
    ///             },
    ///             new Volcenginecc.Clb.Inputs.AclAclEntryArgs
    ///             {
    ///                 Description = "AclDemo description",
    ///                 Entry = "2.2.2.2/32",
    ///             },
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Volcenginecc.Clb.Inputs.AclTagArgs
    ///             {
    ///                 Key = "env",
    ///                 Value = "test",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:clb/acl:Acl example "acl_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:clb/acl:Acl")]
    public partial class Acl : global::Pulumi.CustomResource
    {
        [Output("aclEntries")]
        public Output<ImmutableArray<Outputs.AclAclEntry>> AclEntries { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组包含的IP条目数量。
        /// </summary>
        [Output("aclEntryCount")]
        public Output<int> AclEntryCount { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组的ID。
        /// </summary>
        [Output("aclId")]
        public Output<string> AclId { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。
        /// </summary>
        [Output("aclName")]
        public Output<string> AclName { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组的创建时间。
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("listeners")]
        public Output<ImmutableArray<Outputs.AclListener>> Listeners { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组所属项目的名称。不填默认为default。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 是否为托管资源。true：是。false：否。
        /// </summary>
        [Output("serviceManaged")]
        public Output<bool> ServiceManaged { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.AclTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 访问控制策略组的最近操作时间。
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Acl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Acl(string name, AclArgs? args = null, CustomResourceOptions? options = null)
            : base("volcenginecc:clb/acl:Acl", name, args ?? new AclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Acl(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:clb/acl:Acl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Acl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Acl Get(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
        {
            return new Acl(name, id, state, options);
        }
    }

    public sealed class AclArgs : global::Pulumi.ResourceArgs
    {
        [Input("aclEntries")]
        private InputList<Inputs.AclAclEntryArgs>? _aclEntries;
        public InputList<Inputs.AclAclEntryArgs> AclEntries
        {
            get => _aclEntries ?? (_aclEntries = new InputList<Inputs.AclAclEntryArgs>());
            set => _aclEntries = value;
        }

        /// <summary>
        /// 访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。
        /// </summary>
        [Input("aclName")]
        public Input<string>? AclName { get; set; }

        /// <summary>
        /// 访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 访问控制策略组所属项目的名称。不填默认为default。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.AclTagArgs>? _tags;
        public InputList<Inputs.AclTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AclTagArgs>());
            set => _tags = value;
        }

        public AclArgs()
        {
        }
        public static new AclArgs Empty => new AclArgs();
    }

    public sealed class AclState : global::Pulumi.ResourceArgs
    {
        [Input("aclEntries")]
        private InputList<Inputs.AclAclEntryGetArgs>? _aclEntries;
        public InputList<Inputs.AclAclEntryGetArgs> AclEntries
        {
            get => _aclEntries ?? (_aclEntries = new InputList<Inputs.AclAclEntryGetArgs>());
            set => _aclEntries = value;
        }

        /// <summary>
        /// 访问控制策略组包含的IP条目数量。
        /// </summary>
        [Input("aclEntryCount")]
        public Input<int>? AclEntryCount { get; set; }

        /// <summary>
        /// 访问控制策略组的ID。
        /// </summary>
        [Input("aclId")]
        public Input<string>? AclId { get; set; }

        /// <summary>
        /// 访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。
        /// </summary>
        [Input("aclName")]
        public Input<string>? AclName { get; set; }

        /// <summary>
        /// 访问控制策略组的创建时间。
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// 访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("listeners")]
        private InputList<Inputs.AclListenerGetArgs>? _listeners;
        public InputList<Inputs.AclListenerGetArgs> Listeners
        {
            get => _listeners ?? (_listeners = new InputList<Inputs.AclListenerGetArgs>());
            set => _listeners = value;
        }

        /// <summary>
        /// 访问控制策略组所属项目的名称。不填默认为default。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 是否为托管资源。true：是。false：否。
        /// </summary>
        [Input("serviceManaged")]
        public Input<bool>? ServiceManaged { get; set; }

        /// <summary>
        /// 访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.AclTagGetArgs>? _tags;
        public InputList<Inputs.AclTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.AclTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 访问控制策略组的最近操作时间。
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public AclState()
        {
        }
        public static new AclState Empty => new AclState();
    }
}
