// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Clb
{
    public static class GetAcl
    {
        /// <summary>
        /// Data Source schema for Volcengine::CLB::ACL
        /// </summary>
        public static Task<GetAclResult> InvokeAsync(GetAclArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAclResult>("volcenginecc:clb/getAcl:getAcl", args ?? new GetAclArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::ACL
        /// </summary>
        public static Output<GetAclResult> Invoke(GetAclInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclResult>("volcenginecc:clb/getAcl:getAcl", args ?? new GetAclInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::ACL
        /// </summary>
        public static Output<GetAclResult> Invoke(GetAclInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAclResult>("volcenginecc:clb/getAcl:getAcl", args ?? new GetAclInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAclArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAclArgs()
        {
        }
        public static new GetAclArgs Empty => new GetAclArgs();
    }

    public sealed class GetAclInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAclInvokeArgs()
        {
        }
        public static new GetAclInvokeArgs Empty => new GetAclInvokeArgs();
    }


    [OutputType]
    public sealed class GetAclResult
    {
        /// <summary>
        /// 访问控制策略组中IP条目的详细信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAclAclEntryResult> AclEntries;
        /// <summary>
        /// 访问控制策略组包含的IP条目数量。
        /// </summary>
        public readonly int AclEntryCount;
        /// <summary>
        /// 访问控制策略组的ID。
        /// </summary>
        public readonly string AclId;
        /// <summary>
        /// 访问控制策略组的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线（_）和中划线（-）。长度限制为1～128个字符。不填默认为访问控制策略组ID。
        /// </summary>
        public readonly string AclName;
        /// <summary>
        /// 访问控制策略组的创建时间。
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// 访问控制策略组的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0～255字符。不填则默认为空字符串。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 访问控制策略组关联的监听器的详细信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAclListenerResult> Listeners;
        /// <summary>
        /// 访问控制策略组所属项目的名称。不填默认为default。
        /// </summary>
        public readonly string ProjectName;
        /// <summary>
        /// 是否为托管资源。true：是。false：否。
        /// </summary>
        public readonly bool ServiceManaged;
        /// <summary>
        /// 访问控制策略组的状态。Creating：创建中。Active：正常可用。Configuring：配置中。Deleting：删除中。
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// 访问控制策略组标签的详细信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAclTagResult> Tags;
        /// <summary>
        /// 访问控制策略组的最近操作时间。
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetAclResult(
            ImmutableArray<Outputs.GetAclAclEntryResult> aclEntries,

            int aclEntryCount,

            string aclId,

            string aclName,

            string createTime,

            string description,

            string id,

            ImmutableArray<Outputs.GetAclListenerResult> listeners,

            string projectName,

            bool serviceManaged,

            string status,

            ImmutableArray<Outputs.GetAclTagResult> tags,

            string updateTime)
        {
            AclEntries = aclEntries;
            AclEntryCount = aclEntryCount;
            AclId = aclId;
            AclName = aclName;
            CreateTime = createTime;
            Description = description;
            Id = id;
            Listeners = listeners;
            ProjectName = projectName;
            ServiceManaged = serviceManaged;
            Status = status;
            Tags = tags;
            UpdateTime = updateTime;
        }
    }
}
