// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Clb
{
    public static class GetRule
    {
        /// <summary>
        /// Data Source schema for Volcengine::CLB::Rule
        /// </summary>
        public static Task<GetRuleResult> InvokeAsync(GetRuleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuleResult>("volcenginecc:clb/getRule:getRule", args ?? new GetRuleArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::Rule
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("volcenginecc:clb/getRule:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CLB::Rule
        /// </summary>
        public static Output<GetRuleResult> Invoke(GetRuleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuleResult>("volcenginecc:clb/getRule:getRule", args ?? new GetRuleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRuleArgs()
        {
        }
        public static new GetRuleArgs Empty => new GetRuleArgs();
    }

    public sealed class GetRuleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRuleInvokeArgs()
        {
        }
        public static new GetRuleInvokeArgs Empty => new GetRuleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuleResult
    {
        /// <summary>
        /// 转发规则的转发动作。取值如下：Forward：转发至。Redirect：重定向至。
        /// </summary>
        public readonly string ActionType;
        /// <summary>
        /// 转发规则的描述，默认值为空字符串。规范如下：必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 转发规则的域名。
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 监听器ID。
        /// </summary>
        public readonly string ListenerId;
        /// <summary>
        /// 重定向相关配置信息。
        /// </summary>
        public readonly Outputs.GetRuleRedirectConfigResult RedirectConfig;
        /// <summary>
        /// 转发规则ID。
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// 转发规则关联的后端服务器组的ID。
        /// </summary>
        public readonly string ServerGroupId;
        /// <summary>
        /// 标签列表。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRuleTagResult> Tags;
        /// <summary>
        /// 转发规则的URL。
        /// </summary>
        public readonly string Url;

        [OutputConstructor]
        private GetRuleResult(
            string actionType,

            string description,

            string domain,

            string id,

            string listenerId,

            Outputs.GetRuleRedirectConfigResult redirectConfig,

            string ruleId,

            string serverGroupId,

            ImmutableArray<Outputs.GetRuleTagResult> tags,

            string url)
        {
            ActionType = actionType;
            Description = description;
            Domain = domain;
            Id = id;
            ListenerId = listenerId;
            RedirectConfig = redirectConfig;
            RuleId = ruleId;
            ServerGroupId = serverGroupId;
            Tags = tags;
            Url = url;
        }
    }
}
