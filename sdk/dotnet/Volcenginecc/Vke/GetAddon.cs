// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Vke
{
    public static class GetAddon
    {
        /// <summary>
        /// Data Source schema for Volcengine::VKE::Addon
        /// </summary>
        public static Task<GetAddonResult> InvokeAsync(GetAddonArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAddonResult>("volcenginecc:vke/getAddon:getAddon", args ?? new GetAddonArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::VKE::Addon
        /// </summary>
        public static Output<GetAddonResult> Invoke(GetAddonInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddonResult>("volcenginecc:vke/getAddon:getAddon", args ?? new GetAddonInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::VKE::Addon
        /// </summary>
        public static Output<GetAddonResult> Invoke(GetAddonInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddonResult>("volcenginecc:vke/getAddon:getAddon", args ?? new GetAddonInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddonArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetAddonArgs()
        {
        }
        public static new GetAddonArgs Empty => new GetAddonArgs();
    }

    public sealed class GetAddonInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetAddonInvokeArgs()
        {
        }
        public static new GetAddonInvokeArgs Empty => new GetAddonInvokeArgs();
    }


    [OutputType]
    public sealed class GetAddonResult
    {
        /// <summary>
        /// 组件所在集群 ID。
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// 组件配置。
        /// </summary>
        public readonly string Config;
        /// <summary>
        /// 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
        /// </summary>
        public readonly string DeployMode;
        /// <summary>
        /// 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
        /// </summary>
        public readonly string DeployNodeType;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 组件名称。
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// 组件状态。
        /// </summary>
        public readonly Outputs.GetAddonStatusResult Status;
        /// <summary>
        /// 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// 组件版本。
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetAddonResult(
            string clusterId,

            string config,

            string createTime,

            string deployMode,

            string deployNodeType,

            string id,

            string name,

            Outputs.GetAddonStatusResult status,

            string updateTime,

            string version)
        {
            ClusterId = clusterId;
            Config = config;
            CreateTime = createTime;
            DeployMode = deployMode;
            DeployNodeType = deployNodeType;
            Id = id;
            Name = name;
            Status = status;
            UpdateTime = updateTime;
            Version = version;
        }
    }
}
