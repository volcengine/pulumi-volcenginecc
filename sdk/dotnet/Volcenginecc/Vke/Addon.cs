// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Vke
{
    /// <summary>
    /// 查询符合条件的已安装组件详情列表。
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:vke/addon:Addon example "cluster_id|name"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:vke/addon:Addon")]
    public partial class Addon : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 组件所在集群 ID。
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// 组件配置。
        /// </summary>
        [Output("config")]
        public Output<string> Config { get; private set; } = null!;

        /// <summary>
        /// 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
        /// </summary>
        [Output("deployMode")]
        public Output<string> DeployMode { get; private set; } = null!;

        /// <summary>
        /// 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
        /// </summary>
        [Output("deployNodeType")]
        public Output<string> DeployNodeType { get; private set; } = null!;

        /// <summary>
        /// 组件名称。
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// 组件状态。
        /// </summary>
        [Output("status")]
        public Output<Outputs.AddonStatus> Status { get; private set; } = null!;

        /// <summary>
        /// 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// 组件版本。
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Addon resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Addon(string name, AddonArgs? args = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vke/addon:Addon", name, args ?? new AddonArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Addon(string name, Input<string> id, AddonState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vke/addon:Addon", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Addon resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Addon Get(string name, Input<string> id, AddonState? state = null, CustomResourceOptions? options = null)
        {
            return new Addon(name, id, state, options);
        }
    }

    public sealed class AddonArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 组件所在集群 ID。
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// 组件配置。
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
        /// </summary>
        [Input("deployMode")]
        public Input<string>? DeployMode { get; set; }

        /// <summary>
        /// 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
        /// </summary>
        [Input("deployNodeType")]
        public Input<string>? DeployNodeType { get; set; }

        /// <summary>
        /// 组件名称。
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// 组件版本。
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public AddonArgs()
        {
        }
        public static new AddonArgs Empty => new AddonArgs();
    }

    public sealed class AddonState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 组件所在集群 ID。
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// 组件配置。
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
        /// </summary>
        [Input("deployMode")]
        public Input<string>? DeployMode { get; set; }

        /// <summary>
        /// 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
        /// </summary>
        [Input("deployNodeType")]
        public Input<string>? DeployNodeType { get; set; }

        /// <summary>
        /// 组件名称。
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// 组件状态。
        /// </summary>
        [Input("status")]
        public Input<Inputs.AddonStatusGetArgs>? Status { get; set; }

        /// <summary>
        /// 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// 组件版本。
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public AddonState()
        {
        }
        public static new AddonState Empty => new AddonState();
    }
}
