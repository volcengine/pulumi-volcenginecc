// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Cr
{
    public static class GetRepository
    {
        /// <summary>
        /// Data Source schema for Volcengine::CR::Repository
        /// </summary>
        public static Task<GetRepositoryResult> InvokeAsync(GetRepositoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryResult>("volcenginecc:cr/getRepository:getRepository", args ?? new GetRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CR::Repository
        /// </summary>
        public static Output<GetRepositoryResult> Invoke(GetRepositoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryResult>("volcenginecc:cr/getRepository:getRepository", args ?? new GetRepositoryInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::CR::Repository
        /// </summary>
        public static Output<GetRepositoryResult> Invoke(GetRepositoryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryResult>("volcenginecc:cr/getRepository:getRepository", args ?? new GetRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRepositoryArgs()
        {
        }
        public static new GetRepositoryArgs Empty => new GetRepositoryArgs();
    }

    public sealed class GetRepositoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRepositoryInvokeArgs()
        {
        }
        public static new GetRepositoryInvokeArgs Empty => new GetRepositoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetRepositoryResult
    {
        /// <summary>
        /// 访问等级，取值如下：Private：私有类型 OCI 制品仓库，只能被有权限的用户访问。Public：公有类型 OCI 制品仓库，可以被所有用户访问。单次可填写一个或多个访问等级。
        /// </summary>
        public readonly string AccessLevel;
        /// <summary>
        /// 创建 OCI 制品仓库的时间。RFC3339 格式的 UTC+0 时间。
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// 镜像仓库描述，描述长度为 0~300 个 UTF-8 字符。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// OCI 制品仓库名称。同一个命名空间下，名称必须唯一。支持小写英文、数字、分隔符（分隔符可输入一个.或/、一个或多个-、一个或两个_，且分隔符不能出现在首位或末位，不能连续出现），长度限制为 1～128 个字符。
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// 目标命名空间名称。在 镜像仓库控制台 目标实例的 命名空间 页面，获取命名空间名称。
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// 指定命名空间所属的镜像仓库实例名称。在 镜像仓库控制台 的 实例列表 页面，获取实例名称。
        /// </summary>
        public readonly string Registry;
        /// <summary>
        /// 最近一次更新 OCI 制品仓库的时间。RFC3339 格式的 UTC+0 时间。
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetRepositoryResult(
            string accessLevel,

            string createTime,

            string description,

            string id,

            string name,

            string @namespace,

            string registry,

            string updateTime)
        {
            AccessLevel = accessLevel;
            CreateTime = createTime;
            Description = description;
            Id = id;
            Name = name;
            Namespace = @namespace;
            Registry = registry;
            UpdateTime = updateTime;
        }
    }
}
