// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Cr
{
    /// <summary>
    /// 镜像仓库（Container Registry，CR）提供安全高可用的容器镜像、Helm Chart 等符合 OCI 标准的云原生制品托管服务，方便企业用户管理容器镜像和 Helm Chart 的全生命周期。
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:cr/registry:Registry example "name"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:cr/registry:Registry")]
    public partial class Registry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 镜像仓库实例的付费类型，目前仅支持 PostCharge按量付费模式。
        /// </summary>
        [Output("chargeType")]
        public Output<string> ChargeType { get; private set; } = null!;

        /// <summary>
        /// 创建镜像仓库实例的时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// 仅计费类型为HybridCharge有值，实例到期时间
        /// </summary>
        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        /// <summary>
        /// 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// 填写实例需要关联的项目。一个实例仅支持关联一个项目
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// ProxyCache配置，设置为ProxyCache时必填
        /// </summary>
        [Output("proxyCache")]
        public Output<Outputs.RegistryProxyCache> ProxyCache { get; private set; } = null!;

        /// <summary>
        /// 是否设置为ProxyCache实例
        /// </summary>
        [Output("proxyCacheEnabled")]
        public Output<bool> ProxyCacheEnabled { get; private set; } = null!;

        /// <summary>
        /// 仅计费类型为HybridCharge有值，实例自动续费类型
        /// </summary>
        [Output("renewType")]
        public Output<string> RenewType { get; private set; } = null!;

        /// <summary>
        /// 镜像仓库实例状态，由 Phase 和 Conditions 组成。合法的 Phase 和 Conditions 组合如下所示：{Creating, [Progressing]}：创建中,{Running, [Ok]}：运行中,{Running, [Degraded]}：运行中,{Stopped, [Balance]}：欠费关停,{Stopped, [Released]}：待回收,{Stopped, [Released, Balance]}：欠费关停,{Starting, [Progressing]}：启动中,{Deleting, [Progressing]}：销毁中,{Failed, [Unknown]}：异常
        /// </summary>
        [Output("status")]
        public Output<Outputs.RegistryStatus> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.RegistryTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Registry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Registry(string name, RegistryArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:cr/registry:Registry", name, args ?? new RegistryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Registry(string name, Input<string> id, RegistryState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:cr/registry:Registry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Registry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Registry Get(string name, Input<string> id, RegistryState? state = null, CustomResourceOptions? options = null)
        {
            return new Registry(name, id, state, options);
        }
    }

    public sealed class RegistryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// 填写实例需要关联的项目。一个实例仅支持关联一个项目
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("tags")]
        private InputList<Inputs.RegistryTagArgs>? _tags;
        public InputList<Inputs.RegistryTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RegistryTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RegistryArgs()
        {
        }
        public static new RegistryArgs Empty => new RegistryArgs();
    }

    public sealed class RegistryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 镜像仓库实例的付费类型，目前仅支持 PostCharge按量付费模式。
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// 创建镜像仓库实例的时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// 仅计费类型为HybridCharge有值，实例到期时间
        /// </summary>
        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        /// <summary>
        /// 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// 填写实例需要关联的项目。一个实例仅支持关联一个项目
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// ProxyCache配置，设置为ProxyCache时必填
        /// </summary>
        [Input("proxyCache")]
        public Input<Inputs.RegistryProxyCacheGetArgs>? ProxyCache { get; set; }

        /// <summary>
        /// 是否设置为ProxyCache实例
        /// </summary>
        [Input("proxyCacheEnabled")]
        public Input<bool>? ProxyCacheEnabled { get; set; }

        /// <summary>
        /// 仅计费类型为HybridCharge有值，实例自动续费类型
        /// </summary>
        [Input("renewType")]
        public Input<string>? RenewType { get; set; }

        /// <summary>
        /// 镜像仓库实例状态，由 Phase 和 Conditions 组成。合法的 Phase 和 Conditions 组合如下所示：{Creating, [Progressing]}：创建中,{Running, [Ok]}：运行中,{Running, [Degraded]}：运行中,{Stopped, [Balance]}：欠费关停,{Stopped, [Released]}：待回收,{Stopped, [Released, Balance]}：欠费关停,{Starting, [Progressing]}：启动中,{Deleting, [Progressing]}：销毁中,{Failed, [Unknown]}：异常
        /// </summary>
        [Input("status")]
        public Input<Inputs.RegistryStatusGetArgs>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.RegistryTagGetArgs>? _tags;
        public InputList<Inputs.RegistryTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.RegistryTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RegistryState()
        {
        }
        public static new RegistryState Empty => new RegistryState();
    }
}
