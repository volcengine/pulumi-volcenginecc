// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Vpc
{
    /// <summary>
    /// 前缀列表是一组CIDR地址块的集合，用于简化安全组规则、路由表条目的配置。当前缀列表修改时，所有关联它的资源均会同步修改。
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcenginecc = Volcengine.Pulumi.Volcenginecc;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var prefixlistDemo = new Volcenginecc.Vpc.PrefixList("PrefixlistDemo", new()
    ///     {
    ///         Description = "PrefixlistDemo Example",
    ///         IpVersion = "IPv4",
    ///         MaxEntries = 20,
    ///         PrefixListName = "my-prefix-list",
    ///         ProjectName = "default",
    ///         PrefixListEntries = new[]
    ///         {
    ///             new Volcenginecc.Vpc.Inputs.PrefixListPrefixListEntryArgs
    ///             {
    ///                 Cidr = "192.168.0.0/*",
    ///                 Description = "privite description",
    ///             },
    ///         },
    ///         Tags = new[]
    ///         {
    ///             new Volcenginecc.Vpc.Inputs.PrefixListTagArgs
    ///             {
    ///                 Key = "env",
    ///                 Value = "test",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:vpc/prefixList:PrefixList example "prefix_list_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:vpc/prefixList:PrefixList")]
    public partial class PrefixList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 前缀列表关联的资源数量。
        /// </summary>
        [Output("associationCount")]
        public Output<int> AssociationCount { get; private set; } = null!;

        [Output("associationsRouteTables")]
        public Output<ImmutableArray<Outputs.PrefixListAssociationsRouteTable>> AssociationsRouteTables { get; private set; } = null!;

        [Output("associationsSecurityGroups")]
        public Output<ImmutableArray<Outputs.PrefixListAssociationsSecurityGroup>> AssociationsSecurityGroups { get; private set; } = null!;

        /// <summary>
        /// 前缀列表的创建时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        /// </summary>
        [Output("ipVersion")]
        public Output<string> IpVersion { get; private set; } = null!;

        /// <summary>
        /// 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        /// </summary>
        [Output("maxEntries")]
        public Output<int> MaxEntries { get; private set; } = null!;

        [Output("prefixListEntries")]
        public Output<ImmutableArray<Outputs.PrefixListPrefixListEntry>> PrefixListEntries { get; private set; } = null!;

        /// <summary>
        /// 前缀列表的ID。
        /// </summary>
        [Output("prefixListId")]
        public Output<string> PrefixListId { get; private set; } = null!;

        /// <summary>
        /// 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        /// </summary>
        [Output("prefixListName")]
        public Output<string> PrefixListName { get; private set; } = null!;

        /// <summary>
        /// 前缀列表所属项目的名称，不填默认加入default项目。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.PrefixListTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 前缀列表的最近一次修改时间。
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;


        /// <summary>
        /// Create a PrefixList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrefixList(string name, PrefixListArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/prefixList:PrefixList", name, args ?? new PrefixListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrefixList(string name, Input<string> id, PrefixListState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/prefixList:PrefixList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrefixList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrefixList Get(string name, Input<string> id, PrefixListState? state = null, CustomResourceOptions? options = null)
        {
            return new PrefixList(name, id, state, options);
        }
    }

    public sealed class PrefixListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        /// </summary>
        [Input("maxEntries", required: true)]
        public Input<int> MaxEntries { get; set; } = null!;

        [Input("prefixListEntries")]
        private InputList<Inputs.PrefixListPrefixListEntryArgs>? _prefixListEntries;
        public InputList<Inputs.PrefixListPrefixListEntryArgs> PrefixListEntries
        {
            get => _prefixListEntries ?? (_prefixListEntries = new InputList<Inputs.PrefixListPrefixListEntryArgs>());
            set => _prefixListEntries = value;
        }

        /// <summary>
        /// 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        /// </summary>
        [Input("prefixListName")]
        public Input<string>? PrefixListName { get; set; }

        /// <summary>
        /// 前缀列表所属项目的名称，不填默认加入default项目。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        [Input("tags")]
        private InputList<Inputs.PrefixListTagArgs>? _tags;
        public InputList<Inputs.PrefixListTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PrefixListTagArgs>());
            set => _tags = value;
        }

        public PrefixListArgs()
        {
        }
        public static new PrefixListArgs Empty => new PrefixListArgs();
    }

    public sealed class PrefixListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 前缀列表关联的资源数量。
        /// </summary>
        [Input("associationCount")]
        public Input<int>? AssociationCount { get; set; }

        [Input("associationsRouteTables")]
        private InputList<Inputs.PrefixListAssociationsRouteTableGetArgs>? _associationsRouteTables;
        public InputList<Inputs.PrefixListAssociationsRouteTableGetArgs> AssociationsRouteTables
        {
            get => _associationsRouteTables ?? (_associationsRouteTables = new InputList<Inputs.PrefixListAssociationsRouteTableGetArgs>());
            set => _associationsRouteTables = value;
        }

        [Input("associationsSecurityGroups")]
        private InputList<Inputs.PrefixListAssociationsSecurityGroupGetArgs>? _associationsSecurityGroups;
        public InputList<Inputs.PrefixListAssociationsSecurityGroupGetArgs> AssociationsSecurityGroups
        {
            get => _associationsSecurityGroups ?? (_associationsSecurityGroups = new InputList<Inputs.PrefixListAssociationsSecurityGroupGetArgs>());
            set => _associationsSecurityGroups = value;
        }

        /// <summary>
        /// 前缀列表的创建时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// 前缀列表的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// IP版本类型。取值：IPv4（默认值）：IPv4类型。IPv6：IPv6类型。
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// 最大条目数，即前缀列表最多可添加条目的数量。取值范围为1～200。
        /// </summary>
        [Input("maxEntries")]
        public Input<int>? MaxEntries { get; set; }

        [Input("prefixListEntries")]
        private InputList<Inputs.PrefixListPrefixListEntryGetArgs>? _prefixListEntries;
        public InputList<Inputs.PrefixListPrefixListEntryGetArgs> PrefixListEntries
        {
            get => _prefixListEntries ?? (_prefixListEntries = new InputList<Inputs.PrefixListPrefixListEntryGetArgs>());
            set => _prefixListEntries = value;
        }

        /// <summary>
        /// 前缀列表的ID。
        /// </summary>
        [Input("prefixListId")]
        public Input<string>? PrefixListId { get; set; }

        /// <summary>
        /// 前缀列表的名称。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短划线（-）。
        /// </summary>
        [Input("prefixListName")]
        public Input<string>? PrefixListName { get; set; }

        /// <summary>
        /// 前缀列表所属项目的名称，不填默认加入default项目。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 前缀列表的状态。取值：Available：可用；Creating：创建中；Deleting：删除中；Pending：修改中。
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputList<Inputs.PrefixListTagGetArgs>? _tags;
        public InputList<Inputs.PrefixListTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.PrefixListTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 前缀列表的最近一次修改时间。
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        public PrefixListState()
        {
        }
        public static new PrefixListState Empty => new PrefixListState();
    }
}
