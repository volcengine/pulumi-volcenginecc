// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Vpc
{
    /// <summary>
    /// 子网是在指定可用区内分配的一段VPC网段内的网段，它为云上资源（如云服务器、负载均衡等）提供私网IP地址。
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Volcenginecc = Pulumi.Volcenginecc;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var subnetDemo = new Volcenginecc.Vpc.Subnet("SubnetDemo", new()
    ///     {
    ///         VpcId = "vpc-xxxx",
    ///         ZoneId = "cn-beijing",
    ///         SubnetName = "subnetDemo",
    ///         Description = "subnetDemo description",
    ///         CidrBlock = "192.168.xx.0/24",
    ///         Tags = new[]
    ///         {
    ///             new Volcenginecc.Vpc.Inputs.SubnetTagArgs
    ///             {
    ///                 Key = "env",
    ///                 Value = "test",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:vpc/subnet:Subnet example "subnet_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:vpc/subnet:Subnet")]
    public partial class Subnet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 子网所属账户的ID。
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// 子网中可用的IP地址数量。
        /// </summary>
        [Output("availableIpAddressCount")]
        public Output<int> AvailableIpAddressCount { get; private set; } = null!;

        /// <summary>
        /// 子网的IPv4网段。
        /// </summary>
        [Output("cidrBlock")]
        public Output<string> CidrBlock { get; private set; } = null!;

        /// <summary>
        /// 子网的创建时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// 子网的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不能以http://或https://开头。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 开启/关闭IPv6功能。仅当子网所属的VPC开通IPv6功能时，可配置此参数。1、true：开启。2、false：关闭。仅当子网内没有分配IPv6地址的云资源时，可配置此取值。
        /// </summary>
        [Output("enableIpv6")]
        public Output<bool> EnableIpv6 { get; private set; } = null!;

        /// <summary>
        /// 子网IPv6网段。1、创建/修改时请输入子网IPv6网段的最后8比特位（子网的掩码固定为/64）。2、仅当EnableIpv6设置为true时，支持配置本参数。3、取值范围：0～255。掩码固定为/64。
        /// </summary>
        [Output("ipv6CidrBlock")]
        public Output<string> Ipv6CidrBlock { get; private set; } = null!;

        /// <summary>
        /// 该子网是否为默认子网。1、true：默认子网，表示该子网是创建ECS实例时系统自动创建的子网。2、false：非默认子网，表示该子网是用户手动创建的。
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// 子网关联的网络ACL的ID。
        /// </summary>
        [Output("networkAclId")]
        public Output<string> NetworkAclId { get; private set; } = null!;

        /// <summary>
        /// 子网所在VPC实例所属项目的名称。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 路由表信息。
        /// </summary>
        [Output("routeTable")]
        public Output<Outputs.SubnetRouteTable> RouteTable { get; private set; } = null!;

        /// <summary>
        /// 子网的状态。1、Pending：表示配置中。2、Available：表示可用。
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// 待修改信息的子网的ID。
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// 子网的名称，长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不能以http://或https://开头，不填默认是子网的ID。
        /// </summary>
        [Output("subnetName")]
        public Output<string> SubnetName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.SubnetTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 子网下可用IP总数。
        /// </summary>
        [Output("totalIpv4Count")]
        public Output<int> TotalIpv4Count { get; private set; } = null!;

        /// <summary>
        /// 子网的更新时间。
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// 子网所属VPC的ID。
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// 要创建的子网所属的可用区ID，更多可用区信息请参见地域和可用区。
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Subnet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Subnet(string name, SubnetArgs args, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/subnet:Subnet", name, args ?? new SubnetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Subnet(string name, Input<string> id, SubnetState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/subnet:Subnet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Subnet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Subnet Get(string name, Input<string> id, SubnetState? state = null, CustomResourceOptions? options = null)
        {
            return new Subnet(name, id, state, options);
        }
    }

    public sealed class SubnetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 子网的IPv4网段。
        /// </summary>
        [Input("cidrBlock", required: true)]
        public Input<string> CidrBlock { get; set; } = null!;

        /// <summary>
        /// 子网的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不能以http://或https://开头。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 开启/关闭IPv6功能。仅当子网所属的VPC开通IPv6功能时，可配置此参数。1、true：开启。2、false：关闭。仅当子网内没有分配IPv6地址的云资源时，可配置此取值。
        /// </summary>
        [Input("enableIpv6")]
        public Input<bool>? EnableIpv6 { get; set; }

        /// <summary>
        /// 子网IPv6网段。1、创建/修改时请输入子网IPv6网段的最后8比特位（子网的掩码固定为/64）。2、仅当EnableIpv6设置为true时，支持配置本参数。3、取值范围：0～255。掩码固定为/64。
        /// </summary>
        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        /// <summary>
        /// 子网的名称，长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不能以http://或https://开头，不填默认是子网的ID。
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        [Input("tags")]
        private InputList<Inputs.SubnetTagArgs>? _tags;
        public InputList<Inputs.SubnetTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SubnetTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 子网所属VPC的ID。
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// 要创建的子网所属的可用区ID，更多可用区信息请参见地域和可用区。
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public SubnetArgs()
        {
        }
        public static new SubnetArgs Empty => new SubnetArgs();
    }

    public sealed class SubnetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 子网所属账户的ID。
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// 子网中可用的IP地址数量。
        /// </summary>
        [Input("availableIpAddressCount")]
        public Input<int>? AvailableIpAddressCount { get; set; }

        /// <summary>
        /// 子网的IPv4网段。
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// 子网的创建时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// 子网的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不能以http://或https://开头。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 开启/关闭IPv6功能。仅当子网所属的VPC开通IPv6功能时，可配置此参数。1、true：开启。2、false：关闭。仅当子网内没有分配IPv6地址的云资源时，可配置此取值。
        /// </summary>
        [Input("enableIpv6")]
        public Input<bool>? EnableIpv6 { get; set; }

        /// <summary>
        /// 子网IPv6网段。1、创建/修改时请输入子网IPv6网段的最后8比特位（子网的掩码固定为/64）。2、仅当EnableIpv6设置为true时，支持配置本参数。3、取值范围：0～255。掩码固定为/64。
        /// </summary>
        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        /// <summary>
        /// 该子网是否为默认子网。1、true：默认子网，表示该子网是创建ECS实例时系统自动创建的子网。2、false：非默认子网，表示该子网是用户手动创建的。
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// 子网关联的网络ACL的ID。
        /// </summary>
        [Input("networkAclId")]
        public Input<string>? NetworkAclId { get; set; }

        /// <summary>
        /// 子网所在VPC实例所属项目的名称。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 路由表信息。
        /// </summary>
        [Input("routeTable")]
        public Input<Inputs.SubnetRouteTableGetArgs>? RouteTable { get; set; }

        /// <summary>
        /// 子网的状态。1、Pending：表示配置中。2、Available：表示可用。
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// 待修改信息的子网的ID。
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// 子网的名称，长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不能以http://或https://开头，不填默认是子网的ID。
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        [Input("tags")]
        private InputList<Inputs.SubnetTagGetArgs>? _tags;
        public InputList<Inputs.SubnetTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SubnetTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 子网下可用IP总数。
        /// </summary>
        [Input("totalIpv4Count")]
        public Input<int>? TotalIpv4Count { get; set; }

        /// <summary>
        /// 子网的更新时间。
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        /// <summary>
        /// 子网所属VPC的ID。
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// 要创建的子网所属的可用区ID，更多可用区信息请参见地域和可用区。
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public SubnetState()
        {
        }
        public static new SubnetState Empty => new SubnetState();
    }
}
