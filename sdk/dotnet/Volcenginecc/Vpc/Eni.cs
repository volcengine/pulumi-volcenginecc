// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.Pulumi.Volcenginecc.Vpc
{
    /// <summary>
    /// 网卡即虚拟网卡。在私有网络里，网卡是挂载在云服务器、负载均衡等云资源上的一种网络接口。每张网卡均有一个主私网IP地址。若有需要，可手动为其分配多个辅助私网IP地址。
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import volcenginecc:vpc/eni:Eni example "network_interface_id"
    /// ```
    /// </summary>
    [VolcengineccResourceType("volcenginecc:vpc/eni:Eni")]
    public partial class Eni : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 网卡所有者ID。
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// 网卡创建时间。
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// 是否开启随云服务器实例删除，true为开启，false为不开启。
        /// </summary>
        [Output("deleteOnTermination")]
        public Output<bool> DeleteOnTermination { get; private set; } = null!;

        /// <summary>
        /// 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        /// </summary>
        [Output("ipv6AddressCount")]
        public Output<int> Ipv6AddressCount { get; private set; } = null!;

        /// <summary>
        /// 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        /// </summary>
        [Output("ipv6Sets")]
        public Output<ImmutableArray<string>> Ipv6Sets { get; private set; } = null!;

        /// <summary>
        /// 网卡的MAC地址。
        /// </summary>
        [Output("macAddress")]
        public Output<string> MacAddress { get; private set; } = null!;

        /// <summary>
        /// 网卡ID。
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        /// </summary>
        [Output("networkInterfaceName")]
        public Output<string> NetworkInterfaceName { get; private set; } = null!;

        /// <summary>
        /// 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        /// </summary>
        [Output("portSecurityEnabled")]
        public Output<bool> PortSecurityEnabled { get; private set; } = null!;

        /// <summary>
        /// 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        /// </summary>
        [Output("primaryIpAddress")]
        public Output<Outputs.EniPrimaryIpAddress> PrimaryIpAddress { get; private set; } = null!;

        [Output("privateIpSets")]
        public Output<ImmutableArray<Outputs.EniPrivateIpSet>> PrivateIpSets { get; private set; } = null!;

        /// <summary>
        /// 网卡所属项目的名称。
        /// </summary>
        [Output("projectName")]
        public Output<string> ProjectName { get; private set; } = null!;

        /// <summary>
        /// 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        /// </summary>
        [Output("secondaryPrivateIpAddressCount")]
        public Output<int> SecondaryPrivateIpAddressCount { get; private set; } = null!;

        /// <summary>
        /// 辅助网卡加入一个或多个安全组的ID。
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// 是否为火山引擎官方服务网卡，true为是，false为否。
        /// </summary>
        [Output("serviceManaged")]
        public Output<bool> ServiceManaged { get; private set; } = null!;

        /// <summary>
        /// 网卡的绑定状态。
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// 辅助网卡所在子网的ID。
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.EniTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// 网卡类型。primary：主网卡，secondary：辅助网卡
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// 更新网卡的时间。
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// 网卡所属的VPC的ID。
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// 网卡所属VPC的名称。
        /// </summary>
        [Output("vpcName")]
        public Output<string> VpcName { get; private set; } = null!;

        /// <summary>
        /// 网卡所属可用区的ID。
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Eni resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Eni(string name, EniArgs? args = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/eni:Eni", name, args ?? new EniArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Eni(string name, Input<string> id, EniState? state = null, CustomResourceOptions? options = null)
            : base("volcenginecc:vpc/eni:Eni", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Eni resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Eni Get(string name, Input<string> id, EniState? state = null, CustomResourceOptions? options = null)
        {
            return new Eni(name, id, state, options);
        }
    }

    public sealed class EniArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 是否开启随云服务器实例删除，true为开启，false为不开启。
        /// </summary>
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        /// </summary>
        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("ipv6Sets")]
        private InputList<string>? _ipv6Sets;

        /// <summary>
        /// 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        /// </summary>
        public InputList<string> Ipv6Sets
        {
            get => _ipv6Sets ?? (_ipv6Sets = new InputList<string>());
            set => _ipv6Sets = value;
        }

        /// <summary>
        /// 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        /// </summary>
        [Input("networkInterfaceName")]
        public Input<string>? NetworkInterfaceName { get; set; }

        /// <summary>
        /// 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        /// </summary>
        [Input("portSecurityEnabled")]
        public Input<bool>? PortSecurityEnabled { get; set; }

        /// <summary>
        /// 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        /// </summary>
        [Input("primaryIpAddress")]
        public Input<Inputs.EniPrimaryIpAddressArgs>? PrimaryIpAddress { get; set; }

        [Input("privateIpSets")]
        private InputList<Inputs.EniPrivateIpSetArgs>? _privateIpSets;
        public InputList<Inputs.EniPrivateIpSetArgs> PrivateIpSets
        {
            get => _privateIpSets ?? (_privateIpSets = new InputList<Inputs.EniPrivateIpSetArgs>());
            set => _privateIpSets = value;
        }

        /// <summary>
        /// 网卡所属项目的名称。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        /// </summary>
        [Input("secondaryPrivateIpAddressCount")]
        public Input<int>? SecondaryPrivateIpAddressCount { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// 辅助网卡加入一个或多个安全组的ID。
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// 辅助网卡所在子网的ID。
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputList<Inputs.EniTagArgs>? _tags;
        public InputList<Inputs.EniTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EniTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 网卡所属可用区的ID。
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public EniArgs()
        {
        }
        public static new EniArgs Empty => new EniArgs();
    }

    public sealed class EniState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 网卡所有者ID。
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// 网卡创建时间。
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// 是否开启随云服务器实例删除，true为开启，false为不开启。
        /// </summary>
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// 辅助网卡的描述信息。长度限制为0~ 255个字符，需要以字母、中文或数字开头；可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。），不填默认空字符串。
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// 网卡绑定实例的ID，如果网卡未挂载或参数ServiceManaged为true，则InstanceId返回值均为空。
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// 为网卡分配私网IPv6地址的数量，传入该参数，系统会自动从网卡所属子网中，分配相应数量的空闲私网IPv6地址，创建时与IPv6Sets不能同时传入。
        /// </summary>
        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("ipv6Sets")]
        private InputList<string>? _ipv6Sets;

        /// <summary>
        /// 网卡的IPv6地址列表，例如[2408::153:3921:XX:XX:7b12:1c5f, 2408:4008:2cf:XX:XX:dd1e:2a22:5ddf]。
        /// </summary>
        public InputList<string> Ipv6Sets
        {
            get => _ipv6Sets ?? (_ipv6Sets = new InputList<string>());
            set => _ipv6Sets = value;
        }

        /// <summary>
        /// 网卡的MAC地址。
        /// </summary>
        [Input("macAddress")]
        public Input<string>? MacAddress { get; set; }

        /// <summary>
        /// 网卡ID。
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// 网卡名称，长度限制为1 ~ 128个字符，需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-），不填默认是辅助网卡的ID。
        /// </summary>
        [Input("networkInterfaceName")]
        public Input<string>? NetworkInterfaceName { get; set; }

        /// <summary>
        /// 是否为网卡开启源/目的地址检查，开启后，系统会自动阻止源地址或目的地址不是当前网卡的流量，true为开启，false为不开启（默认值）。
        /// </summary>
        [Input("portSecurityEnabled")]
        public Input<bool>? PortSecurityEnabled { get; set; }

        /// <summary>
        /// 网卡的主私有IPv4地址，不支持修改地址，可以修改公网IP。如果指定，必须是对应子网中的一个空闲的私网IPv4地址，如果不指定，从对应子网中自动分配一个空闲的私网IPv4地址。例如：192.XX.XX.10。
        /// </summary>
        [Input("primaryIpAddress")]
        public Input<Inputs.EniPrimaryIpAddressGetArgs>? PrimaryIpAddress { get; set; }

        [Input("privateIpSets")]
        private InputList<Inputs.EniPrivateIpSetGetArgs>? _privateIpSets;
        public InputList<Inputs.EniPrivateIpSetGetArgs> PrivateIpSets
        {
            get => _privateIpSets ?? (_privateIpSets = new InputList<Inputs.EniPrivateIpSetGetArgs>());
            set => _privateIpSets = value;
        }

        /// <summary>
        /// 网卡所属项目的名称。
        /// </summary>
        [Input("projectName")]
        public Input<string>? ProjectName { get; set; }

        /// <summary>
        /// 为辅助网卡自动分配辅助私网IPv4地址数量，取值1~49。创建时不能与PrivateIpSets同时传入。
        /// </summary>
        [Input("secondaryPrivateIpAddressCount")]
        public Input<int>? SecondaryPrivateIpAddressCount { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// 辅助网卡加入一个或多个安全组的ID。
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// 是否为火山引擎官方服务网卡，true为是，false为否。
        /// </summary>
        [Input("serviceManaged")]
        public Input<bool>? ServiceManaged { get; set; }

        /// <summary>
        /// 网卡的绑定状态。
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// 辅助网卡所在子网的ID。
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputList<Inputs.EniTagGetArgs>? _tags;
        public InputList<Inputs.EniTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EniTagGetArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// 网卡类型。primary：主网卡，secondary：辅助网卡
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// 更新网卡的时间。
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        /// <summary>
        /// 网卡所属的VPC的ID。
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// 网卡所属VPC的名称。
        /// </summary>
        [Input("vpcName")]
        public Input<string>? VpcName { get; set; }

        /// <summary>
        /// 网卡所属可用区的ID。
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public EniState()
        {
        }
        public static new EniState Empty => new EniState();
    }
}
