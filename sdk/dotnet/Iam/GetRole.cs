// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Iam
{
    public static class GetRole
    {
        /// <summary>
        /// Data Source schema for Volcengine::IAM::Role
        /// </summary>
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("volcenginecc:iam/getRole:getRole", args ?? new GetRoleArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::Role
        /// </summary>
        public static Output<GetRoleResult> Invoke(GetRoleInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleResult>("volcenginecc:iam/getRole:getRole", args ?? new GetRoleInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::Role
        /// </summary>
        public static Output<GetRoleResult> Invoke(GetRoleInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoleResult>("volcenginecc:iam/getRole:getRole", args ?? new GetRoleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoleArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetRoleArgs()
        {
        }
        public static new GetRoleArgs Empty => new GetRoleArgs();
    }

    public sealed class GetRoleInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetRoleInvokeArgs()
        {
        }
        public static new GetRoleInvokeArgs Empty => new GetRoleInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        /// <summary>
        /// 角色创建时间。
        /// </summary>
        public readonly string CreateDate;
        /// <summary>
        /// 角色描述，长度不超过128。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 角色显示名，长度不超过64。
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 是否是服务关联角色, 0否，1是。
        /// </summary>
        public readonly int IsServiceLinkedRole;
        /// <summary>
        /// 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
        /// </summary>
        public readonly int MaxSessionDuration;
        public readonly ImmutableArray<Outputs.GetRolePolicyResult> Policies;
        /// <summary>
        /// 角色ID。
        /// </summary>
        public readonly int RoleId;
        /// <summary>
        /// 角色名，长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        public readonly string RoleName;
        public readonly ImmutableArray<Outputs.GetRoleTagResult> Tags;
        /// <summary>
        /// 角色TRN。
        /// </summary>
        public readonly string Trn;
        /// <summary>
        /// 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
        /// </summary>
        public readonly string TrustPolicyDocument;
        /// <summary>
        /// 角色更新时间。
        /// </summary>
        public readonly string UpdateDate;

        [OutputConstructor]
        private GetRoleResult(
            string createDate,

            string description,

            string displayName,

            string id,

            int isServiceLinkedRole,

            int maxSessionDuration,

            ImmutableArray<Outputs.GetRolePolicyResult> policies,

            int roleId,

            string roleName,

            ImmutableArray<Outputs.GetRoleTagResult> tags,

            string trn,

            string trustPolicyDocument,

            string updateDate)
        {
            CreateDate = createDate;
            Description = description;
            DisplayName = displayName;
            Id = id;
            IsServiceLinkedRole = isServiceLinkedRole;
            MaxSessionDuration = maxSessionDuration;
            Policies = policies;
            RoleId = roleId;
            RoleName = roleName;
            Tags = tags;
            Trn = trn;
            TrustPolicyDocument = trustPolicyDocument;
            UpdateDate = updateDate;
        }
    }
}
