// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcenginecc.Iam
{
    public static class GetGroup
    {
        /// <summary>
        /// Data Source schema for Volcengine::IAM::Group
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("volcenginecc:iam/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::Group
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("volcenginecc:iam/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data Source schema for Volcengine::IAM::Group
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("volcenginecc:iam/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// 用户组所属主账号的ID。
        /// </summary>
        public readonly int AccountId;
        /// <summary>
        /// 用户组绑定的策略信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGroupAttachedPolicyResult> AttachedPolicys;
        /// <summary>
        /// 用户组的创建时间。
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// 用户组描述信息。长度不超过128。
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// 用户组显示名称。长度不超过64。
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Uniquely identifies the resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// 用户组的更新时间。
        /// </summary>
        public readonly string UpdatedTime;
        /// <summary>
        /// 用户组ID。
        /// </summary>
        public readonly int UserGroupId;
        /// <summary>
        /// 用户组名称。长度1~64，支持英文、数字和.-_符号。
        /// </summary>
        public readonly string UserGroupName;
        /// <summary>
        /// 用户组内绑定的用户信息。
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGroupUserResult> Users;

        [OutputConstructor]
        private GetGroupResult(
            int accountId,

            ImmutableArray<Outputs.GetGroupAttachedPolicyResult> attachedPolicys,

            string createdTime,

            string description,

            string displayName,

            string id,

            string updatedTime,

            int userGroupId,

            string userGroupName,

            ImmutableArray<Outputs.GetGroupUserResult> users)
        {
            AccountId = accountId;
            AttachedPolicys = attachedPolicys;
            CreatedTime = createdTime;
            Description = description;
            DisplayName = displayName;
            Id = id;
            UpdatedTime = updatedTime;
            UserGroupId = userGroupId;
            UserGroupName = userGroupName;
            Users = users;
        }
    }
}
