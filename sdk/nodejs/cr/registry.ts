// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 镜像仓库（Container Registry，CR）提供安全高可用的容器镜像、Helm Chart 等符合 OCI 标准的云原生制品托管服务，方便企业用户管理容器镜像和 Helm Chart 的全生命周期。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:cr/registry:Registry example "name"
 * ```
 */
export class Registry extends pulumi.CustomResource {
    /**
     * Get an existing Registry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegistryState, opts?: pulumi.CustomResourceOptions): Registry {
        return new Registry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:cr/registry:Registry';

    /**
     * Returns true if the given object is an instance of Registry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Registry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Registry.__pulumiType;
    }

    /**
     * 镜像仓库实例的付费类型，目前仅支持 PostCharge按量付费模式。
     */
    public /*out*/ readonly chargeType!: pulumi.Output<string>;
    /**
     * 创建镜像仓库实例的时间。
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * 仅计费类型为HybridCharge有值，实例到期时间
     */
    public /*out*/ readonly expireTime!: pulumi.Output<string>;
    /**
     * 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 填写实例需要关联的项目。一个实例仅支持关联一个项目
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * ProxyCache配置，设置为ProxyCache时必填
     */
    public /*out*/ readonly proxyCache!: pulumi.Output<outputs.cr.RegistryProxyCache>;
    /**
     * 是否设置为ProxyCache实例
     */
    public /*out*/ readonly proxyCacheEnabled!: pulumi.Output<boolean>;
    /**
     * 仅计费类型为HybridCharge有值，实例自动续费类型
     */
    public /*out*/ readonly renewType!: pulumi.Output<string>;
    /**
     * 镜像仓库实例状态，由 Phase 和 Conditions 组成。合法的 Phase 和 Conditions 组合如下所示：{Creating, [Progressing]}：创建中,{Running, [Ok]}：运行中,{Running, [Degraded]}：运行中,{Stopped, [Balance]}：欠费关停,{Stopped, [Released]}：待回收,{Stopped, [Released, Balance]}：欠费关停,{Starting, [Progressing]}：启动中,{Deleting, [Progressing]}：销毁中,{Failed, [Unknown]}：异常
     */
    public /*out*/ readonly status!: pulumi.Output<outputs.cr.RegistryStatus>;
    public readonly tags!: pulumi.Output<outputs.cr.RegistryTag[]>;
    /**
     * 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a Registry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegistryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegistryArgs | RegistryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RegistryState | undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["expireTime"] = state ? state.expireTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["proxyCache"] = state ? state.proxyCache : undefined;
            resourceInputs["proxyCacheEnabled"] = state ? state.proxyCacheEnabled : undefined;
            resourceInputs["renewType"] = state ? state.renewType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as RegistryArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["chargeType"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["expireTime"] = undefined /*out*/;
            resourceInputs["proxyCache"] = undefined /*out*/;
            resourceInputs["proxyCacheEnabled"] = undefined /*out*/;
            resourceInputs["renewType"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Registry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Registry resources.
 */
export interface RegistryState {
    /**
     * 镜像仓库实例的付费类型，目前仅支持 PostCharge按量付费模式。
     */
    chargeType?: pulumi.Input<string>;
    /**
     * 创建镜像仓库实例的时间。
     */
    createdTime?: pulumi.Input<string>;
    /**
     * 仅计费类型为HybridCharge有值，实例到期时间
     */
    expireTime?: pulumi.Input<string>;
    /**
     * 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
     */
    name?: pulumi.Input<string>;
    /**
     * 填写实例需要关联的项目。一个实例仅支持关联一个项目
     */
    project?: pulumi.Input<string>;
    /**
     * ProxyCache配置，设置为ProxyCache时必填
     */
    proxyCache?: pulumi.Input<inputs.cr.RegistryProxyCache>;
    /**
     * 是否设置为ProxyCache实例
     */
    proxyCacheEnabled?: pulumi.Input<boolean>;
    /**
     * 仅计费类型为HybridCharge有值，实例自动续费类型
     */
    renewType?: pulumi.Input<string>;
    /**
     * 镜像仓库实例状态，由 Phase 和 Conditions 组成。合法的 Phase 和 Conditions 组合如下所示：{Creating, [Progressing]}：创建中,{Running, [Ok]}：运行中,{Running, [Degraded]}：运行中,{Stopped, [Balance]}：欠费关停,{Stopped, [Released]}：待回收,{Stopped, [Released, Balance]}：欠费关停,{Starting, [Progressing]}：启动中,{Deleting, [Progressing]}：销毁中,{Failed, [Unknown]}：异常
     */
    status?: pulumi.Input<inputs.cr.RegistryStatus>;
    tags?: pulumi.Input<pulumi.Input<inputs.cr.RegistryTag>[]>;
    /**
     * 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Registry resource.
 */
export interface RegistryArgs {
    /**
     * 标准版实例名称，同一个地域下，名称必须唯一。支持小写英文字母、数字、短划线（-）且数字不能在首位，短划线（-）不能在首位或末位，长度限制为 3～30 个字符。
     */
    name: pulumi.Input<string>;
    /**
     * 填写实例需要关联的项目。一个实例仅支持关联一个项目
     */
    project?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.cr.RegistryTag>[]>;
    /**
     * 不填写默认创建标准版实例。Enterprise：标准版，Micro：小微版
     */
    type?: pulumi.Input<string>;
}
