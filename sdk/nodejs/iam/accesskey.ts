// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcenginecc from "@volcengine/pulumi-volcenginecc";
 *
 * const accesskeyDemo = new volcenginecc.iam.Accesskey("AccesskeyDemo", {userName: "s2222"});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:iam/accesskey:Accesskey example "access_key_id|user_name"
 * ```
 */
export class Accesskey extends pulumi.CustomResource {
    /**
     * Get an existing Accesskey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccesskeyState, opts?: pulumi.CustomResourceOptions): Accesskey {
        return new Accesskey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:iam/accesskey:Accesskey';

    /**
     * Returns true if the given object is an instance of Accesskey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Accesskey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Accesskey.__pulumiType;
    }

    /**
     * 密钥ID（Access Key Id）。
     */
    public readonly accessKeyId!: pulumi.Output<string>;
    /**
     * 密钥创建时间
     */
    public /*out*/ readonly createDate!: pulumi.Output<string>;
    /**
     * API密钥最后访问的地域。
     */
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * API密钥的最后使用的时间。
     */
    public /*out*/ readonly requestTime!: pulumi.Output<string>;
    /**
     * 私有密钥（Secret Access Key）。
     */
    public /*out*/ readonly secretAccessKey!: pulumi.Output<string>;
    /**
     * API密钥最后访问的服务的英文简称。
     */
    public /*out*/ readonly service!: pulumi.Output<string>;
    /**
     * 密钥状态 (active/inactive)
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * 密钥更新时间
     */
    public /*out*/ readonly updateDate!: pulumi.Output<string>;
    /**
     * 用户名
     */
    public readonly userName!: pulumi.Output<string>;

    /**
     * Create a Accesskey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AccesskeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccesskeyArgs | AccesskeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccesskeyState | undefined;
            resourceInputs["accessKeyId"] = state ? state.accessKeyId : undefined;
            resourceInputs["createDate"] = state ? state.createDate : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["requestTime"] = state ? state.requestTime : undefined;
            resourceInputs["secretAccessKey"] = state ? state.secretAccessKey : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updateDate"] = state ? state.updateDate : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
        } else {
            const args = argsOrState as AccesskeyArgs | undefined;
            resourceInputs["accessKeyId"] = args ? args.accessKeyId : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["userName"] = args ? args.userName : undefined;
            resourceInputs["createDate"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["requestTime"] = undefined /*out*/;
            resourceInputs["secretAccessKey"] = undefined /*out*/;
            resourceInputs["service"] = undefined /*out*/;
            resourceInputs["updateDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Accesskey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Accesskey resources.
 */
export interface AccesskeyState {
    /**
     * 密钥ID（Access Key Id）。
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * 密钥创建时间
     */
    createDate?: pulumi.Input<string>;
    /**
     * API密钥最后访问的地域。
     */
    region?: pulumi.Input<string>;
    /**
     * API密钥的最后使用的时间。
     */
    requestTime?: pulumi.Input<string>;
    /**
     * 私有密钥（Secret Access Key）。
     */
    secretAccessKey?: pulumi.Input<string>;
    /**
     * API密钥最后访问的服务的英文简称。
     */
    service?: pulumi.Input<string>;
    /**
     * 密钥状态 (active/inactive)
     */
    status?: pulumi.Input<string>;
    /**
     * 密钥更新时间
     */
    updateDate?: pulumi.Input<string>;
    /**
     * 用户名
     */
    userName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Accesskey resource.
 */
export interface AccesskeyArgs {
    /**
     * 密钥ID（Access Key Id）。
     */
    accessKeyId?: pulumi.Input<string>;
    /**
     * 密钥状态 (active/inactive)
     */
    status?: pulumi.Input<string>;
    /**
     * 用户名
     */
    userName?: pulumi.Input<string>;
}
