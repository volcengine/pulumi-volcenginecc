// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source schema for Volcengine::IAM::Policy
 */
export function getPolicy(args: GetPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcenginecc:iam/getPolicy:getPolicy", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: string;
}

/**
 * A collection of values returned by getPolicy.
 */
export interface GetPolicyResult {
    /**
     * 策略绑定的身份数量。
     */
    readonly attachmentCount: number;
    /**
     * 系统预设策略所属的分类，通常为服务代码，对于自定义策略该字段不会返回值。
     */
    readonly category: string;
    /**
     * 策略创建时间。
     */
    readonly createdTime: string;
    /**
     * 策略描述，长度不超过128。
     */
    readonly description: string;
    /**
     * Uniquely identifies the resource.
     */
    readonly id: string;
    /**
     * 是否是服务关联角色的策略，0代表否，1代表是。
     */
    readonly isServiceRolePolicy: number;
    /**
     * 策略语法内容，例如：{"Statement":[{"Effect":"Allow","Action":["iam:","tag:"],"Resource":["*"]}]}
     */
    readonly policyDocument: string;
    /**
     * 策略名，长度1~64，支持英文、数字和+=,.@-_符号。
     */
    readonly policyName: string;
    /**
     * 策略绑定的角色列表。
     */
    readonly policyRoles: outputs.iam.GetPolicyPolicyRole[];
    /**
     * 策略的TRN。
     */
    readonly policyTrn: string;
    /**
     * 策略类型。System代表系统预设策略，Custom代表自定义策略。
     */
    readonly policyType: string;
    /**
     * 策略绑定的用户组列表。
     */
    readonly policyUserGroups: outputs.iam.GetPolicyPolicyUserGroup[];
    /**
     * 策略绑定的用户列表。
     */
    readonly policyUsers: outputs.iam.GetPolicyPolicyUser[];
    /**
     * 策略更新时间。
     */
    readonly updatedTime: string;
}
/**
 * Data Source schema for Volcengine::IAM::Policy
 */
export function getPolicyOutput(args: GetPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("volcenginecc:iam/getPolicy:getPolicy", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicy.
 */
export interface GetPolicyOutputArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: pulumi.Input<string>;
}
