// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 角色（Role）是IAM体系里的一种虚拟身份，用于将账号内某些访问权限授予给各类身份实体，受信任的身份实体可扮演该角色来访问账号内的云资源。
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcenginecc from "@volcengine/pulumi-volcenginecc";
 *
 * const roleDemo = new volcenginecc.iam.Role("RoleDemo", {
 *     roleName: "RoleDemo",
 *     description: "role attach policies",
 *     maxSessionDuration: 3600,
 *     trustPolicyDocument: `{
 *     "Statement": [
 *         {
 *             "Effect": "Allow",
 *             "Action": [
 *                 "sts:AssumeRole"
 *             ],
 *             "Principal": {
 *                 "IAM": [
 *                     "trn:iam::20000000xx:root"
 *                 ]
 *             }
 *         }
 *     ]
 * }`,
 *     tags: [{
 *         key: "env",
 *         value: "test",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:iam/role:Role example "role_name"
 * ```
 */
export class Role extends pulumi.CustomResource {
    /**
     * Get an existing Role resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleState, opts?: pulumi.CustomResourceOptions): Role {
        return new Role(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:iam/role:Role';

    /**
     * Returns true if the given object is an instance of Role.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Role {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Role.__pulumiType;
    }

    /**
     * 角色创建时间。
     */
    public /*out*/ readonly createDate!: pulumi.Output<string>;
    /**
     * 角色描述，长度不超过128。
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * 角色显示名，长度不超过64。
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * 是否是服务关联角色, 0否，1是。
     */
    public /*out*/ readonly isServiceLinkedRole!: pulumi.Output<number>;
    /**
     * 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
     */
    public readonly maxSessionDuration!: pulumi.Output<number>;
    public readonly policies!: pulumi.Output<outputs.iam.RolePolicy[]>;
    /**
     * 角色ID。
     */
    public /*out*/ readonly roleId!: pulumi.Output<number>;
    /**
     * 角色名，长度1~64，支持英文、数字和.-_符号。
     */
    public readonly roleName!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.iam.RoleTag[]>;
    /**
     * 角色TRN。
     */
    public /*out*/ readonly trn!: pulumi.Output<string>;
    /**
     * 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
     */
    public readonly trustPolicyDocument!: pulumi.Output<string>;
    /**
     * 角色更新时间。
     */
    public /*out*/ readonly updateDate!: pulumi.Output<string>;

    /**
     * Create a Role resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleArgs | RoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleState | undefined;
            resourceInputs["createDate"] = state ? state.createDate : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["isServiceLinkedRole"] = state ? state.isServiceLinkedRole : undefined;
            resourceInputs["maxSessionDuration"] = state ? state.maxSessionDuration : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["roleId"] = state ? state.roleId : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trn"] = state ? state.trn : undefined;
            resourceInputs["trustPolicyDocument"] = state ? state.trustPolicyDocument : undefined;
            resourceInputs["updateDate"] = state ? state.updateDate : undefined;
        } else {
            const args = argsOrState as RoleArgs | undefined;
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["maxSessionDuration"] = args ? args.maxSessionDuration : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trustPolicyDocument"] = args ? args.trustPolicyDocument : undefined;
            resourceInputs["createDate"] = undefined /*out*/;
            resourceInputs["isServiceLinkedRole"] = undefined /*out*/;
            resourceInputs["roleId"] = undefined /*out*/;
            resourceInputs["trn"] = undefined /*out*/;
            resourceInputs["updateDate"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Role.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Role resources.
 */
export interface RoleState {
    /**
     * 角色创建时间。
     */
    createDate?: pulumi.Input<string>;
    /**
     * 角色描述，长度不超过128。
     */
    description?: pulumi.Input<string>;
    /**
     * 角色显示名，长度不超过64。
     */
    displayName?: pulumi.Input<string>;
    /**
     * 是否是服务关联角色, 0否，1是。
     */
    isServiceLinkedRole?: pulumi.Input<number>;
    /**
     * 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
     */
    maxSessionDuration?: pulumi.Input<number>;
    policies?: pulumi.Input<pulumi.Input<inputs.iam.RolePolicy>[]>;
    /**
     * 角色ID。
     */
    roleId?: pulumi.Input<number>;
    /**
     * 角色名，长度1~64，支持英文、数字和.-_符号。
     */
    roleName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.iam.RoleTag>[]>;
    /**
     * 角色TRN。
     */
    trn?: pulumi.Input<string>;
    /**
     * 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
     */
    trustPolicyDocument?: pulumi.Input<string>;
    /**
     * 角色更新时间。
     */
    updateDate?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Role resource.
 */
export interface RoleArgs {
    /**
     * 角色描述，长度不超过128。
     */
    description?: pulumi.Input<string>;
    /**
     * 角色显示名，长度不超过64。
     */
    displayName?: pulumi.Input<string>;
    /**
     * 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
     */
    maxSessionDuration?: pulumi.Input<number>;
    policies?: pulumi.Input<pulumi.Input<inputs.iam.RolePolicy>[]>;
    /**
     * 角色名，长度1~64，支持英文、数字和.-_符号。
     */
    roleName: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.iam.RoleTag>[]>;
    /**
     * 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
     */
    trustPolicyDocument?: pulumi.Input<string>;
}
