// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source schema for Volcengine::IAM::Role
 */
export function getRole(args: GetRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcenginecc:iam/getRole:getRole", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: string;
}

/**
 * A collection of values returned by getRole.
 */
export interface GetRoleResult {
    /**
     * 角色创建时间。
     */
    readonly createDate: string;
    /**
     * 角色描述，长度不超过128。
     */
    readonly description: string;
    /**
     * 角色显示名，长度不超过64。
     */
    readonly displayName: string;
    /**
     * Uniquely identifies the resource.
     */
    readonly id: string;
    /**
     * 是否是服务关联角色, 0否，1是。
     */
    readonly isServiceLinkedRole: number;
    /**
     * 角色最大会话时间，角色最大会话时间。用于限制角色扮演产生的临时安全凭证的有效期的最大范围。取值范围：3600~43200，单位为秒，默认为43200。
     */
    readonly maxSessionDuration: number;
    readonly policies: outputs.iam.GetRolePolicy[];
    /**
     * 角色ID。
     */
    readonly roleId: number;
    /**
     * 角色名，长度1~64，支持英文、数字和.-_符号。
     */
    readonly roleName: string;
    readonly tags: outputs.iam.GetRoleTag[];
    /**
     * 角色TRN。
     */
    readonly trn: string;
    /**
     * 角色信任策略，信任策略遵循IAM的策略语法中基于资源的策略规则。
     */
    readonly trustPolicyDocument: string;
    /**
     * 角色更新时间。
     */
    readonly updateDate: string;
}
/**
 * Data Source schema for Volcengine::IAM::Role
 */
export function getRoleOutput(args: GetRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("volcenginecc:iam/getRole:getRole", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getRole.
 */
export interface GetRoleOutputArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: pulumi.Input<string>;
}
