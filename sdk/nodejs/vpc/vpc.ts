// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 私有网络为云上资源构建隔离的、自主配置的虚拟网络环境。可以在私有网络中自定义IP地址段、安全组、路由策略等网络特性，简单高效安全地管理云上资源。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:vpc/vpc:Vpc example "vpc_id"
 * ```
 */
export class Vpc extends pulumi.CustomResource {
    /**
     * Get an existing Vpc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcState, opts?: pulumi.CustomResourceOptions): Vpc {
        return new Vpc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:vpc/vpc:Vpc';

    /**
     * Returns true if the given object is an instance of Vpc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpc.__pulumiType;
    }

    /**
     * VPC所属账号的ID。
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    public readonly associateCens!: pulumi.Output<outputs.vpc.VpcAssociateCen[]>;
    /**
     * VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     */
    public readonly cidrBlock!: pulumi.Output<string>;
    /**
     * 创建VPC的时间。
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&分隔。不填则配置为默认DNS服务器地址。
     */
    public readonly dnsServers!: pulumi.Output<string[]>;
    /**
     * VPC 绑定的 IPv4 网关的 ID。
     */
    public readonly ipv4GatewayId!: pulumi.Output<string>;
    /**
     * VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     */
    public readonly ipv6CidrBlock!: pulumi.Output<string>;
    /**
     * 该VPC是否为默认VPC。true：默认VPC，表示该VPC是创建ECS实例时系统自动创建的VPC。false：非默认VPC，表示该VPC是用户手动创建的。
     */
    public /*out*/ readonly isDefault!: pulumi.Output<boolean>;
    /**
     * VPC中创建的NAT网关的ID。
     */
    public readonly natGatewayIds!: pulumi.Output<string[]>;
    /**
     * VPC中的网络ACL的数量。
     */
    public /*out*/ readonly networkAclNum!: pulumi.Output<string>;
    /**
     * VPC所属项目的名称。不填默认加入default项目。
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * VPC关联的路由表ID。
     */
    public readonly routeTableIds!: pulumi.Output<string[]>;
    /**
     * VPC的辅助网段。
     */
    public readonly secondaryCidrBlocks!: pulumi.Output<string[]>;
    /**
     * VPC中安全组的列表。
     */
    public readonly securityGroupIds!: pulumi.Output<string[]>;
    /**
     * VPC的状态。Creating：创建中。Pending：已创建。Available：可用。
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * VPC中子网的列表。
     */
    public readonly subnetIds!: pulumi.Output<string[]>;
    /**
     * VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     */
    public readonly supportIpv4Gateway!: pulumi.Output<boolean>;
    public readonly tags!: pulumi.Output<outputs.vpc.VpcTag[]>;
    /**
     * 更新VPC的时间。
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * VPC的用户网段。
     */
    public readonly userCidrBlocks!: pulumi.Output<string[]>;
    /**
     * VPC的ID。
     */
    public /*out*/ readonly vpcId!: pulumi.Output<string>;
    /**
     * VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     */
    public readonly vpcName!: pulumi.Output<string>;

    /**
     * Create a Vpc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcArgs | VpcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["associateCens"] = state ? state.associateCens : undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["ipv4GatewayId"] = state ? state.ipv4GatewayId : undefined;
            resourceInputs["ipv6CidrBlock"] = state ? state.ipv6CidrBlock : undefined;
            resourceInputs["isDefault"] = state ? state.isDefault : undefined;
            resourceInputs["natGatewayIds"] = state ? state.natGatewayIds : undefined;
            resourceInputs["networkAclNum"] = state ? state.networkAclNum : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["routeTableIds"] = state ? state.routeTableIds : undefined;
            resourceInputs["secondaryCidrBlocks"] = state ? state.secondaryCidrBlocks : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["supportIpv4Gateway"] = state ? state.supportIpv4Gateway : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["userCidrBlocks"] = state ? state.userCidrBlocks : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcName"] = state ? state.vpcName : undefined;
        } else {
            const args = argsOrState as VpcArgs | undefined;
            resourceInputs["associateCens"] = args ? args.associateCens : undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dnsServers"] = args ? args.dnsServers : undefined;
            resourceInputs["ipv4GatewayId"] = args ? args.ipv4GatewayId : undefined;
            resourceInputs["ipv6CidrBlock"] = args ? args.ipv6CidrBlock : undefined;
            resourceInputs["natGatewayIds"] = args ? args.natGatewayIds : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["routeTableIds"] = args ? args.routeTableIds : undefined;
            resourceInputs["secondaryCidrBlocks"] = args ? args.secondaryCidrBlocks : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["supportIpv4Gateway"] = args ? args.supportIpv4Gateway : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userCidrBlocks"] = args ? args.userCidrBlocks : undefined;
            resourceInputs["vpcName"] = args ? args.vpcName : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["isDefault"] = undefined /*out*/;
            resourceInputs["networkAclNum"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["vpcId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Vpc resources.
 */
export interface VpcState {
    /**
     * VPC所属账号的ID。
     */
    accountId?: pulumi.Input<string>;
    associateCens?: pulumi.Input<pulumi.Input<inputs.vpc.VpcAssociateCen>[]>;
    /**
     * VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * 创建VPC的时间。
     */
    creationTime?: pulumi.Input<string>;
    /**
     * VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     */
    description?: pulumi.Input<string>;
    /**
     * VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&分隔。不填则配置为默认DNS服务器地址。
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC 绑定的 IPv4 网关的 ID。
     */
    ipv4GatewayId?: pulumi.Input<string>;
    /**
     * VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     */
    ipv6CidrBlock?: pulumi.Input<string>;
    /**
     * 该VPC是否为默认VPC。true：默认VPC，表示该VPC是创建ECS实例时系统自动创建的VPC。false：非默认VPC，表示该VPC是用户手动创建的。
     */
    isDefault?: pulumi.Input<boolean>;
    /**
     * VPC中创建的NAT网关的ID。
     */
    natGatewayIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC中的网络ACL的数量。
     */
    networkAclNum?: pulumi.Input<string>;
    /**
     * VPC所属项目的名称。不填默认加入default项目。
     */
    projectName?: pulumi.Input<string>;
    /**
     * VPC关联的路由表ID。
     */
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC的辅助网段。
     */
    secondaryCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC中安全组的列表。
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC的状态。Creating：创建中。Pending：已创建。Available：可用。
     */
    status?: pulumi.Input<string>;
    /**
     * VPC中子网的列表。
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     */
    supportIpv4Gateway?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.VpcTag>[]>;
    /**
     * 更新VPC的时间。
     */
    updateTime?: pulumi.Input<string>;
    /**
     * VPC的用户网段。
     */
    userCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC的ID。
     */
    vpcId?: pulumi.Input<string>;
    /**
     * VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     */
    vpcName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Vpc resource.
 */
export interface VpcArgs {
    associateCens?: pulumi.Input<pulumi.Input<inputs.vpc.VpcAssociateCen>[]>;
    /**
     * VPC的IPv4网段。您可以使用以下网段或其子集作为VPC的IPv4网段：192.168.0.0/16 ~ 24、10.0.0.0/8 ~ 24、172.16.0.0/12 ~ 24。
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * VPC的描述信息。长度限制为0~ 255个字符。不填默认为空字符串。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不能以http://或https://开头。
     */
    description?: pulumi.Input<string>;
    /**
     * VPC的DNS服务器地址。单次调用数量上限为5个，每个DnsServer必须以合法IP形式给出。多个IP之间用&分隔。不填则配置为默认DNS服务器地址。
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC 绑定的 IPv4 网关的 ID。
     */
    ipv4GatewayId?: pulumi.Input<string>;
    /**
     * VPC的IPv6网段。传入此参数后，参数Ipv6MaskLen不生效。参数Ipv6Isp传入非BGP后，参数Ipv6MaskLen和参数Ipv6CidrBlock二者必须传入一个。参数Ipv6Isp未传或传入BGP，此参数未传，则由系统自动分配IPv6网段。
     */
    ipv6CidrBlock?: pulumi.Input<string>;
    /**
     * VPC中创建的NAT网关的ID。
     */
    natGatewayIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC所属项目的名称。不填默认加入default项目。
     */
    projectName?: pulumi.Input<string>;
    /**
     * VPC关联的路由表ID。
     */
    routeTableIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC的辅助网段。
     */
    secondaryCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC中安全组的列表。
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC中子网的列表。
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC 是否启用 IPv4 网关。false（默认值）：不启用。true：启用。
     */
    supportIpv4Gateway?: pulumi.Input<boolean>;
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.VpcTag>[]>;
    /**
     * VPC的用户网段。
     */
    userCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * VPC的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认为VPC实例的ID。不能以http://或https://开头。
     */
    vpcName?: pulumi.Input<string>;
}
