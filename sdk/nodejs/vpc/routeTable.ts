// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 路由表由一系列路由条目组成，为私有网络的流量指定下一跳的云资源，每个子网必须且仅支持关联一个路由表，使子网内的资源通过路由表转发流量。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:vpc/routeTable:RouteTable example "route_table_id"
 * ```
 */
export class RouteTable extends pulumi.CustomResource {
    /**
     * Get an existing RouteTable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteTableState, opts?: pulumi.CustomResourceOptions): RouteTable {
        return new RouteTable(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:vpc/routeTable:RouteTable';

    /**
     * Returns true if the given object is an instance of RouteTable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RouteTable {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RouteTable.__pulumiType;
    }

    /**
     * 路由表所属账号的ID。
     */
    public /*out*/ readonly accountId!: pulumi.Output<string>;
    /**
     * 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
     */
    public readonly associateType!: pulumi.Output<string>;
    /**
     * 路由表创建时间。
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    public readonly customRouteEntries!: pulumi.Output<outputs.vpc.RouteTableCustomRouteEntry[]>;
    /**
     * 路由表描述信息。
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * 关联路由表的IPv4网关ID。
     */
    public readonly ipv4GatewayId!: pulumi.Output<string>;
    /**
     * 关联路由表的IPv6网关ID。
     */
    public readonly ipv6GatewayId!: pulumi.Output<string>;
    /**
     * 路由表所属项目的名称。
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * 路由表ID。
     */
    public /*out*/ readonly routeTableId!: pulumi.Output<string>;
    /**
     * 路由表名称。
     */
    public readonly routeTableName!: pulumi.Output<string>;
    /**
     * 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
     */
    public /*out*/ readonly routeTableType!: pulumi.Output<string>;
    /**
     * 关联的子网的ID列表。
     */
    public readonly subnetIds!: pulumi.Output<string[]>;
    public /*out*/ readonly systemRouteEntries!: pulumi.Output<outputs.vpc.RouteTableSystemRouteEntry[]>;
    public readonly tags!: pulumi.Output<outputs.vpc.RouteTableTag[]>;
    /**
     * 路由表更新时间。
     */
    public /*out*/ readonly updatedTime!: pulumi.Output<string>;
    /**
     * 路由表所属VPC的ID。
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * VPC的名称。
     */
    public readonly vpcName!: pulumi.Output<string>;

    /**
     * Create a RouteTable resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteTableArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteTableArgs | RouteTableState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RouteTableState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["associateType"] = state ? state.associateType : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["customRouteEntries"] = state ? state.customRouteEntries : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipv4GatewayId"] = state ? state.ipv4GatewayId : undefined;
            resourceInputs["ipv6GatewayId"] = state ? state.ipv6GatewayId : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["routeTableId"] = state ? state.routeTableId : undefined;
            resourceInputs["routeTableName"] = state ? state.routeTableName : undefined;
            resourceInputs["routeTableType"] = state ? state.routeTableType : undefined;
            resourceInputs["subnetIds"] = state ? state.subnetIds : undefined;
            resourceInputs["systemRouteEntries"] = state ? state.systemRouteEntries : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpcName"] = state ? state.vpcName : undefined;
        } else {
            const args = argsOrState as RouteTableArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["associateType"] = args ? args.associateType : undefined;
            resourceInputs["customRouteEntries"] = args ? args.customRouteEntries : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipv4GatewayId"] = args ? args.ipv4GatewayId : undefined;
            resourceInputs["ipv6GatewayId"] = args ? args.ipv6GatewayId : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["routeTableName"] = args ? args.routeTableName : undefined;
            resourceInputs["subnetIds"] = args ? args.subnetIds : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpcName"] = args ? args.vpcName : undefined;
            resourceInputs["accountId"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["routeTableId"] = undefined /*out*/;
            resourceInputs["routeTableType"] = undefined /*out*/;
            resourceInputs["systemRouteEntries"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RouteTable.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouteTable resources.
 */
export interface RouteTableState {
    /**
     * 路由表所属账号的ID。
     */
    accountId?: pulumi.Input<string>;
    /**
     * 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
     */
    associateType?: pulumi.Input<string>;
    /**
     * 路由表创建时间。
     */
    createdTime?: pulumi.Input<string>;
    customRouteEntries?: pulumi.Input<pulumi.Input<inputs.vpc.RouteTableCustomRouteEntry>[]>;
    /**
     * 路由表描述信息。
     */
    description?: pulumi.Input<string>;
    /**
     * 关联路由表的IPv4网关ID。
     */
    ipv4GatewayId?: pulumi.Input<string>;
    /**
     * 关联路由表的IPv6网关ID。
     */
    ipv6GatewayId?: pulumi.Input<string>;
    /**
     * 路由表所属项目的名称。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 路由表ID。
     */
    routeTableId?: pulumi.Input<string>;
    /**
     * 路由表名称。
     */
    routeTableName?: pulumi.Input<string>;
    /**
     * 路由表类型。1、Custom：自定义路由表。2、System：系统路由表。
     */
    routeTableType?: pulumi.Input<string>;
    /**
     * 关联的子网的ID列表。
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    systemRouteEntries?: pulumi.Input<pulumi.Input<inputs.vpc.RouteTableSystemRouteEntry>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.RouteTableTag>[]>;
    /**
     * 路由表更新时间。
     */
    updatedTime?: pulumi.Input<string>;
    /**
     * 路由表所属VPC的ID。
     */
    vpcId?: pulumi.Input<string>;
    /**
     * VPC的名称。
     */
    vpcName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouteTable resource.
 */
export interface RouteTableArgs {
    /**
     * 创建路由表输入的关联类型。1、Subnet：子网关联。2、Gateway：网关关联。
     */
    associateType?: pulumi.Input<string>;
    customRouteEntries?: pulumi.Input<pulumi.Input<inputs.vpc.RouteTableCustomRouteEntry>[]>;
    /**
     * 路由表描述信息。
     */
    description?: pulumi.Input<string>;
    /**
     * 关联路由表的IPv4网关ID。
     */
    ipv4GatewayId?: pulumi.Input<string>;
    /**
     * 关联路由表的IPv6网关ID。
     */
    ipv6GatewayId?: pulumi.Input<string>;
    /**
     * 路由表所属项目的名称。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 路由表名称。
     */
    routeTableName?: pulumi.Input<string>;
    /**
     * 关联的子网的ID列表。
     */
    subnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.RouteTableTag>[]>;
    /**
     * 路由表所属VPC的ID。
     */
    vpcId: pulumi.Input<string>;
    /**
     * VPC的名称。
     */
    vpcName?: pulumi.Input<string>;
}
