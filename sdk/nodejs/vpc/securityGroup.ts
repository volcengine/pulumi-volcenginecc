// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 安全组是一个逻辑意义上的分组，为同一个私有网络内具有相同安全保护需求并相互信任的网卡提供访问策略。您可以通过配置安全组规则，控制安全组关联网卡的出入流量。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:vpc/securityGroup:SecurityGroup example "security_group_id"
 * ```
 */
export class SecurityGroup extends pulumi.CustomResource {
    /**
     * Get an existing SecurityGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityGroupState, opts?: pulumi.CustomResourceOptions): SecurityGroup {
        return new SecurityGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:vpc/securityGroup:SecurityGroup';

    /**
     * Returns true if the given object is an instance of SecurityGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityGroup.__pulumiType;
    }

    /**
     * 安全组创建时间。
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
     */
    public readonly description!: pulumi.Output<string>;
    public readonly egressPermissions!: pulumi.Output<outputs.vpc.SecurityGroupEgressPermission[]>;
    public readonly ingressPermissions!: pulumi.Output<outputs.vpc.SecurityGroupIngressPermission[]>;
    /**
     * 安全组所属项目名称。不填默认项目为default。
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * 安全组ID。
     */
    public /*out*/ readonly securityGroupId!: pulumi.Output<string>;
    /**
     * 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
     */
    public readonly securityGroupName!: pulumi.Output<string>;
    /**
     * 安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
     */
    public /*out*/ readonly serviceManaged!: pulumi.Output<boolean>;
    /**
     * 安全组状态。Available为可用，Creating为创建中。
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.vpc.SecurityGroupTag[]>;
    /**
     * 安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * 安全组所属的VPC ID。
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a SecurityGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityGroupArgs | SecurityGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityGroupState | undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["egressPermissions"] = state ? state.egressPermissions : undefined;
            resourceInputs["ingressPermissions"] = state ? state.ingressPermissions : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["securityGroupId"] = state ? state.securityGroupId : undefined;
            resourceInputs["securityGroupName"] = state ? state.securityGroupName : undefined;
            resourceInputs["serviceManaged"] = state ? state.serviceManaged : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as SecurityGroupArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["egressPermissions"] = args ? args.egressPermissions : undefined;
            resourceInputs["ingressPermissions"] = args ? args.ingressPermissions : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["securityGroupName"] = args ? args.securityGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["securityGroupId"] = undefined /*out*/;
            resourceInputs["serviceManaged"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityGroup resources.
 */
export interface SecurityGroupState {
    /**
     * 安全组创建时间。
     */
    creationTime?: pulumi.Input<string>;
    /**
     * 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
     */
    description?: pulumi.Input<string>;
    egressPermissions?: pulumi.Input<pulumi.Input<inputs.vpc.SecurityGroupEgressPermission>[]>;
    ingressPermissions?: pulumi.Input<pulumi.Input<inputs.vpc.SecurityGroupIngressPermission>[]>;
    /**
     * 安全组所属项目名称。不填默认项目为default。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 安全组ID。
     */
    securityGroupId?: pulumi.Input<string>;
    /**
     * 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
     */
    securityGroupName?: pulumi.Input<string>;
    /**
     * 安全组是否为托管安全组。true为托管安全组，false为非托管安全组。
     */
    serviceManaged?: pulumi.Input<boolean>;
    /**
     * 安全组状态。Available为可用，Creating为创建中。
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.SecurityGroupTag>[]>;
    /**
     * 安全组类型。1、default：默认安全组。2、normal：自定义安全组。3、VpnGW： VPN网关安全组。4、NatGW： Nat网关安全组。 5、cidr_only：CIDR-Only安全组。
     */
    type?: pulumi.Input<string>;
    /**
     * 安全组所属的VPC ID。
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityGroup resource.
 */
export interface SecurityGroupArgs {
    /**
     * 安全组的描述信息。长度限制为0~ 255个字符。需要以字母、中文或数字开头。可包含英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、短横线（-）、中文逗号（，）、中文句号（。）。不填默认空字符串。
     */
    description?: pulumi.Input<string>;
    egressPermissions?: pulumi.Input<pulumi.Input<inputs.vpc.SecurityGroupEgressPermission>[]>;
    ingressPermissions?: pulumi.Input<pulumi.Input<inputs.vpc.SecurityGroupIngressPermission>[]>;
    /**
     * 安全组所属项目名称。不填默认项目为default。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 安全组的名称。长度限制为1 ~ 128个字符。需要以字母、中文或数字开头，可包含点号（.）、下划线（_）和短横线（-）。不填默认是安全组的ID。
     */
    securityGroupName?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.vpc.SecurityGroupTag>[]>;
    /**
     * 安全组所属的VPC ID。
     */
    vpcId: pulumi.Input<string>;
}
