// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 服务器组
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:clb/nlbServerGroup:NlbServerGroup example "server_group_id"
 * ```
 */
export class NlbServerGroup extends pulumi.CustomResource {
    /**
     * Get an existing NlbServerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NlbServerGroupState, opts?: pulumi.CustomResourceOptions): NlbServerGroup {
        return new NlbServerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:clb/nlbServerGroup:NlbServerGroup';

    /**
     * Returns true if the given object is an instance of NlbServerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NlbServerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NlbServerGroup.__pulumiType;
    }

    /**
     * 账号ID
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * 是否开启全端口转发
     */
    public readonly anyPortEnabled!: pulumi.Output<boolean>;
    /**
     * 是否开启放通后端安全组功能。仅参数Type为“instance”时，可以配置此参数
     */
    public readonly bypassSecurityGroupEnabled!: pulumi.Output<boolean>;
    /**
     * 是否开启连接优雅中断
     */
    public readonly connectionDrainEnabled!: pulumi.Output<boolean>;
    /**
     * 连接优雅中断超时时间，取值范围为0～900秒。参数ConnectionDrainEnabled为“true”时，该参数为必填。
     */
    public readonly connectionDrainTimeout!: pulumi.Output<number>;
    /**
     * 后端服务器组的创建时间
     */
    public readonly createdTime!: pulumi.Output<string>;
    /**
     * 后端服务器组的描述,服务器组的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * 健康检查相关参数
     */
    public readonly healthCheck!: pulumi.Output<outputs.clb.NlbServerGroupHealthCheck>;
    /**
     * 服务器组的IP地址类型
     */
    public readonly ipAddressVersion!: pulumi.Output<string>;
    /**
     * 是否开启源地址保持
     */
    public readonly preserveClientIpEnabled!: pulumi.Output<boolean>;
    /**
     * 项目名称
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * NLB转发流量到后端服务器时使用的通信协议
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * 是否开启Proxy-Protocol协议
     */
    public readonly proxyProtocolType!: pulumi.Output<string>;
    /**
     * 服务器组关联的NLB实例
     */
    public /*out*/ readonly relatedLoadBalancerIds!: pulumi.Output<string[]>;
    /**
     * NLB转发流量时遵循的规则
     */
    public readonly scheduler!: pulumi.Output<string>;
    /**
     * 服务器组中后端服务器的数量
     */
    public /*out*/ readonly serverCount!: pulumi.Output<number>;
    /**
     * 服务器组ID
     */
    public /*out*/ readonly serverGroupId!: pulumi.Output<string>;
    /**
     * 服务器组名称, 必须以字母、数字或中文开头，可包含以下特殊字符：点号（.）、下划线（_）和中划线（-）。限制为1 ～ 128个字符。该参数不传入，则默认为服务器组ID。
     */
    public readonly serverGroupName!: pulumi.Output<string>;
    public readonly servers!: pulumi.Output<outputs.clb.NlbServerGroupServer[]>;
    /**
     * 是否开启会话保持
     */
    public readonly sessionPersistenceEnabled!: pulumi.Output<boolean>;
    /**
     * 会话保持的超时时间，取值范围为1～3600秒，默认1000秒
     */
    public readonly sessionPersistenceTimeout!: pulumi.Output<number>;
    /**
     * 服务器组的状态
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.clb.NlbServerGroupTag[]>;
    /**
     * 是否开启清除TCP/HTTP/HTTPS报文的timestamp（即时间戳）的功能
     */
    public readonly timestampRemoveEnabled!: pulumi.Output<boolean>;
    /**
     * 服务器组的类型
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * 后端服务器组的更新时间
     */
    public readonly updatedTime!: pulumi.Output<string>;
    /**
     * 服务器组所属私有网络的ID。
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a NlbServerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NlbServerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NlbServerGroupArgs | NlbServerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NlbServerGroupState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["anyPortEnabled"] = state ? state.anyPortEnabled : undefined;
            resourceInputs["bypassSecurityGroupEnabled"] = state ? state.bypassSecurityGroupEnabled : undefined;
            resourceInputs["connectionDrainEnabled"] = state ? state.connectionDrainEnabled : undefined;
            resourceInputs["connectionDrainTimeout"] = state ? state.connectionDrainTimeout : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["ipAddressVersion"] = state ? state.ipAddressVersion : undefined;
            resourceInputs["preserveClientIpEnabled"] = state ? state.preserveClientIpEnabled : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["proxyProtocolType"] = state ? state.proxyProtocolType : undefined;
            resourceInputs["relatedLoadBalancerIds"] = state ? state.relatedLoadBalancerIds : undefined;
            resourceInputs["scheduler"] = state ? state.scheduler : undefined;
            resourceInputs["serverCount"] = state ? state.serverCount : undefined;
            resourceInputs["serverGroupId"] = state ? state.serverGroupId : undefined;
            resourceInputs["serverGroupName"] = state ? state.serverGroupName : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["sessionPersistenceEnabled"] = state ? state.sessionPersistenceEnabled : undefined;
            resourceInputs["sessionPersistenceTimeout"] = state ? state.sessionPersistenceTimeout : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timestampRemoveEnabled"] = state ? state.timestampRemoveEnabled : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as NlbServerGroupArgs | undefined;
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["anyPortEnabled"] = args ? args.anyPortEnabled : undefined;
            resourceInputs["bypassSecurityGroupEnabled"] = args ? args.bypassSecurityGroupEnabled : undefined;
            resourceInputs["connectionDrainEnabled"] = args ? args.connectionDrainEnabled : undefined;
            resourceInputs["connectionDrainTimeout"] = args ? args.connectionDrainTimeout : undefined;
            resourceInputs["createdTime"] = args ? args.createdTime : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["ipAddressVersion"] = args ? args.ipAddressVersion : undefined;
            resourceInputs["preserveClientIpEnabled"] = args ? args.preserveClientIpEnabled : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["proxyProtocolType"] = args ? args.proxyProtocolType : undefined;
            resourceInputs["scheduler"] = args ? args.scheduler : undefined;
            resourceInputs["serverGroupName"] = args ? args.serverGroupName : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["sessionPersistenceEnabled"] = args ? args.sessionPersistenceEnabled : undefined;
            resourceInputs["sessionPersistenceTimeout"] = args ? args.sessionPersistenceTimeout : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timestampRemoveEnabled"] = args ? args.timestampRemoveEnabled : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["updatedTime"] = args ? args.updatedTime : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["relatedLoadBalancerIds"] = undefined /*out*/;
            resourceInputs["serverCount"] = undefined /*out*/;
            resourceInputs["serverGroupId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NlbServerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NlbServerGroup resources.
 */
export interface NlbServerGroupState {
    /**
     * 账号ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * 是否开启全端口转发
     */
    anyPortEnabled?: pulumi.Input<boolean>;
    /**
     * 是否开启放通后端安全组功能。仅参数Type为“instance”时，可以配置此参数
     */
    bypassSecurityGroupEnabled?: pulumi.Input<boolean>;
    /**
     * 是否开启连接优雅中断
     */
    connectionDrainEnabled?: pulumi.Input<boolean>;
    /**
     * 连接优雅中断超时时间，取值范围为0～900秒。参数ConnectionDrainEnabled为“true”时，该参数为必填。
     */
    connectionDrainTimeout?: pulumi.Input<number>;
    /**
     * 后端服务器组的创建时间
     */
    createdTime?: pulumi.Input<string>;
    /**
     * 后端服务器组的描述,服务器组的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
     */
    description?: pulumi.Input<string>;
    /**
     * 健康检查相关参数
     */
    healthCheck?: pulumi.Input<inputs.clb.NlbServerGroupHealthCheck>;
    /**
     * 服务器组的IP地址类型
     */
    ipAddressVersion?: pulumi.Input<string>;
    /**
     * 是否开启源地址保持
     */
    preserveClientIpEnabled?: pulumi.Input<boolean>;
    /**
     * 项目名称
     */
    projectName?: pulumi.Input<string>;
    /**
     * NLB转发流量到后端服务器时使用的通信协议
     */
    protocol?: pulumi.Input<string>;
    /**
     * 是否开启Proxy-Protocol协议
     */
    proxyProtocolType?: pulumi.Input<string>;
    /**
     * 服务器组关联的NLB实例
     */
    relatedLoadBalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * NLB转发流量时遵循的规则
     */
    scheduler?: pulumi.Input<string>;
    /**
     * 服务器组中后端服务器的数量
     */
    serverCount?: pulumi.Input<number>;
    /**
     * 服务器组ID
     */
    serverGroupId?: pulumi.Input<string>;
    /**
     * 服务器组名称, 必须以字母、数字或中文开头，可包含以下特殊字符：点号（.）、下划线（_）和中划线（-）。限制为1 ～ 128个字符。该参数不传入，则默认为服务器组ID。
     */
    serverGroupName?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.clb.NlbServerGroupServer>[]>;
    /**
     * 是否开启会话保持
     */
    sessionPersistenceEnabled?: pulumi.Input<boolean>;
    /**
     * 会话保持的超时时间，取值范围为1～3600秒，默认1000秒
     */
    sessionPersistenceTimeout?: pulumi.Input<number>;
    /**
     * 服务器组的状态
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.clb.NlbServerGroupTag>[]>;
    /**
     * 是否开启清除TCP/HTTP/HTTPS报文的timestamp（即时间戳）的功能
     */
    timestampRemoveEnabled?: pulumi.Input<boolean>;
    /**
     * 服务器组的类型
     */
    type?: pulumi.Input<string>;
    /**
     * 后端服务器组的更新时间
     */
    updatedTime?: pulumi.Input<string>;
    /**
     * 服务器组所属私有网络的ID。
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NlbServerGroup resource.
 */
export interface NlbServerGroupArgs {
    /**
     * 账号ID
     */
    accountId?: pulumi.Input<string>;
    /**
     * 是否开启全端口转发
     */
    anyPortEnabled?: pulumi.Input<boolean>;
    /**
     * 是否开启放通后端安全组功能。仅参数Type为“instance”时，可以配置此参数
     */
    bypassSecurityGroupEnabled?: pulumi.Input<boolean>;
    /**
     * 是否开启连接优雅中断
     */
    connectionDrainEnabled?: pulumi.Input<boolean>;
    /**
     * 连接优雅中断超时时间，取值范围为0～900秒。参数ConnectionDrainEnabled为“true”时，该参数为必填。
     */
    connectionDrainTimeout?: pulumi.Input<number>;
    /**
     * 后端服务器组的创建时间
     */
    createdTime?: pulumi.Input<string>;
    /**
     * 后端服务器组的描述,服务器组的描述。必须以字母、数字或中文开头，可包含以下特殊字符：英文逗号（,）、点号（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）长度限制为0 ～ 255个字符。该参数不传入，则默认为空字符串。
     */
    description?: pulumi.Input<string>;
    /**
     * 健康检查相关参数
     */
    healthCheck?: pulumi.Input<inputs.clb.NlbServerGroupHealthCheck>;
    /**
     * 服务器组的IP地址类型
     */
    ipAddressVersion?: pulumi.Input<string>;
    /**
     * 是否开启源地址保持
     */
    preserveClientIpEnabled?: pulumi.Input<boolean>;
    /**
     * 项目名称
     */
    projectName?: pulumi.Input<string>;
    /**
     * NLB转发流量到后端服务器时使用的通信协议
     */
    protocol: pulumi.Input<string>;
    /**
     * 是否开启Proxy-Protocol协议
     */
    proxyProtocolType?: pulumi.Input<string>;
    /**
     * NLB转发流量时遵循的规则
     */
    scheduler?: pulumi.Input<string>;
    /**
     * 服务器组名称, 必须以字母、数字或中文开头，可包含以下特殊字符：点号（.）、下划线（_）和中划线（-）。限制为1 ～ 128个字符。该参数不传入，则默认为服务器组ID。
     */
    serverGroupName?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.clb.NlbServerGroupServer>[]>;
    /**
     * 是否开启会话保持
     */
    sessionPersistenceEnabled?: pulumi.Input<boolean>;
    /**
     * 会话保持的超时时间，取值范围为1～3600秒，默认1000秒
     */
    sessionPersistenceTimeout?: pulumi.Input<number>;
    tags?: pulumi.Input<pulumi.Input<inputs.clb.NlbServerGroupTag>[]>;
    /**
     * 是否开启清除TCP/HTTP/HTTPS报文的timestamp（即时间戳）的功能
     */
    timestampRemoveEnabled?: pulumi.Input<boolean>;
    /**
     * 服务器组的类型
     */
    type?: pulumi.Input<string>;
    /**
     * 后端服务器组的更新时间
     */
    updatedTime?: pulumi.Input<string>;
    /**
     * 服务器组所属私有网络的ID。
     */
    vpcId: pulumi.Input<string>;
}
