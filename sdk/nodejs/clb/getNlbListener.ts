// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source schema for Volcengine::CLB::NLBListener
 */
export function getNlbListener(args: GetNlbListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetNlbListenerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcenginecc:clb/getNlbListener:getNlbListener", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNlbListener.
 */
export interface GetNlbListenerArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: string;
}

/**
 * A collection of values returned by getNlbListener.
 */
export interface GetNlbListenerResult {
    /**
     * TLS监听器服务器证书的ID，仅支持传入火山引擎证书中心 SSL 证书。。
     */
    readonly certificateId: string;
    /**
     * 监听器的连接超时时间（秒）。
     */
    readonly connectionTimeout: number;
    /**
     * 监听器的创建时间。
     */
    readonly createdTime: string;
    /**
     * 监听器描述信息。
     */
    readonly description: string;
    /**
     * 是否启用监听器。true：开启；false：关闭。
     */
    readonly enabled: boolean;
    /**
     * 全端口监听的结束端口，仅当Port为0时有效。
     */
    readonly endPort: number;
    /**
     * 后端实例健康检查响应信息。
     */
    readonly healths: outputs.clb.GetNlbListenerHealth[];
    /**
     * Uniquely identifies the resource.
     */
    readonly id: string;
    /**
     * 监听器唯一标识。
     */
    readonly listenerId: string;
    /**
     * 监听器名称。
     */
    readonly listenerName: string;
    /**
     * 负载均衡实例ID。
     */
    readonly loadBalancerId: string;
    /**
     * 监听器接收请求的端口，0表示启用全端口监听。
     */
    readonly port: number;
    /**
     * 监听协议类型。
     */
    readonly protocol: string;
    /**
     * TLS 安全策略ID，支持系统安全策略和自定义安全策略。系统安全策略取值：.tls*cipher*policy*1*0.tls*cipher*policy*1*1.tls*cipher*policy*1*2.tls*cipher*policy*1*2*strict.tls*cipher*policy*1*2*strict*with*1_3.自定义安全策略：输入自定义安全策略 ID。当Protocol为TLS 时，该参数为必填。。
     */
    readonly securityPolicyId: string;
    /**
     * 监听器关联的服务器组ID。
     */
    readonly serverGroupId: string;
    /**
     * 全端口监听的起始端口，仅当Port为0时有效。
     */
    readonly startPort: number;
    /**
     * 监听器的状态。
     */
    readonly status: string;
    /**
     * 资源标签。
     */
    readonly tags: outputs.clb.GetNlbListenerTag[];
    /**
     * 监听器最近操作时间。
     */
    readonly updatedTime: string;
}
/**
 * Data Source schema for Volcengine::CLB::NLBListener
 */
export function getNlbListenerOutput(args: GetNlbListenerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNlbListenerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("volcenginecc:clb/getNlbListener:getNlbListener", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getNlbListener.
 */
export interface GetNlbListenerOutputArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: pulumi.Input<string>;
}
