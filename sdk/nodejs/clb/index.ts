// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClbArgs, ClbState } from "./clb";
export type Clb = import("./clb").Clb;
export const Clb: typeof import("./clb").Clb = null as any;
utilities.lazyLoad(exports, ["Clb"], () => require("./clb"));

export { GetClbArgs, GetClbResult, GetClbOutputArgs } from "./getClb";
export const getClb: typeof import("./getClb").getClb = null as any;
export const getClbOutput: typeof import("./getClb").getClbOutput = null as any;
utilities.lazyLoad(exports, ["getClb","getClbOutput"], () => require("./getClb"));

export { GetClbsResult } from "./getClbs";
export const getClbs: typeof import("./getClbs").getClbs = null as any;
export const getClbsOutput: typeof import("./getClbs").getClbsOutput = null as any;
utilities.lazyLoad(exports, ["getClbs","getClbsOutput"], () => require("./getClbs"));

export { GetNlbArgs, GetNlbResult, GetNlbOutputArgs } from "./getNlb";
export const getNlb: typeof import("./getNlb").getNlb = null as any;
export const getNlbOutput: typeof import("./getNlb").getNlbOutput = null as any;
utilities.lazyLoad(exports, ["getNlb","getNlbOutput"], () => require("./getNlb"));

export { GetNlbListenerArgs, GetNlbListenerResult, GetNlbListenerOutputArgs } from "./getNlbListener";
export const getNlbListener: typeof import("./getNlbListener").getNlbListener = null as any;
export const getNlbListenerOutput: typeof import("./getNlbListener").getNlbListenerOutput = null as any;
utilities.lazyLoad(exports, ["getNlbListener","getNlbListenerOutput"], () => require("./getNlbListener"));

export { GetNlbListenersResult } from "./getNlbListeners";
export const getNlbListeners: typeof import("./getNlbListeners").getNlbListeners = null as any;
export const getNlbListenersOutput: typeof import("./getNlbListeners").getNlbListenersOutput = null as any;
utilities.lazyLoad(exports, ["getNlbListeners","getNlbListenersOutput"], () => require("./getNlbListeners"));

export { GetNlbServerGroupArgs, GetNlbServerGroupResult, GetNlbServerGroupOutputArgs } from "./getNlbServerGroup";
export const getNlbServerGroup: typeof import("./getNlbServerGroup").getNlbServerGroup = null as any;
export const getNlbServerGroupOutput: typeof import("./getNlbServerGroup").getNlbServerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getNlbServerGroup","getNlbServerGroupOutput"], () => require("./getNlbServerGroup"));

export { GetNlbServerGroupsResult } from "./getNlbServerGroups";
export const getNlbServerGroups: typeof import("./getNlbServerGroups").getNlbServerGroups = null as any;
export const getNlbServerGroupsOutput: typeof import("./getNlbServerGroups").getNlbServerGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getNlbServerGroups","getNlbServerGroupsOutput"], () => require("./getNlbServerGroups"));

export { GetNlbsResult } from "./getNlbs";
export const getNlbs: typeof import("./getNlbs").getNlbs = null as any;
export const getNlbsOutput: typeof import("./getNlbs").getNlbsOutput = null as any;
utilities.lazyLoad(exports, ["getNlbs","getNlbsOutput"], () => require("./getNlbs"));

export { GetServerGroupArgs, GetServerGroupResult, GetServerGroupOutputArgs } from "./getServerGroup";
export const getServerGroup: typeof import("./getServerGroup").getServerGroup = null as any;
export const getServerGroupOutput: typeof import("./getServerGroup").getServerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroup","getServerGroupOutput"], () => require("./getServerGroup"));

export { GetServerGroupsResult } from "./getServerGroups";
export const getServerGroups: typeof import("./getServerGroups").getServerGroups = null as any;
export const getServerGroupsOutput: typeof import("./getServerGroups").getServerGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroups","getServerGroupsOutput"], () => require("./getServerGroups"));

export { NlbArgs, NlbState } from "./nlb";
export type Nlb = import("./nlb").Nlb;
export const Nlb: typeof import("./nlb").Nlb = null as any;
utilities.lazyLoad(exports, ["Nlb"], () => require("./nlb"));

export { NlbListenerArgs, NlbListenerState } from "./nlbListener";
export type NlbListener = import("./nlbListener").NlbListener;
export const NlbListener: typeof import("./nlbListener").NlbListener = null as any;
utilities.lazyLoad(exports, ["NlbListener"], () => require("./nlbListener"));

export { NlbServerGroupArgs, NlbServerGroupState } from "./nlbServerGroup";
export type NlbServerGroup = import("./nlbServerGroup").NlbServerGroup;
export const NlbServerGroup: typeof import("./nlbServerGroup").NlbServerGroup = null as any;
utilities.lazyLoad(exports, ["NlbServerGroup"], () => require("./nlbServerGroup"));

export { ServerGroupArgs, ServerGroupState } from "./serverGroup";
export type ServerGroup = import("./serverGroup").ServerGroup;
export const ServerGroup: typeof import("./serverGroup").ServerGroup = null as any;
utilities.lazyLoad(exports, ["ServerGroup"], () => require("./serverGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcenginecc:clb/clb:Clb":
                return new Clb(name, <any>undefined, { urn })
            case "volcenginecc:clb/nlb:Nlb":
                return new Nlb(name, <any>undefined, { urn })
            case "volcenginecc:clb/nlbListener:NlbListener":
                return new NlbListener(name, <any>undefined, { urn })
            case "volcenginecc:clb/nlbServerGroup:NlbServerGroup":
                return new NlbServerGroup(name, <any>undefined, { urn })
            case "volcenginecc:clb/serverGroup:ServerGroup":
                return new ServerGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcenginecc", "clb/clb", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "clb/nlb", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "clb/nlbListener", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "clb/nlbServerGroup", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "clb/serverGroup", _module)
