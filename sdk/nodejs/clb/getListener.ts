// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source schema for Volcengine::CLB::Listener
 */
export function getListener(args: GetListenerArgs, opts?: pulumi.InvokeOptions): Promise<GetListenerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcenginecc:clb/getListener:getListener", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getListener.
 */
export interface GetListenerArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: string;
}

/**
 * A collection of values returned by getListener.
 */
export interface GetListenerResult {
    /**
     * 监听器绑定的访问控制策略组ID。仅AclStatus参数为on时返回。
     */
    readonly aclIds: string[];
    /**
     * 是否开启访问控制功能。取值如下：on：开启。off（默认值）：不开启。
     */
    readonly aclStatus: string;
    /**
     * 访问控制的方式。white：白名单。black：黑名单。仅AclStatus参数为on时，本参数有效。
     */
    readonly aclType: string;
    /**
     * 监听器的带宽上限，即此监听器独占CLB实例的带宽，单位为Mbps。-1（默认值）：此监听器不独占CLB的带，与其他监听器共享CLB实例未被独占的带宽。取值范围：1～CLB实例未被独占的带宽。
     */
    readonly bandwidth: number;
    /**
     * 双向认证的CA证书。
     */
    readonly caCertificateId: string;
    /**
     * 是否开启双向认证。on：开启。off（默认值）：不开启。
     */
    readonly caEnabled: string;
    /**
     * 证书中心的证书的ID。
     */
    readonly certCenterCertificateId: string;
    /**
     * CLB侧证书管理模块的证书的ID。
     */
    readonly certificateId: string;
    /**
     * 证书的来源。clb (默认)：CLB上传的证书。cert_center：证书中心上传的证书。user：用户上传的证书。
     */
    readonly certificateSource: string;
    /**
     * 读取客户端请求正文的超时时间。此超时时间仅针对两个连续的读操作之间设置，而非整个请求的传输过程。取值范围为 30-120秒，默认为60秒。仅参数Protocol取HTTP或HTTPS时，本参数有效
     */
    readonly clientBodyTimeout: number;
    /**
     * 读取客户端请求头的超时时间。取值范围为30-120秒。默认为60秒。仅参数Protocol取HTTP或HTTPS时，本参数有效。
     */
    readonly clientHeaderTimeout: number;
    /**
     * 监听器是否开启连接优雅中断功能。on：开启。off：不开启。参数Protocol返回为HTTP或HTTPS时，该参数固定返回off。
     */
    readonly connectionDrainEnabled: string;
    /**
     * 连接优雅中断的超时时间，单位为秒。参数ConnectionDrainEnabled返回为off时，该参数返回0。
     */
    readonly connectionDrainTimeout: number;
    /**
     * 后端服务器配置的会话保持的Cookie名称。仅参数PersistenceType取server时，本参数有效且必填。只能包含字母、数字、下划线（_）和中划线（-）。长度限制在1～200字符之间。
     */
    readonly cookie: string;
    /**
     * 每秒新建连接数的上限。-1（默认值）：不限制，即CLB实例的新建连接数上限。取值范围：1～CLB实例的新连接数上限。
     */
    readonly cps: number;
    /**
     * 监听器的创建时间。
     */
    readonly createdTime: string;
    /**
     * 监听器的描述。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：英文逗号（,）、点（.）、下划线（_）、空格（ ）、等号（=）、中划线（-）、中文逗号（，）、中文句号（。）。长度限制为0 ～ 255个字符。不填则默认值为空字符串。
     */
    readonly description: string;
    /**
     * 是否启用监听器。on（默认值）：开启。off：不开启。
     */
    readonly enabled: string;
    /**
     * 全端口监听的结束端口，取值范围为1-65535。参数Port为“0”时，该参数必须传入，且该参数取值应大于tartPort。
     */
    readonly endPort: number;
    /**
     * 监听器的连接超时时间。仅参数Protocol取TCP或UDP时，本参数有效。取值如下：TCP协议：10-900秒，默认为900秒。UDP协议：1-300秒，默认为90秒。
     */
    readonly establishedTimeout: number;
    /**
     * 健康检查相关信息。
     */
    readonly healthCheck: outputs.clb.GetListenerHealthCheck;
    /**
     * 监听器是否开启前端HTTP 2.0协议。仅参数`Protocol取HTTPS时，本参数有效。取值如下：|on：开启。off（默认值）：不开启。
     */
    readonly http2Enabled: string;
    /**
     * Uniquely identifies the resource.
     */
    readonly id: string;
    /**
     * 客户端与CLB之间的长连接超时时间。取值范围为 0-900秒，默认为75秒。0表示禁用长连接。仅参数Protocol取HTTP或HTTPS时，本参数有效。
     */
    readonly keepaliveTimeout: number;
    /**
     * 监听器的ID。
     */
    readonly listenerId: string;
    /**
     * 监听器的名称。必须以字母、数字或中文开头，可包含字母、数字、中文及以下特殊字符：点号（.）、下划线_）和中划线（-）。长度限制在1～128字符之间。不填则默认将“协议-端口”作为监听器名称。
     */
    readonly listenerName: string;
    /**
     * CLB实例的ID。
     */
    readonly loadBalancerId: string;
    /**
     * 最大并发连接数的上限。-1（默认值）：不限制，CLB实例的最大并发连接数上限。取值范围：1～CLB实例的最大并发连接数上限。
     */
    readonly maxConnections: number;
    /**
     * 会话保持的超时时间，单位为秒。取值范围根据参数PersistenceType取值有所不同。PersistenceType置为source_ip时，取值范围为1～3600。PersistenceType配置为insert时，取值范围为1～86400。
     */
    readonly persistenceTimeout: number;
    /**
     * 会话保持的类型。取值如下：off（默认值）：不启用会话保持。source_ip：源地址IP，仅参数ProtocolTCP或UDP时，本取值有效。insert：植入Cookie，仅参数Protocol取HTTP或HTTPS且Scheduler取wrr时，本取值生效。server：重写Cookie，仅参数Protocol取HTTP或HTTPS且Scheduler取wrr时，本取值生效。。
     */
    readonly persistenceType: string;
    /**
     * 监听器接收请求使用的端口。取值范围为 0～65535。参数Protocol为“TCP”或“UDP”时，支持传入0，表示用全端口监听。
     */
    readonly port: number;
    /**
     * 监听器的协议。
     */
    readonly protocol: string;
    /**
     * CLB与后端服务器之间的连接建立超时时间。建议大于健康检查超时时间。取值范围为 4-120秒，默认为4。仅参数Protocol取HTTP或HTTPS时，本参数有效。
     */
    readonly proxyConnectTimeout: number;
    /**
     * 是否启用Proxy-Protocol协议。仅参数Protocol取TCP或UDP时，本参数有效。取值如下：off（默认值）：关闭。standard：开启。
     */
    readonly proxyProtocolType: string;
    /**
     * CLB从后端服务器读取响应的超时时间。此超时时间仅针对两个连续的读操作之间设置，而非整个响应的传输过程。取值范围为30-3600秒，默认为60秒。仅参数Protocol取HTTP或HTTPS时，本参数有效。
     */
    readonly proxyReadTimeout: number;
    /**
     * CLB将请求传输到后端服务器的超时时间。此超时仅针对两个连续的写操作之间设置，而非整个请求的传输过程。取值范围为30-3600秒，默认为60秒。仅参数Protocol取HTTP或HTTPS时，本参数有效。
     */
    readonly proxySendTimeout: number;
    /**
     * 监听器使用的调度算法。wrr（默认值）：加权轮询。wlc：加权最小连接数。sh：源地址哈希。
     */
    readonly scheduler: string;
    /**
     * HTTPS监听器的TLS安全策略。仅参数Protocol取HTTPS时，本参数有效。 取值如下：default*policy（默认值）：支持SSL v3、TLS v1.0、TLS v1.1、TLS v1.2。tls*cipher*policy*1*0：支持TLS v1.0、TLS v1.1、TLS v1.2。tls*cipher*policy*1*1：支持TLS v1.1、TLS v1.2。tls*cipher*policy*1*2：支持TLS v1.2。tls*cipher*policy*1*2*strict：支持TLS v1.2。
     */
    readonly securityPolicyId: string;
    /**
     * CLB向客户端发送响应的超时时间。此超时仅针对两个连续的写操作之间设置，而非整响应的传输过程。取值范围为 1-3600秒，默认为60秒。仅参数Protocol取HTTP或HTTPS时，本参数有效。
     */
    readonly sendTimeout: number;
    /**
     * 监听器关联的后端服务器组 ID。
     */
    readonly serverGroupId: string;
    /**
     * 全端口监听的起始端口，取值范围为1-65535。参数Port为“0”时，该参数必须传入。
     */
    readonly startPort: number;
    /**
     * 监听器的状态。Creating：创建中。Active：运行中。Deleting: 删除中。Disabled: 已停用。
     */
    readonly status: string;
    /**
     * 监听器所属标签。
     */
    readonly tags: outputs.clb.GetListenerTag[];
    /**
     * 监听器最近一次的操作时间。
     */
    readonly updatedTime: string;
    /**
     * 是否将经过七层监听器的流量送至Web应用防火墙进行检测和过滤。on：是。off：否。
     */
    readonly wafProtectionEnabled: string;
}
/**
 * Data Source schema for Volcengine::CLB::Listener
 */
export function getListenerOutput(args: GetListenerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetListenerResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("volcenginecc:clb/getListener:getListener", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getListener.
 */
export interface GetListenerOutputArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: pulumi.Input<string>;
}
