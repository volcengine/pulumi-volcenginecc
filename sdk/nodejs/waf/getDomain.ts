// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source schema for Volcengine::WAF::Domain
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcenginecc:waf/getDomain:getDomain", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: string;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    /**
     * 接入模式。10：CNAME 接入，11：负载均衡（CLB）7 层接入。
     */
    readonly accessMode: number;
    /**
     * 高防实例 IP。高防型 WAF 接入展示，否则为空。
     */
    readonly advancedDefenseIp: string;
    /**
     * 高防实例 Ipv6。高防型 WAF 接入展示，否则为空。
     */
    readonly advancedDefenseIpv6: string;
    /**
     * 是否开启了 API 防护策略。0：关闭，1：开启。
     */
    readonly apiEnable: number;
    /**
     * 攻击状态。0:未发现攻击,1:发现攻击。
     */
    readonly attackStatus: number;
    /**
     * 是否开启智能 CC 防护策略。0：关闭，1：开启。
     */
    readonly autoCcEnable: number;
    /**
     * 是否开启自动封禁。0：关闭，1：开启。
     */
    readonly automaticBlackEnable: number;
    /**
     * 源站配置。
     */
    readonly backendGroups: outputs.waf.GetDomainBackendGroup[];
    /**
     * 是否开启了黑名单策略。0：关闭, 1：开启。
     */
    readonly blackIpEnable: number;
    /**
     * 是否开启了区域封禁策略。0：关闭;1：开启。
     */
    readonly blackLctEnable: number;
    /**
     * 是否开启动态Token防护。
     */
    readonly botDytokenEnable: number;
    /**
     * 是否开启 bot 频率限制策略。
     * 0：关闭
     * 1：开启。
     */
    readonly botFrequencyEnable: number;
    /**
     * 是否开启 bot 统计防护策略。
     * 0：关闭
     * 1：开启。
     */
    readonly botRepeatEnable: number;
    /**
     * 设置 bot 行为地图策略默认动作，当 BotSequenceEnable = 1 开启状态时生效。默认为 0 （观察）。
     * 0：观察
     * 2：拦截
     * 6：JS 挑战
     * 7：人机验证。
     */
    readonly botSequenceDefaultAction: number;
    /**
     * 是否开启 bot 行为地图。
     * 0：关闭
     * 1：开启。
     */
    readonly botSequenceEnable: number;
    /**
     * 是否开启 CC 防护策略。
     * 0：关闭
     * 1：开启。
     */
    readonly ccEnable: number;
    /**
     * 托管至证书中心的证书ID。
     */
    readonly certificateId: string;
    /**
     * 证书名称，协议类型包含 HTTPS 时显示。
     */
    readonly certificateName: string;
    /**
     * 证书托管平台:waf/certificate_service。
     */
    readonly certificatePlatform: string;
    /**
     * CLB实例ID。
     */
    readonly clbInstanceIds: string;
    /**
     * CLB监听器ID。
     */
    readonly clbListenerId: string;
    /**
     * CLB后端服务器组ID。
     */
    readonly clbPoolId: string;
    /**
     * CLB后端服务器ID。
     */
    readonly clbServerId: string;
    /**
     * 客户端IP获取方式。0:自定义Header字段,1:通过X-Forwarded-For(XFF)字段中第一个公网IP地址作为客户端真实IP地址。
     */
    readonly clientIpLocation: number;
    /**
     * 客户端请求body最大值(MB)。
     */
    readonly clientMaxBodySize: number;
    /**
     * LB接入参数。
     */
    readonly cloudAccessConfigs: outputs.waf.GetDomainCloudAccessConfig[];
    /**
     * CNAME记录。
     */
    readonly cname: string;
    /**
     * 是否开启自定义BOT防护。
     */
    readonly customBotEnable: number;
    /**
     * 自定义Header。
     */
    readonly customHeaders: string[];
    /**
     * 是否开启自定义响应。
     */
    readonly customRspEnable: number;
    /**
     * 自定义SNI。
     */
    readonly customSni: string;
    /**
     * 为例外 ALB 实例设置防护模式。
     * 1：启用防护，已配置的防护策略生效。
     * 2：暂停防护，仅执行转发而不检测，已配置的防护策略不生效。
     * 3：回源模式，直接将请求解析至源站，不再转发至 WAF 实例。
     * 设置例外防护实例后，域名可能还会存在以下防护状态：
     * 5：部分启用，默认防护模式为启用防护，但存在例外实例为暂停防护或回源模式状态。
     * 6：部分暂停，默认防护模式为暂停防护，但存在例外实例为启用防护或回源模式状态。
     * 7：部分回源，默认防护模式为回源模式，但存在例外实例为启用防护或暂停防护状态。
     */
    readonly defenceMode: number;
    /**
     * 是否开启数据泄露防护。
     */
    readonly dlpEnable: number;
    /**
     * 防护的域名信息，支持泛域名和精确域名。
     */
    readonly domain: string;
    /**
     * 是否开启用户自定义重定向。0:关闭,1:开启。
     */
    readonly enableCustomRedirect: number;
    /**
     * 是否开启HTTP2.0。0:关闭,1:开启。
     */
    readonly enableHttp2: number;
    /**
     * 是否支持防护Ipv6请求。0:关闭,1:开启。
     */
    readonly enableIpv6: number;
    /**
     * 是否开启SNI配置。0:关闭,1:开启。
     */
    readonly enableSni: number;
    /**
     * Uniquely identifies the resource.
     */
    readonly id: string;
    /**
     * 长连接复用个数。
     */
    readonly keepAliveRequest: number;
    /**
     * 长连接保持时间(秒)。
     */
    readonly keepAliveTimeout: number;
    /**
     * 负载均衡算法类型。wrr:加权轮询,wlc:加权最小连接数,sh:源地址哈希。
     */
    readonly lbAlgorithm: string;
    /**
     * 端口号。
     */
    readonly port: number;
    /**
     * 项目名称。
     */
    readonly projectName: string;
    /**
     * 是否开启协议跟随。0:关闭,1:开启。
     */
    readonly protocolFollow: number;
    /**
     * 接入端口信息。
     */
    readonly protocolPorts: outputs.waf.GetDomainProtocolPorts;
    /**
     * 接入协议类型,支持HTTP/HTTPS。
     */
    readonly protocols: string[];
    /**
     * 是否开启代理配置。0:关闭,1:开启。
     */
    readonly proxyConfig: number;
    /**
     * WAF和后端服务器的建连超时时间(秒)。
     */
    readonly proxyConnectTimeout: number;
    /**
     * WAF回源长连接可复用个数。
     */
    readonly proxyKeepAlive: number;
    /**
     * 空闲长连接超时时间(秒)。
     */
    readonly proxyKeepAliveTimeout: number;
    /**
     * WAF从后端服务器读取响应的超时时间(秒)。
     */
    readonly proxyReadTimeout: number;
    /**
     * WAF回源重试次数。
     */
    readonly proxyRetry: number;
    /**
     * WAF将请求传输到后端服务器的超时时间(秒)。
     */
    readonly proxyWriteTimeout: number;
    /**
     * CNAME接入回源方式。0:私网回源,1:公网回源。
     */
    readonly publicRealServer: number;
    /**
     * 是否开启异常响应防护。
     */
    readonly rspAbnormalEnable: number;
    /**
     * 服务IP。
     */
    readonly serverIps: string;
    /**
     * WAF回源IP。
     */
    readonly srcIps: string;
    /**
     * 源站协议。
     */
    readonly srcProtocol: string;
    /**
     * 加密套件。
     */
    readonly sslCiphers: string[];
    /**
     * TLS协议版本。如:TLSv1,TLSv1.1,TLSv1.2,TLSv1.3。
     */
    readonly sslProtocols: string[];
    /**
     * 接入状态。0:正常,1:DNS未解析,2:配置中,3:配置失败,4:配置未生效,5:更新中,6:实例已删除。
     */
    readonly status: number;
    /**
     * 是否开启托管BOT防护。
     */
    readonly systemBotEnable: number;
    /**
     * 是否开启防篡改。
     */
    readonly tamperProofEnable: number;
    /**
     * TCP监听器配置。
     */
    readonly tcpListenerConfigs: outputs.waf.GetDomainTcpListenerConfig[];
    /**
     * 是否开启日志服务。0:关闭,1:开启。
     */
    readonly tlsEnable: number;
    /**
     * 日志字段配置详情。
     */
    readonly tlsFieldsConfig: outputs.waf.GetDomainTlsFieldsConfig;
    /**
     * 更新时间。
     */
    readonly updateTime: string;
    /**
     * VPC ID。
     */
    readonly vpcId: string;
    /**
     * 是否开启WAF防护。
     */
    readonly wafEnable: number;
    /**
     * 是否开启白名单请求防护。
     */
    readonly wafWhiteReqEnable: number;
    /**
     * 是否开启白名单防护。
     */
    readonly whiteEnable: number;
    /**
     * 是否开启字段白名单防护。
     */
    readonly whiteFieldEnable: number;
}
/**
 * Data Source schema for Volcengine::WAF::Domain
 */
export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDomainResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("volcenginecc:waf/getDomain:getDomain", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: pulumi.Input<string>;
}
