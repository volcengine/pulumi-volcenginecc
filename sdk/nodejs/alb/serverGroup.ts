// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 服务器组是后端服务器的逻辑集合。ALB 实例按照您配置的转发规则确定客户端请求将被转发到的服务器组。然后，ALB 实例根据您配置的负载均衡策略，将请求分发给服务器组内的后端服务器。后端服务器接收并处理请求。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:alb/serverGroup:ServerGroup example "server_group_id"
 * ```
 */
export class ServerGroup extends pulumi.CustomResource {
    /**
     * Get an existing ServerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerGroupState, opts?: pulumi.CustomResourceOptions): ServerGroup {
        return new ServerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:alb/serverGroup:ServerGroup';

    /**
     * Returns true if the given object is an instance of ServerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerGroup.__pulumiType;
    }

    /**
     * 后端服务器组的创建时间。
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * 后端服务器组的描述。
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * 服务器组健康检查配置信息。
     */
    public readonly healthCheck!: pulumi.Output<outputs.alb.ServerGroupHealthCheck>;
    /**
     * 服务器组的IP地址类型。目前只支持 IPv4
     */
    public readonly ipAddressType!: pulumi.Output<string>;
    public /*out*/ readonly listeners!: pulumi.Output<outputs.alb.ServerGroupListener[]>;
    /**
     * 后端服务器组所属项目名称。
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * 后端协议：HTTP，HTTPS。
     */
    public readonly protocol!: pulumi.Output<string>;
    /**
     * 调度算法。取值：wrr：加权轮询。wlc：加权最小连接数。sh：源地址哈希。
     */
    public readonly scheduler!: pulumi.Output<string>;
    /**
     * 服务器组内后端服务器的个数。
     */
    public /*out*/ readonly serverCount!: pulumi.Output<number>;
    /**
     * 后端服务器组的ID。
     */
    public /*out*/ readonly serverGroupId!: pulumi.Output<string>;
    /**
     * 后端服务器组的名称。
     */
    public readonly serverGroupName!: pulumi.Output<string>;
    /**
     * 后端服务器组的类型。instance：服务器类型，该类型服务器组支持添加 ecs、eni 实例作为后端服务器。ip：IP类型，该类型服务器组支持添加 IP 地址作为后端服务器。
     */
    public readonly serverGroupType!: pulumi.Output<string>;
    public readonly servers!: pulumi.Output<outputs.alb.ServerGroupServer[]>;
    /**
     * 服务器组状态。Creating：创建中。Active：运行中。Configuring：配置中。Deleting：删除中。
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * 会话保持功能的参数信息。
     */
    public readonly stickySessionConfig!: pulumi.Output<outputs.alb.ServerGroupStickySessionConfig>;
    public readonly tags!: pulumi.Output<outputs.alb.ServerGroupTag[]>;
    /**
     * 后端服务器组的最近操作时间。
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * 后端服务器组所属 Vpc 的 ID。
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a ServerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerGroupArgs | ServerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerGroupState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["healthCheck"] = state ? state.healthCheck : undefined;
            resourceInputs["ipAddressType"] = state ? state.ipAddressType : undefined;
            resourceInputs["listeners"] = state ? state.listeners : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["scheduler"] = state ? state.scheduler : undefined;
            resourceInputs["serverCount"] = state ? state.serverCount : undefined;
            resourceInputs["serverGroupId"] = state ? state.serverGroupId : undefined;
            resourceInputs["serverGroupName"] = state ? state.serverGroupName : undefined;
            resourceInputs["serverGroupType"] = state ? state.serverGroupType : undefined;
            resourceInputs["servers"] = state ? state.servers : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["stickySessionConfig"] = state ? state.stickySessionConfig : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ServerGroupArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["healthCheck"] = args ? args.healthCheck : undefined;
            resourceInputs["ipAddressType"] = args ? args.ipAddressType : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["scheduler"] = args ? args.scheduler : undefined;
            resourceInputs["serverGroupName"] = args ? args.serverGroupName : undefined;
            resourceInputs["serverGroupType"] = args ? args.serverGroupType : undefined;
            resourceInputs["servers"] = args ? args.servers : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["stickySessionConfig"] = args ? args.stickySessionConfig : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["listeners"] = undefined /*out*/;
            resourceInputs["serverCount"] = undefined /*out*/;
            resourceInputs["serverGroupId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerGroup resources.
 */
export interface ServerGroupState {
    /**
     * 后端服务器组的创建时间。
     */
    createTime?: pulumi.Input<string>;
    /**
     * 后端服务器组的描述。
     */
    description?: pulumi.Input<string>;
    /**
     * 服务器组健康检查配置信息。
     */
    healthCheck?: pulumi.Input<inputs.alb.ServerGroupHealthCheck>;
    /**
     * 服务器组的IP地址类型。目前只支持 IPv4
     */
    ipAddressType?: pulumi.Input<string>;
    listeners?: pulumi.Input<pulumi.Input<inputs.alb.ServerGroupListener>[]>;
    /**
     * 后端服务器组所属项目名称。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 后端协议：HTTP，HTTPS。
     */
    protocol?: pulumi.Input<string>;
    /**
     * 调度算法。取值：wrr：加权轮询。wlc：加权最小连接数。sh：源地址哈希。
     */
    scheduler?: pulumi.Input<string>;
    /**
     * 服务器组内后端服务器的个数。
     */
    serverCount?: pulumi.Input<number>;
    /**
     * 后端服务器组的ID。
     */
    serverGroupId?: pulumi.Input<string>;
    /**
     * 后端服务器组的名称。
     */
    serverGroupName?: pulumi.Input<string>;
    /**
     * 后端服务器组的类型。instance：服务器类型，该类型服务器组支持添加 ecs、eni 实例作为后端服务器。ip：IP类型，该类型服务器组支持添加 IP 地址作为后端服务器。
     */
    serverGroupType?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.alb.ServerGroupServer>[]>;
    /**
     * 服务器组状态。Creating：创建中。Active：运行中。Configuring：配置中。Deleting：删除中。
     */
    status?: pulumi.Input<string>;
    /**
     * 会话保持功能的参数信息。
     */
    stickySessionConfig?: pulumi.Input<inputs.alb.ServerGroupStickySessionConfig>;
    tags?: pulumi.Input<pulumi.Input<inputs.alb.ServerGroupTag>[]>;
    /**
     * 后端服务器组的最近操作时间。
     */
    updateTime?: pulumi.Input<string>;
    /**
     * 后端服务器组所属 Vpc 的 ID。
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerGroup resource.
 */
export interface ServerGroupArgs {
    /**
     * 后端服务器组的描述。
     */
    description?: pulumi.Input<string>;
    /**
     * 服务器组健康检查配置信息。
     */
    healthCheck?: pulumi.Input<inputs.alb.ServerGroupHealthCheck>;
    /**
     * 服务器组的IP地址类型。目前只支持 IPv4
     */
    ipAddressType?: pulumi.Input<string>;
    /**
     * 后端服务器组所属项目名称。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 后端协议：HTTP，HTTPS。
     */
    protocol?: pulumi.Input<string>;
    /**
     * 调度算法。取值：wrr：加权轮询。wlc：加权最小连接数。sh：源地址哈希。
     */
    scheduler?: pulumi.Input<string>;
    /**
     * 后端服务器组的名称。
     */
    serverGroupName?: pulumi.Input<string>;
    /**
     * 后端服务器组的类型。instance：服务器类型，该类型服务器组支持添加 ecs、eni 实例作为后端服务器。ip：IP类型，该类型服务器组支持添加 IP 地址作为后端服务器。
     */
    serverGroupType?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<inputs.alb.ServerGroupServer>[]>;
    /**
     * 服务器组状态。Creating：创建中。Active：运行中。Configuring：配置中。Deleting：删除中。
     */
    status?: pulumi.Input<string>;
    /**
     * 会话保持功能的参数信息。
     */
    stickySessionConfig?: pulumi.Input<inputs.alb.ServerGroupStickySessionConfig>;
    tags?: pulumi.Input<pulumi.Input<inputs.alb.ServerGroupTag>[]>;
    /**
     * 后端服务器组所属 Vpc 的 ID。
     */
    vpcId: pulumi.Input<string>;
}
