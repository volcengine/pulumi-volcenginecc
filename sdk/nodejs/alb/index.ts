// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AclArgs, AclState } from "./acl";
export type Acl = import("./acl").Acl;
export const Acl: typeof import("./acl").Acl = null as any;
utilities.lazyLoad(exports, ["Acl"], () => require("./acl"));

export { CertificateArgs, CertificateState } from "./certificate";
export type Certificate = import("./certificate").Certificate;
export const Certificate: typeof import("./certificate").Certificate = null as any;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));

export { GetAclArgs, GetAclResult, GetAclOutputArgs } from "./getAcl";
export const getAcl: typeof import("./getAcl").getAcl = null as any;
export const getAclOutput: typeof import("./getAcl").getAclOutput = null as any;
utilities.lazyLoad(exports, ["getAcl","getAclOutput"], () => require("./getAcl"));

export { GetAclsResult } from "./getAcls";
export const getAcls: typeof import("./getAcls").getAcls = null as any;
export const getAclsOutput: typeof import("./getAcls").getAclsOutput = null as any;
utilities.lazyLoad(exports, ["getAcls","getAclsOutput"], () => require("./getAcls"));

export { GetCertificateArgs, GetCertificateResult, GetCertificateOutputArgs } from "./getCertificate";
export const getCertificate: typeof import("./getCertificate").getCertificate = null as any;
export const getCertificateOutput: typeof import("./getCertificate").getCertificateOutput = null as any;
utilities.lazyLoad(exports, ["getCertificate","getCertificateOutput"], () => require("./getCertificate"));

export { GetCertificatesResult } from "./getCertificates";
export const getCertificates: typeof import("./getCertificates").getCertificates = null as any;
export const getCertificatesOutput: typeof import("./getCertificates").getCertificatesOutput = null as any;
utilities.lazyLoad(exports, ["getCertificates","getCertificatesOutput"], () => require("./getCertificates"));

export { GetListenerArgs, GetListenerResult, GetListenerOutputArgs } from "./getListener";
export const getListener: typeof import("./getListener").getListener = null as any;
export const getListenerOutput: typeof import("./getListener").getListenerOutput = null as any;
utilities.lazyLoad(exports, ["getListener","getListenerOutput"], () => require("./getListener"));

export { GetListenersResult } from "./getListeners";
export const getListeners: typeof import("./getListeners").getListeners = null as any;
export const getListenersOutput: typeof import("./getListeners").getListenersOutput = null as any;
utilities.lazyLoad(exports, ["getListeners","getListenersOutput"], () => require("./getListeners"));

export { GetLoadBalancerArgs, GetLoadBalancerResult, GetLoadBalancerOutputArgs } from "./getLoadBalancer";
export const getLoadBalancer: typeof import("./getLoadBalancer").getLoadBalancer = null as any;
export const getLoadBalancerOutput: typeof import("./getLoadBalancer").getLoadBalancerOutput = null as any;
utilities.lazyLoad(exports, ["getLoadBalancer","getLoadBalancerOutput"], () => require("./getLoadBalancer"));

export { GetLoadBalancersResult } from "./getLoadBalancers";
export const getLoadBalancers: typeof import("./getLoadBalancers").getLoadBalancers = null as any;
export const getLoadBalancersOutput: typeof import("./getLoadBalancers").getLoadBalancersOutput = null as any;
utilities.lazyLoad(exports, ["getLoadBalancers","getLoadBalancersOutput"], () => require("./getLoadBalancers"));

export { GetServerGroupArgs, GetServerGroupResult, GetServerGroupOutputArgs } from "./getServerGroup";
export const getServerGroup: typeof import("./getServerGroup").getServerGroup = null as any;
export const getServerGroupOutput: typeof import("./getServerGroup").getServerGroupOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroup","getServerGroupOutput"], () => require("./getServerGroup"));

export { GetServerGroupsResult } from "./getServerGroups";
export const getServerGroups: typeof import("./getServerGroups").getServerGroups = null as any;
export const getServerGroupsOutput: typeof import("./getServerGroups").getServerGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getServerGroups","getServerGroupsOutput"], () => require("./getServerGroups"));

export { ListenerArgs, ListenerState } from "./listener";
export type Listener = import("./listener").Listener;
export const Listener: typeof import("./listener").Listener = null as any;
utilities.lazyLoad(exports, ["Listener"], () => require("./listener"));

export { LoadBalancerArgs, LoadBalancerState } from "./loadBalancer";
export type LoadBalancer = import("./loadBalancer").LoadBalancer;
export const LoadBalancer: typeof import("./loadBalancer").LoadBalancer = null as any;
utilities.lazyLoad(exports, ["LoadBalancer"], () => require("./loadBalancer"));

export { ServerGroupArgs, ServerGroupState } from "./serverGroup";
export type ServerGroup = import("./serverGroup").ServerGroup;
export const ServerGroup: typeof import("./serverGroup").ServerGroup = null as any;
utilities.lazyLoad(exports, ["ServerGroup"], () => require("./serverGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcenginecc:alb/acl:Acl":
                return new Acl(name, <any>undefined, { urn })
            case "volcenginecc:alb/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "volcenginecc:alb/listener:Listener":
                return new Listener(name, <any>undefined, { urn })
            case "volcenginecc:alb/loadBalancer:LoadBalancer":
                return new LoadBalancer(name, <any>undefined, { urn })
            case "volcenginecc:alb/serverGroup:ServerGroup":
                return new ServerGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcenginecc", "alb/acl", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "alb/certificate", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "alb/listener", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "alb/loadBalancer", _module)
pulumi.runtime.registerResourceModule("volcenginecc", "alb/serverGroup", _module)
