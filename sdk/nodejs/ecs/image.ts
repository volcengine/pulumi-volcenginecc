// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 镜像是包含了云服务器实例所需的基本操作系统、应用数据的特殊文件。创建实例时，必须选择镜像。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:ecs/image:Image example "image_id"
 * ```
 */
export class Image extends pulumi.CustomResource {
    /**
     * Get an existing Image resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ImageState, opts?: pulumi.CustomResourceOptions): Image {
        return new Image(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:ecs/image:Image';

    /**
     * Returns true if the given object is an instance of Image.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Image {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Image.__pulumiType;
    }

    /**
     * 镜像的架构类型。可以选择amd64（x86计算）、arm64（ARM计算）类型。
     */
    public /*out*/ readonly architecture!: pulumi.Output<string>;
    /**
     * 镜像的启动模式。可以选择BIOS、UEFI类型。
     */
    public /*out*/ readonly bootMode!: pulumi.Output<string>;
    /**
     * 镜像创建时间
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * 镜像的检测结果。
     */
    public readonly detectionResults!: pulumi.Output<outputs.ecs.ImageDetectionResults>;
    /**
     * 镜像ID。
     */
    public /*out*/ readonly imageId!: pulumi.Output<string>;
    /**
     * 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
     */
    public readonly imageName!: pulumi.Output<string>;
    /**
     * 镜像所属的账号ID。
     */
    public /*out*/ readonly imageOwnerId!: pulumi.Output<string>;
    /**
     * 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * 镜像中是否安装了云助手Agent。
     */
    public /*out*/ readonly isInstallRunCommandAgent!: pulumi.Output<boolean>;
    /**
     * 公共镜像是否长期维护。
     */
    public /*out*/ readonly isLts!: pulumi.Output<boolean>;
    /**
     * 镜像是否支持Cloud-init。
     */
    public /*out*/ readonly isSupportCloudInit!: pulumi.Output<boolean>;
    /**
     * 镜像的内核版本。
     */
    public readonly kernel!: pulumi.Output<string>;
    /**
     * 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
     */
    public readonly licenseType!: pulumi.Output<string>;
    /**
     * 镜像操作系统的名称。
     */
    public readonly osName!: pulumi.Output<string>;
    /**
     * 操作系统类型。
     */
    public readonly osType!: pulumi.Output<string>;
    /**
     * 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
     */
    public readonly platform!: pulumi.Output<string>;
    /**
     * 镜像的发行版本。
     */
    public readonly platformVersion!: pulumi.Output<string>;
    /**
     * 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * 镜像共享的账户
     */
    public readonly sharePermissions!: pulumi.Output<string[]>;
    /**
     * 镜像共享状态。HasShared：自定义镜像已被共享给其他用户。当自定义镜像未被共享或使用公共镜像时，ShareStatus返回为空。
     */
    public /*out*/ readonly shareStatus!: pulumi.Output<string>;
    /**
     * 镜像大小，单位为GiB。
     */
    public /*out*/ readonly size!: pulumi.Output<number>;
    /**
     * 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
     */
    public readonly snapshotGroupId!: pulumi.Output<string>;
    /**
     * 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
     */
    public readonly snapshotId!: pulumi.Output<string>;
    public /*out*/ readonly snapshots!: pulumi.Output<outputs.ecs.ImageSnapshot[]>;
    /**
     * 镜像的状态。
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ecs.ImageTag[]>;
    /**
     * 镜像更新时间
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * 镜像大小，单位为Byte。
     */
    public /*out*/ readonly virtualSize!: pulumi.Output<number>;
    /**
     * 镜像的可见性。public：公共镜像。private：私有镜像。shared：共享镜像。
     */
    public /*out*/ readonly visibility!: pulumi.Output<string>;

    /**
     * Create a Image resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ImageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ImageArgs | ImageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ImageState | undefined;
            resourceInputs["architecture"] = state ? state.architecture : undefined;
            resourceInputs["bootMode"] = state ? state.bootMode : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["detectionResults"] = state ? state.detectionResults : undefined;
            resourceInputs["imageId"] = state ? state.imageId : undefined;
            resourceInputs["imageName"] = state ? state.imageName : undefined;
            resourceInputs["imageOwnerId"] = state ? state.imageOwnerId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["isInstallRunCommandAgent"] = state ? state.isInstallRunCommandAgent : undefined;
            resourceInputs["isLts"] = state ? state.isLts : undefined;
            resourceInputs["isSupportCloudInit"] = state ? state.isSupportCloudInit : undefined;
            resourceInputs["kernel"] = state ? state.kernel : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["osName"] = state ? state.osName : undefined;
            resourceInputs["osType"] = state ? state.osType : undefined;
            resourceInputs["platform"] = state ? state.platform : undefined;
            resourceInputs["platformVersion"] = state ? state.platformVersion : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["sharePermissions"] = state ? state.sharePermissions : undefined;
            resourceInputs["shareStatus"] = state ? state.shareStatus : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["snapshotGroupId"] = state ? state.snapshotGroupId : undefined;
            resourceInputs["snapshotId"] = state ? state.snapshotId : undefined;
            resourceInputs["snapshots"] = state ? state.snapshots : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["virtualSize"] = state ? state.virtualSize : undefined;
            resourceInputs["visibility"] = state ? state.visibility : undefined;
        } else {
            const args = argsOrState as ImageArgs | undefined;
            if ((!args || args.imageName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'imageName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["detectionResults"] = args ? args.detectionResults : undefined;
            resourceInputs["imageName"] = args ? args.imageName : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["kernel"] = args ? args.kernel : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["osName"] = args ? args.osName : undefined;
            resourceInputs["osType"] = args ? args.osType : undefined;
            resourceInputs["platform"] = args ? args.platform : undefined;
            resourceInputs["platformVersion"] = args ? args.platformVersion : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["sharePermissions"] = args ? args.sharePermissions : undefined;
            resourceInputs["snapshotGroupId"] = args ? args.snapshotGroupId : undefined;
            resourceInputs["snapshotId"] = args ? args.snapshotId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["architecture"] = undefined /*out*/;
            resourceInputs["bootMode"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["imageId"] = undefined /*out*/;
            resourceInputs["imageOwnerId"] = undefined /*out*/;
            resourceInputs["isInstallRunCommandAgent"] = undefined /*out*/;
            resourceInputs["isLts"] = undefined /*out*/;
            resourceInputs["isSupportCloudInit"] = undefined /*out*/;
            resourceInputs["shareStatus"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["snapshots"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["virtualSize"] = undefined /*out*/;
            resourceInputs["visibility"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Image.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Image resources.
 */
export interface ImageState {
    /**
     * 镜像的架构类型。可以选择amd64（x86计算）、arm64（ARM计算）类型。
     */
    architecture?: pulumi.Input<string>;
    /**
     * 镜像的启动模式。可以选择BIOS、UEFI类型。
     */
    bootMode?: pulumi.Input<string>;
    /**
     * 镜像创建时间
     */
    createdAt?: pulumi.Input<string>;
    /**
     * 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
     */
    description?: pulumi.Input<string>;
    /**
     * 镜像的检测结果。
     */
    detectionResults?: pulumi.Input<inputs.ecs.ImageDetectionResults>;
    /**
     * 镜像ID。
     */
    imageId?: pulumi.Input<string>;
    /**
     * 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
     */
    imageName?: pulumi.Input<string>;
    /**
     * 镜像所属的账号ID。
     */
    imageOwnerId?: pulumi.Input<string>;
    /**
     * 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
     */
    instanceId?: pulumi.Input<string>;
    /**
     * 镜像中是否安装了云助手Agent。
     */
    isInstallRunCommandAgent?: pulumi.Input<boolean>;
    /**
     * 公共镜像是否长期维护。
     */
    isLts?: pulumi.Input<boolean>;
    /**
     * 镜像是否支持Cloud-init。
     */
    isSupportCloudInit?: pulumi.Input<boolean>;
    /**
     * 镜像的内核版本。
     */
    kernel?: pulumi.Input<string>;
    /**
     * 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
     */
    licenseType?: pulumi.Input<string>;
    /**
     * 镜像操作系统的名称。
     */
    osName?: pulumi.Input<string>;
    /**
     * 操作系统类型。
     */
    osType?: pulumi.Input<string>;
    /**
     * 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
     */
    platform?: pulumi.Input<string>;
    /**
     * 镜像的发行版本。
     */
    platformVersion?: pulumi.Input<string>;
    /**
     * 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 镜像共享的账户
     */
    sharePermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * 镜像共享状态。HasShared：自定义镜像已被共享给其他用户。当自定义镜像未被共享或使用公共镜像时，ShareStatus返回为空。
     */
    shareStatus?: pulumi.Input<string>;
    /**
     * 镜像大小，单位为GiB。
     */
    size?: pulumi.Input<number>;
    /**
     * 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
     */
    snapshotGroupId?: pulumi.Input<string>;
    /**
     * 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
     */
    snapshotId?: pulumi.Input<string>;
    snapshots?: pulumi.Input<pulumi.Input<inputs.ecs.ImageSnapshot>[]>;
    /**
     * 镜像的状态。
     */
    status?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ecs.ImageTag>[]>;
    /**
     * 镜像更新时间
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * 镜像大小，单位为Byte。
     */
    virtualSize?: pulumi.Input<number>;
    /**
     * 镜像的可见性。public：公共镜像。private：私有镜像。shared：共享镜像。
     */
    visibility?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Image resource.
 */
export interface ImageArgs {
    /**
     * 镜像描述。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、英文句号“.”、中文逗号“，”、中文句号“。”和空格。长度限制为0～255个字符。不填默认为空。
     */
    description?: pulumi.Input<string>;
    /**
     * 镜像的检测结果。
     */
    detectionResults?: pulumi.Input<inputs.ecs.ImageDetectionResults>;
    /**
     * 镜像名称。必须以字母、汉字开头。只能包含中文、字母、数字、下划线“_”、中划线“-”、英文句号“.”。长度限制为1 ~ 128个字符。
     */
    imageName: pulumi.Input<string>;
    /**
     * 实例ID。本参数与SnapshotId、SnapshotGroupId参数，三选一必填。
     */
    instanceId?: pulumi.Input<string>;
    /**
     * 镜像的内核版本。
     */
    kernel?: pulumi.Input<string>;
    /**
     * 镜像许可证类型。VolcanoEngine：默认，根据您设置的platform，采用火山引擎官方渠道的许可证。BYOL：自带许可证（BYOL）。
     */
    licenseType?: pulumi.Input<string>;
    /**
     * 镜像操作系统的名称。
     */
    osName?: pulumi.Input<string>;
    /**
     * 操作系统类型。
     */
    osType?: pulumi.Input<string>;
    /**
     * 镜像操作系统的发行版本。可以选择CentOS、Debian、veLinux、Windows Server、Fedora、OpenSUSE、Ubuntu。
     */
    platform?: pulumi.Input<string>;
    /**
     * 镜像的发行版本。
     */
    platformVersion?: pulumi.Input<string>;
    /**
     * 资源所属项目。调用接口账号若仅拥有部分项目权限时必须传入有权限的项目信息。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 镜像共享的账户
     */
    sharePermissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * 快照一致性组ID，表示使用快照一致性组创建自定义镜像。本参数与SnapshotId、InstanceId参数，三选一必填。
     */
    snapshotGroupId?: pulumi.Input<string>;
    /**
     * 系统盘快照ID，表示使用系统盘快照创建自定义镜像。本参数与InstanceId、SnapshotGroupId参数，三选一必填。
     */
    snapshotId?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ecs.ImageTag>[]>;
}
