// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Data Source schema for Volcengine::ECS::Keypair
 */
export function getKeypair(args: GetKeypairArgs, opts?: pulumi.InvokeOptions): Promise<GetKeypairResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("volcenginecc:ecs/getKeypair:getKeypair", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeypair.
 */
export interface GetKeypairArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: string;
}

/**
 * A collection of values returned by getKeypair.
 */
export interface GetKeypairResult {
    /**
     * 密钥对创建时间。
     */
    readonly createdTime: string;
    /**
     * 密钥对的描述，默认值为空字符串。必须以字母或中文开头。只能包含中文、字母、数字、点“.”、空格、下划线“_”、中划线“-”、等号“=”、英文逗号“,”、中文逗号“，”和中文句号“。”长度限制在255个字符以内。
     */
    readonly description: string;
    /**
     * 密钥对的指纹。根据RFC4716定义的公钥指纹格式，采用MD5信息摘要算法。
     */
    readonly fingerPrint: string;
    /**
     * Uniquely identifies the resource.
     */
    readonly id: string;
    /**
     * 操作的实例ID。
     */
    readonly instanceIds: string[];
    /**
     * 密钥对唯一ID。
     */
    readonly keyPairId: string;
    /**
     * 密钥对名称。不可与已有名称重复。长度限制在 2～64 个字符之间。允许使用点号“.”分隔字符成多段，每段允许使用大小写字母、数字或连字符“-”。不能以“-”和“.”开头或结尾，不能连续使用“-”或者“.”。
     */
    readonly keyPairName: string;
    /**
     * 密钥对私钥信息。
     */
    readonly privateKey: string;
    /**
     * 资源所属项目，一个资源只能归属于一个项目。只能包含字母、数字、下划线“_”、点“.”和中划线“-”。长度限制在64个字符以内。
     */
    readonly projectName: string;
    /**
     * 密钥对的公钥信息。
     */
    readonly publicKey: string;
    /**
     * 密钥对的标签。
     */
    readonly tags: outputs.ecs.GetKeypairTag[];
    /**
     * 密钥对更新时间。
     */
    readonly updatedTime: string;
}
/**
 * Data Source schema for Volcengine::ECS::Keypair
 */
export function getKeypairOutput(args: GetKeypairOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKeypairResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("volcenginecc:ecs/getKeypair:getKeypair", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeypair.
 */
export interface GetKeypairOutputArgs {
    /**
     * Uniquely identifies the resource.
     */
    id: pulumi.Input<string>;
}
