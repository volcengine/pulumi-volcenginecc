// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 云助手是火山引擎打造的原生自动化运维工具。您可以创建立即执行、周期执行、定时执行的作业任务，创建完成后完，云助手客户端将按照执行模式自动开始执行。
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcenginecc from "@volcengine/pulumi-volcenginecc";
 *
 * const invocationDemo = new volcenginecc.ecs.Invocation("InvocationDemo", {
 *     invocationName: "InvocationDemo",
 *     invocationDescription: "InvocationDemo desc",
 *     workingDir: "/home",
 *     username: "InvocationDemo",
 *     windowsPassword: "********",
 *     timeout: 60,
 *     instanceIds: ["i-ye2v6l0pvkqc6inxxxxx"],
 *     repeatMode: "Rate",
 *     frequency: "1h",
 *     launchTime: "2025-08-30T11:10Z",
 *     recurrenceEndTime: "2025-08-31T11:04Z",
 *     projectName: "default",
 *     tags: [{
 *         key: "env",
 *         value: "test",
 *     }],
 *     commandId: "cmd-ye28kugp249tzrexxxxx",
 *     parameters: "{\"dirname\":\"10\"}",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:ecs/invocation:Invocation example "invocation_id"
 * ```
 */
export class Invocation extends pulumi.CustomResource {
    /**
     * Get an existing Invocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InvocationState, opts?: pulumi.CustomResourceOptions): Invocation {
        return new Invocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:ecs/invocation:Invocation';

    /**
     * Returns true if the given object is an instance of Invocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Invocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Invocation.__pulumiType;
    }

    /**
     * 命令内容。
     */
    public /*out*/ readonly commandContent!: pulumi.Output<string>;
    /**
     * 被调用命令的描述。
     */
    public /*out*/ readonly commandDescription!: pulumi.Output<string>;
    /**
     * 命令ID。
     */
    public readonly commandId!: pulumi.Output<string>;
    /**
     * 任务触发时的命令名称。
     */
    public /*out*/ readonly commandName!: pulumi.Output<string>;
    /**
     * 被调用命令的提供方。
     */
    public /*out*/ readonly commandProvider!: pulumi.Output<string>;
    /**
     * 作业触发的命令类型。
     */
    public /*out*/ readonly commandType!: pulumi.Output<string>;
    /**
     * 被调用命令是否使用自定义参数。true：已启用。false：未启用。
     */
    public /*out*/ readonly enableParameter!: pulumi.Output<boolean>;
    /**
     * 任务结束时间。
     */
    public /*out*/ readonly endTime!: pulumi.Output<string>;
    /**
     * 执行频率。RepeatMode=Rate 时本参数必填。格式：<执行间隔数值><执行间隔单位>，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
     */
    public readonly frequency!: pulumi.Output<string>;
    /**
     * 实例ID列表，最多支持200个ID。
     */
    public readonly instanceIds!: pulumi.Output<string[]>;
    /**
     * 执行实例数量。
     */
    public /*out*/ readonly instanceNumber!: pulumi.Output<number>;
    /**
     * 作业描述，默认为空字符串，不超过256个字符。
     */
    public readonly invocationDescription!: pulumi.Output<string>;
    /**
     * 任务执行 ID。
     */
    public /*out*/ readonly invocationId!: pulumi.Output<string>;
    /**
     * 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
     */
    public readonly invocationName!: pulumi.Output<string>;
    public /*out*/ readonly invocationResults!: pulumi.Output<outputs.ecs.InvocationInvocationResult[]>;
    /**
     * 命令执行的总执行状态。
     */
    public /*out*/ readonly invocationStatus!: pulumi.Output<string>;
    /**
     * 执行时间。
     */
    public readonly launchTime!: pulumi.Output<string>;
    public /*out*/ readonly parameterDefinitions!: pulumi.Output<outputs.ecs.InvocationParameterDefinition[]>;
    /**
     * 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
     */
    public readonly parameters!: pulumi.Output<string>;
    /**
     * 资源所属项目，一个资源只能归属于一个项目。
     */
    public readonly projectName!: pulumi.Output<string>;
    /**
     * 周期结束时间，仅适用于周期任务（Rate）。
     */
    public readonly recurrenceEndTime!: pulumi.Output<string>;
    /**
     * 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
     */
    public readonly repeatMode!: pulumi.Output<string>;
    /**
     * 任务开始时间。
     */
    public /*out*/ readonly startTime!: pulumi.Output<string>;
    public readonly tags!: pulumi.Output<outputs.ecs.InvocationTag[]>;
    /**
     * 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
     */
    public readonly timeout!: pulumi.Output<number>;
    /**
     * 在ECS实例中执行命令的用户名称。
     */
    public readonly username!: pulumi.Output<string>;
    /**
     * 自定义windows用户的密码。
     */
    public readonly windowsPassword!: pulumi.Output<string>;
    /**
     * 创建的命令在ECS实例中运行的目录。
     */
    public readonly workingDir!: pulumi.Output<string>;

    /**
     * Create a Invocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InvocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InvocationArgs | InvocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InvocationState | undefined;
            resourceInputs["commandContent"] = state ? state.commandContent : undefined;
            resourceInputs["commandDescription"] = state ? state.commandDescription : undefined;
            resourceInputs["commandId"] = state ? state.commandId : undefined;
            resourceInputs["commandName"] = state ? state.commandName : undefined;
            resourceInputs["commandProvider"] = state ? state.commandProvider : undefined;
            resourceInputs["commandType"] = state ? state.commandType : undefined;
            resourceInputs["enableParameter"] = state ? state.enableParameter : undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["frequency"] = state ? state.frequency : undefined;
            resourceInputs["instanceIds"] = state ? state.instanceIds : undefined;
            resourceInputs["instanceNumber"] = state ? state.instanceNumber : undefined;
            resourceInputs["invocationDescription"] = state ? state.invocationDescription : undefined;
            resourceInputs["invocationId"] = state ? state.invocationId : undefined;
            resourceInputs["invocationName"] = state ? state.invocationName : undefined;
            resourceInputs["invocationResults"] = state ? state.invocationResults : undefined;
            resourceInputs["invocationStatus"] = state ? state.invocationStatus : undefined;
            resourceInputs["launchTime"] = state ? state.launchTime : undefined;
            resourceInputs["parameterDefinitions"] = state ? state.parameterDefinitions : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["projectName"] = state ? state.projectName : undefined;
            resourceInputs["recurrenceEndTime"] = state ? state.recurrenceEndTime : undefined;
            resourceInputs["repeatMode"] = state ? state.repeatMode : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["windowsPassword"] = state ? state.windowsPassword : undefined;
            resourceInputs["workingDir"] = state ? state.workingDir : undefined;
        } else {
            const args = argsOrState as InvocationArgs | undefined;
            if ((!args || args.commandId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'commandId'");
            }
            if ((!args || args.instanceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceIds'");
            }
            if ((!args || args.invocationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'invocationName'");
            }
            resourceInputs["commandId"] = args ? args.commandId : undefined;
            resourceInputs["frequency"] = args ? args.frequency : undefined;
            resourceInputs["instanceIds"] = args ? args.instanceIds : undefined;
            resourceInputs["invocationDescription"] = args ? args.invocationDescription : undefined;
            resourceInputs["invocationName"] = args ? args.invocationName : undefined;
            resourceInputs["launchTime"] = args ? args.launchTime : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["projectName"] = args ? args.projectName : undefined;
            resourceInputs["recurrenceEndTime"] = args ? args.recurrenceEndTime : undefined;
            resourceInputs["repeatMode"] = args ? args.repeatMode : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["windowsPassword"] = args ? args.windowsPassword : undefined;
            resourceInputs["workingDir"] = args ? args.workingDir : undefined;
            resourceInputs["commandContent"] = undefined /*out*/;
            resourceInputs["commandDescription"] = undefined /*out*/;
            resourceInputs["commandName"] = undefined /*out*/;
            resourceInputs["commandProvider"] = undefined /*out*/;
            resourceInputs["commandType"] = undefined /*out*/;
            resourceInputs["enableParameter"] = undefined /*out*/;
            resourceInputs["endTime"] = undefined /*out*/;
            resourceInputs["instanceNumber"] = undefined /*out*/;
            resourceInputs["invocationId"] = undefined /*out*/;
            resourceInputs["invocationResults"] = undefined /*out*/;
            resourceInputs["invocationStatus"] = undefined /*out*/;
            resourceInputs["parameterDefinitions"] = undefined /*out*/;
            resourceInputs["startTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Invocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Invocation resources.
 */
export interface InvocationState {
    /**
     * 命令内容。
     */
    commandContent?: pulumi.Input<string>;
    /**
     * 被调用命令的描述。
     */
    commandDescription?: pulumi.Input<string>;
    /**
     * 命令ID。
     */
    commandId?: pulumi.Input<string>;
    /**
     * 任务触发时的命令名称。
     */
    commandName?: pulumi.Input<string>;
    /**
     * 被调用命令的提供方。
     */
    commandProvider?: pulumi.Input<string>;
    /**
     * 作业触发的命令类型。
     */
    commandType?: pulumi.Input<string>;
    /**
     * 被调用命令是否使用自定义参数。true：已启用。false：未启用。
     */
    enableParameter?: pulumi.Input<boolean>;
    /**
     * 任务结束时间。
     */
    endTime?: pulumi.Input<string>;
    /**
     * 执行频率。RepeatMode=Rate 时本参数必填。格式：<执行间隔数值><执行间隔单位>，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
     */
    frequency?: pulumi.Input<string>;
    /**
     * 实例ID列表，最多支持200个ID。
     */
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * 执行实例数量。
     */
    instanceNumber?: pulumi.Input<number>;
    /**
     * 作业描述，默认为空字符串，不超过256个字符。
     */
    invocationDescription?: pulumi.Input<string>;
    /**
     * 任务执行 ID。
     */
    invocationId?: pulumi.Input<string>;
    /**
     * 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
     */
    invocationName?: pulumi.Input<string>;
    invocationResults?: pulumi.Input<pulumi.Input<inputs.ecs.InvocationInvocationResult>[]>;
    /**
     * 命令执行的总执行状态。
     */
    invocationStatus?: pulumi.Input<string>;
    /**
     * 执行时间。
     */
    launchTime?: pulumi.Input<string>;
    parameterDefinitions?: pulumi.Input<pulumi.Input<inputs.ecs.InvocationParameterDefinition>[]>;
    /**
     * 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
     */
    parameters?: pulumi.Input<string>;
    /**
     * 资源所属项目，一个资源只能归属于一个项目。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 周期结束时间，仅适用于周期任务（Rate）。
     */
    recurrenceEndTime?: pulumi.Input<string>;
    /**
     * 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
     */
    repeatMode?: pulumi.Input<string>;
    /**
     * 任务开始时间。
     */
    startTime?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ecs.InvocationTag>[]>;
    /**
     * 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
     */
    timeout?: pulumi.Input<number>;
    /**
     * 在ECS实例中执行命令的用户名称。
     */
    username?: pulumi.Input<string>;
    /**
     * 自定义windows用户的密码。
     */
    windowsPassword?: pulumi.Input<string>;
    /**
     * 创建的命令在ECS实例中运行的目录。
     */
    workingDir?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Invocation resource.
 */
export interface InvocationArgs {
    /**
     * 命令ID。
     */
    commandId: pulumi.Input<string>;
    /**
     * 执行频率。RepeatMode=Rate 时本参数必填。格式：<执行间隔数值><执行间隔单位>，执行间隔单位：支持分钟（5m-60m）、小时（1h-24h）和天（1d-7d）。执行间隔基于固定频率，与作业实际执行需要的时间无关。创建作业后基于LaunchTime执行一次，根据间隔设置确定下一次执行时间。
     */
    frequency?: pulumi.Input<string>;
    /**
     * 实例ID列表，最多支持200个ID。
     */
    instanceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * 作业描述，默认为空字符串，不超过256个字符。
     */
    invocationDescription?: pulumi.Input<string>;
    /**
     * 作业名称。不超过64个字符。暂不限制特殊字符。同地域下作业名称可重复。
     */
    invocationName: pulumi.Input<string>;
    /**
     * 执行时间。
     */
    launchTime?: pulumi.Input<string>;
    /**
     * 命令中包含自定义参数时，需通过本参数传入自定义参数的键值对。自定义参数个数范围为0~60。Key不允许为空字符串，最多支持64个字符。Value允许为空字符串。自定义参数与原始命令内容在Base64编码后，综合长度不能超过16KB。设置的自定义参数名集合必须为创建命令时定义的参数集的子集。对于未传入的参数，使用默认值代替。
     */
    parameters?: pulumi.Input<string>;
    /**
     * 资源所属项目，一个资源只能归属于一个项目。
     */
    projectName?: pulumi.Input<string>;
    /**
     * 周期结束时间，仅适用于周期任务（Rate）。
     */
    recurrenceEndTime?: pulumi.Input<string>;
    /**
     * 设置命令执行的方式。Once：默认，表示立即执行命令。Rate：周期执行命令，需要通过Frequency参数传入Rate表达式指定执行周期。Fixed：定时执行命令，需要通过LaunchTime参数指定的执行时间。
     */
    repeatMode?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<inputs.ecs.InvocationTag>[]>;
    /**
     * 创建的命令在ECS实例中执行时最大的超时时间，单位为秒。默认值：60。可选范围为：30~86400。
     */
    timeout?: pulumi.Input<number>;
    /**
     * 在ECS实例中执行命令的用户名称。
     */
    username?: pulumi.Input<string>;
    /**
     * 自定义windows用户的密码。
     */
    windowsPassword?: pulumi.Input<string>;
    /**
     * 创建的命令在ECS实例中运行的目录。
     */
    workingDir?: pulumi.Input<string>;
}
