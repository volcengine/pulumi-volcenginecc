// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetTransitRouterArgs, GetTransitRouterResult, GetTransitRouterOutputArgs } from "./getTransitRouter";
export const getTransitRouter: typeof import("./getTransitRouter").getTransitRouter = null as any;
export const getTransitRouterOutput: typeof import("./getTransitRouter").getTransitRouterOutput = null as any;
utilities.lazyLoad(exports, ["getTransitRouter","getTransitRouterOutput"], () => require("./getTransitRouter"));

export { GetTransitRoutersResult } from "./getTransitRouters";
export const getTransitRouters: typeof import("./getTransitRouters").getTransitRouters = null as any;
export const getTransitRoutersOutput: typeof import("./getTransitRouters").getTransitRoutersOutput = null as any;
utilities.lazyLoad(exports, ["getTransitRouters","getTransitRoutersOutput"], () => require("./getTransitRouters"));

export { TransitRouterArgs, TransitRouterState } from "./transitRouter";
export type TransitRouter = import("./transitRouter").TransitRouter;
export const TransitRouter: typeof import("./transitRouter").TransitRouter = null as any;
utilities.lazyLoad(exports, ["TransitRouter"], () => require("./transitRouter"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcenginecc:transitrouter/transitRouter:TransitRouter":
                return new TransitRouter(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcenginecc", "transitrouter/transitRouter", _module)
