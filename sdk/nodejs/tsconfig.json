{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "alb/acl.ts",
        "alb/certificate.ts",
        "alb/getAcl.ts",
        "alb/getAcls.ts",
        "alb/getCertificate.ts",
        "alb/getCertificates.ts",
        "alb/getListener.ts",
        "alb/getListeners.ts",
        "alb/getLoadBalancer.ts",
        "alb/getLoadBalancers.ts",
        "alb/getServerGroup.ts",
        "alb/getServerGroups.ts",
        "alb/index.ts",
        "alb/listener.ts",
        "alb/loadBalancer.ts",
        "alb/serverGroup.ts",
        "apig/getUpstreamSource.ts",
        "apig/getUpstreamSources.ts",
        "apig/index.ts",
        "apig/upstreamSource.ts",
        "ark/endpoint.ts",
        "ark/getEndpoint.ts",
        "ark/getEndpoints.ts",
        "ark/index.ts",
        "autoscaling/getScalingConfiguration.ts",
        "autoscaling/getScalingConfigurations.ts",
        "autoscaling/index.ts",
        "autoscaling/scalingConfiguration.ts",
        "clb/acl.ts",
        "clb/certificate.ts",
        "clb/clb.ts",
        "clb/getAcl.ts",
        "clb/getAcls.ts",
        "clb/getCertificate.ts",
        "clb/getCertificates.ts",
        "clb/getClb.ts",
        "clb/getClbs.ts",
        "clb/getListener.ts",
        "clb/getListeners.ts",
        "clb/getNlb.ts",
        "clb/getNlbListener.ts",
        "clb/getNlbListeners.ts",
        "clb/getNlbServerGroup.ts",
        "clb/getNlbServerGroups.ts",
        "clb/getNlbs.ts",
        "clb/getRule.ts",
        "clb/getRules.ts",
        "clb/getServerGroup.ts",
        "clb/getServerGroups.ts",
        "clb/index.ts",
        "clb/listener.ts",
        "clb/nlb.ts",
        "clb/nlbListener.ts",
        "clb/nlbServerGroup.ts",
        "clb/rule.ts",
        "clb/serverGroup.ts",
        "config/index.ts",
        "config/vars.ts",
        "cr/getNameSpace.ts",
        "cr/getNameSpaces.ts",
        "cr/getRegistries.ts",
        "cr/getRegistry.ts",
        "cr/getRepositories.ts",
        "cr/getRepository.ts",
        "cr/index.ts",
        "cr/nameSpace.ts",
        "cr/registry.ts",
        "cr/repository.ts",
        "directconnect/directConnectGateway.ts",
        "directconnect/getDirectConnectGateway.ts",
        "directconnect/getDirectConnectGateways.ts",
        "directconnect/index.ts",
        "ecs/command.ts",
        "ecs/getCommand.ts",
        "ecs/getCommands.ts",
        "ecs/getHpcCluster.ts",
        "ecs/getHpcClusters.ts",
        "ecs/getImage.ts",
        "ecs/getImages.ts",
        "ecs/getInstance.ts",
        "ecs/getInstances.ts",
        "ecs/getInvocation.ts",
        "ecs/getInvocations.ts",
        "ecs/getKeypair.ts",
        "ecs/getKeypairs.ts",
        "ecs/hpcCluster.ts",
        "ecs/image.ts",
        "ecs/index.ts",
        "ecs/instance.ts",
        "ecs/invocation.ts",
        "ecs/keypair.ts",
        "filenas/getInstance.ts",
        "filenas/getInstances.ts",
        "filenas/index.ts",
        "filenas/instance.ts",
        "iam/accesskey.ts",
        "iam/getAccesskey.ts",
        "iam/getAccesskeys.ts",
        "iam/getGroup.ts",
        "iam/getGroups.ts",
        "iam/getPolicies.ts",
        "iam/getPolicy.ts",
        "iam/getRole.ts",
        "iam/getRoles.ts",
        "iam/getUser.ts",
        "iam/getUsers.ts",
        "iam/group.ts",
        "iam/index.ts",
        "iam/policy.ts",
        "iam/role.ts",
        "iam/user.ts",
        "index.ts",
        "provider.ts",
        "rdsmysql/database.ts",
        "rdsmysql/getDatabase.ts",
        "rdsmysql/getDatabases.ts",
        "rdsmysql/index.ts",
        "redis/getInstance.ts",
        "redis/getInstances.ts",
        "redis/index.ts",
        "redis/instance.ts",
        "storageebs/getVolume.ts",
        "storageebs/getVolumes.ts",
        "storageebs/index.ts",
        "storageebs/volume.ts",
        "tls/getTopic.ts",
        "tls/getTopics.ts",
        "tls/index.ts",
        "tls/topic.ts",
        "tos/bucket.ts",
        "tos/getBucket.ts",
        "tos/getBuckets.ts",
        "tos/index.ts",
        "transitrouter/getTransitRouter.ts",
        "transitrouter/getTransitRouterRouteEntries.ts",
        "transitrouter/getTransitRouterRouteEntry.ts",
        "transitrouter/getTransitRouterRouteTable.ts",
        "transitrouter/getTransitRouterRouteTables.ts",
        "transitrouter/getTransitRouters.ts",
        "transitrouter/index.ts",
        "transitrouter/transitRouter.ts",
        "transitrouter/transitRouterRouteEntry.ts",
        "transitrouter/transitRouterRouteTable.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "vke/addon.ts",
        "vke/getAddon.ts",
        "vke/getAddons.ts",
        "vke/index.ts",
        "vmp/getWorkspace.ts",
        "vmp/getWorkspaces.ts",
        "vmp/index.ts",
        "vmp/workspace.ts",
        "vpc/bandwidthPackage.ts",
        "vpc/eip.ts",
        "vpc/eni.ts",
        "vpc/getBandwidthPackage.ts",
        "vpc/getBandwidthPackages.ts",
        "vpc/getEip.ts",
        "vpc/getEips.ts",
        "vpc/getEni.ts",
        "vpc/getEnis.ts",
        "vpc/getNetworkAcl.ts",
        "vpc/getNetworkAcls.ts",
        "vpc/getPrefixList.ts",
        "vpc/getPrefixLists.ts",
        "vpc/getRouteTable.ts",
        "vpc/getRouteTables.ts",
        "vpc/getSecurityGroup.ts",
        "vpc/getSecurityGroups.ts",
        "vpc/getSubnet.ts",
        "vpc/getSubnets.ts",
        "vpc/getVpc.ts",
        "vpc/getVpcs.ts",
        "vpc/index.ts",
        "vpc/networkAcl.ts",
        "vpc/prefixList.ts",
        "vpc/routeTable.ts",
        "vpc/securityGroup.ts",
        "vpc/subnet.ts",
        "vpc/vpc.ts",
        "waf/getDomain.ts",
        "waf/getDomains.ts",
        "waf/index.ts"
    ]
}
