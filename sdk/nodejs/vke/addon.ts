// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * 查询符合条件的已安装组件详情列表。
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import volcenginecc:vke/addon:Addon example "cluster_id|name"
 * ```
 */
export class Addon extends pulumi.CustomResource {
    /**
     * Get an existing Addon resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddonState, opts?: pulumi.CustomResourceOptions): Addon {
        return new Addon(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcenginecc:vke/addon:Addon';

    /**
     * Returns true if the given object is an instance of Addon.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Addon {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Addon.__pulumiType;
    }

    /**
     * 组件所在集群 ID。
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * 组件配置。
     */
    public readonly config!: pulumi.Output<string>;
    /**
     * 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
     */
    public readonly deployMode!: pulumi.Output<string>;
    /**
     * 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
     */
    public readonly deployNodeType!: pulumi.Output<string>;
    /**
     * 组件名称。
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * 组件状态。
     */
    public /*out*/ readonly status!: pulumi.Output<outputs.vke.AddonStatus>;
    /**
     * 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * 组件版本。
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a Addon resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AddonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AddonArgs | AddonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AddonState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deployMode"] = state ? state.deployMode : undefined;
            resourceInputs["deployNodeType"] = state ? state.deployNodeType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AddonArgs | undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["deployMode"] = args ? args.deployMode : undefined;
            resourceInputs["deployNodeType"] = args ? args.deployNodeType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Addon.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Addon resources.
 */
export interface AddonState {
    /**
     * 组件所在集群 ID。
     */
    clusterId?: pulumi.Input<string>;
    /**
     * 组件配置。
     */
    config?: pulumi.Input<string>;
    /**
     * 安装组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     */
    createTime?: pulumi.Input<string>;
    /**
     * 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
     */
    deployMode?: pulumi.Input<string>;
    /**
     * 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
     */
    deployNodeType?: pulumi.Input<string>;
    /**
     * 组件名称。
     */
    name?: pulumi.Input<string>;
    /**
     * 组件状态。
     */
    status?: pulumi.Input<inputs.vke.AddonStatus>;
    /**
     * 更新组件的时间。标准 RFC3339 格式的 UTC+0 时间。
     */
    updateTime?: pulumi.Input<string>;
    /**
     * 组件版本。
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Addon resource.
 */
export interface AddonArgs {
    /**
     * 组件所在集群 ID。
     */
    clusterId?: pulumi.Input<string>;
    /**
     * 组件配置。
     */
    config?: pulumi.Input<string>;
    /**
     * 组件部署模式，取值：Unmanaged：非托管模式部署。Managed：托管模式部署。
     */
    deployMode?: pulumi.Input<string>;
    /**
     * 部署节点的类型。仅DeployModes=Unmanaged时，才需要指定该参数。取值：Node：以节点方式部署。VirtualNode：以虚拟节点方式部署。
     */
    deployNodeType?: pulumi.Input<string>;
    /**
     * 组件名称。
     */
    name?: pulumi.Input<string>;
    /**
     * 组件版本。
     */
    version?: pulumi.Input<string>;
}
